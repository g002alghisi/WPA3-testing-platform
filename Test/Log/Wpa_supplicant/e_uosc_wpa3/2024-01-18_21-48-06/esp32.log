export IDF_PATH=/home/alghisi/esp/esp-idf
/home/alghisi/esp/.Espressif/.espressif/python_envalghisi@pop-os:~/GitHub/Hostapd-test/ESP32/Src/ESP32-IDF/wifi_enterprise$ export IDF_PATH=/home/alghisi/esp/esp-idf
/idf5.1_py3.10_env/bin/python /home/alghisi/esp/esalghisi@pop-os:~/GitHub/Hostapd-test/ESP32/Src/ESP32-IDF/wifi_enterprise$ /home/alghisi/esp/.Espressif/.espressif/python_env/idf5.1_py3.10_env/bin/python /home/alghisi/esp/esp-idf/tools/idf_monitor.py -p /dev/ttyUSB0 -b 115200 --toolchain-prefix xtensa-esp32-elf- --target esp32 /home/alghisi/GitHub/Hostapd-test/ESP32/Src/ESP32-IDF/wifi_enterprise/build/wifi_enterprise.elf
--- esp-idf-monitor 1.3.4 on /dev/ttyUSB0 115200 ---
--- Quit: Ctrl+] | Menu: Ctrl+T | Help: Ctrl+T followed by Ctrl+H ---
ets Jun  8 2016 00:22:57

rst:0x1 (POWERON_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:7084
ho 0 tail 12 room 4
load:0x40078000,len:15584
load:0x40080400,len:4
0x40080400: _init at ??:?

load:0x40080404,len:3876
entry 0x4008064c
I (30) boot: ESP-IDF v5.1.2-dirty 2nd stage bootloader
I (30) boot: compile time Jan 18 2024 21:45:41
I (31) boot: Multicore bootloader
I (35) boot: chip revision: v1.0
I (39) boot.esp32: SPI Speed      : 40MHz
I (44) boot.esp32: SPI Mode       : DIO
I (48) boot.esp32: SPI Flash Size : 2MB
I (53) boot: Enabling RNG early entropy source...
I (58) boot: Partition Table:
I (62) boot: ## Label            Usage          Type ST Offset   Length
I (69) boot:  0 nvs              WiFi data        01 02 00009000 00006000
I (76) boot:  1 phy_init         RF data          01 01 0000f000 00001000
I (84) boot:  2 factory          factory app      00 00 00010000 00100000
I (91) boot: End of partition table
I (96) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=30f4ch (200524) map
I (176) esp_image: segment 1: paddr=00040f74 vaddr=3ffb0000 size=03b60h ( 15200) load
I (183) esp_image: segment 2: paddr=00044adc vaddr=40080000 size=0b53ch ( 46396) load
I (202) esp_image: segment 3: paddr=00050020 vaddr=400d0020 size=9b700h (636672) map
I (432) esp_image: segment 4: paddr=000eb728 vaddr=4008b53c size=0a768h ( 42856) load
I (461) boot: Loaded app from partition at offset 0x10000
I (461) boot: Disabling RNG early entropy source...
I (473) cpu_start: Multicore app
I (473) cpu_start: Pro cpu up.
I (473) cpu_start: Starting app cpu, entry point is 0x4008139c
0x4008139c: call_start_cpu1 at /home/alghisi/esp/esp-idf/components/esp_system/port/cpu_start.c:157

I (0) cpu_start: App cpu up.
D (484) clk: RTC_SLOW_CLK calibration value: 3310682
I (496) cpu_start: Pro cpu start user code
I (496) cpu_start: cpu freq: 160000000 Hz
I (496) cpu_start: Application information:
I (501) cpu_start: Project name:     wifi_enterprise
I (507) cpu_start: App version:      d886b13-dirty
I (512) cpu_start: Compile time:     Jan 18 2024 21:45:30
I (518) cpu_start: ELF file SHA256:  f661c45dcae0e3ab...
I (524) cpu_start: ESP-IDF:          v5.1.2-dirty
I (530) cpu_start: Min chip rev:     v0.0
I (534) cpu_start: Max chip rev:     v3.99 
I (539) cpu_start: Chip rev:         v1.0
D (544) memory_layout: Checking 9 reserved memory ranges:
D (549) memory_layout: Reserved memory range 0x3ff82000 - 0x3ff82000
D (556) memory_layout: Reserved memory range 0x3ffae000 - 0x3ffae6e0
D (562) memory_layout: Reserved memory range 0x3ffb0000 - 0x3ffb7df8
D (569) memory_layout: Reserved memory range 0x3ffe0000 - 0x3ffe0440
D (575) memory_layout: Reserved memory range 0x3ffe3f20 - 0x3ffe4350
D (581) memory_layout: Reserved memory range 0x40070000 - 0x40078000
D (588) memory_layout: Reserved memory range 0x40078000 - 0x40080000
0x40080000: _WindowOverflow4 at /home/alghisi/esp/esp-idf/components/freertos/FreeRTOS-Kernel/portable/xtensa/xtensa_vectors.S:2027

D (594) memory_layout: Reserved memory range 0x40080000 - 0x40095ca4
0x40080000: _WindowOverflow4 at /home/alghisi/esp/esp-idf/components/freertos/FreeRTOS-Kernel/portable/xtensa/xtensa_vectors.S:2027

D (601) memory_layout: Reserved memory range 0x50001fe8 - 0x50002000
D (607) memory_layout: Building list of available memory regions:
D (613) memory_layout: Available memory region 0x3ffae6e0 - 0x3ffb0000
D (620) memory_layout: Available memory region 0x3ffb7df8 - 0x3ffb8000
D (626) memory_layout: Available memory region 0x3ffb8000 - 0x3ffc0000
D (633) memory_layout: Available memory region 0x3ffc0000 - 0x3ffc2000
D (640) memory_layout: Available memory region 0x3ffc2000 - 0x3ffc4000
D (646) memory_layout: Available memory region 0x3ffc4000 - 0x3ffc6000
D (653) memory_layout: Available memory region 0x3ffc6000 - 0x3ffc8000
D (659) memory_layout: Available memory region 0x3ffc8000 - 0x3ffca000
D (666) memory_layout: Available memory region 0x3ffca000 - 0x3ffcc000
D (673) memory_layout: Available memory region 0x3ffcc000 - 0x3ffce000
D (679) memory_layout: Available memory region 0x3ffce000 - 0x3ffd0000
D (686) memory_layout: Available memory region 0x3ffd0000 - 0x3ffd2000
D (692) memory_layout: Available memory region 0x3ffd2000 - 0x3ffd4000
D (699) memory_layout: Available memory region 0x3ffd4000 - 0x3ffd6000
D (706) memory_layout: Available memory region 0x3ffd6000 - 0x3ffd8000
D (712) memory_layout: Available memory region 0x3ffd8000 - 0x3ffda000
D (719) memory_layout: Available memory region 0x3ffda000 - 0x3ffdc000
D (725) memory_layout: Available memory region 0x3ffdc000 - 0x3ffde000
D (732) memory_layout: Available memory region 0x3ffde000 - 0x3ffe0000
D (739) memory_layout: Available memory region 0x3ffe0440 - 0x3ffe3f20
D (745) memory_layout: Available memory region 0x3ffe4350 - 0x3ffe8000
D (752) memory_layout: Available memory region 0x3ffe8000 - 0x3fff0000
D (758) memory_layout: Available memory region 0x3fff0000 - 0x3fff8000
D (765) memory_layout: Available memory region 0x3fff8000 - 0x3fffc000
D (772) memory_layout: Available memory region 0x3fffc000 - 0x40000000
0x40000000: _WindowOverflow4 in ROM

D (778) memory_layout: Available memory region 0x40095ca4 - 0x40096000
D (785) memory_layout: Available memory region 0x40096000 - 0x40098000
D (791) memory_layout: Available memory region 0x40098000 - 0x4009a000
D (798) memory_layout: Available memory region 0x4009a000 - 0x4009c000
D (805) memory_layout: Available memory region 0x4009c000 - 0x4009e000
D (811) memory_layout: Available memory region 0x4009e000 - 0x400a0000
I (818) heap_init: Initializing. RAM available for dynamic allocation:
D (825) heap_init: New heap initialised at 0x3ffae6e0
I (830) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM
D (836) heap_init: New heap initialised at 0x3ffb7df8
I (841) heap_init: At 3FFB7DF8 len 00028208 (160 KiB): DRAM
I (848) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM
I (854) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM
D (860) heap_init: New heap initialised at 0x40095ca4
I (865) heap_init: At 40095CA4 len 0000A35C (40 KiB): IRAM
D (872) intr_alloc: Connected src 46 to int 2 (cpu 0)
D (878) spi_flash: trying chip: issi
D (880) spi_flash: trying chip: gd
D (884) spi_flash: trying chip: mxic
D (887) spi_flash: trying chip: winbond
D (891) spi_flash: trying chip: generic
I (895) spi_flash: detected chip: generic
I (900) spi_flash: flash io: dio
W (904) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.
D (917) cpu_start: calling init function: 0x4014d520
0x4014d520: _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv at /builds/idf/crosstool-NG/.build/xtensa-esp32-elf/src/gcc/libstdc++-v3/libsupc++/eh_alloc.cc:342

D (922) cpu_start: calling init function: 0x4014d000
0x4014d000: _GLOBAL__sub_I__ZN17__eh_globals_init7_S_initE at /builds/idf/crosstool-NG/.build/xtensa-esp32-elf/src/gcc/libstdc++-v3/libsupc++/eh_globals.cc:168

D (927) cpu_start: calling init function: 0x400f8ebc
0x400f8ebc: s_set_default_wifi_log_level at /home/alghisi/esp/esp-idf/components/esp_wifi/src/wifi_init.c:88

D (932) cpu_start: calling init function: 0x400d97d4
0x400d97d4: esp_ipc_init at /home/alghisi/esp/esp-idf/components/esp_system/esp_ipc.c:114

D (937) cpu_start: calling init function: 0x400d2ce4
0x400d2ce4: esp_init_app_elf_sha256 at /home/alghisi/esp/esp-idf/components/esp_app_format/esp_app_desc.c:69

D (942) cpu_start: calling init function: 0x400d5db8 on core: 0
0x400d5db8: __esp_system_init_fn_esp_timer_startup_init at /home/alghisi/esp/esp-idf/components/esp_timer/src/esp_timer.c:576

D (948) intr_alloc: Connected src 17 to int 3 (cpu 0)
D (953) cpu_start: calling init function: 0x401623e8 on core: 0
0x401623e8: __esp_system_init_fn_init_components0 at /home/alghisi/esp/esp-idf/components/esp_system/startup.c:486

D (960) intr_alloc: Connected src 24 to int 9 (cpu 0)
I (964) app_start: Starting scheduler on CPU0
 (970) intr_alloc: Connected src 25 to int 2 (cpu 1)
I (970) app_start: Starting scheduler on CPU1
2mI (970) main_task: Started on CPU0
D (990) heap_init: New heap initialised at 0x3ffe0440
D (990) heap_init: New heap initialised at 0x3ffe4350
D (990) intr_alloc: Connected src 16 to int 12 (cpu 0)
I (990) main_task: Calling app_main()
D (1030) esp_netif_lwip: LwIP stack has been initialized
D (1030) esp_netif_lwip: esp-netif has been successfully initialized
D (1030) event: running task for loop 0x3ffbc8f4
D (1030) event: created task for loop 0x3ffbc8f4
D (1040) event: created event loop 0x3ffbc8f4
D (1040) esp_netif_objects: esp_netif_add_to_list 0x3ffbd81c
D (1050) esp_netif_objects: esp_netif_add_to_list netif added successfully (total netifs: 1)
D (1060) esp_netif_lwip: check: remote, if=0x0 fn=0x400dd98c
0x400dd98c: set_lwip_netif_callback at /home/alghisi/esp/esp-idf/components/esp_netif/lwip/esp_netif_lwip.c:174


D (1060) esp_netif_lwip: call api in lwip: ret=0x0, give sem
D (1070) nvs: nvs_open_from_partition misc 1
I (1080) wifi:wifi driver task: 3ffbfe74, prio:23, stack:6656, core=0
D (1080) efuse: In EFUSE_BLK0__DATA2_REG is used 8 bits starting with 8 bit
D (1090) efuse: In EFUSE_BLK0__DATA2_REG is used 8 bits starting with 0 bit
D (1090) efuse: In EFUSE_BLK0__DATA1_REG is used 8 bits starting with 24 bit
D (1100) efuse: In EFUSE_BLK0__DATA1_REG is used 8 bits starting with 16 bit
D (1110) efuse: In EFUSE_BLK0__DATA1_REG is used 8 bits starting with 8 bit
D (1110) efuse: In EFUSE_BLK0__DATA1_REG is used 8 bits starting with 0 bit
D (1120) efuse: In EFUSE_BLK0__DATA2_REG is used 8 bits starting with 16 bit
D (1130) nvs: nvs_open_from_partition nvs.net80211 1
D (1130) nvs: nvs_get opmode 1
D (1140) nvs: nvs_get_str_or_blob sta.ssid
D (1140) nvs: nvs_get sta.authmode 1
D (1140) nvs: nvs_get_str_or_blob sta.pswd
D (1150) nvs: nvs_get_str_or_blob sta.pmk
D (1150) nvs: nvs_get sta.chan 1
D (1160) nvs: nvs_get auto.conn 1
D (1160) nvs: nvs_get bssid.set 1
D (1160) nvs: nvs_get_str_or_blob sta.bssid
D (1170) nvs: nvs_get sta.lis_intval 2
D (1170) nvs: nvs_get sta.phym 1
D (1170) nvs: nvs_get sta.phybw 1
D (1180) nvs: nvs_get_str_or_blob sta.apsw
D (1180) nvs: nvs_get_str_or_blob sta.apinfo
D (1190) nvs: nvs_get sta.scan_method 1
D (1190) nvs: nvs_get sta.sort_method 1
D (1190) nvs: nvs_get sta.minrssi 1
D (1200) nvs: nvs_get sta.minauth 1
D (1200) nvs: nvs_get sta.pmf_e 1
D (1210) nvs: nvs_get sta.pmf_r 1
D (1210) nvs: nvs_get sta.btm_e 1
D (1210) nvs: nvs_get sta.rrm_e 1
D (1220) nvs: nvs_get sta.mbo_e 1
D (1220) nvs: nvs_get_str_or_blob ap.ssid
D (1220) nvs: nvs_get_str_or_blob ap.passwd
D (1230) nvs: nvs_get_str_or_blob ap.pmk
D (1230) nvs: nvs_get ap.chan 1
D (1230) nvs: nvs_get ap.authmode 1
D (1240) nvs: nvs_get ap.hidden 1
D (1240) nvs: nvs_get ap.max.conn 1
D (1240) nvs: nvs_get bcn.interval 2
D (1250) nvs: nvs_get ap.phym 1
D (1250) nvs: nvs_get ap.phybw 1
D (1250) nvs: nvs_get ap.sndchan 1
D (1260) nvs: nvs_get ap.pmf_e 1
D (1260) nvs: nvs_get ap.pmf_r 1
D (1260) nvs: nvs_get ap.p_cipher 1
D (1270) nvs: nvs_get lorate 1
D (1270) nvs: nvs_get_str_or_blob country
D (1280) nvs: nvs_get ap.ftm_r 1
D (1280) nvs: nvs_get sta.ft 1
D (1280) nvs: nvs_get sta.owe 1
D (1290) nvs: nvs_get sta.trans_d 1
D (1290) nvs: nvs_get sta.sae_h2e 1
D (1290) nvs: nvs_get sta.sae_pk_mode 1
D (1300) nvs: nvs_get sta.bss_retry 1
D (1300) nvs: nvs_get_str_or_blob sta.owe_data
D (1300) nvs: nvs_get sta.he_dcm 1
D (1310) nvs: nvs_get sta.he_dcm_c_tx 1
D (1310) nvs: nvs_get sta.he_dcm_c_rx 1
D (1320) nvs: nvs_get sta.he_mcs9_d 1
D (1320) nvs: nvs_get sta.he_su_b_d 1
D (1320) nvs: nvs_get sta.he_su_b_f_d 1
D (1330) nvs: nvs_get sta.he_mu_b_f_d 1
D (1330) nvs: nvs_get sta.he_cqi_f_d 1
D (1330) nvs: nvs_get_str_or_blob sta.sae_h2e_id
D (1340) nvs: nvs_get ap.sae_h2e 1
D (1340) nvs: nvs_get_str_or_blob ap.pmk_info
D (1350) nvs: nvs_get nan.phym 1
D (1350) nvs: nvs_set ap.sndchan 1 1
I (1350) wifi:wifi firmware version: 91b9630
I (1360) wifi:wifi certification version: v7.0
I (1360) wifi:config NVS flash: enabled
I (1370) wifi:config nano formating: disabled
I (1370) wifi:Init data frame dynamic rx buffer num: 32
I (1380) wifi:Init static rx mgmt buffer num: 5
I (1380) wifi:Init management short buffer num: 32
I (1380) wifi:Init dynamic tx buffer num: 32
I (1390) wifi:Init static rx buffer size: 1600
I (1390) wifi:Init static rx buffer num: 10
I (1400) wifi:Init dynamic rx buffer num: 32
I (1400) wifi_init: rx ba win: 6
I (1400) wifi_init: tcpip mbox: 32
I (1410) wifi_init: udp mbox: 6
I (1410) wifi_init: tcp mbox: 6
I (1420) wifi_init: tcp tx win: 5744
I (1420) wifi_init: tcp rx win: 5744
I (1420) wifi_init: tcp mss: 1440
I (1430) wifi_init: WiFi IRAM OP enabled
I (1430) wifi_init: WiFi RX IRAM OP enabled
I (1440) example: Setting WiFi configuration SSID Hostapd-AP-E...
D (1440) wifi:clear blacklist
I (1450) wpa: WiFi Enterprise enable
D (1450) wpa: WiFi Enterprise crypto init.
I (1460) phy_init: phy_version 4780,16b31a7,Sep 22 2023,20:42:16
D (1460) phy_init: loading PHY init data from application binary
D (1470) nvs: nvs_open_from_partition phy 0
D (1470) nvs: nvs_get cal_version 4
D (1480) nvs: nvs_get_str_or_blob cal_mac
D (1480) efuse: In EFUSE_BLK0__DATA2_REG is used 8 bits starting with 8 bit
D (1490) efuse: In EFUSE_BLK0__DATA2_REG is used 8 bits starting with 0 bit
D (1490) efuse: In EFUSE_BLK0__DATA1_REG is used 8 bits starting with 24 bit
D (1500) efuse: In EFUSE_BLK0__DATA1_REG is used 8 bits starting with 16 bit
D (1510) efuse: In EFUSE_BLK0__DATA1_REG is used 8 bits starting with 8 bit
D (1520) efuse: In EFUSE_BLK0__DATA1_REG is used 8 bits starting with 0 bit
D (1520) efuse: In EFUSE_BLK0__DATA2_REG is used 8 bits starting with 16 bit
D (1530) nvs: nvs_get_str_or_blob cal_data
D (1540) nvs: nvs_close 3
D (1540) efuse: In EFUSE_BLK0__DATA2_REG is used 8 bits starting with 8 bit
D (1540) efuse: In EFUSE_BLK0__DATA2_REG is used 8 bits starting with 0 bit
D (1550) efuse: In EFUSE_BLK0__DATA1_REG is used 8 bits starting with 24 bit
D (1560) efuse: In EFUSE_BLK0__DATA1_REG is used 8 bits starting with 16 bit
D (1560) efuse: In EFUSE_BLK0__DATA1_REG is used 8 bits starting with 8 bit
D (1570) efuse: In EFUSE_BLK0__DATA1_REG is used 8 bits starting with 0 bit
D (1580) efuse: In EFUSE_BLK0__DATA2_REG is used 8 bits starting with 16 bit
D (1650) wifi:filter: set rx policy=0
I (1650) wifi:mode : sta (94:b5:55:19:1c:e8)
I (1650) wifi:enable tsf
D (1650) wifi:filter: set rx policy=1
D (1650) wifi:connect status 0 -> 0
D (1660) event: running post WIFI_EVENT:2 with handler 0x400f91a4 and context 0x3ffbda70 on loop 0x3ffbc8f4
0x400f91a4: wifi_default_action_sta_start at /home/alghisi/esp/esp-idf/components/esp_wifi/src/wifi_default.c:71

D (1670) wifi_init_default: wifi_start esp-netif:0x3ffbd81c event-id2
D (1670) wifi_init_default: WIFI mac address: 94 b5 55 19 1c e8
D (1680) esp_netif_lwip: check: remote, if=0x3ffbd81c fn=0x400dd99c
0x400dd99c: esp_netif_set_mac_api at /home/alghisi/esp/esp-idf/components/esp_netif/lwip/esp_netif_lwip.c:957


I (1680) main_task: Returned from app_main()
D (1680) esp_netif_lwip: call api in lwip: ret=0x0, give sem
D (1690) esp_netif_handlers: esp_netif action has started with netif0x3ffbd81c from event_id=2
D (1700) esp_netif_lwip: check: remote, if=0x3ffbd81c fn=0x400ddfbc
0x400ddfbc: esp_netif_start_api at /home/alghisi/esp/esp-idf/components/esp_netif/lwip/esp_netif_lwip.c:1032


D (1710) esp_netif_lwip: esp_netif_start_api 0x3ffbd81c
D (1720) esp_netif_lwip: esp_netif_get_hostname esp_netif:0x3ffbd81c
D (1720) esp_netif_lwip: check: local, if=0x3ffbd81c fn=0x400de8a4
0x400de8a4: esp_netif_update_default_netif_lwip at /home/alghisi/esp/esp-idf/components/esp_netif/lwip/esp_netif_lwip.c:327


D (1730) esp_netif_lwip: esp_netif_update_default_netif_lwip 0x3ffbd81c
D (1730) esp_netif_lwip: call api in lwip: ret=0x0, give sem
D (1740) event: running post WIFI_EVENT:2 with handler 0x400d7ce4 and context 0x3ffc5b70 on loop 0x3ffbc8f4
0x400d7ce4: event_handler at /home/alghisi/GitHub/Hostapd-test/ESP32/Src/ESP32-IDF/wifi_enterprise/main/wifi_enterprise_main.c:92

D (1750) wifi:Start wifi connect
D (1750) wifi:connect status 0 -> 0
D (1760) wifi:connect chan=0
D (1760) wifi:first chan=1
D (1760) wifi:connect status 0 -> 1
D (1760) wifi:filter: set rx policy=3
D (1770) wifi:clear scan ap list
D (1770) wifi:start scan: type=0x50f, priority=2, cb=0x4012d724, arg=0x0, ss_state=0x1, time=122840, index=0
0x4012d724: cnx_start_handoff_cb at ??:?

D (1780) wifi:perform scan: ss_state=0x9, chan<1,0>, dur<0,120>
D (1790) wifi:rsn valid: gcipher=3 ucipher=3 akm=10

D (1790) wpa: rsn_ie - hexdump(len=22):
D (1800) wpa: 30 14 01 00 00 0f ac 04 01 00 00 0f ac 04 01 00 
D (1800) wpa: 00 0f ac 05 c0 00 
I (1800) wpa: BSS: Add new id 0 BSSID 3c:a0:67:80:99:a3 SSID 'Hostapd-AP-E' chan 1
D (1810) wifi:profile match: ss_state=0x7
D (1820) wifi:rsn valid: gcipher=3 ucipher=3 akm=10

D (1820) wifi:profile match: ss_state=0x7
D (1820) wifi:scan end: arg=0x0, status=0, ss_state=0x7
D (1830) wifi:find first mathched ssid, scan done
D (1830) wifi:filter: set rx policy=4
D (1840) wifi:first chan=1
D (1840) wifi:handoff_cb: status=0
D (1840) wifi:ap found, mac=3c:a0:67:80:99:a3
D (1850) wifi:new_bss=0x3ffb6968, cur_bss=0x0, new_chan=<1,0>, cur_chan=1
D (1850) wifi:filter: set rx policy=5
D (1860) wpa: WPA: set AP RSNXE - hexdump(len=0):
D (1860) wpa: SAE-PK: Not a valid password (length)
I (1870) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1
D (1870) wifi:connect_op: status=0, auth=10, cipher=3 
D (1880) wpa: RSN: PMKSA cache search - network_ctx=0x0 try_opportunistic=0
D (1880) wpa: RSN: Search for BSSID 3c:a0:67:80:99:a3
D (1890) wpa: RSN: No PMKSA cache entry found
D (2140) wifi:auth mode is not none
D (2140) wifi:connect_bss: auth=1, reconnect=0
I (2140) wifi:state: init -> auth (b0)
D (2140) wifi:start 1s AUTH timer
D (2140) wifi:clear scan ap list
D (2150) wifi:recv auth: seq=2, status=0
I (2150) wifi:state: auth -> assoc (0)
D (2150) wifi:restart connect 1s timer for assoc
D (2160) wifi:recv assoc: type=0x10
D (2160) wifi:filter: set rx policy=6
I (2160) wifi:state: assoc -> run (10)
I (2170) wpa: wifi_task prio:7, stack:6656
D (2170) wifi:start 30s connect timer for 4 way handshake
D (2180) wpa: EAP: wifi->EAP api completed sig(1073446412)
D (2180) wpa: EAP: EAP api return, sm->state(1)
D (2190) wpa: WPA: Association event - clear replay counter
D (2190) wpa: WPA: Clear old PTK
D (2210) wpa: IEEE 802.1X RX: version=2 type=0 length=5
D (2210) wpa: EAP: wifi->EAP api completed sig(1)
D (2210) wpa: EAP: EAP api return, sm->state(1)
D (2220) wpa: IEEE 802.1X RX: version=2 type=0 length=5
D (2220) wpa: EAP: wifi->EAP api completed sig(1)
D (2230) wpa: EAP: EAP api return, sm->state(1)
D (2240) wpa: IEEE 802.1X RX: version=2 type=0 length=22
D (2240) wpa: EAP: wifi->EAP api completed sig(1)
D (2240) wpa: EAP: EAP api return, sm->state(1)
D (2270) wpa: IEEE 802.1X RX: version=2 type=0 length=6
D (2270) wpa: TLS: Phase2 EAP types - hexdump(len=8):
D (2270) wpa: 00 00 00 00 1a 00 00 00 
D (2280) wpa: TLS: using phase1 config options
D (2280) wpa: SSL: Received packet(len=6) - Flags 0x20
D (2290) wpa: EAP-PEAP: Start (server ver=0, own ver=1)
D (2290) wpa: EAP-PEAP: Using PEAP version 0
I (2300) wpa: len=5 not available in input
D (2300) wpa: SSL: 232 bytes left to be sent out (of total 232 bytes)
D (2310) wpa: EAP: wifi->EAP api completed sig(1)
D (2310) wpa: EAP: EAP api return, sm->state(1)
D (2330) wpa: IEEE 802.1X RX: version=2 type=0 length=1004
D (2340) wpa: SSL: Received packet(len=1004) - Flags 0xc0
D (2340) wpa: SSL: TLS Message Length: 2732
I (2340) wpa: SSL: Need 1738 bytes more input data
D (2340) wpa: SSL: Building ACK (type=25 id=252 ver=0)
D (2350) wpa: EAP: wifi->EAP api completed sig(1073461272)
D (2350) wpa: EAP: EAP api return, sm->state(1)
D (2370) wpa: IEEE 802.1X RX: version=2 type=0 length=1000
D (2380) wpa: SSL: Received packet(len=1000) - Flags 0x40
I (2380) wpa: SSL: Need 744 bytes more input data
D (2380) wpa: SSL: Building ACK (type=25 id=253 ver=0)
D (2380) wpa: EAP: wifi->EAP api completed sig(1073446412)
D (2390) wpa: EAP: EAP api return, sm->state(1)
D (2400) wpa: IEEE 802.1X RX: version=2 type=0 length=750
D (2410) wpa: SSL: Received packet(len=750) - Flags 0x00
I (2830) wpa: len=5 not available in input
D (2830) wpa: SSL: 93 bytes left to be sent out (of total 93 bytes)
D (2830) wpa: EAP: wifi->EAP api completed sig(1)
D (2840) wpa: EAP: EAP api return, sm->state(1)
D (2850) wpa: IEEE 802.1X RX: version=2 type=0 length=57
D (2850) wpa: SSL: Received packet(len=57) - Flags 0x00
I (2860) wpa: application data is null, adding one byte for ack
D (2860) wpa: SSL: No data to be sent out
D (2860) wpa: EAP-PEAP: TLS done, proceed to Phase 2
D (2870) wpa: EAP-PEAP: using label 'client EAP encryption' in key derivation
D (2880) wpa: EAP-PEAP: Derived key - hexdump(len=64):
D (2880) wpa: 72 b2 62 90 12 a2 65 6f 72 b1 04 6d de 00 ef 2e 
D (2890) wpa: 62 db f0 3c 6b d3 27 25 67 91 93 08 ef 55 cf e2 
D (2890) wpa: 27 4d 63 79 4a 10 85 ac 29 db 85 7e fb 6a 5f b3 
D (2900) wpa: f9 1f 8e c9 0d 48 c7 3a fe 82 ef 3d 34 dc 52 dc 
D (2910) wpa: EAP-PEAP: Derived Session-Id - hexdump(len=65):
D (2910) wpa: 19 00 00 00 01 1c ac ea 31 72 5f 9c 73 2f 4f 49 
D (2920) wpa: 36 af da c0 eb f8 47 83 cf c6 af 61 eb 22 2a 04 
D (2920) wpa: 1e 6a cc 36 7b 5c b2 8c 65 18 0e 48 4b 0b ed 06 
D (2930) wpa: b3 1a 4a db 4f 53 08 4c c4 57 72 5f c7 3e 07 ca 
D (2930) wpa: a6 
D (2940) wpa: SSL: Building ACK (type=25 id=255 ver=0)
D (2940) wpa: EAP: wifi->EAP api completed sig(1)
D (2950) wpa: EAP: EAP api return, sm->state(1)
D (2950) wpa: IEEE 802.1X RX: version=2 type=0 length=40
D (2960) wpa: SSL: Received packet(len=40) - Flags 0x00
D (2960) wpa: EAP-PEAP: received 34 bytes encrypted data for Phase 2
D (2970) wpa: EAP-PEAP: Decrypted Phase 2 EAP - hexdump(len=5):
D (2970) wpa: 01 00 00 05 01 
D (2980) wpa: EAP-PEAP: received Phase 2: code=1 identifier=0 length=5

D (2980) wpa: EAP-PEAP: Phase 2 Request: type=1
D (2990) wpa: EAP-PEAP: Encrypting Phase 2 data - hexdump(len=20):
D (2990) wpa: 02 00 00 14 01 62 6f 62 40 65 78 61 6d 70 6c 65 
D (3000) wpa: 2e 6f 72 67 
D (3000) wpa: SSL: 45 bytes left to be sent out (of total 45 bytes)
D (3010) wpa: EAP: wifi->EAP api completed sig(1)
D (3010) wpa: EAP: EAP api return, sm->state(1)
D (3020) wpa: IEEE 802.1X RX: version=2 type=0 length=74
D (3030) wpa: SSL: Received packet(len=74) - Flags 0x00
D (3030) wpa: EAP-PEAP: received 68 bytes encrypted data for Phase 2
D (3040) wpa: EAP-PEAP: Decrypted Phase 2 EAP - hexdump(len=39):
D (3040) wpa: 1a 01 01 00 26 10 f3 3f c0 fa 11 18 2e 35 41 b3 
D (3050) wpa: 29 70 c2 29 56 55 66 72 65 65 72 61 64 69 75 73 
D (3050) wpa: 2d 33 2e 30 2e 32 36 
D (3060) wpa: EAP-PEAP: received Phase 2: code=1 identifier=1 length=43

D (3060) wpa: EAP-PEAP: Phase 2 Request: type=26
D (3070) wpa: EAP-PEAP: Selected Phase 2 EAP vendor 0 method 26
D (3080) wpa: EAP-MSCHAPV2: RX identifier 1 mschapv2_id 1
D (3080) wpa: EAP-MSCHAPV2: Received challenge
D (3090) wpa: EAP-MSCHAPV2: Authentication Servername - hexdump(len=17):
D (3090) wpa: 66 72 65 65 72 61 64 69 75 73 2d 33 2e 30 2e 32 
D (3100) wpa: 36 
D (3100) wpa: EAP-MSCHAPV2: Generate Challenge Response
D (3110) wpa: MSCHAPV2: Identity - hexdump(len=15):
D (3110) wpa: 62 6f 62 40 65 78 61 6d 70 6c 65 2e 6f 72 67 
D (3120) wpa: MSCHAPV2: Username - hexdump(len=15):
D (3120) wpa: 62 6f 62 40 65 78 61 6d 70 6c 65 2e 6f 72 67 
D (3130) wpa: MSCHAPV2: auth_challenge - hexdump(len=16):
D (3130) wpa: f3 3f c0 fa 11 18 2e 35 41 b3 29 70 c2 29 56 55 
D (3140) wpa: MSCHAPV2: peer_challenge - hexdump(len=16):
D (3140) wpa: 03 04 99 51 16 b7 0c ef f0 1c 6f 4f 26 0d cd 43 
D (3150) wpa: MSCHAPV2: username - hexdump(len=15):
D (3150) wpa: 62 6f 62 40 65 78 61 6d 70 6c 65 2e 6f 72 67 
D (3160) wpa: MSCHAPV2: password - hexdump(len=12):
D (3160) wpa: 61 72 67 6f 61 72 67 6f 61 72 67 6f 
D (3170) wpa: MSCHAPV2: NT Response - hexdump(len=24):
D (3180) wpa: cb 34 c0 39 5f ba 8b 65 00 4d 9e 9c b7 ed b6 fd 
D (3180) wpa: 6e ed 50 20 4a b9 56 97 
D (3180) wpa: MSCHAPV2: Auth Response - hexdump(len=20):
D (3190) wpa: d6 e9 73 1f 63 2a bb cd d8 69 6c 3f c1 ad b3 13 
D (3200) wpa: 82 fa aa ca 
D (3200) wpa: MSCHAPV2: Master Key - hexdump(len=16):
D (3200) wpa: e5 16 18 78 0b 80 98 13 63 39 11 97 7b b0 af 35 
D (3210) wpa: EAP-MSCHAPV2: TX identifier 1 mschapv2_id 1 (response)
D (3220) wpa: EAP-PEAP: Encrypting Phase 2 data - hexdump(len=74):
D (3220) wpa: 02 01 00 4a 1a 02 01 00 45 31 03 04 99 51 16 b7 
D (3230) wpa: 0c ef f0 1c 6f 4f 26 0d cd 43 00 00 00 00 00 00 
D (3230) wpa: 00 00 cb 34 c0 39 5f ba 8b 65 00 4d 9e 9c b7 ed 
D (3240) wpa: b6 fd 6e ed 50 20 4a b9 56 97 00 62 6f 62 40 65 
D (3250) wpa: 78 61 6d 70 6c 65 2e 6f 72 67 
D (3250) wpa: SSL: 99 bytes left to be sent out (of total 99 bytes)
D (3260) wpa: EAP: wifi->EAP api completed sig(1073446412)
D (3260) wpa: EAP: EAP api return, sm->state(1)
D (3270) wpa: IEEE 802.1X RX: version=2 type=0 length=82
D (3270) wpa: SSL: Received packet(len=82) - Flags 0x00
D (3280) wpa: EAP-PEAP: received 76 bytes encrypted data for Phase 2
D (3280) wpa: EAP-PEAP: Decrypted Phase 2 EAP - hexdump(len=47):
D (3290) wpa: 1a 03 01 00 2e 53 3d 44 36 45 39 37 33 31 46 36 
D (3300) wpa: 33 32 41 42 42 43 44 44 38 36 39 36 43 33 46 43 
D (3300) wpa: 31 41 44 42 33 31 33 38 32 46 41 41 41 43 41 
D (3310) wpa: EAP-PEAP: received Phase 2: code=1 identifier=2 length=51

D (3310) wpa: EAP-PEAP: Phase 2 Request: type=26
D (3320) wpa: EAP-MSCHAPV2: RX identifier 2 mschapv2_id 1
D (3320) wpa: EAP-MSCHAPV2: Received success
D (3330) wpa: EAP-MSCHAPV2: Success message - hexdump(len=0):
I (3330) wpa: EAP-MSCHAPV2: Authentication succeeded
D (3340) wpa: EAP-PEAP: Encrypting Phase 2 data - hexdump(len=6):
D (3350) wpa: 02 02 00 06 1a 03 
D (3350) wpa: SSL: 31 bytes left to be sent out (of total 31 bytes)
D (3360) wpa: EAP: wifi->EAP api completed sig(1)
D (3360) wpa: EAP: EAP api return, sm->state(1)
D (3370) wpa: IEEE 802.1X RX: version=2 type=0 length=46
D (3370) wpa: SSL: Received packet(len=46) - Flags 0x00
D (3380) wpa: EAP-PEAP: received 40 bytes encrypted data for Phase 2
D (3380) wpa: EAP-PEAP: Decrypted Phase 2 EAP - hexdump(len=11):
D (3390) wpa: 01 03 00 0b 21 80 03 00 02 00 01 
D (3390) wpa: EAP-PEAP: received Phase 2: code=1 identifier=3 length=11

D (3400) wpa: EAP-PEAP: Phase 2 Request: type=33
D (3400) wpa: EAP-TLV: Received TLVs - hexdump(len=6):
D (3410) wpa: 80 03 00 02 00 01 
D (3410) wpa: EAP-TLV: Result TLV - hexdump(len=2):
D (3420) wpa: 00 01 
I (3420) wpa: EAP-TLV: TLV Result - Success - EAP-TLV/Phase2 Completed
D (3430) wpa: EAP-PEAP: Encrypting Phase 2 data - hexdump(len=11):
D (3430) wpa: 02 03 00 0b 21 80 03 00 02 00 01 
D (3440) wpa: SSL: 40 bytes left to be sent out (of total 40 bytes)
D (3450) wpa: EAP: wifi->EAP api completed sig(1)
D (3450) wpa: EAP: EAP api return, sm->state(1)
D (3460) wpa: IEEE 802.1X RX: version=2 type=0 length=4
I (3460) wpa: >>>>>EAP FINISH
D (3460) wpa: EAP: wifi->EAP api completed sig(1)
D (3470) wpa: EAP: EAP api return, sm->state(2)
D (3470) wpa: IEEE 802.1X RX: version=2 type=3 length=117
D (3480) wpa:   EAPOL-Key type=2
D (3480) wpa:   key_info 0x8b (ver=3 keyidx=0 rsvd=0 Pairwise Ack)
D (3490) wpa:   key_length=16 key_data_length=22
D (3490) wpa:   replay_counter - hexdump(len=8):
D (3500) wpa: 00 00 00 00 00 00 00 01 
D (3500) wpa:   key_nonce - hexdump(len=32):
D (3510) wpa: 4d 7c 08 0c e2 20 a9 04 3b ac 42 4d eb a8 1b 3f 
D (3510) wpa: 02 cf 10 86 0c 53 37 26 0e 8e cb a5 27 d8 48 12 
D (3520) wpa:   key_iv - hexdump(len=16):
D (3520) wpa: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
D (3530) wpa:   key_rsc - hexdump(len=8):
D (3530) wpa: 00 00 00 00 00 00 00 00 
D (3530) wpa:   key_id (reserved) - hexdump(len=8):
D (3540) wpa: 00 00 00 00 00 00 00 00 
D (3540) wpa:   key_mic - hexdump(len=16):
D (3550) wpa: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
D (3550) wpa: WPA 1/4-Way Handshake
D (3560) wpa: RSN: msg 1/4 key data - hexdump(len=22):
D (3560) wpa: dd 14 00 0f ac 04 15 06 d9 ef 84 d0 9e 67 4a 27 
D (3570) wpa: c7 36 3d a7 68 6f 
D (3570) wpa: WPA: PMKID in EAPOL-Key - hexdump(len=22):
D (3580) wpa: dd 14 00 0f ac 04 15 06 d9 ef 84 d0 9e 67 4a 27 
D (3580) wpa: c7 36 3d a7 68 6f 
D (3590) wpa: RSN: PMKID from Authenticator - hexdump(len=16):
D (3590) wpa: 15 06 d9 ef 84 d0 9e 67 4a 27 c7 36 3d a7 68 6f 
D (3600) wpa: RSN: no matching PMKID found
D (3600) wpa: WPA: PMK from EAPOL state machines - hexdump(len=32):
D (3610) wpa: 72 b2 62 90 12 a2 65 6f 72 b1 04 6d de 00 ef 2e 
D (3610) wpa: 62 db f0 3c 6b d3 27 25 67 91 93 08 ef 55 cf e2 
D (3620) wpa: RSN: Derive PMKID using HMAC-SHA-256
D (3630) wpa: ELOOP: pmksa_cache_set_expiration:76 called to remove timer handler=0x400f21f8, removed count=0
0x400f21f8: pmksa_cache_expire at /home/alghisi/esp/esp-idf/components/wpa_supplicant/src/rsn_supp/pmksa_cache.c:55

D (3640) wpa: ELOOP: Added one timer from pmksa_cache_set_expiration:85 to call 0x400f21f8, current order=0
0x400f21f8: pmksa_cache_expire at /home/alghisi/esp/esp-idf/components/wpa_supplicant/src/rsn_supp/pmksa_cache.c:55

D (3640) wpa: RSN: Added PMKSA cache entry for 3c:a0:67:80:99:a3 network_ctx=0x0
D (3650) wpa: RSN: the new PMK matches with the PMKID
D (3660) wpa: RSN: PMKSA cache search - network_ctx=0x0 try_opportunistic=0
D (3660) wpa: RSN: Search for BSSID 3c:a0:67:80:99:a3
D (3670) wpa: RSN: PMKSA cache entry found - PMKID - hexdump(len=16):
D (3680) wpa: 15 06 d9 ef 84 d0 9e 67 4a 27 c7 36 3d a7 68 6f 
D (3680) wpa: WPA: Renewed SNonce - hexdump(len=32):
D (3690) wpa: bd 86 c7 55 bc 85 24 ca bc 0b c3 30 85 f6 2d 4e 
D (3690) wpa: 0c 9a 71 6b d9 cb 81 61 15 d0 5e ed a1 16 49 6e 
D (3700) wpa: WPA: PTK derivation - A1=94:b5:55:19:1c:e8 A2=3c:a0:67:80:99:a3

D (3710) wpa: WPA: PTK - hexdump(len=48):
D (3710) wpa: f2 62 07 2a b3 8e 43 f2 a6 95 a6 b6 84 10 00 55 
D (3720) wpa: 30 1a ce 8a 31 b7 59 2a e3 6a bb ab 41 17 99 d5 
D (3720) wpa: e6 ad a9 35 a1 94 06 de 1c 3f 30 a4 8f 5c 09 64 
D (3730) wpa: WPA: KCK - hexdump(len=16):
D (3730) wpa: f2 62 07 2a b3 8e 43 f2 a6 95 a6 b6 84 10 00 55 
D (3740) wpa: WPA: KEK - hexdump(len=16):
D (3740) wpa: 30 1a ce 8a 31 b7 59 2a e3 6a bb ab 41 17 99 d5 
D (3750) wpa: WPA: TK - hexdump(len=16):
D (3750) wpa: e6 ad a9 35 a1 94 06 de 1c 3f 30 a4 8f 5c 09 64 
D (3760) wpa: WPA Send EAPOL-Key 2/4
D (3760) wpa: WPA: KCK - hexdump(len=16):
D (3770) wpa: f2 62 07 2a b3 8e 43 f2 a6 95 a6 b6 84 10 00 55 
D (3770) wpa: WPA: Derived Key MIC - hexdump(len=16):
D (3780) wpa: c8 f5 23 b2 cf 0b a1 46 5c d4 2e 24 98 fd 05 33 
D (3790) wpa: 2/4 txcb, flags=0, txfail 0
D (3790) wpa: IEEE 802.1X RX: version=2 type=3 length=183
D (3790) wpa:   EAPOL-Key type=2
D (3800) wpa:   key_info 0x13cb (ver=3 keyidx=0 rsvd=0 Pairwise Install Ack MIC Secure Encr)
D (3800) wpa:   key_length=16 key_data_length=88
D (3810) wpa:   replay_counter - hexdump(len=8):
D (3810) wpa: 00 00 00 00 00 00 00 02 
D (3820) wpa:   key_nonce - hexdump(len=32):
D (3820) wpa: 4d 7c 08 0c e2 20 a9 04 3b ac 42 4d eb a8 1b 3f 
D (3830) wpa: 02 cf 10 86 0c 53 37 26 0e 8e cb a5 27 d8 48 12 
D (3830) wpa:   key_iv - hexdump(len=16):
D (3840) wpa: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
D (3840) wpa:   key_rsc - hexdump(len=8):
D (3850) wpa: 00 00 00 00 00 00 00 00 
D (3850) wpa:   key_id (reserved) - hexdump(len=8):
D (3860) wpa: 00 00 00 00 00 00 00 00 
D (3860) wpa:   key_mic - hexdump(len=16):
D (3860) wpa: e6 a0 e8 fb 7a 13 27 4c 1a f8 d4 c3 ab d3 d1 61 
D (3870) wpa: RSN: encrypted key data - hexdump(len=88):
D (3880) wpa: be be 93 d6 09 25 36 1c 18 b2 8b 9a cb 46 48 93 
D (3880) wpa: ce c2 14 26 7b 5b 8b f8 32 3c ef 2b 02 e4 fc 70 
D (3890) wpa: 1a ec 7d 30 1b dc 7f 3a 1b 43 ea 7c 21 85 79 7d 
D (3890) wpa: 3f e3 7a 67 5f 69 16 d1 63 a1 a2 46 7b 19 d1 e5 
D (3900) wpa: e9 b4 05 19 04 01 3d b9 3a fd 92 f1 7a aa db 11 
D (3900) wpa: 70 38 58 1a b6 34 bd 20 
D (3910) wpa: WPA: decrypted EAPOL-Key key data - hexdump(len=80):
D (3920) wpa: 30 14 01 00 00 0f ac 04 01 00 00 0f ac 04 01 00 
D (3920) wpa: 00 0f ac 05 c0 00 dd 16 00 0f ac 01 01 00 fe 8d 
D (3930) wpa: d2 8b 9f 05 99 ae 89 19 44 2c 61 a6 3c 63 dd 1c 
D (3930) wpa: 00 0f ac 09 04 00 00 00 00 00 00 00 05 52 77 1d 
D (3940) wpa: b5 97 f0 9e 08 88 c3 d7 c2 b4 be 0a dd 00 00 00 
D (3940) wpa: WPA 3/4-Way Handshake
D (3950) wpa: WPA: RSN IE in EAPOL-Key - hexdump(len=22):
D (3950) wpa: 30 14 01 00 00 0f ac 04 01 00 00 0f ac 04 01 00 
D (3960) wpa: 00 0f ac 05 c0 00 
D (3960) wpa: WPA: GTK in EAPOL-Key - hexdump(len=24):
D (3970) wpa: dd 16 00 0f ac 01 01 00 fe 8d d2 8b 9f 05 99 ae 
D (3970) wpa: 89 19 44 2c 61 a6 3c 63 
D (3980) wpa: WPA: IGTK in EAPOL-Key - hexdump(len=30):
D (3980) wpa: dd 1c 00 0f ac 09 04 00 00 00 00 00 00 00 05 52 
D (3990) wpa: 77 1d b5 97 f0 9e 08 88 c3 d7 c2 b4 be 0a 
D (3990) wpa: WPA: IE KeyData - hexdump(len=80):
D (4000) wpa: 30 14 01 00 00 0f ac 04 01 00 00 0f ac 04 01 00 
D (4000) wpa: 00 0f ac 05 c0 00 dd 16 00 0f ac 01 01 00 fe 8d 
D (4010) wpa: d2 8b 9f 05 99 ae 89 19 44 2c 61 a6 3c 63 dd 1c 
D (4020) wpa: 00 0f ac 09 04 00 00 00 00 00 00 00 05 52 77 1d 
D (4020) wpa: b5 97 f0 9e 08 88 c3 d7 c2 b4 be 0a dd 00 00 00 
D (4030) wpa: WPA: RSC - hexdump(len=8):
D (4030) wpa: 00 00 00 00 00 00 00 00 
D (4040) wpa: RSN: received GTK in pairwise handshake - hexdump(len=18):
D (4040) wpa: 01 00 fe 8d d2 8b 9f 05 99 ae 89 19 44 2c 61 a6 
D (4050) wpa: 3c 63 
D (4050) wpa: WPA: IGTK keyid 4 pn 000000000000
D (4060) wpa: WPA: IGTK - hexdump(len=16):
D (4060) wpa: 05 52 77 1d b5 97 f0 9e 08 88 c3 d7 c2 b4 be 0a 
D (4070) wpa: tx 4/4 txcb_flags=8192
D (4070) wpa: WPA Send EAPOL-Key 4/4
D (4070) wpa: WPA: KCK - hexdump(len=16):
D (4080) wpa: f2 62 07 2a b3 8e 43 f2 a6 95 a6 b6 84 10 00 55 
D (4080) wpa: WPA: Derived Key MIC - hexdump(len=16):
D (4090) wpa: 2d 97 2e c6 6b 9d 48 b8 1c 47 61 64 0f c9 a8 e3 
D (4100) wpa: IEEE 802.1X RX: version=2 type=3 length=183
D (4100) wpa:   EAPOL-Key type=2
D (4100) wpa:   key_info 0x13cb (ver=3 keyidx=0 rsvd=0 Pairwise Install Ack MIC Secure Encr)
D (4110) wpa:   key_length=16 key_data_length=88
D (4120) wpa:   replay_counter - hexdump(len=8):
D (4120) wpa: 00 00 00 00 00 00 00 03 
D (4120) wpa:   key_nonce - hexdump(len=32):
D (4130) wpa: 4d 7c 08 0c e2 20 a9 04 3b ac 42 4d eb a8 1b 3f 
D (4130) wpa: 02 cf 10 86 0c 53 37 26 0e 8e cb a5 27 d8 48 12 
D (4140) wpa:   key_iv - hexdump(len=16):
D (4140) wpa: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
D (4150) wpa:   key_rsc - hexdump(len=8):
D (4150) wpa: 00 00 00 00 00 00 00 00 
D (4160) wpa:   key_id (reserved) - hexdump(len=8):
D (4160) wpa: 00 00 00 00 00 00 00 00 
D (4170) wpa:   key_mic - hexdump(len=16):
D (4170) wpa: 10 ec 24 24 b9 69 76 90 c6 9c b5 d5 df c1 d5 ee 
D (4180) wpa: RSN: encrypted key data - hexdump(len=88):
D (4180) wpa: be be 93 d6 09 25 36 1c 18 b2 8b 9a cb 46 48 93 
D (4190) wpa: ce c2 14 26 7b 5b 8b f8 32 3c ef 2b 02 e4 fc 70 
D (4190) wpa: 1a ec 7d 30 1b dc 7f 3a 1b 43 ea 7c 21 85 79 7d 
D (4200) wpa: 3f e3 7a 67 5f 69 16 d1 63 a1 a2 46 7b 19 d1 e5 
D (4210) wpa: e9 b4 05 19 04 01 3d b9 3a fd 92 f1 7a aa db 11 
D (4210) wpa: 70 38 58 1a b6 34 bd 20 
D (4220) wpa: WPA: decrypted EAPOL-Key key data - hexdump(len=80):
D (4220) wpa: 30 14 01 00 00 0f ac 04 01 00 00 0f ac 04 01 00 
D (4230) wpa: 00 0f ac 05 c0 00 dd 16 00 0f ac 01 01 00 fe 8d 
D (4230) wpa: d2 8b 9f 05 99 ae 89 19 44 2c 61 a6 3c 63 dd 1c 
D (4240) wpa: 00 0f ac 09 04 00 00 00 00 00 00 00 05 52 77 1d 
D (4250) wpa: b5 97 f0 9e 08 88 c3 d7 c2 b4 be 0a dd 00 00 00 
D (4250) wpa: WPA 3/4-Way Handshake
D (4260) wpa: WPA: RSN IE in EAPOL-Key - hexdump(len=22):
D (4260) wpa: 30 14 01 00 00 0f ac 04 01 00 00 0f ac 04 01 00 
D (4270) wpa: 00 0f ac 05 c0 00 
D (4270) wpa: WPA: GTK in EAPOL-Key - hexdump(len=24):
D (4280) wpa: dd 16 00 0f ac 01 01 00 fe 8d d2 8b 9f 05 99 ae 
D (4280) wpa: 89 19 44 2c 61 a6 3c 63 
D (4290) wpa: WPA: IGTK in EAPOL-Key - hexdump(len=30):
D (4290) wpa: dd 1c 00 0f ac 09 04 00 00 00 00 00 00 00 05 52 
D (4300) wpa: 77 1d b5 97 f0 9e 08 88 c3 d7 c2 b4 be 0a 
D (4300) wpa: WPA: IE KeyData - hexdump(len=80):
D (4310) wpa: 30 14 01 00 00 0f ac 04 01 00 00 0f ac 04 01 00 
D (4310) wpa: 00 0f ac 05 c0 00 dd 16 00 0f ac 01 01 00 fe 8d 
D (4320) wpa: d2 8b 9f 05 99 ae 89 19 44 2c 61 a6 3c 63 dd 1c 
D (4320) wpa: 00 0f ac 09 04 00 00 00 00 00 00 00 05 52 77 1d 
D (4330) wpa: b5 97 f0 9e 08 88 c3 d7 c2 b4 be 0a dd 00 00 00 
D (4340) wpa: WPA: RSC - hexdump(len=8):
D (4340) wpa: 00 00 00 00 00 00 00 00 
D (4340) wpa: RSN: received GTK in pairwise handshake - hexdump(len=18):
D (4350) wpa: 01 00 fe 8d d2 8b 9f 05 99 ae 89 19 44 2c 61 a6 
D (4360) wpa: 3c 63 
D (4360) wpa: WPA: Not reinstalling already in-use IGTK to the driver (keyidx=4)
D (4370) wpa: tx 4/4 txcb_flags=8192
D (4370) wpa: WPA Send EAPOL-Key 4/4
D (4370) wpa: WPA: KCK - hexdump(len=16):
D (4380) wpa: f2 62 07 2a b3 8e 43 f2 a6 95 a6 b6 84 10 00 55 
D (4380) wpa: WPA: Derived Key MIC - hexdump(len=16):
D (4390) wpa: a6 fe 92 4d 9a d5 f6 9b e5 7f f6 d5 6a cb df ca 
D (4400) wpa: WPA: Installing PTK to the driver.
D (4400) wpa: WPA: Group Key - hexdump(len=16):
D (4400) wpa: fe 8d d2 8b 9f 05 99 ae 89 19 44 2c 61 a6 3c 63 
D (4410) wpa: WPA: Judge GTK: (keyidx=1 len=16).
D (4410) wpa: WPA: Installing GTK to the driver (keyidx=1 tx=0 len=16).
D (4420) wpa: WPA: RSC - hexdump(len=6):
D (4420) wpa: 00 00 00 00 00 00 
D (4430) wpa: WPA: Key negotiation completed with 3c:a0:67:80:99:a3 [PTK=CCMP GTK=CCMP]

I (4440) wifi:connected with Hostapd-AP-E, aid = 1, channel 1, BW20, bssid = 3c:a0:67:80:99:a3
I (4440) wifi:security: WPA2-ENT, phy: bg, rssi: -49
D (4450) wifi:remove all except 3c:a0:67:80:99:a3 from rc list
D (4450) wifi:clear blacklist
D (4460) wifi:filter: set rx policy=7
I (4460) wifi:pm start, type: 1

D (4460) wifi:Send sta connected event
D (4470) wifi:connect status 1 -> 5
D (4470) wifi:obss scan is disabled
D (4470) wifi:start obss scan: obss scan is stopped
I (4480) wifi:AP's beacon interval = 102400 us, DTIM period = 2
D (4490) event: running post WIFI_EVENT:4 with handler 0x400f91d4 and context 0x3ffbdad0 on loop 0x3ffbc8f4
0x400f91d4: wifi_default_action_sta_connected at /home/alghisi/esp/esp-idf/components/esp_wifi/src/wifi_default.c:85

D (4490) esp_netif_handlers: esp_netif action connected with netif0x3ffbd81c from event_id=4
D (4500) esp_netif_lwip: check: remote, if=0x3ffbd81c fn=0x400de350
0x400de350: esp_netif_up_api at /home/alghisi/esp/esp-idf/components/esp_netif/lwip/esp_netif_lwip.c:1612


D (4510) esp_netif_lwip: esp_netif_up_api esp_netif:0x3ffbd81c
D (4520) esp_netif_lwip: check: local, if=0x3ffbd81c fn=0x400de8a4
0x400de8a4: esp_netif_update_default_netif_lwip at /home/alghisi/esp/esp-idf/components/esp_netif/lwip/esp_netif_lwip.c:327


D (4520) esp_netif_lwip: esp_netif_update_default_netif_lwip 0x3ffbd81c
D (4530) esp_netif_lwip: call api in lwip: ret=0x0, give sem
D (4530) esp_netif_lwip: check: remote, if=0x3ffbd81c fn=0x400de22c
0x400de22c: esp_netif_dhcpc_start_api at /home/alghisi/esp/esp-idf/components/esp_netif/lwip/esp_netif_lwip.c:1404


D (4540) esp_netif_lwip: esp_netif_dhcpc_start_api esp_netif:0x3ffbd81c
D (4550) esp_netif_lwip: esp_netif_start_ip_lost_timer esp_netif:0x3ffbd81c
D (4550) esp_netif_lwip: if0x3ffbd81c start ip lost tmr: no need start because netif=0x3ffbd8a0 interval=120 ip=0
D (4560) esp_netif_lwip: starting dhcp client
D (4570) esp_netif_lwip: call api in lwip: ret=0x0, give sem
D (4570) event: running post WIFI_EVENT:4 with handler 0x400d7ce4 and context 0x3ffc5b70 on loop 0x3ffbc8f4
0x400d7ce4: event_handler at /home/alghisi/GitHub/Hostapd-test/ESP32/Src/ESP32-IDF/wifi_enterprise/main/wifi_enterprise_main.c:92

D (5570) esp_netif_lwip: esp_netif_internal_dhcpc_cb lwip-netif:0x3ffbd8a0
D (5570) esp_netif_lwip: if0x3ffbd81c ip changed=1
D (5570) event: running post IP_EVENT:0 with handler 0x400f9000 and context 0x3ffbdba4 on loop 0x3ffbc8f4
0x400f9000: wifi_default_action_sta_got_ip at /home/alghisi/esp/esp-idf/components/esp_wifi/src/wifi_default.c:127

D (5580) wifi_init_default: Got IP wifi default handler entered
D (5580) esp_netif_handlers: esp_netif action got_ip with netif0x3ffbd81c from event_id=0
I (5590) esp_netif_handlers: sta ip: 192.168.104.187, mask: 255.255.255.0, gw: 192.168.104.247
D (5600) event: running post IP_EVENT:0 with handler 0x400d7ce4 and context 0x3ffc5b90 on loop 0x3ffbc8f4
0x400d7ce4: event_handler at /home/alghisi/GitHub/Hostapd-test/ESP32/Src/ESP32-IDF/wifi_enterprise/main/wifi_enterprise_main.c:92

D (5680) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbd81c
I (5680) example: ~~~~~~~~~~~
I (5680) example: IP:192.168.104.187
I (5680) example: MASK:255.255.255.0
I (5680) example: GW:192.168.104.247
I (5690) example: ~~~~~~~~~~~
D (7690) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbd81c
I (7690) example: ~~~~~~~~~~~
I (7690) example: IP:192.168.104.187
I (7690) example: MASK:255.255.255.0
I (7690) example: GW:192.168.104.247
I (7700) example: ~~~~~~~~~~~
D (9700) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbd81c
I (9700) example: ~~~~~~~~~~~
I (9700) example: IP:192.168.104.187
I (9700) example: MASK:255.255.255.0
I (9700) example: GW:192.168.104.247
I (9710) example: ~~~~~~~~~~~
D (9900) wifi:recv deauth, reason=0x3
I (9900) wifi:state: run -> init (3c0)
D (9900) wifi:recv deauth/disassoc, stop beacon/connect timer
D (9900) wifi:connect status 5 -> 4
D (9910) wifi:sta leave
I (9910) wifi:pm stop, total sleep time: 4814553 us / 5444806 us

D (9910) wifi:stop CSA timer
D (9920) wpa: EAP: queue deleted
D (9920) wpa: EAP: task deleted
D (9920) wpa: EAP: wifi->EAP api completed sig(1073407732)
D (9930) wpa: EAP: EAP api return, sm->state(2)
D (9930) wpa: EAP: eap_peer_sm_deinit: free data lock
D (9940) wifi:remove 3c:a0:67:80:99:a3 from rc list
I (9940) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1
D (9950) wifi:filter: set rx policy=8
D (9950) wifi:Send disconnect event, reason=3, AP number=0
D (9960) event: running post WIFI_EVENT:5 with handler 0x400f91bc and context 0x3ffbdb00 on loop 0x3ffbc8f4
0x400f91bc: wifi_default_action_sta_disconnected at /home/alghisi/esp/esp-idf/components/esp_wifi/src/wifi_default.c:104

D (9970) esp_netif_handlers: esp_netif action disconnected with netif0x3ffbd81c from event_id=5
D (9980) esp_netif_lwip: check: remote, if=0x3ffbd81c fn=0x400de398
0x400de398: esp_netif_down_api at /home/alghisi/esp/esp-idf/components/esp_netif/lwip/esp_netif_lwip.c:1638


D (9980) esp_netif_lwip: esp_netif_down_api esp_netif:0x3ffbd81c
D (9990) esp_netif_lwip: esp_netif_internal_dhcpc_cb lwip-netif:0x3ffbd8a0
D (10000) esp_netif_lwip: esp_netif_start_ip_lost_timer esp_netif:0x3ffbd81c
D (10000) esp_netif_lwip: if0x3ffbd81c start ip lost tmr: interval=120
D (10010) esp_netif_lwip: esp_netif_start_ip_lost_timer esp_netif:0x3ffbd81c
D (10020) esp_netif_lwip: if0x3ffbd81c start ip lost tmr: already started
D (10020) esp_netif_lwip: check: local, if=0x3ffbd81c fn=0x400de8a4
0x400de8a4: esp_netif_update_default_netif_lwip at /home/alghisi/esp/esp-idf/components/esp_netif/lwip/esp_netif_lwip.c:327


D (10030) esp_netif_lwip: esp_netif_update_default_netif_lwip 0x3ffbd81c
D (10040) esp_netif_lwip: call api in lwip: ret=0x0, give sem
D (10040) event: running post WIFI_EVENT:5 with handler 0x400d7ce4 and context 0x3ffc5b70 on loop 0x3ffbc8f4
0x400d7ce4: event_handler at /home/alghisi/GitHub/Hostapd-test/ESP32/Src/ESP32-IDF/wifi_enterprise/main/wifi_enterprise_main.c:92

D (10050) wifi:Start wifi connect
D (10060) wifi:connect status 4 -> 0
D (10060) wifi:connect chan=0
D (10060) wifi:first chan=1
D (10060) wifi:connect status 0 -> 1
D (10070) wifi:filter: set rx policy=3
D (10070) wifi:clear scan ap list
D (10070) wifi:start scan: type=0x50f, priority=2, cb=0x4012d724, arg=0x0, ss_state=0x1, time=8433956, index=0
0x4012d724: cnx_start_handoff_cb at ??:?

D (10080) wifi:perform scan: ss_state=0x9, chan<1,0>, dur<0,120>
D (10210) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (10210) wifi:perform scan: ss_state=0x9, chan<2,0>, dur<0,120>
D (10330) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (10330) wifi:perform scan: ss_state=0x9, chan<3,0>, dur<0,120>
D (10450) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (10450) wifi:perform scan: ss_state=0x9, chan<4,0>, dur<0,120>
D (10580) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (10580) wifi:perform scan: ss_state=0x9, chan<5,0>, dur<0,120>
D (10700) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (10700) wifi:perform scan: ss_state=0x9, chan<6,0>, dur<0,120>
D (10820) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (10820) wifi:perform scan: ss_state=0x9, chan<7,0>, dur<0,120>
D (10940) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (10940) wifi:perform scan: ss_state=0x9, chan<8,0>, dur<0,120>
D (11060) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (11060) wifi:perform scan: ss_state=0x9, chan<9,0>, dur<0,120>
D (11180) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (11180) wifi:perform scan: ss_state=0x9, chan<10,0>, dur<0,120>
D (11300) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (11300) wifi:perform scan: ss_state=0x9, chan<11,0>, dur<0,120>
D (11430) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (11430) wifi:perform scan: ss_state=0x9, chan<12,0>, dur<360,360>
D (11710) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbd81c
I (11710) example: ~~~~~~~~~~~
I (11710) example: IP:0.0.0.0
I (11710) example: MASK:0.0.0.0
I (11710) example: GW:0.0.0.0
I (11720) example: ~~~~~~~~~~~
D (11790) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (11790) wifi:perform scan: ss_state=0x9, chan<13,0>, dur<360,360>
D (12150) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (12150) wifi:perform scan: ss_state=0x9, chan<14,0>, dur<360,360>
D (12510) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (12510) wifi:filter: set rx policy=4
D (12510) wifi:first chan=1
D (12510) wifi:handoff_cb: status=0
D (12510) wifi:clear rc list
D (12510) wifi:clear blacklist
D (12520) wifi:Send disconnect event, reason=201
D (12520) wifi:connect status 1 -> 3
D (12520) wifi:disable connect timer
D (12530) wifi:clear scan ap list
D (12530) event: running post WIFI_EVENT:5 with handler 0x400f91bc and context 0x3ffbdb00 on loop 0x3ffbc8f4
0x400f91bc: wifi_default_action_sta_disconnected at /home/alghisi/esp/esp-idf/components/esp_wifi/src/wifi_default.c:104

D (12540) esp_netif_handlers: esp_netif action disconnected with netif0x3ffbd81c from event_id=5
D (12550) esp_netif_lwip: check: remote, if=0x3ffbd81c fn=0x400de398
0x400de398: esp_netif_down_api at /home/alghisi/esp/esp-idf/components/esp_netif/lwip/esp_netif_lwip.c:1638


D (12560) esp_netif_lwip: esp_netif_down_api esp_netif:0x3ffbd81c
D (12560) esp_netif_lwip: esp_netif_start_ip_lost_timer esp_netif:0x3ffbd81c
D (12570) esp_netif_lwip: if0x3ffbd81c start ip lost tmr: already started
D (12580) esp_netif_lwip: check: local, if=0x3ffbd81c fn=0x400de8a4
0x400de8a4: esp_netif_update_default_netif_lwip at /home/alghisi/esp/esp-idf/components/esp_netif/lwip/esp_netif_lwip.c:327


D (12580) esp_netif_lwip: esp_netif_update_default_netif_lwip 0x3ffbd81c
D (12590) esp_netif_lwip: call api in lwip: ret=0x0, give sem
D (12600) event: running post WIFI_EVENT:5 with handler 0x400d7ce4 and context 0x3ffc5b70 on loop 0x3ffbc8f4
0x400d7ce4: event_handler at /home/alghisi/GitHub/Hostapd-test/ESP32/Src/ESP32-IDF/wifi_enterprise/main/wifi_enterprise_main.c:92

D (12610) wifi:Start wifi connect
D (12610) wifi:connect status 3 -> 0
D (12610) wifi:connect chan=0
D (12610) wifi:first chan=1
D (12620) wifi:connect status 0 -> 1
D (12620) wifi:filter: set rx policy=3
D (12620) wifi:clear scan ap list
D (12630) wifi:start scan: type=0x50f, priority=2, cb=0x4012d724, arg=0x0, ss_state=0x1, time=10986672, index=0
0x4012d724: cnx_start_handoff_cb at ??:?

D (12640) wifi:perform scan: ss_state=0x9, chan<1,0>, dur<0,120>
D (12640) wifi:rsn valid: gcipher=3 ucipher=3 akm=10

D (12650) wpa: rsn_ie - hexdump(len=22):
D (12650) wpa: 30 14 01 00 00 0f ac 04 01 00 00 0f ac 04 01 00 
D (12660) wpa: 00 0f ac 05 c0 00 
D (12660) wifi:profile match: ss_state=0x7
D (12670) wifi:rsn valid: gcipher=3 ucipher=3 akm=10

D (12670) wifi:profile match: ss_state=0x7
D (12670) wifi:scan end: arg=0x0, status=0, ss_state=0x7
D (12680) wifi:find first mathched ssid, scan done
D (12680) wifi:filter: set rx policy=4
D (12690) wifi:first chan=1
D (12690) wifi:handoff_cb: status=0
D (12690) wifi:ap found, mac=3c:a0:67:80:99:a3
D (12700) wifi:new_bss=0x3ffb6968, cur_bss=0x0, new_chan=<1,0>, cur_chan=1
D (12700) wifi:filter: set rx policy=5
D (12710) wpa: WPA: set AP RSNXE - hexdump(len=0):
D (12710) wpa: SAE-PK: Not a valid password (length)
I (12720) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1
D (12720) wifi:connect_op: status=0, auth=10, cipher=3 
D (12730) wpa: RSN: PMKSA cache search - network_ctx=0x0 try_opportunistic=0
D (12730) wpa: RSN: Search for BSSID 3c:a0:67:80:99:a3
D (12740) wpa: RSN: PMKSA cache entry found - PMKID - hexdump(len=16):
D (12750) wpa: 15 06 d9 ef 84 d0 9e 67 4a 27 c7 36 3d a7 68 6f 
D (12750) wifi:auth mode is not none
D (12760) wifi:connect_bss: auth=1, reconnect=0
I (12760) wifi:state: init -> auth (b0)
D (12760) wifi:start 1s AUTH timer
D (12770) wifi:clear scan ap list
D (12770) wifi:recv auth: seq=2, status=0
I (12770) wifi:state: auth -> assoc (0)
D (12780) wifi:restart connect 1s timer for assoc
D (12780) wifi:recv assoc: type=0x10
D (12780) wifi:filter: set rx policy=6
I (12790) wifi:state: assoc -> run (10)
I (12790) wpa: wifi_task prio:7, stack:6656
D (12800) wifi:start 30s connect timer for 4 way handshake
D (12800) wpa: RSN: PMKSA caching - do not send EAPOL-Start
D (12810) wpa: EAP: wifi->EAP api completed sig(1073446412)
D (12810) wpa: EAP: EAP api return, sm->state(0)
D (12820) wpa: WPA: Association event - clear replay counter
D (12820) wpa: WPA: Clear old PTK
D (12840) wpa: IEEE 802.1X RX: version=2 type=0 length=5
D (12840) wpa: EAP: wifi->EAP api completed sig(1073505412)
D (12840) wpa: EAP: EAP api return, sm->state(0)
D (13720) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbd81c
I (13720) example: ~~~~~~~~~~~
I (13720) example: IP:0.0.0.0
I (13720) example: MASK:0.0.0.0
I (13720) example: GW:0.0.0.0
I (13730) example: ~~~~~~~~~~~
D (15730) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbd81c
I (15730) example: ~~~~~~~~~~~
I (15730) example: IP:0.0.0.0
I (15730) example: MASK:0.0.0.0
I (15730) example: GW:0.0.0.0
I (15740) example: ~~~~~~~~~~~
D (15850) wpa: IEEE 802.1X RX: version=2 type=0 length=22
D (15850) wpa: EAP: wifi->EAP api completed sig(1073446412)
D (15850) wpa: EAP: EAP api return, sm->state(0)
D (15860) wpa: IEEE 802.1X RX: version=2 type=0 length=6
D (15860) wpa: TLS: Phase2 EAP types - hexdump(len=8):
D (15860) wpa: 00 00 00 00 1a 00 00 00 
D (15870) wpa: TLS: using phase1 config options
D (15880) wpa: SSL: Received packet(len=6) - Flags 0x20
D (15880) wpa: EAP-PEAP: Start (server ver=0, own ver=1)
D (15880) wpa: EAP-PEAP: Using PEAP version 0
I (15890) wpa: len=5 not available in input
D (15890) wpa: SSL: 232 bytes left to be sent out (of total 232 bytes)
D (15900) wpa: EAP: wifi->EAP api completed sig(1073503284)
D (15910) wpa: EAP: EAP api return, sm->state(0)
D (15920) wpa: IEEE 802.1X RX: version=2 type=0 length=1004
D (15930) wpa: SSL: Received packet(len=1004) - Flags 0xc0
D (15930) wpa: SSL: TLS Message Length: 2732
I (15930) wpa: SSL: Need 1738 bytes more input data
D (15940) wpa: SSL: Building ACK (type=25 id=143 ver=0)
D (15940) wpa: EAP: wifi->EAP api completed sig(1073446412)
D (15950) wpa: EAP: EAP api return, sm->state(0)
D (15960) wpa: IEEE 802.1X RX: version=2 type=0 length=1000
D (15970) wpa: SSL: Received packet(len=1000) - Flags 0x40
I (15970) wpa: SSL: Need 744 bytes more input data
D (15970) wpa: SSL: Building ACK (type=25 id=144 ver=0)
D (15980) wpa: EAP: wifi->EAP api completed sig(1073446412)
D (15980) wpa: EAP: EAP api return, sm->state(0)
D (15990) wpa: IEEE 802.1X RX: version=2 type=0 length=750
D (16000) wpa: SSL: Received packet(len=750) - Flags 0x00
I (16420) wpa: len=5 not available in input
D (16430) wpa: SSL: 93 bytes left to be sent out (of total 93 bytes)
D (16430) wpa: EAP: wifi->EAP api completed sig(1073446412)
D (16430) wpa: EAP: EAP api return, sm->state(0)
D (16440) wpa: IEEE 802.1X RX: version=2 type=0 length=57
D (16440) wpa: SSL: Received packet(len=57) - Flags 0x00
I (16450) wpa: application data is null, adding one byte for ack
D (16450) wpa: SSL: No data to be sent out
D (16460) wpa: EAP-PEAP: TLS done, proceed to Phase 2
D (16460) wpa: EAP-PEAP: using label 'client EAP encryption' in key derivation
D (16470) wpa: EAP-PEAP: Derived key - hexdump(len=64):
D (16480) wpa: 27 ea 34 70 21 7f 33 16 c6 2f 5d 63 f7 8d c3 40 
D (16480) wpa: c7 1d 0f a0 0e c4 12 4f 4e f4 55 6d f8 33 c3 5f 
D (16490) wpa: c7 c8 b3 05 37 b0 90 6e 07 77 4d e8 ee 13 f3 84 
D (16490) wpa: 6e 6b 5d 9f f1 b2 c7 c0 1f 51 96 cb 11 17 d8 63 
D (16500) wpa: EAP-PEAP: Derived Session-Id - hexdump(len=65):
D (16510) wpa: 19 00 00 00 0f 8c d2 74 64 a1 43 28 2c 6e d1 d8 
D (16510) wpa: d4 09 8e 84 3f a1 fb 1a af 5b 81 f8 ea ba fe 6b 
D (16520) wpa: 10 d0 ba b5 c7 d6 0b 0a de a3 3c 6d 48 ab 90 08 
D (16520) wpa: 10 17 43 db 20 fb dd 15 27 dc 20 be 94 c6 e2 1a 
D (16530) wpa: 86 
D (16530) wpa: SSL: Building ACK (type=25 id=146 ver=0)
D (16540) wpa: EAP: wifi->EAP api completed sig(1073446412)
D (16540) wpa: EAP: EAP api return, sm->state(0)
D (16550) wpa: IEEE 802.1X RX: version=2 type=0 length=40
D (16550) wpa: SSL: Received packet(len=40) - Flags 0x00
D (16560) wpa: EAP-PEAP: received 34 bytes encrypted data for Phase 2
D (16570) wpa: EAP-PEAP: Decrypted Phase 2 EAP - hexdump(len=5):
D (16570) wpa: 01 93 00 05 01 
D (16570) wpa: EAP-PEAP: received Phase 2: code=1 identifier=147 length=5

D (16580) wpa: EAP-PEAP: Phase 2 Request: type=1
D (16590) wpa: EAP-PEAP: Encrypting Phase 2 data - hexdump(len=20):
D (16590) wpa: 02 93 00 14 01 62 6f 62 40 65 78 61 6d 70 6c 65 
D (16600) wpa: 2e 6f 72 67 
D (16600) wpa: SSL: 45 bytes left to be sent out (of total 45 bytes)
D (16610) wpa: EAP: wifi->EAP api completed sig(1073446412)
D (16610) wpa: EAP: EAP api return, sm->state(0)
D (16620) wpa: IEEE 802.1X RX: version=2 type=0 length=74
D (16620) wpa: SSL: Received packet(len=74) - Flags 0x00
D (16630) wpa: EAP-PEAP: received 68 bytes encrypted data for Phase 2
D (16640) wpa: EAP-PEAP: Decrypted Phase 2 EAP - hexdump(len=39):
D (16640) wpa: 1a 01 94 00 26 10 18 81 8c ee 83 41 cc d8 d8 a2 
D (16650) wpa: e8 f9 f2 1a bd 09 66 72 65 65 72 61 64 69 75 73 
D (16650) wpa: 2d 33 2e 30 2e 32 36 
D (16660) wpa: EAP-PEAP: received Phase 2: code=1 identifier=148 length=43

D (16660) wpa: EAP-PEAP: Phase 2 Request: type=26
D (16670) wpa: EAP-PEAP: Selected Phase 2 EAP vendor 0 method 26
D (16670) wpa: EAP-MSCHAPV2: RX identifier 148 mschapv2_id 148
D (16680) wpa: EAP-MSCHAPV2: Received challenge
D (16680) wpa: EAP-MSCHAPV2: Authentication Servername - hexdump(len=17):
D (16690) wpa: 66 72 65 65 72 61 64 69 75 73 2d 33 2e 30 2e 32 
D (16700) wpa: 36 
D (16700) wpa: EAP-MSCHAPV2: Generate Challenge Response
D (16710) wpa: MSCHAPV2: Identity - hexdump(len=15):
D (16710) wpa: 62 6f 62 40 65 78 61 6d 70 6c 65 2e 6f 72 67 
D (16720) wpa: MSCHAPV2: Username - hexdump(len=15):
D (16720) wpa: 62 6f 62 40 65 78 61 6d 70 6c 65 2e 6f 72 67 
D (16730) wpa: MSCHAPV2: auth_challenge - hexdump(len=16):
D (16730) wpa: 18 81 8c ee 83 41 cc d8 d8 a2 e8 f9 f2 1a bd 09 
D (16740) wpa: MSCHAPV2: peer_challenge - hexdump(len=16):
D (16740) wpa: 7e a8 e2 22 64 96 ad 17 91 39 20 dc 44 da e8 82 
D (16750) wpa: MSCHAPV2: username - hexdump(len=15):
D (16750) wpa: 62 6f 62 40 65 78 61 6d 70 6c 65 2e 6f 72 67 
D (16760) wpa: MSCHAPV2: password - hexdump(len=12):
D (16770) wpa: 61 72 67 6f 61 72 67 6f 61 72 67 6f 
D (16770) wpa: MSCHAPV2: NT Response - hexdump(len=24):
D (16780) wpa: eb 6b 1b 92 fd 72 ff 78 77 97 ea e6 e3 9c 21 3c 
D (16780) wpa: 74 06 f4 e4 c3 6a 69 aa 
D (16790) wpa: MSCHAPV2: Auth Response - hexdump(len=20):
D (16790) wpa: 5f 0c 72 91 34 37 c9 49 73 2c 79 66 c0 53 eb 25 
D (16800) wpa: 83 97 04 11 
D (16800) wpa: MSCHAPV2: Master Key - hexdump(len=16):
D (16810) wpa: 08 4b d2 c6 ec 27 a7 88 05 d1 f5 87 34 7d d8 5d 
D (16810) wpa: EAP-MSCHAPV2: TX identifier 148 mschapv2_id 148 (response)
D (16820) wpa: EAP-PEAP: Encrypting Phase 2 data - hexdump(len=74):
D (16820) wpa: 02 94 00 4a 1a 02 94 00 45 31 7e a8 e2 22 64 96 
D (16830) wpa: ad 17 91 39 20 dc 44 da e8 82 00 00 00 00 00 00 
D (16840) wpa: 00 00 eb 6b 1b 92 fd 72 ff 78 77 97 ea e6 e3 9c 
D (16840) wpa: 21 3c 74 06 f4 e4 c3 6a 69 aa 00 62 6f 62 40 65 
D (16850) wpa: 78 61 6d 70 6c 65 2e 6f 72 67 
D (16850) wpa: SSL: 99 bytes left to be sent out (of total 99 bytes)
D (16860) wpa: EAP: wifi->EAP api completed sig(1073446412)
D (16860) wpa: EAP: EAP api return, sm->state(0)
D (16870) wpa: IEEE 802.1X RX: version=2 type=0 length=82
D (16880) wpa: SSL: Received packet(len=82) - Flags 0x00
D (16880) wpa: EAP-PEAP: received 76 bytes encrypted data for Phase 2
D (16890) wpa: EAP-PEAP: Decrypted Phase 2 EAP - hexdump(len=47):
D (16890) wpa: 1a 03 94 00 2e 53 3d 35 46 30 43 37 32 39 31 33 
D (16900) wpa: 34 33 37 43 39 34 39 37 33 32 43 37 39 36 36 43 
D (16910) wpa: 30 35 33 45 42 32 35 38 33 39 37 30 34 31 31 
D (16910) wpa: EAP-PEAP: received Phase 2: code=1 identifier=149 length=51

D (16920) wpa: EAP-PEAP: Phase 2 Request: type=26
D (16920) wpa: EAP-MSCHAPV2: RX identifier 149 mschapv2_id 148
D (16930) wpa: EAP-MSCHAPV2: Received success
D (16930) wpa: EAP-MSCHAPV2: Success message - hexdump(len=0):
I (16940) wpa: EAP-MSCHAPV2: Authentication succeeded
D (16940) wpa: EAP-PEAP: Encrypting Phase 2 data - hexdump(len=6):
D (16950) wpa: 02 95 00 06 1a 03 
D (16950) wpa: SSL: 31 bytes left to be sent out (of total 31 bytes)
D (16960) wpa: EAP: wifi->EAP api completed sig(1073446412)
D (16970) wpa: EAP: EAP api return, sm->state(0)
D (16970) wpa: IEEE 802.1X RX: version=2 type=0 length=46
D (16980) wpa: SSL: Received packet(len=46) - Flags 0x00
D (16980) wpa: EAP-PEAP: received 40 bytes encrypted data for Phase 2
D (16990) wpa: EAP-PEAP: Decrypted Phase 2 EAP - hexdump(len=11):
D (16990) wpa: 01 96 00 0b 21 80 03 00 02 00 01 
D (17000) wpa: EAP-PEAP: received Phase 2: code=1 identifier=150 length=11

D (17010) wpa: EAP-PEAP: Phase 2 Request: type=33
D (17010) wpa: EAP-TLV: Received TLVs - hexdump(len=6):
D (17020) wpa: 80 03 00 02 00 01 
D (17020) wpa: EAP-TLV: Result TLV - hexdump(len=2):
D (17020) wpa: 00 01 
I (17030) wpa: EAP-TLV: TLV Result - Success - EAP-TLV/Phase2 Completed
D (17030) wpa: EAP-PEAP: Encrypting Phase 2 data - hexdump(len=11):
D (17040) wpa: 02 96 00 0b 21 80 03 00 02 00 01 
D (17050) wpa: SSL: 40 bytes left to be sent out (of total 40 bytes)
D (17050) wpa: EAP: wifi->EAP api completed sig(1073446412)
D (17060) wpa: EAP: EAP api return, sm->state(0)
D (17070) wpa: IEEE 802.1X RX: version=2 type=0 length=4
I (17070) wpa: >>>>>EAP FINISH
D (17070) wpa: EAP: wifi->EAP api completed sig(1073446412)
D (17080) wpa: EAP: EAP api return, sm->state(2)
D (17080) wpa: IEEE 802.1X RX: version=2 type=3 length=117
D (17090) wpa:   EAPOL-Key type=2
D (17090) wpa:   key_info 0x8b (ver=3 keyidx=0 rsvd=0 Pairwise Ack)
D (17100) wpa:   key_length=16 key_data_length=22
D (17100) wpa:   replay_counter - hexdump(len=8):
D (17110) wpa: 00 00 00 00 00 00 00 01 
D (17110) wpa:   key_nonce - hexdump(len=32):
D (17110) wpa: f4 24 d3 8e da 19 20 b3 32 04 14 65 f1 eb b1 d9 
D (17120) wpa: 7c 25 49 c3 d4 09 40 f7 12 b5 d6 50 06 e0 37 a6 
D (17130) wpa:   key_iv - hexdump(len=16):
D (17130) wpa: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
D (17140) wpa:   key_rsc - hexdump(len=8):
D (17140) wpa: 00 00 00 00 00 00 00 00 
D (17150) wpa:   key_id (reserved) - hexdump(len=8):
D (17150) wpa: 00 00 00 00 00 00 00 00 
D (17150) wpa:   key_mic - hexdump(len=16):
D (17160) wpa: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
D (17160) wpa: WPA 1/4-Way Handshake
D (17170) wpa: RSN: msg 1/4 key data - hexdump(len=22):
D (17170) wpa: dd 14 00 0f ac 04 b2 53 66 c3 b3 33 57 1b f9 4f 
D (17180) wpa: 4e 7f 46 06 f6 f0 
D (17180) wpa: WPA: PMKID in EAPOL-Key - hexdump(len=22):
D (17190) wpa: dd 14 00 0f ac 04 b2 53 66 c3 b3 33 57 1b f9 4f 
D (17190) wpa: 4e 7f 46 06 f6 f0 
D (17200) wpa: RSN: PMKID from Authenticator - hexdump(len=16):
D (17200) wpa: b2 53 66 c3 b3 33 57 1b f9 4f 4e 7f 46 06 f6 f0 
D (17210) wpa: WPA: PMK from EAPOL state machines - hexdump(len=32):
D (17220) wpa: 27 ea 34 70 21 7f 33 16 c6 2f 5d 63 f7 8d c3 40 
D (17220) wpa: c7 1d 0f a0 0e c4 12 4f 4e f4 55 6d f8 33 c3 5f 
D (17230) wpa: RSN: Derive PMKID using HMAC-SHA-256
D (17230) wpa: RSN: Replace PMKSA entry for the current AP and any PMKSA cache entry that was based on the old PMK
D (17240) wpa: RSN: PMKSA cache entry free_cb: 3c:a0:67:80:99:a3 reason=1
D (17250) wpa: RSN: replaced current PMKSA entry
D (17250) wpa: ELOOP: pmksa_cache_set_expiration:76 called to remove timer handler=0x400f21f8, removed count=1
0x400f21f8: pmksa_cache_expire at /home/alghisi/esp/esp-idf/components/wpa_supplicant/src/rsn_supp/pmksa_cache.c:55

D (17260) wpa: ELOOP: Added one timer from pmksa_cache_set_expiration:85 to call 0x400f21f8, current order=0
0x400f21f8: pmksa_cache_expire at /home/alghisi/esp/esp-idf/components/wpa_supplicant/src/rsn_supp/pmksa_cache.c:55

D (17270) wpa: RSN: Added PMKSA cache entry for 3c:a0:67:80:99:a3 network_ctx=0x0
D (17280) wpa: RSN: the new PMK matches with the PMKID
D (17290) wpa: RSN: PMKSA cache search - network_ctx=0x0 try_opportunistic=0
D (17290) wpa: RSN: Search for BSSID 3c:a0:67:80:99:a3
D (17300) wpa: RSN: PMKSA cache entry found - PMKID - hexdump(len=16):
D (17310) wpa: b2 53 66 c3 b3 33 57 1b f9 4f 4e 7f 46 06 f6 f0 
D (17310) wpa: WPA: Renewed SNonce - hexdump(len=32):
D (17320) wpa: e3 86 fb 00 07 95 38 cb b6 5a a6 49 ac 0b 53 f7 
D (17320) wpa: 53 59 7b d1 0b c2 31 c8 f5 07 c1 2c 61 fa a9 fd 
D (17330) wpa: WPA: PTK derivation - A1=94:b5:55:19:1c:e8 A2=3c:a0:67:80:99:a3

D (17340) wpa: WPA: PTK - hexdump(len=48):
D (17340) wpa: 44 4d 17 8e e4 e2 49 03 11 0d 96 ab c7 61 d4 3d 
D (17350) wpa: 43 13 88 93 e1 c9 a4 c3 fc a2 54 22 af f0 a1 aa 
D (17350) wpa: de b6 a1 5e 66 fc 32 2f bc 36 32 b2 06 5d ff eb 
D (17360) wpa: WPA: KCK - hexdump(len=16):
D (17360) wpa: 44 4d 17 8e e4 e2 49 03 11 0d 96 ab c7 61 d4 3d 
D (17370) wpa: WPA: KEK - hexdump(len=16):
D (17370) wpa: 43 13 88 93 e1 c9 a4 c3 fc a2 54 22 af f0 a1 aa 
D (17380) wpa: WPA: TK - hexdump(len=16):
D (17380) wpa: de b6 a1 5e 66 fc 32 2f bc 36 32 b2 06 5d ff eb 
D (17390) wpa: WPA Send EAPOL-Key 2/4
D (17390) wpa: WPA: KCK - hexdump(len=16):
D (17400) wpa: 44 4d 17 8e e4 e2 49 03 11 0d 96 ab c7 61 d4 3d 
D (17400) wpa: WPA: Derived Key MIC - hexdump(len=16):
D (17410) wpa: 1b c1 47 82 be a8 e6 0c 31 a5 40 eb 2b d9 03 ca 
D (17420) wpa: 2/4 txcb, flags=0, txfail 0
D (17420) wpa: IEEE 802.1X RX: version=2 type=3 length=183
D (17430) wpa:   EAPOL-Key type=2
D (17430) wpa:   key_info 0x13cb (ver=3 keyidx=0 rsvd=0 Pairwise Install Ack MIC Secure Encr)
D (17440) wpa:   key_length=16 key_data_length=88
D (17440) wpa:   replay_counter - hexdump(len=8):
D (17450) wpa: 00 00 00 00 00 00 00 02 
D (17450) wpa:   key_nonce - hexdump(len=32):
D (17450) wpa: f4 24 d3 8e da 19 20 b3 32 04 14 65 f1 eb b1 d9 
D (17460) wpa: 7c 25 49 c3 d4 09 40 f7 12 b5 d6 50 06 e0 37 a6 
D (17470) wpa:   key_iv - hexdump(len=16):
D (17470) wpa: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
D (17480) wpa:   key_rsc - hexdump(len=8):
D (17480) wpa: 00 00 00 00 00 00 00 00 
D (17480) wpa:   key_id (reserved) - hexdump(len=8):
D (17490) wpa: 00 00 00 00 00 00 00 00 
D (17490) wpa:   key_mic - hexdump(len=16):
D (17500) wpa: 9b 13 ca 1a 50 8f 1c c1 4e dd dc 08 77 e8 b8 a9 
D (17500) wpa: RSN: encrypted key data - hexdump(len=88):
D (17510) wpa: 9a b1 f8 da 78 71 a7 68 6f 57 a0 2f ec f3 00 f7 
D (17520) wpa: 61 42 ed 9b 1b 07 99 57 1a e4 ea 23 5c dc c4 83 
D (17520) wpa: 5b 18 af 6b 3d 35 30 43 4f 8e 4c ec 3c 34 32 81 
D (17530) wpa: 74 c7 a5 c8 47 7f c5 8b 34 79 e2 7b 87 fc ee 6c 
D (17530) wpa: c9 49 26 b6 81 ad fe 0f 6e b6 d0 0d 97 f6 7e ce 
D (17540) wpa: 91 73 de f0 fd 54 d9 c1 
D (17540) wpa: WPA: decrypted EAPOL-Key key data - hexdump(len=80):
D (17550) wpa: 30 14 01 00 00 0f ac 04 01 00 00 0f ac 04 01 00 
D (17560) wpa: 00 0f ac 05 c0 00 dd 16 00 0f ac 01 01 00 90 01 
D (17560) wpa: ef c5 fc 1e e0 ee f7 10 62 be 6d fd 08 7f dd 1c 
D (17570) wpa: 00 0f ac 09 04 00 00 00 00 00 00 00 d8 d6 1a 04 
D (17570) wpa: 37 ed f3 8b d5 4a 4e 64 1c e8 b9 d2 dd 00 00 00 
D (17580) wpa: WPA 3/4-Way Handshake
D (17580) wpa: WPA: RSN IE in EAPOL-Key - hexdump(len=22):
D (17590) wpa: 30 14 01 00 00 0f ac 04 01 00 00 0f ac 04 01 00 
D (17590) wpa: 00 0f ac 05 c0 00 
D (17600) wpa: WPA: GTK in EAPOL-Key - hexdump(len=24):
D (17600) wpa: dd 16 00 0f ac 01 01 00 90 01 ef c5 fc 1e e0 ee 
D (17610) wpa: f7 10 62 be 6d fd 08 7f 
D (17610) wpa: WPA: IGTK in EAPOL-Key - hexdump(len=30):
D (17620) wpa: dd 1c 00 0f ac 09 04 00 00 00 00 00 00 00 d8 d6 
D (17620) wpa: 1a 04 37 ed f3 8b d5 4a 4e 64 1c e8 b9 d2 
D (17630) wpa: WPA: IE KeyData - hexdump(len=80):
D (17630) wpa: 30 14 01 00 00 0f ac 04 01 00 00 0f ac 04 01 00 
D (17640) wpa: 00 0f ac 05 c0 00 dd 16 00 0f ac 01 01 00 90 01 
D (17650) wpa: ef c5 fc 1e e0 ee f7 10 62 be 6d fd 08 7f dd 1c 
D (17650) wpa: 00 0f ac 09 04 00 00 00 00 00 00 00 d8 d6 1a 04 
D (17660) wpa: 37 ed f3 8b d5 4a 4e 64 1c e8 b9 d2 dd 00 00 00 
D (17660) wpa: WPA: RSC - hexdump(len=8):
D (17670) wpa: 00 00 00 00 00 00 00 00 
D (17670) wpa: RSN: received GTK in pairwise handshake - hexdump(len=18):
D (17680) wpa: 01 00 90 01 ef c5 fc 1e e0 ee f7 10 62 be 6d fd 
D (17690) wpa: 08 7f 
D (17690) wpa: WPA: IGTK keyid 4 pn 000000000000
D (17690) wpa: WPA: IGTK - hexdump(len=16):
D (17700) wpa: d8 d6 1a 04 37 ed f3 8b d5 4a 4e 64 1c e8 b9 d2 
D (17700) wpa: tx 4/4 txcb_flags=8192
D (17710) wpa: WPA Send EAPOL-Key 4/4
D (17710) wpa: WPA: KCK - hexdump(len=16):
D (17710) wpa: 44 4d 17 8e e4 e2 49 03 11 0d 96 ab c7 61 d4 3d 
D (17720) wpa: WPA: Derived Key MIC - hexdump(len=16):
D (17730) wpa: 05 6e ee ee da 8e af 4e 9f 74 75 5d 5c 91 20 9e 
D (17730) wpa: IEEE 802.1X RX: version=2 type=3 length=183
D (17740) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbd81c
D (17740) wpa:   EAPOL-Key type=2
I (17740) example: ~~~~~~~~~~~
D (17750) wpa:   key_info 0x13cb (ver=3 keyidx=0 rsvd=0 Pairwise Install Ack MIC Secure Encr)
I (17750) example: IP:0.0.0.0
D (17760) wpa:   key_length=16 key_data_length=88
I (17760) example: MASK:0.0.0.0
D (17770) wpa:   replay_counter - hexdump(len=8):
I (17770) example: GW:0.0.0.0
D (17780) wpa: 00 00 00 00 00 00 00 03 
I (17780) example: ~~~~~~~~~~~
D (17780) wpa:   key_nonce - hexdump(len=32):
D (17790) wpa: f4 24 d3 8e da 19 20 b3 32 04 14 65 f1 eb b1 d9 
D (17800) wpa: 7c 25 49 c3 d4 09 40 f7 12 b5 d6 50 06 e0 37 a6 
D (17800) wpa:   key_iv - hexdump(len=16):
D (17810) wpa: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
D (17810) wpa:   key_rsc - hexdump(len=8):
D (17820) wpa: 00 00 00 00 00 00 00 00 
D (17820) wpa:   key_id (reserved) - hexdump(len=8):
D (17830) wpa: 00 00 00 00 00 00 00 00 
D (17830) wpa:   key_mic - hexdump(len=16):
D (17840) wpa: 1b 81 c8 ed 05 63 c2 c9 67 c7 de 89 b7 6d 02 11 
D (17840) wpa: RSN: encrypted key data - hexdump(len=88):
D (17850) wpa: 9a b1 f8 da 78 71 a7 68 6f 57 a0 2f ec f3 00 f7 
D (17850) wpa: 61 42 ed 9b 1b 07 99 57 1a e4 ea 23 5c dc c4 83 
D (17860) wpa: 5b 18 af 6b 3d 35 30 43 4f 8e 4c ec 3c 34 32 81 
D (17860) wpa: 74 c7 a5 c8 47 7f c5 8b 34 79 e2 7b 87 fc ee 6c 
D (17870) wpa: c9 49 26 b6 81 ad fe 0f 6e b6 d0 0d 97 f6 7e ce 
D (17880) wpa: 91 73 de f0 fd 54 d9 c1 
D (17880) wpa: WPA: decrypted EAPOL-Key key data - hexdump(len=80):
D (17890) wpa: 30 14 01 00 00 0f ac 04 01 00 00 0f ac 04 01 00 
D (17890) wpa: 00 0f ac 05 c0 00 dd 16 00 0f ac 01 01 00 90 01 
D (17900) wpa: ef c5 fc 1e e0 ee f7 10 62 be 6d fd 08 7f dd 1c 
D (17900) wpa: 00 0f ac 09 04 00 00 00 00 00 00 00 d8 d6 1a 04 
D (17910) wpa: 37 ed f3 8b d5 4a 4e 64 1c e8 b9 d2 dd 00 00 00 
D (17920) wpa: WPA 3/4-Way Handshake
D (17920) wpa: WPA: RSN IE in EAPOL-Key - hexdump(len=22):
D (17930) wpa: 30 14 01 00 00 0f ac 04 01 00 00 0f ac 04 01 00 
D (17930) wpa: 00 0f ac 05 c0 00 
D (17940) wpa: WPA: GTK in EAPOL-Key - hexdump(len=24):
D (17940) wpa: dd 16 00 0f ac 01 01 00 90 01 ef c5 fc 1e e0 ee 
D (17950) wpa: f7 10 62 be 6d fd 08 7f 
D (17950) wpa: WPA: IGTK in EAPOL-Key - hexdump(len=30):
D (17960) wpa: dd 1c 00 0f ac 09 04 00 00 00 00 00 00 00 d8 d6 
D (17960) wpa: 1a 04 37 ed f3 8b d5 4a 4e 64 1c e8 b9 d2 
D (17970) wpa: WPA: IE KeyData - hexdump(len=80):
D (17970) wpa: 30 14 01 00 00 0f ac 04 01 00 00 0f ac 04 01 00 
D (17980) wpa: 00 0f ac 05 c0 00 dd 16 00 0f ac 01 01 00 90 01 
D (17980) wpa: ef c5 fc 1e e0 ee f7 10 62 be 6d fd 08 7f dd 1c 
D (17990) wpa: 00 0f ac 09 04 00 00 00 00 00 00 00 d8 d6 1a 04 
D (18000) wpa: 37 ed f3 8b d5 4a 4e 64 1c e8 b9 d2 dd 00 00 00 
D (18000) wpa: WPA: RSC - hexdump(len=8):
D (18010) wpa: 00 00 00 00 00 00 00 00 
D (18010) wpa: RSN: received GTK in pairwise handshake - hexdump(len=18):
D (18020) wpa: 01 00 90 01 ef c5 fc 1e e0 ee f7 10 62 be 6d fd 
D (18020) wpa: 08 7f 
D (18030) wpa: WPA: Not reinstalling already in-use IGTK to the driver (keyidx=4)
D (18030) wpa: tx 4/4 txcb_flags=8192
D (18040) wpa: WPA Send EAPOL-Key 4/4
D (18040) wpa: WPA: KCK - hexdump(len=16):
D (18040) wpa: 44 4d 17 8e e4 e2 49 03 11 0d 96 ab c7 61 d4 3d 
D (18050) wpa: WPA: Derived Key MIC - hexdump(len=16):
D (18060) wpa: 13 00 06 c0 e3 95 0f 2b 2a ac d2 c7 00 08 62 b7 
D (18060) wpa: WPA: Installing PTK to the driver.
D (18070) wpa: WPA: Group Key - hexdump(len=16):
D (18070) wpa: 90 01 ef c5 fc 1e e0 ee f7 10 62 be 6d fd 08 7f 
D (18080) wpa: WPA: Judge GTK: (keyidx=1 len=16).
D (18080) wpa: WPA: Installing GTK to the driver (keyidx=1 tx=0 len=16).
D (18090) wpa: WPA: RSC - hexdump(len=6):
D (18090) wpa: 00 00 00 00 00 00 
D (18100) wpa: WPA: Key negotiation completed with 3c:a0:67:80:99:a3 [PTK=CCMP GTK=CCMP]

I (18100) wifi:connected with Hostapd-AP-E, aid = 1, channel 1, BW20, bssid = 3c:a0:67:80:99:a3
I (18110) wifi:security: WPA2-ENT, phy: bg, rssi: -39
D (18120) wifi:remove all except 3c:a0:67:80:99:a3 from rc list
D (18120) wifi:clear blacklist
D (18130) wifi:filter: set rx policy=7
I (18130) wifi:pm start, type: 1

D (18130) wifi:Send sta connected event
D (18140) wifi:connect status 1 -> 5
D (18140) wifi:obss scan is disabled
D (18140) wifi:start obss scan: obss scan is stopped
D (18150) event: running post WIFI_EVENT:4 with handler 0x400f91d4 and context 0x3ffbdad0 on loop 0x3ffbc8f4
0x400f91d4: wifi_default_action_sta_connected at /home/alghisi/esp/esp-idf/components/esp_wifi/src/wifi_default.c:85

D (18160) esp_netif_handlers: esp_netif action connected with netif0x3ffbd81c from event_id=4
D (18170) esp_netif_lwip: check: remote, if=0x3ffbd81c fn=0x400de350
0x400de350: esp_netif_up_api at /home/alghisi/esp/esp-idf/components/esp_netif/lwip/esp_netif_lwip.c:1612


I (18160) wifi:D (18170) esp_netif_lwip: esp_netif_up_api esp_netif:0x3ffbd81c
AP's beacon interval = 102400 us, DTIM period = 2
D (18180) esp_netif_lwip: check: local, if=0x3ffbd81c fn=0x400de8a4
0x400de8a4: esp_netif_update_default_netif_lwip at /home/alghisi/esp/esp-idf/components/esp_netif/lwip/esp_netif_lwip.c:327


D (18190) esp_netif_lwip: esp_netif_update_default_netif_lwip 0x3ffbd81c
D (18200) esp_netif_lwip: call api in lwip: ret=0x0, give sem
D (18200) esp_netif_lwip: check: remote, if=0x3ffbd81c fn=0x400de22c
0x400de22c: esp_netif_dhcpc_start_api at /home/alghisi/esp/esp-idf/components/esp_netif/lwip/esp_netif_lwip.c:1404


D (18210) esp_netif_lwip: esp_netif_dhcpc_start_api esp_netif:0x3ffbd81c
D (18220) esp_netif_lwip: esp_netif_start_ip_lost_timer esp_netif:0x3ffbd81c
D (18220) esp_netif_lwip: if0x3ffbd81c start ip lost tmr: already started
D (18230) esp_netif_lwip: starting dhcp client
D (18240) esp_netif_lwip: call api in lwip: ret=0x0, give sem
D (18240) event: running post WIFI_EVENT:4 with handler 0x400d7ce4 and context 0x3ffc5b70 on loop 0x3ffbc8f4
0x400d7ce4: event_handler at /home/alghisi/GitHub/Hostapd-test/ESP32/Src/ESP32-IDF/wifi_enterprise/main/wifi_enterprise_main.c:92

D (19240) esp_netif_lwip: esp_netif_internal_dhcpc_cb lwip-netif:0x3ffbd8a0
D (19240) esp_netif_lwip: if0x3ffbd81c ip changed=0
D (19240) event: running post IP_EVENT:0 with handler 0x400f9000 and context 0x3ffbdba4 on loop 0x3ffbc8f4
0x400f9000: wifi_default_action_sta_got_ip at /home/alghisi/esp/esp-idf/components/esp_wifi/src/wifi_default.c:127

D (19250) wifi_init_default: Got IP wifi default handler entered
D (19250) esp_netif_handlers: esp_netif action got_ip with netif0x3ffbd81c from event_id=0
I (19260) esp_netif_handlers: sta ip: 192.168.104.187, mask: 255.255.255.0, gw: 192.168.104.247
D (19270) event: running post IP_EVENT:0 with handler 0x400d7ce4 and context 0x3ffc5b90 on loop 0x3ffbc8f4
0x400d7ce4: event_handler at /home/alghisi/GitHub/Hostapd-test/ESP32/Src/ESP32-IDF/wifi_enterprise/main/wifi_enterprise_main.c:92

D (19790) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbd81c
I (19790) example: ~~~~~~~~~~~
I (19790) example: IP:192.168.104.187
I (19790) example: MASK:255.255.255.0
I (19790) example: GW:192.168.104.247
I (19800) example: ~~~~~~~~~~~
D (21800) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbd81c
I (21800) example: ~~~~~~~~~~~
I (21800) example: IP:192.168.104.187
I (21800) example: MASK:255.255.255.0
I (21800) example: GW:192.168.104.247
I (21810) example: ~~~~~~~~~~~
D (23810) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbd81c
I (23810) example: ~~~~~~~~~~~
I (23810) example: IP:192.168.104.187
I (23810) example: MASK:255.255.255.0
I (23810) example: GW:192.168.104.247
I (23820) example: ~~~~~~~~~~~
D (25820) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbd81c
I (25820) example: ~~~~~~~~~~~
I (25820) example: IP:192.168.104.187
I (25820) example: MASK:255.255.255.0
I (25820) example: GW:192.168.104.247
I (25830) example: ~~~~~~~~~~~
D (27830) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbd81c
I (27830) example: ~~~~~~~~~~~
I (27830) example: IP:192.168.104.187
I (27830) example: MASK:255.255.255.0
I (27830) example: GW:192.168.104.247
I (27840) example: ~~~~~~~~~~~
D (29840) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbd81c
I (29840) example: ~~~~~~~~~~~
I (29840) example: IP:192.168.104.187
I (29840) example: MASK:255.255.255.0
I (29840) example: GW:192.168.104.247
I (29850) example: ~~~~~~~~~~~
D (31680) wifi:recv deauth, reason=0x3
I (31680) wifi:state: run -> init (3c0)
D (31680) wifi:recv deauth/disassoc, stop beacon/connect timer
D (31680) wifi:connect status 5 -> 4
D (31680) wifi:sta leave
I (31690) wifi:pm stop, total sleep time: 12641984 us / 13554062 us

D (31690) wifi:stop CSA timer
D (31700) wpa: EAP: queue deleted
D (31700) wpa: EAP: task deleted
D (31700) wpa: EAP: wifi->EAP api completed sig(1073407494)
D (31710) wpa: EAP: EAP api return, sm->state(2)
D (31710) wpa: EAP: eap_peer_sm_deinit: free data lock
D (31720) wifi:remove 3c:a0:67:80:99:a3 from rc list
I (31720) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1
D (31730) wifi:filter: set rx policy=8
D (31730) wifi:Send disconnect event, reason=3, AP number=0
D (31740) event: running post WIFI_EVENT:5 with handler 0x400f91bc and context 0x3ffbdb00 on loop 0x3ffbc8f4
0x400f91bc: wifi_default_action_sta_disconnected at /home/alghisi/esp/esp-idf/components/esp_wifi/src/wifi_default.c:104

D (31750) esp_netif_handlers: esp_netif action disconnected with netif0x3ffbd81c from event_id=5
D (31760) esp_netif_lwip: check: remote, if=0x3ffbd81c fn=0x400de398
0x400de398: esp_netif_down_api at /home/alghisi/esp/esp-idf/components/esp_netif/lwip/esp_netif_lwip.c:1638


D (31760) esp_netif_lwip: esp_netif_down_api esp_netif:0x3ffbd81c
D (31770) esp_netif_lwip: esp_netif_internal_dhcpc_cb lwip-netif:0x3ffbd8a0
D (31780) esp_netif_lwip: esp_netif_start_ip_lost_timer esp_netif:0x3ffbd81c
D (31780) esp_netif_lwip: if0x3ffbd81c start ip lost tmr: already started
D (31790) esp_netif_lwip: esp_netif_start_ip_lost_timer esp_netif:0x3ffbd81c
D (31800) esp_netif_lwip: if0x3ffbd81c start ip lost tmr: already started
D (31800) esp_netif_lwip: check: local, if=0x3ffbd81c fn=0x400de8a4
0x400de8a4: esp_netif_update_default_netif_lwip at /home/alghisi/esp/esp-idf/components/esp_netif/lwip/esp_netif_lwip.c:327


D (31810) esp_netif_lwip: esp_netif_update_default_netif_lwip 0x3ffbd81c
D (31820) esp_netif_lwip: call api in lwip: ret=0x0, give sem
D (31820) event: running post WIFI_EVENT:5 with handler 0x400d7ce4 and context 0x3ffc5b70 on loop 0x3ffbc8f4
0x400d7ce4: event_handler at /home/alghisi/GitHub/Hostapd-test/ESP32/Src/ESP32-IDF/wifi_enterprise/main/wifi_enterprise_main.c:92

D (31830) wifi:Start wifi connect
D (31840) wifi:connect status 4 -> 0
D (31840) wifi:connect chan=0
D (31840) wifi:first chan=1
D (31840) wifi:connect status 0 -> 1
D (31850) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbd81c
D (31850) wifi:I (31850) example: ~~~~~~~~~~~
filter: set rx policy=3I (31860) example: IP:0.0.0.0

I (31860) example: MASK:0.0.0.0
D (31860) wifi:I (31870) example: GW:0.0.0.0
clear scan ap listI (31870) example: ~~~~~~~~~~~

D (31880) wifi:start scan: type=0x50f, priority=2, cb=0x4012d724, arg=0x0, ss_state=0x1, time=30255776, index=0
0x4012d724: cnx_start_handoff_cb at ??:?

D (31890) wifi:perform scan: ss_state=0x9, chan<1,0>, dur<0,120>
D (32020) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (32020) wifi:perform scan: ss_state=0x9, chan<2,0>, dur<0,120>
D (32140) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (32140) wifi:perform scan: ss_state=0x9, chan<3,0>, dur<0,120>
D (32260) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (32260) wifi:perform scan: ss_state=0x9, chan<4,0>, dur<0,120>
D (32380) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (32380) wifi:perform scan: ss_state=0x9, chan<5,0>, dur<0,120>
D (32500) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (32500) wifi:perform scan: ss_state=0x9, chan<6,0>, dur<0,120>
D (32620) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (32620) wifi:perform scan: ss_state=0x9, chan<7,0>, dur<0,120>
D (32740) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (32740) wifi:perform scan: ss_state=0x9, chan<8,0>, dur<0,120>
D (32870) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (32870) wifi:perform scan: ss_state=0x9, chan<9,0>, dur<0,120>
D (32990) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (32990) wifi:perform scan: ss_state=0x9, chan<10,0>, dur<0,120>
D (33110) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (33110) wifi:perform scan: ss_state=0x9, chan<11,0>, dur<0,120>
D (33230) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (33230) wifi:perform scan: ss_state=0x9, chan<12,0>, dur<360,360>
D (33590) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (33590) wifi:perform scan: ss_state=0x9, chan<13,0>, dur<360,360>
D (33880) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbd81c
I (33880) example: ~~~~~~~~~~~
I (33880) example: IP:0.0.0.0
I (33880) example: MASK:0.0.0.0
I (33880) example: GW:0.0.0.0
I (33890) example: ~~~~~~~~~~~
D (33950) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (33950) wifi:perform scan: ss_state=0x9, chan<14,0>, dur<360,360>
D (34310) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (34310) wifi:filter: set rx policy=4
D (34310) wifi:first chan=1
D (34310) wifi:handoff_cb: status=0
D (34320) wifi:clear rc list
D (34320) wifi:clear blacklist
D (34320) wifi:Send disconnect event, reason=201
D (34330) wifi:connect status 1 -> 3
D (34330) wifi:disable connect timer
D (34330) wifi:clear scan ap list
D (34340) event: running post WIFI_EVENT:5 with handler 0x400f91bc and context 0x3ffbdb00 on loop 0x3ffbc8f4
0x400f91bc: wifi_default_action_sta_disconnected at /home/alghisi/esp/esp-idf/components/esp_wifi/src/wifi_default.c:104

D (34350) esp_netif_handlers: esp_netif action disconnected with netif0x3ffbd81c from event_id=5
D (34350) esp_netif_lwip: check: remote, if=0x3ffbd81c fn=0x400de398
0x400de398: esp_netif_down_api at /home/alghisi/esp/esp-idf/components/esp_netif/lwip/esp_netif_lwip.c:1638


D (34360) esp_netif_lwip: esp_netif_down_api esp_netif:0x3ffbd81c
D (34370) esp_netif_lwip: esp_netif_start_ip_lost_timer esp_netif:0x3ffbd81c
D (34370) esp_netif_lwip: if0x3ffbd81c start ip lost tmr: already started
D (34380) esp_netif_lwip: check: local, if=0x3ffbd81c fn=0x400de8a4
0x400de8a4: esp_netif_update_default_netif_lwip at /home/alghisi/esp/esp-idf/components/esp_netif/lwip/esp_netif_lwip.c:327


D (34390) esp_netif_lwip: esp_netif_update_default_netif_lwip 0x3ffbd81c
D (34390) esp_netif_lwip: call api in lwip: ret=0x0, give sem
D (34400) event: running post WIFI_EVENT:5 with handler 0x400d7ce4 and context 0x3ffc5b70 on loop 0x3ffbc8f4
0x400d7ce4: event_handler at /home/alghisi/GitHub/Hostapd-test/ESP32/Src/ESP32-IDF/wifi_enterprise/main/wifi_enterprise_main.c:92

D (34410) wifi:Start wifi connect
D (34410) wifi:connect status 3 -> 0
D (34420) wifi:connect chan=0
D (34420) wifi:first chan=1
D (34420) wifi:connect status 0 -> 1
D (34430) wifi:filter: set rx policy=3
D (34430) wifi:clear scan ap list
D (34430) wifi:start scan: type=0x50f, priority=2, cb=0x4012d724, arg=0x0, ss_state=0x1, time=32808585, index=0
0x4012d724: cnx_start_handoff_cb at ??:?

D (34440) wifi:perform scan: ss_state=0x9, chan<1,0>, dur<0,120>
D (34570) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (34570) wifi:perform scan: ss_state=0x9, chan<2,0>, dur<0,120>
D (34690) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (34690) wifi:perform scan: ss_state=0x9, chan<3,0>, dur<0,120>
D (34810) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (34810) wifi:perform scan: ss_state=0x9, chan<4,0>, dur<0,120>
D (34930) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (34930) wifi:perform scan: ss_state=0x9, chan<5,0>, dur<0,120>
D (35050) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (35050) wifi:perform scan: ss_state=0x9, chan<6,0>, dur<0,120>
D (35180) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (35180) wifi:perform scan: ss_state=0x9, chan<7,0>, dur<0,120>
D (35300) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (35300) wifi:perform scan: ss_state=0x9, chan<8,0>, dur<0,120>
D (35420) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (35420) wifi:perform scan: ss_state=0x9, chan<9,0>, dur<0,120>
D (35540) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (35540) wifi:perform scan: ss_state=0x9, chan<10,0>, dur<0,120>
D (35660) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (35660) wifi:perform scan: ss_state=0x9, chan<11,0>, dur<0,120>
D (35780) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (35780) wifi:perform scan: ss_state=0x9, chan<12,0>, dur<360,360>
D (35890) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbd81c
I (35890) example: ~~~~~~~~~~~
I (35890) example: IP:0.0.0.0
I (35890) example: MASK:0.0.0.0
I (35890) example: GW:0.0.0.0
I (35900) example: ~~~~~~~~~~~
D (36140) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (36140) wifi:perform scan: ss_state=0x9, chan<13,0>, dur<360,360>
D (36500) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (36510) wifi:perform scan: ss_state=0x9, chan<14,0>, dur<360,360>
D (36870) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (36870) wifi:filter: set rx policy=4
D (36870) wifi:first chan=1
D (36870) wifi:handoff_cb: status=0
D (36870) wifi:clear rc list
D (36870) wifi:clear blacklist
D (36870) wifi:Send disconnect event, reason=201
D (36880) wifi:connect status 1 -> 3
D (36880) wifi:disable connect timer
D (36890) wifi:clear scan ap list
D (36890) event: running post WIFI_EVENT:5 with handler 0x400f91bc and context 0x3ffbdb00 on loop 0x3ffbc8f4
0x400f91bc: wifi_default_action_sta_disconnected at /home/alghisi/esp/esp-idf/components/esp_wifi/src/wifi_default.c:104

D (36900) esp_netif_handlers: esp_netif action disconnected with netif0x3ffbd81c from event_id=5
D (36910) esp_netif_lwip: check: remote, if=0x3ffbd81c fn=0x400de398
0x400de398: esp_netif_down_api at /home/alghisi/esp/esp-idf/components/esp_netif/lwip/esp_netif_lwip.c:1638


D (36910) esp_netif_lwip: esp_netif_down_api esp_netif:0x3ffbd81c
D (36920) esp_netif_lwip: esp_netif_start_ip_lost_timer esp_netif:0x3ffbd81c
D (36930) esp_netif_lwip: if0x3ffbd81c start ip lost tmr: already started
D (36930) esp_netif_lwip: check: local, if=0x3ffbd81c fn=0x400de8a4
0x400de8a4: esp_netif_update_default_netif_lwip at /home/alghisi/esp/esp-idf/components/esp_netif/lwip/esp_netif_lwip.c:327


D (36940) esp_netif_lwip: esp_netif_update_default_netif_lwip 0x3ffbd81c
D (36950) esp_netif_lwip: call api in lwip: ret=0x0, give sem
D (36950) event: running post WIFI_EVENT:5 with handler 0x400d7ce4 and context 0x3ffc5b70 on loop 0x3ffbc8f4
0x400d7ce4: event_handler at /home/alghisi/GitHub/Hostapd-test/ESP32/Src/ESP32-IDF/wifi_enterprise/main/wifi_enterprise_main.c:92

D (36960) wifi:Start wifi connect
D (36970) wifi:connect status 3 -> 0
D (36970) wifi:connect chan=0
D (36970) wifi:first chan=1
D (36970) wifi:connect status 0 -> 1
D (36980) wifi:filter: set rx policy=3
D (36980) wifi:clear scan ap list
D (36980) wifi:start scan: type=0x50f, priority=2, cb=0x4012d724, arg=0x0, ss_state=0x1, time=35361331, index=0
0x4012d724: cnx_start_handoff_cb at ??:?

D (36990) wifi:perform scan: ss_state=0x9, chan<1,0>, dur<0,120>
D (37120) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (37120) wifi:perform scan: ss_state=0x9, chan<2,0>, dur<0,120>
D (37240) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (37240) wifi:perform scan: ss_state=0x9, chan<3,0>, dur<0,120>
D (37360) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (37360) wifi:perform scan: ss_state=0x9, chan<4,0>, dur<0,120>
D (37490) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (37490) wifi:perform scan: ss_state=0x9, chan<5,0>, dur<0,120>
D (37610) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (37610) wifi:perform scan: ss_state=0x9, chan<6,0>, dur<0,120>
D (37730) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (37730) wifi:perform scan: ss_state=0x9, chan<7,0>, dur<0,120>
D (37850) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (37850) wifi:perform scan: ss_state=0x9, chan<8,0>, dur<0,120>
D (37900) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbd81c
I (37900) example: ~~~~~~~~~~~
I (37900) example: IP:0.0.0.0
I (37900) example: MASK:0.0.0.0
I (37900) example: GW:0.0.0.0
I (37910) example: ~~~~~~~~~~~
D (37970) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (37970) wifi:perform scan: ss_state=0x9, chan<9,0>, dur<0,120>
D (38090) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (38090) wifi:perform scan: ss_state=0x9, chan<10,0>, dur<0,120>
D (38210) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (38210) wifi:perform scan: ss_state=0x9, chan<11,0>, dur<0,120>
D (38340) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (38340) wifi:perform scan: ss_state=0x9, chan<12,0>, dur<360,360>
D (38700) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (38700) wifi:perform scan: ss_state=0x9, chan<13,0>, dur<360,360>
D (39060) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (39060) wifi:perform scan: ss_state=0x9, chan<14,0>, dur<360,360>
D (39420) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (39420) wifi:filter: set rx policy=4
D (39420) wifi:first chan=1
D (39420) wifi:handoff_cb: status=0
D (39420) wifi:clear rc list
D (39420) wifi:clear blacklist
D (39430) wifi:Send disconnect event, reason=201
D (39430) wifi:connect status 1 -> 3
D (39430) wifi:disable connect timer
D (39440) wifi:clear scan ap list
D (39440) event: running post WIFI_EVENT:5 with handler 0x400f91bc and context 0x3ffbdb00 on loop 0x3ffbc8f4
0x400f91bc: wifi_default_action_sta_disconnected at /home/alghisi/esp/esp-idf/components/esp_wifi/src/wifi_default.c:104

D (39450) esp_netif_handlers: esp_netif action disconnected with netif0x3ffbd81c from event_id=5
D (39460) esp_netif_lwip: check: remote, if=0x3ffbd81c fn=0x400de398
0x400de398: esp_netif_down_api at /home/alghisi/esp/esp-idf/components/esp_netif/lwip/esp_netif_lwip.c:1638


D (39470) esp_netif_lwip: esp_netif_down_api esp_netif:0x3ffbd81c
D (39470) esp_netif_lwip: esp_netif_start_ip_lost_timer esp_netif:0x3ffbd81c
D (39480) esp_netif_lwip: if0x3ffbd81c start ip lost tmr: already started
D (39490) esp_netif_lwip: check: local, if=0x3ffbd81c fn=0x400de8a4
0x400de8a4: esp_netif_update_default_netif_lwip at /home/alghisi/esp/esp-idf/components/esp_netif/lwip/esp_netif_lwip.c:327


D (39490) esp_netif_lwip: esp_netif_update_default_netif_lwip 0x3ffbd81c
D (39500) esp_netif_lwip: call api in lwip: ret=0x0, give sem
D (39510) event: running post WIFI_EVENT:5 with handler 0x400d7ce4 and context 0x3ffc5b70 on loop 0x3ffbc8f4
0x400d7ce4: event_handler at /home/alghisi/GitHub/Hostapd-test/ESP32/Src/ESP32-IDF/wifi_enterprise/main/wifi_enterprise_main.c:92

D (39520) wifi:Start wifi connect
D (39520) wifi:connect status 3 -> 0
D (39520) wifi:connect chan=0
D (39520) wifi:first chan=1
D (39530) wifi:connect status 0 -> 1
D (39530) wifi:filter: set rx policy=3
D (39530) wifi:clear scan ap list
D (39540) wifi:start scan: type=0x50f, priority=2, cb=0x4012d724, arg=0x0, ss_state=0x1, time=37913932, index=0
0x4012d724: cnx_start_handoff_cb at ??:?

D (39550) wifi:perform scan: ss_state=0x9, chan<1,0>, dur<0,120>
D (39670) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (39670) wifi:perform scan: ss_state=0x9, chan<2,0>, dur<0,120>
D (39790) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (39800) wifi:perform scan: ss_state=0x9, chan<3,0>, dur<0,120>
D (39910) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbd81c
I (39910) example: ~~~~~~~~~~~
I (39910) example: IP:0.0.0.0
I (39910) example: MASK:0.0.0.0
I (39910) example: GW:0.0.0.0
I (39920) example: ~~~~~~~~~~~
D (39920) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (39920) wifi:perform scan: ss_state=0x9, chan<4,0>, dur<0,120>
D (40050) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (40050) wifi:perform scan: ss_state=0x9, chan<5,0>, dur<0,120>
D (40170) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (40170) wifi:perform scan: ss_state=0x9, chan<6,0>, dur<0,120>
D (40290) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (40290) wifi:perform scan: ss_state=0x9, chan<7,0>, dur<0,120>
D (40420) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (40420) wifi:perform scan: ss_state=0x9, chan<8,0>, dur<0,120>
D (40540) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (40540) wifi:perform scan: ss_state=0x9, chan<9,0>, dur<0,120>
D (40660) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (40660) wifi:perform scan: ss_state=0x9, chan<10,0>, dur<0,120>
D (40780) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (40780) wifi:perform scan: ss_state=0x9, chan<11,0>, dur<0,120>
D (40900) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (40900) wifi:perform scan: ss_state=0x9, chan<12,0>, dur<360,360>
D (41260) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (41260) wifi:perform scan: ss_state=0x9, chan<13,0>, dur<360,360>
D (41620) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (41620) wifi:perform scan: ss_state=0x9, chan<14,0>, dur<360,360>
D (41930) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbd81c
I (41930) example: ~~~~~~~~~~~
I (41930) example: IP:0.0.0.0
I (41930) example: MASK:0.0.0.0
I (41930) example: GW:0.0.0.0
I (41940) example: ~~~~~~~~~~~
D (41980) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (41980) wifi:filter: set rx policy=4
D (41980) wifi:first chan=1
D (41990) wifi:handoff_cb: status=0
D (41990) wifi:clear rc list
D (41990) wifi:clear blacklist
D (41990) wifi:Send disconnect event, reason=201
D (42000) wifi:connect status 1 -> 3
D (42000) wifi:disable connect timer
D (42000) wifi:clear scan ap list
D (42010) event: running post WIFI_EVENT:5 with handler 0x400f91bc and context 0x3ffbdb00 on loop 0x3ffbc8f4
0x400f91bc: wifi_default_action_sta_disconnected at /home/alghisi/esp/esp-idf/components/esp_wifi/src/wifi_default.c:104

D (42020) esp_netif_handlers: esp_netif action disconnected with netif0x3ffbd81c from event_id=5
D (42030) esp_netif_lwip: check: remote, if=0x3ffbd81c fn=0x400de398
0x400de398: esp_netif_down_api at /home/alghisi/esp/esp-idf/components/esp_netif/lwip/esp_netif_lwip.c:1638


D (42030) esp_netif_lwip: esp_netif_down_api esp_netif:0x3ffbd81c
D (42040) esp_netif_lwip: esp_netif_start_ip_lost_timer esp_netif:0x3ffbd81c
D (42050) esp_netif_lwip: if0x3ffbd81c start ip lost tmr: already started
D (42050) esp_netif_lwip: check: local, if=0x3ffbd81c fn=0x400de8a4
0x400de8a4: esp_netif_update_default_netif_lwip at /home/alghisi/esp/esp-idf/components/esp_netif/lwip/esp_netif_lwip.c:327


D (42060) esp_netif_lwip: esp_netif_update_default_netif_lwip 0x3ffbd81c
D (42070) esp_netif_lwip: call api in lwip: ret=0x0, give sem
D (42070) event: running post WIFI_EVENT:5 with handler 0x400d7ce4 and context 0x3ffc5b70 on loop 0x3ffbc8f4
0x400d7ce4: event_handler at /home/alghisi/GitHub/Hostapd-test/ESP32/Src/ESP32-IDF/wifi_enterprise/main/wifi_enterprise_main.c:92

D (42080) wifi:Start wifi connect
D (42080) wifi:connect status 3 -> 0
D (42090) wifi:connect chan=0
D (42090) wifi:first chan=1
D (42090) wifi:connect status 0 -> 1
D (42100) wifi:filter: set rx policy=3
D (42100) wifi:clear scan ap list
D (42100) wifi:start scan: type=0x50f, priority=2, cb=0x4012d724, arg=0x0, ss_state=0x1, time=40479731, index=0
0x4012d724: cnx_start_handoff_cb at ??:?

D (42110) wifi:perform scan: ss_state=0x9, chan<1,0>, dur<0,120>
D (42240) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (42240) wifi:perform scan: ss_state=0x9, chan<2,0>, dur<0,120>
D (42360) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (42360) wifi:perform scan: ss_state=0x9, chan<3,0>, dur<0,120>
D (42480) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (42480) wifi:perform scan: ss_state=0x9, chan<4,0>, dur<0,120>
D (42600) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (42600) wifi:perform scan: ss_state=0x9, chan<5,0>, dur<0,120>
D (42720) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (42730) wifi:perform scan: ss_state=0x9, chan<6,0>, dur<0,120>
D (42850) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (42850) wifi:perform scan: ss_state=0x9, chan<7,0>, dur<0,120>
D (42970) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (42970) wifi:perform scan: ss_state=0x9, chan<8,0>, dur<0,120>
D (43090) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (43090) wifi:perform scan: ss_state=0x9, chan<9,0>, dur<0,120>
D (43210) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (43210) wifi:perform scan: ss_state=0x9, chan<10,0>, dur<0,120>
D (43330) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (43330) wifi:perform scan: ss_state=0x9, chan<11,0>, dur<0,120>
D (43450) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (43450) wifi:perform scan: ss_state=0x9, chan<12,0>, dur<360,360>
D (43810) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (43820) wifi:perform scan: ss_state=0x9, chan<13,0>, dur<360,360>
D (43940) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbd81c
I (43940) example: ~~~~~~~~~~~
I (43940) example: IP:0.0.0.0
I (43940) example: MASK:0.0.0.0
I (43940) example: GW:0.0.0.0
I (43950) example: ~~~~~~~~~~~
D (44180) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (44180) wifi:perform scan: ss_state=0x9, chan<14,0>, dur<360,360>
D (44540) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (44540) wifi:filter: set rx policy=4
D (44540) wifi:first chan=1
D (44540) wifi:handoff_cb: status=0
D (44540) wifi:clear rc list
D (44540) wifi:clear blacklist
D (44550) wifi:Send disconnect event, reason=201
D (44550) wifi:connect status 1 -> 3
D (44550) wifi:disable connect timer
D (44560) wifi:clear scan ap list
D (44560) event: running post WIFI_EVENT:5 with handler 0x400f91bc and context 0x3ffbdb00 on loop 0x3ffbc8f4
0x400f91bc: wifi_default_action_sta_disconnected at /home/alghisi/esp/esp-idf/components/esp_wifi/src/wifi_default.c:104

D (44570) esp_netif_handlers: esp_netif action disconnected with netif0x3ffbd81c from event_id=5
D (44580) esp_netif_lwip: check: remote, if=0x3ffbd81c fn=0x400de398
0x400de398: esp_netif_down_api at /home/alghisi/esp/esp-idf/components/esp_netif/lwip/esp_netif_lwip.c:1638


D (44580) esp_netif_lwip: esp_netif_down_api esp_netif:0x3ffbd81c
D (44590) esp_netif_lwip: esp_netif_start_ip_lost_timer esp_netif:0x3ffbd81c
D (44600) esp_netif_lwip: if0x3ffbd81c start ip lost tmr: already started
D (44600) esp_netif_lwip: check: local, if=0x3ffbd81c fn=0x400de8a4
0x400de8a4: esp_netif_update_default_netif_lwip at /home/alghisi/esp/esp-idf/components/esp_netif/lwip/esp_netif_lwip.c:327


D (44610) esp_netif_lwip: esp_netif_update_default_netif_lwip 0x3ffbd81c
D (44620) esp_netif_lwip: call api in lwip: ret=0x0, give sem
D (44620) event: running post WIFI_EVENT:5 with handler 0x400d7ce4 and context 0x3ffc5b70 on loop 0x3ffbc8f4
0x400d7ce4: event_handler at /home/alghisi/GitHub/Hostapd-test/ESP32/Src/ESP32-IDF/wifi_enterprise/main/wifi_enterprise_main.c:92

D (44630) wifi:Start wifi connect
D (44640) wifi:connect status 3 -> 0
D (44640) wifi:connect chan=0
D (44640) wifi:first chan=1
D (44650) wifi:connect status 0 -> 1
D (44650) wifi:filter: set rx policy=3
D (44650) wifi:clear scan ap list
D (44660) wifi:start scan: type=0x50f, priority=2, cb=0x4012d724, arg=0x0, ss_state=0x1, time=43032460, index=0
0x4012d724: cnx_start_handoff_cb at ??:?

D (44660) wifi:perform scan: ss_state=0x9, chan<1,0>, dur<0,120>
D (44790) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (44790) wifi:perform scan: ss_state=0x9, chan<2,0>, dur<0,120>
D (44910) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (44910) wifi:perform scan: ss_state=0x9, chan<3,0>, dur<0,120>
D (45030) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (45040) wifi:perform scan: ss_state=0x9, chan<4,0>, dur<0,120>
D (45160) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (45160) wifi:perform scan: ss_state=0x9, chan<5,0>, dur<0,120>
D (45280) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (45280) wifi:perform scan: ss_state=0x9, chan<6,0>, dur<0,120>
D (45400) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (45400) wifi:perform scan: ss_state=0x9, chan<7,0>, dur<0,120>
D (45520) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (45520) wifi:perform scan: ss_state=0x9, chan<8,0>, dur<0,120>
D (45640) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (45640) wifi:perform scan: ss_state=0x9, chan<9,0>, dur<0,120>
D (45760) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (45760) wifi:perform scan: ss_state=0x9, chan<10,0>, dur<0,120>
D (45880) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (45890) wifi:perform scan: ss_state=0x9, chan<11,0>, dur<0,120>
D (45950) esp_netif_lwip: esp_netif_get_ip_info esp_netif:0x3ffbd81c
I (45950) example: ~~~~~~~~~~~
I (45950) example: IP:0.0.0.0
I (45950) example: MASK:0.0.0.0
I (45950) example: GW:0.0.0.0
I (45960) example: ~~~~~~~~~~~
D (46010) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (46010) wifi:perform scan: ss_state=0x9, chan<12,0>, dur<360,360>
D (46370) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (46370) wifi:perform scan: ss_state=0x9, chan<13,0>, dur<360,360>
D (46730) wifi:scan end: arg=0x0, status=0, ss_state=0x3
D (46730) wifi:perform scan: ss_state=0x9, chan<14,0>, dur<360,360>

