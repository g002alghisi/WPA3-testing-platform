
Starting WICED Wiced_006.006.001.0001
Platform CYW943907AEVAL1F initialised
Started ThreadX v5.9
WICED_core Initialized
Initialising NetX_Duo v5.12
Creating Packet pools
WLAN MAC Address : D4:53:83:BE:23:62
WLAN Firmware    : wl0: Jul 20 2020 00:08:56 version 7.15.168.149 (21d266a) FWID                                                                              01-d4dbc762
WLAN CLM         : API: 12.2 Data: 9.10.74 Compiler: 1.31.3 ClmImport: 1.36.3 Cr                                                                             eation: 2020-07-20 00:01:06
Console app
> scan
Waiting for scan results...
  # Type  BSSID              RSSI Rate Chan Security               SSID                                                                                                         CCode    Flag
--------------------------------------------------------------------------------                                                                             ----------------------------------
  0 Infra B0:45:30:AA:B4:A4 -81 600.0   36   WPA2 AES PSK         SKYA38E4                                                                                                      GB      PROBE
  1 Infra 3C:A0:67:80:99:A3 -33  54.0    1   AES PSK              Hostapd-AP-E                                                                                                          PROBE
  2 Infra B0:EA:BC:3F:32:27 -46 144.4    1   WPA2 AES PSK         Casa-A-gbtyTYg                                                                             nGTBYjf                    PROBE
  3 Infra 62:EA:BC:3F:32:24 -47 144.4    1   WPA2 AES Enterprise  WOW FI - FASTW                                                                             EB                         PROBE
  4 Infra DE:71:44:19:2E:65 OFF 300.0    6   WPA2 AES PSK         DIRECT-Fi[TV]U                                                                             E40ES6800          E      PROBE
  5 Infra F0:B0:14:CF:72:E2 OFF 216.7   11   WPA2 AES PSK         EIR-96252                                                                                                     IT      PROBE
  6 Infra DC:15:C8:03:A4:16 -82 144.4   11   WPA2 AES PSK         INTRED-56875                                                                                                  IT      PROBE
  7 Infra B0:EA:BC:3F:32:26 -55 600.0   52   WPA2 AES PSK         Casa-A-gbtyTYg                                                                             nGTBYjf            IT      BEACON

End of scan results, found 8 APs
> help
Console Commands:
    ?
    help [<command> [<example_num>]]
        - Print help message or command example.
    loop <times> <semicolon_separated_commands_list>
        - Loops the specified commands for specified number of times.
    $?
        - Print return value of last executed command.
    join_ent <ssid> <eap_tls|peap|eap_ttls> [username] [password] [eap] [mschapv                                                                             2] [client-cert] <wpa2|wpa2_tkip|wpa|wpa_tkip|wpa2_fbt>
        - Join an AP using an enterprise EAP method. DHCP assumed.
    leave_ent
        - Leaves an enterprise AP and stops processing enterprise security event                                                                             s.
    antenna <0|1|3>
        - Antenna selection. 3 = Auto
    get_ap_info
        - Get AP information
    get_access_category_parameters_sta
        - Get access category parameters for STA
    get_associated_sta_list
        - Get list of associated clients
    get_btc_params [SSID]
        - Find AP
    get_counters [-t seconds][-n][-v][rx][tx][rate]
        - Get counters. Options:
-t num_secs: duration to collect counters
-n: normalize counters to a per second basis
-v: verbose (only nonzero counters are printed by default)
Category: rx | tx | rate  (default: print all categories)
    get_country
        - Get country.
    set_country <US/0|KR/4>
        - Set country.
    get_rate
        - Get current rate.
    get_data_rate
        - Get data rate.
    get_mac_addr
        - Get the device MAC address.
    get_preferred_association_band
        - Get the preferred radio band for association.
    get_pmk <key>
        - Get PMK
    get_random
        - Get a random number.
    get_rssi
        - Get the received signal strength of the AP (client mode only).
    get_soft_ap_credentials
        - Get SoftAP credentials
    get_tx_power
        - Gets the tx power in dBm.
    join <ssid> <open|wpa_aes|wpa_tkip|wpa2|wpa2_aes|wpa2_tkip|wpa2_fbt|wpa3|wpa                                                                             3_wpa2> [key] [psk(for wpa3_wpa2 amode only)] [channel] [ip netmask gateway]
        -->When any parameter has spaces, use quotes. E.g. "my ssid" "my wpa2 ke                                                                             y"
        - Join an AP. DHCP assumed if no IP address provided
    leave
        - Leave an AP.
    scan [scan_type] [0 = Infra | 1 = Adhoc | 2 = Any] [optional_ssid] [optional                                                                             _mac] [(optional_channel_list)] [(optional_extended_params)]
        scan_type flag: 0 = active, 1 = passive, 2 = pno, 4 = prohibit, 8 = no b                                                                             ssid filter
        Ex: scan 0 - - - (1,2,3,4) "-" denotes default
        - Scan all enabled channels and print a list of APs found.
    set_preferred_association_band <0 = Auto | 1 = 5GHz | 2 = 2.4GHz>
        - Set the preferred radio band for association
    set_tx_power <0-31>
        - Set the tx power in dBm.
    status
        - Print status of the Wi-Fi and network interfaces.
    wifi_powersave <mode> [delay]
        - Enable/disable Wi-Fi powersave mode. 0 = disable. 1 = PS Poll. 2 = Wai                                                                             t [delay] ms before entering powersave
    wifi_resume [<ip> <netmask> <gateway>]
        - Resume networking after deep-sleep
    wlan_chip_log
        - Dump WLAN chip console log
    wlog
        - Dump WLAN chip console log
    wwd_stats [clear]
        - Dump WWD stats. clear=1, will reset stats after printing
    find_ap [SSID]
        - Find AP
    country [US|KR|JP]
        - Get/Set ccode.
    reset_wifi_counters <set> [value]
        - Reset persistent WiFi statistics counters
    wlver
        - Get WLAN Firmware Version
    clmver
        - Get WLAN CLM Version
    memuse
        - Get WLAN memory uage
    wlog_stream [start | stop]
        - Start & Stop continuous wlan logging
    dump <ampdu>|<amsdu>|<all>
        - Get dump from the FW.Ex:- dump ampdu, FW binary should have the ampdu                                                                              dump feature enabled.
    ampdu_clear_dump
        - Clear ampdu dump.
    get_txrx_frag
        - Get tx/rx frag counter data.
    get_curr_band
        - Get the current radio band.
    get_bw
        - Get the bandwidth.
    channel
        - Set/Get the channel number.
    get_pm_mode
        - Get the WLAN PM mode.
    wlf <command> [value]
        - Run a wl command; Must specify formatting. E.g. wlf -i <command> <int>
wlf -ui <command> <uint>
wlf -s <command> <string>
Force a set: wlf -set <command>
Specify len of get: wlf -length=200 <command>

    wilog
        - prints wlan ioctls, iovars & events
    set_cur_interface set_cur_interface sta/ap/p2p
        - set current interface for apps like iperf
    get_cur_interface get_cur_interface
        - get current interface in use apps like iperf
    disable_11n
        - Disable 11n mode operation
    ds1_config <ulp_wait> [type [value1] [value2] [value3]]
        - Configure deep sleep (ds1).
Examples: ds1_config <ulp wait: ex. 5000> gtk
ds1_config <ulp wait: ex. 5000> magic keep_alive <period msecs: ex. 20> <packet                                                                              data: ex. 0x3243567abcdef> pattern <offset in packet: ex. 2> <mask: ex. ff> <pat                                                                             tern: ex. ff> arp_hostip <v4 address: ex. 192.168.1.115>
ds1_config 5000 all
ds1_config 5000 deauth
    ds1_enable
        - Enable Wi-Fi Deep Sleep; enter sleep when able

    ds1_enter <magic|keep_alive|pattern|arp_hostip> <ulp_wait> [value1] [value2]                                                                              [value3] [-wowl=1] [-wowl_os=3] [-read_back]
        - Enter deep sleep (ds1) with given offload.
Examples: ds1_enter keep_alive <ulp wait: ex. 5500> <period msecs: ex. 20> <pack                                                                             et data: ex. 0x3243567abcdef>
ds1_enter pattern <ulp wait: ex. 8> <offset in packet: ex. 20> <mask: ex. 0xffe0                                                                             08> <pattern: ex. 0x34567890>
ds1_enter arp_hostip <ulp wait: ex. 8>  <v4 address: ex. 192.168.1.115>

Debug options:
-read_back: read back and print firmware values after set.
-wowl=0x2 or -wowl_os=0x2: force wowl or wowl_os value in firmware to be 2 in pr                                                                             ocess of going to DS.

    ds1_wake
        - Wake from DS1 and go to Powersave mode
    ds1_disable
        - Disable DS1
    ds1_status
        - Current DS1 status
    enable_11n
        - Enable 11n mode operation
    fbtoverds [value]
        - Use of FBT(Fast BSS Transition) Over-the-DS(Distribution System) is al                                                                             lowed
    fbt_cap
        - Driver 4-way handshake & reassoc (WLFBT)
    get_noise
        - Get PHY noise after successful TX
    join_adhoc <ssid> <open|wpa_aes|wpa_tkip|wpa2|wpa2_tkip> [key] [ip netmask g                                                                             ateway]
        -->When any parameter has spaces, use quotes. E.g. "my ssid" "my wpa2 ke                                                                             y"
        - Join specified IBSS, no DHCP assumed.
    join_specific <ssid> <bssid> <channel> <open|wpa_aes|wpa_tkip|wpa2|wpa2_tkip                                                                             > [key] [ip netmask gateway]
        -->When any parameter has spaces, use quotes. E.g. "my ssid" "my wpa2 ke                                                                             y"
        - Join specified AP. DHCP assumed if no IP address provided
    phyrate_dump <bin size>
        - Dump the phyrate log and bin averages to the console.
    scan_disable <1 = disable scan|0 = enable scan>
        - Disable scanning in FW; abort any active scan.
    roam_delta <2g|5g|all> [value]
        - Set or get roam delta value. roam_delta 2g 5
    roam_trigger <2g|5g|all> [value]
        - Set or get roam trigger value. roam_trigger all -27
    set_data_rate <1|2|5.5|6|9|11|12|18|24|36|48|54>
        - Set data rate.
    set_legacy_rate <1|2|5.5|6|9|11|12|18|24|36|48|54>
        - Set legacy (CCK/OFDM) rate on PHY
    set_mcs_rate <MCS Index> <Override MCS only>
        - Set MCS rate on PHY
    set_listen_interval <listen interval> <time unit>
        - Set listen interval in time unit 0 = Beacon Intervals. 1 = DTIM Interv                                                                             als
    start_ap <ssid> <open|wpa2|wpa2_aes|wep|wep_shared> <key> <channel> <bandwid                                                                             th> <wps> [ip] [netmask]
-->When any parameter has spaces, use quotes.
        E.g. start_ap "my ssid" wpa2 "my wpa2 key " 11 20 no_wps 192.168.2.1 255                                                                             .255.255.0.  Default settings for ip and subnet mask are 192.168.0.1 and 255.255                                                                             .255.0, or the last ip and subnet specified through this command if applicable.
        - Start AP mode.
    stop_ap
        - Stop AP mode.
    test_ap <ssid> <open|wpa2|wpa2_aes> <key> <channel> <wps> <iterations>
        -->When any parameter has spaces, use quotes.
        E.g. test_ap "my ssid" wpa2 "my wpa2 key " 11
        - Test AP mode.
    test_join <ssid> <open|wep|wpa_aes|wpa_tkip|wpa2|wpa2_tkip> [key] [ip netmas                                                                             k gateway] <iterations>
        -->When any parameter has spaces, use quotes. E.g. "my ssid" "my wpa2 ke                                                                             y"
        - Test joining an AP. DHCP assumed if no IP address provided
    test_join_specific <ssid> <bssid> <channel> <open|wep|wpa_aes|wpa_tkip|wpa2|                                                                             wpa2_tkip> [key] [ip netmask gateway] <iterations>
        -->When any parameter has spaces, use quotes. E.g. "my ssid" "my wpa2 ke                                                                             y"
        - Test joining an AP. DHCP assumed if no IP address provided
    test_cred <ssid> <bssid> <channel> <open|wep|wpa_aes|wpa_tkip|wpa2|wpa2_tkip                                                                             > [key]
        -->When any parameter has spaces, use quotes. E.g. "my ssid" "my wpa2 ke                                                                             y"
        - Test joining an AP
    peek  [address]
        - Dump memory
    poke  [address] [value]
        - Write memory
    peek_wifi  [address] <# repeat>
        - Dump wifi memory for 1 or given # of contiguous memory locations
    poke_wifi  [address] [value]
        - Write wifi memory
    rrm <set|get> [value]
        - enable or disable an RRM report
         rrm set [value]: [value] is the bit mask to set the corresponding repor                                                                             t
         rrm get : shows the currently set RRM reports
        E.g. rrm set +Channel_load_Measurement
             rrm set 0x100
             rrm get

    rrm_nbr_req [SSID]
        - send 11k neighbor report measurement request (works only when associat                                                                             ed)
    rrm_lm_req [da]
        - send 11k link measurement request
    rrm_bcn_req [bcn mode] [da] [duration] [random int] [channel] [ssid] [repeti                                                                             tions]
        - send 11k beacon measurement request
    rrm_chload_req [regulatory] [da] [duration] [random int] [channel] [repetiti                                                                             ons]
        - send 11k channel load measurement request
    rrm_noise_req [regulatory] [da] [duration] [random int] [channel] [repetitio                                                                             ns]
        - send 11k noise measurement request
    rrm_frame_req [regulatory] [da] [duration] [random int] [channel] [ta] [repe                                                                             titions]
        - send 11k frame measurement request
    rrm_stat_req [da] [random int] [duration] [peer] [group id] [repetitions]
        - send 11k stat measurement request
    rrm_nbr_list
        - get 11k neighbor report list
    rrm_nbr_del_nbr [bssid]
        - delete node from 11k neighbor report list
    rrm_nbr_add_nbr [bssid] [bssid info] [regulatory] [channel] [phytype]
        - add node to 11k neighbor report list
    rrm_bcn_req_thrtl_win <set|get> [value]
        - set or get beacon throttle window (milli-seconds) in which off-channel                                                                              time is computed
    rrm_bcn_req_max_off_chan_time <set|get> [value]
        - set or get maximum scan time allowed in beacon throttle window (milli-                                                                             seconds)
    rrm_bcn_req_traff_meas_per <set|get> [value]
        - set or get milli-second period to check traffic
    wnm <set|get> [value] Example : [value] can be bitwise OR of below values
WL_WNM_BSSTRANS         0x00000001
WL_WNM_PROXYARP         0x00000002
WL_WNM_MAXIDLE          0x00000004
WL_WNM_TIMBC            0x00000008
WL_WNM_TFS              0x00000010
WL_WNM_SLEEP            0x00000020
WL_WNM_DMS              0x00000040
WL_WNM_FMS              0x00000080
WL_WNM_NOTIF            0x00000100
WL_WNM_WBTEXT           0x00000200

        - set or get WNM capabilities
    wnm_bsstrans_query optional [SSID]
        - send BSS transition query with SSID or NULL (works only when associate                                                                             d)
    wnm_bsstrans_resp <set|get> [value] Example: [value] can be one of the follo                                                                             wing
WL_BSSTRANS_POLICY_ROAM_ALWAYS = 0
WL_BSSTRANS_POLICY_ROAM_IF_MODE = 1
WL_BSSTRANS_POLICY_ROAM_IF_PREF = 2
WL_BSSTRANS_POLICY_WAIT         = 3
WL_BSSTRANS_POLICY_PRODUCT      = 4

        - send BSS transition response policy
    mfp_cap <set|get> [value]
        - Set or Get PMF (Protected Management Frame)
    nan <command> [value]
        - Run nan command followed by attribute name and followed by set E.g. na                                                                             n <nan_cluster_id> <set> if get then nan <nan_cluster_id>

    wlver
        - Get WLAN Firmware Version
    clmver
        - Get WLAN CLM Version
    mesh_set_channel [channel]
        - Set channel
    mesh_auto_peer [1=enable, 0=disable]
        - Enable/Disable mesh auto peer channel
    mesh_filter [mesh peer mac address]
        - Filter MAC address of mesh peer
    join_mesh [ssid]
        - Join mesh network by SSID
    mesh_mcast_rebroadcast [1=enable, 0=disable]
        - Enable/Disable mesh mcast rebroadcast
    dltro <connect|param|max_dltro> [value-1] .. [value-n]
        - DHCP lease renewal offload
    iperf
        - Run iperf --help for usage.
    malloc_info
        - Print memory allocation information
    heap_info
        - Print heap allocation information
    ping <destination> [-i <interval in ms>] [-n <number>] [-l <length>]
        - Pings the specified IP or Host.
    reboot
        - Reboot the device
    get_time
        - Print current time
    sleep
        - Sleep number of milliseconds
    prng_bit_dump <num>
        - Number bytes to print using 1s and 0s
    prng <num>
        - Bytes number
    prng_set_algorithm <string>
        - Name of algorithm from prng_get_algorithms
    prng_get_algorithms
        -
    mcu_powersave <0|1>
        - Enable/disable MCU powersave
    wiced_init <0|1>
        - Call wiced_deinit/wiced_init
    loglevel_set [facility] <loglevel>
        - set new wiced logging level
    loglevel_get
        - get current wiced logging levels for all facilities
    mcu_powersave_mode <0|1>
        - <MCU powersave mode: 0 - deep-sleep, 1 - normal sleep>
    hibernation <sleep_ms>
        - Force chip to hibernate for specified amount of milliseconds
    mcu_powersave_clock <0|1> <0|1|2|3|4>
        - <Clock request or release: 0 - release, 1 - request> <Which clock: 0 -                                                                              ALP available, 1 - HT available, 2 - have at least ILP on backplane, 3 - at lea                                                                             st ALP, 4 - at least HT>
    mcu_powersave_tick <0|1|2>
        - <RTOS tick mode: 0 - always tickless, 1 - never tickless, 2 - tickless                                                                              if MCU power-save enabled>
    mcu_powersave_freq <freq_mode>
        - <CPU/backplane frequency mode>
    mcu_powersave_sleep <0|1> <sleep_ms>
        - 0 - RTOS sleeping with CPU can wake-up earlier if requested by other t                                                                             hreads though current one remain in sleep state, 1 - forced sleeping where platf                                                                             orm forced to ignore all interrupts except timer and sleep specified amount of t                                                                             ime
    mcu_powersave_info
        - Print powersave information
    mcu_wlan_powersave_stats
        - Print WLAN powersave statistics
    mcu_powersave_gpio_wakeup_enable <input_pin_pull_mode> <trigger>
        - Enable wakening up from deep-sleep via GPIO
    mcu_powersave_gpio_wakeup_disable
        - Disable wakening up from deep-sleep via GPIO
    mcu_powersave_gpio_wakeup_ack
        - If GPIO generated wake up event it remain triggered till acked
    mcu_powersave_gci_gpio_wakeup_enable <pin> <input_pin_pull_mode> <trigger>
        - Enable wakening up from deep-sleep via GPIO
    mcu_powersave_gci_gpio_wakeup_disable <pin>
        - Disable wakening up from deep-sleep via GPIO
    mcu_powersave_gci_gpio_wakeup_ack <pin>
        - If GPIO generated wake up event it remain triggered till acked
    thread_list
        - [ThreadX only] Lists the current running threads
    thread_kill <thread id>
        - [ThreadX only] Kills the specified running thread
    thread_spawn [--priority <priority>] [--interval <interval_in_ms>] <cmds>
        - [ThreadX only] Spawns a new thread to execute specified console comman                                                                             d. Optional parameter --priority <priority> & --interval <interval_in_ms>
    force_alignment
        - Force aligned memory accesses
    join_wps <pbc|pin> [pin] [<ip> <netmask> <gateway>]
        - Join an AP using WPS
    join_wps_specific [pin] [<ip> <netmask> <gateway>]
        - Join a specific WLAN using WPS PIN mode
    scan_wps
        - Scan for APs supporting WPS
    start_registrar <pbc|pin> [pin]
        - Start the WPS Registrar
    stop_registrar
        - Stop the WPS Registrar
    p2p_connect <pin|pbc> [8 digit PIN]
        - Connect to an existing Group Owner or negotiate to form a group
    p2p_client_test <SSID> <8 digit PIN> [Iterations]
        - Test P2P client connection to existing group owner
    p2p_discovery_disable
        - Disable P2P discovery mode
    p2p_discovery_enable [listen]
        - Enable P2P discovery mode
    p2p_discovery_test [iterations]
        - Test enable/disable of P2P discovery mode
    p2p_go_start <p|n> [<ssid_suffix> <key> <operating channel>]
        - Start P2P (p)ersistent or (n)on-persistent group
    p2p_go_stop
        - Stop P2P group owner
    p2p_go_test <p|n> [iterations]
        - Test start/stop of (p)ersistent or (n)on-persistent group
    p2p_go_client_test_mode <enable=1|disable=0> <pin value>
        - Allow test client to join using PIN value
    p2p_leave
        - Disassociate from P2P group owner
    p2p_negotiation_test <8 digit PIN> [Iterations]
        - Test P2P negotiation handshake
    p2p_peer_list
        - Print P2P peer list
    p2p_registrar_start <pin|pbc> [8 digit PIN]
        - Start P2P group owner's WPS registrar
    p2p_registrar_stop
        - Stop P2P group owner's WPS registrar
    p2p_set_go_intent <intent value>
        - Set P2P group owner intent (0..15 where 15 = must be GO)
    p2p_set_go_pbc_mode_support <0|1>
        - Set P2P group owner support for PBC mode (1 = allow, 0 = disallow)
    p2p_set_listen_channel <channel>
        - Set listen channel (1, 6 or 11)
    p2p_set_operating_channel <channel>
        - Set operating channel (1..11)
    p2p_enable_ops <ctwindow [10 - 99]>
        - Enable P2P OPS and set ctwindow
        - This command sets default CTWindow if executed without any argument
    p2p_disable_ops
        - Disable P2P Opportunistic Powersave
    p2p_enable_noa <interval [length of NoA interval in micro second]> <duration                                                                              [max duration of absence in micro second]> <count [number of absence intervals]                                                                             >
        - Enable P2P NoA. Currently it only supports NoA type: NORMAL
        - The command sets default NoA values if no parameters given
    p2p_disable_noa
        - Disable P2P noa
    ethernet_up [ip netmask gateway]
        - Brings up the Ethernet. DHCP assumed if no IP address provided
    ethernet_down
        - Brings down the ethernet
    ethernet_ping <destination> [-i <interval in ms>] [-n <number>] [-l <length>                                                                             ]
        - Pings the specified IP or Host via Ethernet.
    network_suspend
        - Will suspend network
    network_resume
        - Will resume network
    mount <device name>
    unmount <device id, 0:Ramdisk, 1:Usbdisk>
    pwd
    mkdir <directory name>
    rmdir <directory name>
    cd <directory name>
    cat <file name>
    cp <source file name> <target file name>
    rm <file name>
    ls
    mkfile <file name> <file size>
    aes_xts_init
    aes_xts_deinit
    aes_xts_encrypt <source file name> <target file name>
    aes_xts_decrypt <source file name> <target file name>
    join_ent <ssid> <eap_tls|peap|eap_ttls> [username] [password] [eap] [mschapv                                                                             2] [client-cert] <wpa2|wpa2_tkip|wpa|wpa_tkip|wpa2_fbt>
        - Join an AP using an enterprise EAP method. DHCP assumed.
    leave_ent
        - Leaves an enterprise AP and stops processing enterprise security event                                                                             s.
> join_ent
ERROR: Insufficient Arguments
Usage: join_ent <ssid> <eap_tls|peap|eap_ttls> [username] [password] [eap] [mschapv2] [client-cert] <wpa2|wpa2_tkip|wpa|wpa_tkip|wpa2_fbt>
> join_ent peap bob@example.org
ERROR: Insufficient Arguments
Usage: join_ent <ssid> <eap_tls|peap|eap_ttls> [username] [password] [eap] [mschapv2] [client-cert] <wpa2|wpa2_tkip|wpa|wpa_tkip|wpa2_fbt>
> join_ent peap bob@example.org argoargoargo wpa2
Bad EAP type: 'bob@example.org'
Unknown security type
> join_ent Hostapd-AP-E peap bob@example.org argoargoargo wpa2
Joining : Hostapd-AP-E
Successfully joined : Hostapd-AP-E
Obtaining IPv4 address via DHCP
 L1434 : dhcp_client_init() : DHCP CLIENT hostname = [WICED IP]
IPv4 network ready IP: 192.168.104.237
Setting IPv6 link-local address
IPv6 network ready IP: FE80:0000:0000:0000:D653:83FF:FEBE:2362
 Successfully retrieved the session information 0
> leave_ent
leave test: ok
> join_ent Hostapd-AP-E peap bob@example.org argoargoargo wpa2
Joining : Hostapd-AP-E
Failed to join : Hostapd-AP-E
Joining : Hostapd-AP-E
Failed to join : Hostapd-AP-E
Joining : Hostapd-AP-E
Failed to join : Hostapd-AP-E
Join result 1006: Failed to authenticate
>

