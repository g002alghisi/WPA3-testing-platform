[20:03:38.960] Beginning saving session of stdout and stderr Test/Tmp/Log/ESP32/e_rogue_wpa3...
[0;32mSuccess.[0m

[20:03:38.962] Fetching configuration directory associated to e_wpa3...
[0;32mSuccess.[0m

[20:03:38.979] Looking for Freeradius/Conf/E_wpa3/...
[0;32mSuccess.[0m

[0;36mRunning FreeRADIUS. Press Ctrl-C to stop.[0m

FreeRADIUS Version 3.0.26
Copyright (C) 1999-2021 The FreeRADIUS server project and contributors
There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE
You may redistribute copies of FreeRADIUS under the terms of the
GNU General Public License
For more information about these matters, see the file named COPYRIGHT
Starting - reading configuration files ...
including dictionary file /usr/share/freeradius/dictionary
including dictionary file /usr/share/freeradius/dictionary.dhcp
including dictionary file /usr/share/freeradius/dictionary.vqp
including dictionary file Freeradius/Conf/E_wpa3//dictionary
including configuration file Freeradius/Conf/E_wpa3//radiusd.conf
including configuration file Freeradius/Conf/E_wpa3//proxy.conf
including configuration file Freeradius/Conf/E_wpa3//clients.conf
including files in directory Freeradius/Conf/E_wpa3//mods-enabled/
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/files
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/passwd
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/expr
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/soh
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/digest
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/dynamic_clients
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/unix
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/echo
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/preprocess
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/replicate
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/pap
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/always
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/detail
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/cache_eap
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/mschap
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/eap
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/logintime
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/utf8
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/unpack
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/radutmp
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/expiration
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/chap
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/realm
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/sradutmp
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/attr_filter
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/ntlm_auth
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/detail.log
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/exec
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/linelog
including files in directory Freeradius/Conf/E_wpa3//policy.d/
including configuration file Freeradius/Conf/E_wpa3//policy.d/operator-name
including configuration file Freeradius/Conf/E_wpa3//policy.d/dhcp
including configuration file Freeradius/Conf/E_wpa3//policy.d/rfc7542
including configuration file Freeradius/Conf/E_wpa3//policy.d/accounting
including configuration file Freeradius/Conf/E_wpa3//policy.d/filter
including configuration file Freeradius/Conf/E_wpa3//policy.d/cui
including configuration file Freeradius/Conf/E_wpa3//policy.d/moonshot-targeted-ids
including configuration file Freeradius/Conf/E_wpa3//policy.d/canonicalization
including configuration file Freeradius/Conf/E_wpa3//policy.d/eap
including configuration file Freeradius/Conf/E_wpa3//policy.d/control
including configuration file Freeradius/Conf/E_wpa3//policy.d/abfab-tr
including configuration file Freeradius/Conf/E_wpa3//policy.d/debug
including files in directory Freeradius/Conf/E_wpa3//sites-enabled/
including configuration file Freeradius/Conf/E_wpa3//sites-enabled/inner-tunnel
including configuration file Freeradius/Conf/E_wpa3//sites-enabled/default
main {
 security {
 	user = "freerad"
 	group = "freerad"
 	allow_core_dumps = no
 }
	name = "freeradius"
	prefix = "/usr"
	localstatedir = "/var"
	logdir = "/var/log/freeradius"
	run_dir = "/var/run/freeradius"
}
main {
	name = "freeradius"
	prefix = "/usr"
	localstatedir = "/var"
	sbindir = "/usr/sbin"
	logdir = "/var/log/freeradius"
	run_dir = "/var/run/freeradius"
	libdir = "/usr/lib/freeradius"
	radacctdir = "/var/log/freeradius/radacct"
	hostname_lookups = no
	max_request_time = 30
	cleanup_delay = 5
	max_requests = 16384
	postauth_client_lost = no
	pidfile = "/var/run/freeradius/freeradius.pid"
	checkrad = "/usr/sbin/checkrad"
	debug_level = 0
	proxy_requests = yes
 log {
 	stripped_names = no
 	auth = no
 	auth_badpass = no
 	auth_goodpass = no
 	colourise = yes
 	msg_denied = "You are already logged in - access denied"
 }
 resources {
 }
 security {
 	max_attributes = 200
 	reject_delay = 1.000000
 	status_server = yes
 }
}
radiusd: #### Loading Realms and Home Servers ####
 proxy server {
 	retry_delay = 5
 	retry_count = 3
 	default_fallback = no
 	dead_time = 120
 	wake_all_if_all_dead = no
 }
 home_server localhost {
 	ipaddr = 127.0.0.1
 	port = 1812
 	type = "auth"
 	secret = <<< secret >>>
 	response_window = 20.000000
 	response_timeouts = 1
 	max_outstanding = 65536
 	zombie_period = 40
 	status_check = "status-server"
 	ping_interval = 30
 	check_interval = 30
 	check_timeout = 4
 	num_answers_to_alive = 3
 	revive_interval = 120
  limit {
  	max_connections = 16
  	max_requests = 0
  	lifetime = 0
  	idle_timeout = 0
  }
  coa {
  	irt = 2
  	mrt = 16
  	mrc = 5
  	mrd = 30
  }
 }
 home_server_pool my_auth_failover {
	type = fail-over
	home_server = localhost
 }
 realm example.com {
	auth_pool = my_auth_failover
 }
 realm LOCAL {
 }
radiusd: #### Loading Clients ####
 client localhost {
 	ipaddr = 127.0.0.1
 	require_message_authenticator = no
 	secret = <<< secret >>>
 	nas_type = "other"
 	proto = "*"
  limit {
  	max_connections = 16
  	lifetime = 0
  	idle_timeout = 30
  }
 }
 client localhost_ipv6 {
 	ipv6addr = ::1
 	require_message_authenticator = no
 	secret = <<< secret >>>
  limit {
  	max_connections = 16
  	lifetime = 0
  	idle_timeout = 30
  }
 }
Debugger not attached
systemd watchdog is disabled
 # Creating Auth-Type = mschap
 # Creating Auth-Type = eap
 # Creating Auth-Type = PAP
 # Creating Auth-Type = CHAP
 # Creating Auth-Type = MS-CHAP
 # Creating Auth-Type = digest
 # Creating Autz-Type = New-TLS-Connection
radiusd: #### Instantiating modules ####
 modules {
  # Loaded module rlm_files
  # Loading module "files" from file Freeradius/Conf/E_wpa3//mods-enabled/files
  files {
  	filename = "Freeradius/Conf/E_wpa3//mods-config/files/authorize"
  	acctusersfile = "Freeradius/Conf/E_wpa3//mods-config/files/accounting"
  	preproxy_usersfile = "Freeradius/Conf/E_wpa3//mods-config/files/pre-proxy"
  }
  # Loaded module rlm_passwd
  # Loading module "etc_passwd" from file Freeradius/Conf/E_wpa3//mods-enabled/passwd
  passwd etc_passwd {
  	filename = "/etc/passwd"
  	format = "*User-Name:Crypt-Password:"
  	delimiter = ":"
  	ignore_nislike = no
  	ignore_empty = yes
  	allow_multiple_keys = no
  	hash_size = 100
  }
  # Loaded module rlm_expr
  # Loading module "expr" from file Freeradius/Conf/E_wpa3//mods-enabled/expr
  expr {
  	safe_characters = "@abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789.-_: /√§√©√∂√º√†√¢√¶√ß√®√©√™√´√Æ√Ø√¥≈ì√π√ª√ºa√ø√Ñ√â√ñ√ú√ü√Ä√Ç√Ü√á√à√â√ä√ã√é√è√î≈í√ô√õ√ú≈∏"
  }
  # Loaded module rlm_soh
  # Loading module "soh" from file Freeradius/Conf/E_wpa3//mods-enabled/soh
  soh {
  	dhcp = yes
  }
  # Loaded module rlm_digest
  # Loading module "digest" from file Freeradius/Conf/E_wpa3//mods-enabled/digest
  # Loaded module rlm_dynamic_clients
  # Loading module "dynamic_clients" from file Freeradius/Conf/E_wpa3//mods-enabled/dynamic_clients
  # Loaded module rlm_unix
  # Loading module "unix" from file Freeradius/Conf/E_wpa3//mods-enabled/unix
  unix {
  	radwtmp = "/var/log/freeradius/radwtmp"
  }
Creating attribute Unix-Group
  # Loaded module rlm_exec
  # Loading module "echo" from file Freeradius/Conf/E_wpa3//mods-enabled/echo
  exec echo {
  	wait = yes
  	program = "/bin/echo %{User-Name}"
  	input_pairs = "request"
  	output_pairs = "reply"
  	shell_escape = yes
  }
  # Loaded module rlm_preprocess
  # Loading module "preprocess" from file Freeradius/Conf/E_wpa3//mods-enabled/preprocess
  preprocess {
  	huntgroups = "Freeradius/Conf/E_wpa3//mods-config/preprocess/huntgroups"
  	hints = "Freeradius/Conf/E_wpa3//mods-config/preprocess/hints"
  	with_ascend_hack = no
  	ascend_channels_per_line = 23
  	with_ntdomain_hack = no
  	with_specialix_jetstream_hack = no
  	with_cisco_vsa_hack = no
  	with_alvarion_vsa_hack = no
  }
  # Loaded module rlm_replicate
  # Loading module "replicate" from file Freeradius/Conf/E_wpa3//mods-enabled/replicate
  # Loaded module rlm_pap
  # Loading module "pap" from file Freeradius/Conf/E_wpa3//mods-enabled/pap
  pap {
  	normalise = yes
  }
  # Loaded module rlm_always
  # Loading module "reject" from file Freeradius/Conf/E_wpa3//mods-enabled/always
  always reject {
  	rcode = "reject"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "fail" from file Freeradius/Conf/E_wpa3//mods-enabled/always
  always fail {
  	rcode = "fail"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "ok" from file Freeradius/Conf/E_wpa3//mods-enabled/always
  always ok {
  	rcode = "ok"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "handled" from file Freeradius/Conf/E_wpa3//mods-enabled/always
  always handled {
  	rcode = "handled"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "invalid" from file Freeradius/Conf/E_wpa3//mods-enabled/always
  always invalid {
  	rcode = "invalid"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "userlock" from file Freeradius/Conf/E_wpa3//mods-enabled/always
  always userlock {
  	rcode = "userlock"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "notfound" from file Freeradius/Conf/E_wpa3//mods-enabled/always
  always notfound {
  	rcode = "notfound"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "noop" from file Freeradius/Conf/E_wpa3//mods-enabled/always
  always noop {
  	rcode = "noop"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "updated" from file Freeradius/Conf/E_wpa3//mods-enabled/always
  always updated {
  	rcode = "updated"
  	simulcount = 0
  	mpp = no
  }
  # Loaded module rlm_detail
  # Loading module "detail" from file Freeradius/Conf/E_wpa3//mods-enabled/detail
  detail {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loaded module rlm_cache
  # Loading module "cache_eap" from file Freeradius/Conf/E_wpa3//mods-enabled/cache_eap
  cache cache_eap {
  	driver = "rlm_cache_rbtree"
  	key = "%{%{control:State}:-%{%{reply:State}:-%{State}}}"
  	ttl = 15
  	max_entries = 0
  	epoch = 0
  	add_stats = no
  }
  # Loaded module rlm_mschap
  # Loading module "mschap" from file Freeradius/Conf/E_wpa3//mods-enabled/mschap
  mschap {
  	use_mppe = yes
  	require_encryption = no
  	require_strong = no
  	with_ntdomain_hack = yes
   passchange {
   }
  	allow_retry = yes
  	winbind_retry_with_normalised_username = no
  }
  # Loaded module rlm_eap
  # Loading module "eap" from file Freeradius/Conf/E_wpa3//mods-enabled/eap
  eap {
  	default_eap_type = "md5"
  	timer_expire = 60
  	ignore_unknown_eap_types = no
  	cisco_accounting_username_bug = no
  	max_sessions = 16384
  }
  # Loaded module rlm_logintime
  # Loading module "logintime" from file Freeradius/Conf/E_wpa3//mods-enabled/logintime
  logintime {
  	minimum_timeout = 60
  }
  # Loaded module rlm_utf8
  # Loading module "utf8" from file Freeradius/Conf/E_wpa3//mods-enabled/utf8
  # Loaded module rlm_unpack
  # Loading module "unpack" from file Freeradius/Conf/E_wpa3//mods-enabled/unpack
  # Loaded module rlm_radutmp
  # Loading module "radutmp" from file Freeradius/Conf/E_wpa3//mods-enabled/radutmp
  radutmp {
  	filename = "/var/log/freeradius/radutmp"
  	username = "%{User-Name}"
  	case_sensitive = yes
  	check_with_nas = yes
  	permissions = 384
  	caller_id = yes
  }
  # Loaded module rlm_expiration
  # Loading module "expiration" from file Freeradius/Conf/E_wpa3//mods-enabled/expiration
  # Loaded module rlm_chap
  # Loading module "chap" from file Freeradius/Conf/E_wpa3//mods-enabled/chap
  # Loaded module rlm_realm
  # Loading module "IPASS" from file Freeradius/Conf/E_wpa3//mods-enabled/realm
  realm IPASS {
  	format = "prefix"
  	delimiter = "/"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "suffix" from file Freeradius/Conf/E_wpa3//mods-enabled/realm
  realm suffix {
  	format = "suffix"
  	delimiter = "@"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "bangpath" from file Freeradius/Conf/E_wpa3//mods-enabled/realm
  realm bangpath {
  	format = "prefix"
  	delimiter = "!"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "realmpercent" from file Freeradius/Conf/E_wpa3//mods-enabled/realm
  realm realmpercent {
  	format = "suffix"
  	delimiter = "%"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "ntdomain" from file Freeradius/Conf/E_wpa3//mods-enabled/realm
  realm ntdomain {
  	format = "prefix"
  	delimiter = "\\"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "sradutmp" from file Freeradius/Conf/E_wpa3//mods-enabled/sradutmp
  radutmp sradutmp {
  	filename = "/var/log/freeradius/sradutmp"
  	username = "%{User-Name}"
  	case_sensitive = yes
  	check_with_nas = yes
  	permissions = 420
  	caller_id = no
  }
  # Loaded module rlm_attr_filter
  # Loading module "attr_filter.post-proxy" from file Freeradius/Conf/E_wpa3//mods-enabled/attr_filter
  attr_filter attr_filter.post-proxy {
  	filename = "Freeradius/Conf/E_wpa3//mods-config/attr_filter/post-proxy"
  	key = "%{Realm}"
  	relaxed = no
  }
  # Loading module "attr_filter.pre-proxy" from file Freeradius/Conf/E_wpa3//mods-enabled/attr_filter
  attr_filter attr_filter.pre-proxy {
  	filename = "Freeradius/Conf/E_wpa3//mods-config/attr_filter/pre-proxy"
  	key = "%{Realm}"
  	relaxed = no
  }
  # Loading module "attr_filter.access_reject" from file Freeradius/Conf/E_wpa3//mods-enabled/attr_filter
  attr_filter attr_filter.access_reject {
  	filename = "Freeradius/Conf/E_wpa3//mods-config/attr_filter/access_reject"
  	key = "%{User-Name}"
  	relaxed = no
  }
  # Loading module "attr_filter.access_challenge" from file Freeradius/Conf/E_wpa3//mods-enabled/attr_filter
  attr_filter attr_filter.access_challenge {
  	filename = "Freeradius/Conf/E_wpa3//mods-config/attr_filter/access_challenge"
  	key = "%{User-Name}"
  	relaxed = no
  }
  # Loading module "attr_filter.accounting_response" from file Freeradius/Conf/E_wpa3//mods-enabled/attr_filter
  attr_filter attr_filter.accounting_response {
  	filename = "Freeradius/Conf/E_wpa3//mods-config/attr_filter/accounting_response"
  	key = "%{User-Name}"
  	relaxed = no
  }
  # Loading module "attr_filter.coa" from file Freeradius/Conf/E_wpa3//mods-enabled/attr_filter
  attr_filter attr_filter.coa {
  	filename = "Freeradius/Conf/E_wpa3//mods-config/attr_filter/coa"
  	key = "%{User-Name}"
  	relaxed = no
  }
  # Loading module "ntlm_auth" from file Freeradius/Conf/E_wpa3//mods-enabled/ntlm_auth
  exec ntlm_auth {
  	wait = yes
  	program = "/path/to/ntlm_auth --request-nt-key --domain=MYDOMAIN --username=%{mschap:User-Name} --password=%{User-Password}"
  	shell_escape = yes
  }
  # Loading module "auth_log" from file Freeradius/Conf/E_wpa3//mods-enabled/detail.log
  detail auth_log {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/auth-detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loading module "reply_log" from file Freeradius/Conf/E_wpa3//mods-enabled/detail.log
  detail reply_log {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/reply-detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loading module "pre_proxy_log" from file Freeradius/Conf/E_wpa3//mods-enabled/detail.log
  detail pre_proxy_log {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/pre-proxy-detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loading module "post_proxy_log" from file Freeradius/Conf/E_wpa3//mods-enabled/detail.log
  detail post_proxy_log {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/post-proxy-detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loading module "exec" from file Freeradius/Conf/E_wpa3//mods-enabled/exec
  exec {
  	wait = no
  	input_pairs = "request"
  	shell_escape = yes
  	timeout = 10
  }
  # Loaded module rlm_linelog
  # Loading module "linelog" from file Freeradius/Conf/E_wpa3//mods-enabled/linelog
  linelog {
  	filename = "/var/log/freeradius/linelog"
  	escape_filenames = no
  	syslog_severity = "info"
  	permissions = 384
  	format = "This is a log message for %{User-Name}"
  	reference = "messages.%{%{reply:Packet-Type}:-default}"
  }
  # Loading module "log_accounting" from file Freeradius/Conf/E_wpa3//mods-enabled/linelog
  linelog log_accounting {
  	filename = "/var/log/freeradius/linelog-accounting"
  	escape_filenames = no
  	syslog_severity = "info"
  	permissions = 384
  	format = ""
  	reference = "Accounting-Request.%{%{Acct-Status-Type}:-unknown}"
  }
  instantiate {
  }
  # Instantiating module "files" from file Freeradius/Conf/E_wpa3//mods-enabled/files
reading pairlist file Freeradius/Conf/E_wpa3//mods-config/files/authorize
reading pairlist file Freeradius/Conf/E_wpa3//mods-config/files/accounting
reading pairlist file Freeradius/Conf/E_wpa3//mods-config/files/pre-proxy
  # Instantiating module "etc_passwd" from file Freeradius/Conf/E_wpa3//mods-enabled/passwd
rlm_passwd: nfields: 3 keyfield 0(User-Name) listable: no
  # Instantiating module "preprocess" from file Freeradius/Conf/E_wpa3//mods-enabled/preprocess
reading pairlist file Freeradius/Conf/E_wpa3//mods-config/preprocess/huntgroups
reading pairlist file Freeradius/Conf/E_wpa3//mods-config/preprocess/hints
  # Instantiating module "pap" from file Freeradius/Conf/E_wpa3//mods-enabled/pap
  # Instantiating module "reject" from file Freeradius/Conf/E_wpa3//mods-enabled/always
  # Instantiating module "fail" from file Freeradius/Conf/E_wpa3//mods-enabled/always
  # Instantiating module "ok" from file Freeradius/Conf/E_wpa3//mods-enabled/always
  # Instantiating module "handled" from file Freeradius/Conf/E_wpa3//mods-enabled/always
  # Instantiating module "invalid" from file Freeradius/Conf/E_wpa3//mods-enabled/always
  # Instantiating module "userlock" from file Freeradius/Conf/E_wpa3//mods-enabled/always
  # Instantiating module "notfound" from file Freeradius/Conf/E_wpa3//mods-enabled/always
  # Instantiating module "noop" from file Freeradius/Conf/E_wpa3//mods-enabled/always
  # Instantiating module "updated" from file Freeradius/Conf/E_wpa3//mods-enabled/always
  # Instantiating module "detail" from file Freeradius/Conf/E_wpa3//mods-enabled/detail
  # Instantiating module "cache_eap" from file Freeradius/Conf/E_wpa3//mods-enabled/cache_eap
rlm_cache (cache_eap): Driver rlm_cache_rbtree (module rlm_cache_rbtree) loaded and linked
  # Instantiating module "mschap" from file Freeradius/Conf/E_wpa3//mods-enabled/mschap
rlm_mschap (mschap): using internal authentication
  # Instantiating module "eap" from file Freeradius/Conf/E_wpa3//mods-enabled/eap
   # Linked to sub-module rlm_eap_md5
   # Linked to sub-module rlm_eap_gtc
   gtc {
   	challenge = "Password: "
   	auth_type = "PAP"
   }
   # Linked to sub-module rlm_eap_tls
   tls {
   	tls = "tls-common"
   }
   tls-config tls-common {
   	verify_depth = 0
   	ca_path = "Freeradius/Conf/E_wpa3//certs"
   	pem_file_type = yes
   	private_key_file = "Freeradius/Conf/E_wpa3//certs/server.key"
   	certificate_file = "Freeradius/Conf/E_wpa3//certs/server.crt"
   	ca_file = "Freeradius/Conf/E_wpa3//certs/ca.pem"
   	private_key_password = <<< secret >>>
   	fragment_size = 1024
   	include_length = yes
   	auto_chain = yes
   	check_crl = no
   	check_all_crl = no
   	ca_path_reload_interval = 0
   	cipher_list = "DEFAULT"
   	cipher_server_preference = no
   	reject_unknown_intermediate_ca = no
   	ecdh_curve = ""
   	tls_max_version = "1.2"
   	tls_min_version = "1.2"
    cache {
    	enable = no
    	lifetime = 24
    	max_entries = 255
    }
    verify {
    	skip_if_ocsp_ok = no
    }
    ocsp {
    	enable = no
    	override_cert_url = yes
    	url = "http://127.0.0.1/ocsp/"
    	use_nonce = yes
    	timeout = 0
    	softfail = no
    }
   }
   # Linked to sub-module rlm_eap_ttls
   ttls {
   	tls = "tls-common"
   	default_eap_type = "md5"
   	copy_request_to_tunnel = no
   	use_tunneled_reply = no
   	virtual_server = "inner-tunnel"
   	include_length = yes
   	require_client_cert = no
   }
tls: Using cached TLS configuration from previous invocation
   # Linked to sub-module rlm_eap_peap
   peap {
   	tls = "tls-common"
   	default_eap_type = "mschapv2"
   	copy_request_to_tunnel = no
   	use_tunneled_reply = no
   	proxy_tunneled_request_as_eap = yes
   	virtual_server = "inner-tunnel"
   	soh = no
   	require_client_cert = no
   }
tls: Using cached TLS configuration from previous invocation
   # Linked to sub-module rlm_eap_mschapv2
   mschapv2 {
   	with_ntdomain_hack = no
   	send_error = no
   }
  # Instantiating module "logintime" from file Freeradius/Conf/E_wpa3//mods-enabled/logintime
  # Instantiating module "expiration" from file Freeradius/Conf/E_wpa3//mods-enabled/expiration
  # Instantiating module "IPASS" from file Freeradius/Conf/E_wpa3//mods-enabled/realm
  # Instantiating module "suffix" from file Freeradius/Conf/E_wpa3//mods-enabled/realm
  # Instantiating module "bangpath" from file Freeradius/Conf/E_wpa3//mods-enabled/realm
  # Instantiating module "realmpercent" from file Freeradius/Conf/E_wpa3//mods-enabled/realm
  # Instantiating module "ntdomain" from file Freeradius/Conf/E_wpa3//mods-enabled/realm
  # Instantiating module "attr_filter.post-proxy" from file Freeradius/Conf/E_wpa3//mods-enabled/attr_filter
reading pairlist file Freeradius/Conf/E_wpa3//mods-config/attr_filter/post-proxy
  # Instantiating module "attr_filter.pre-proxy" from file Freeradius/Conf/E_wpa3//mods-enabled/attr_filter
reading pairlist file Freeradius/Conf/E_wpa3//mods-config/attr_filter/pre-proxy
  # Instantiating module "attr_filter.access_reject" from file Freeradius/Conf/E_wpa3//mods-enabled/attr_filter
reading pairlist file Freeradius/Conf/E_wpa3//mods-config/attr_filter/access_reject
  # Instantiating module "attr_filter.access_challenge" from file Freeradius/Conf/E_wpa3//mods-enabled/attr_filter
reading pairlist file Freeradius/Conf/E_wpa3//mods-config/attr_filter/access_challenge
  # Instantiating module "attr_filter.accounting_response" from file Freeradius/Conf/E_wpa3//mods-enabled/attr_filter
reading pairlist file Freeradius/Conf/E_wpa3//mods-config/attr_filter/accounting_response
  # Instantiating module "attr_filter.coa" from file Freeradius/Conf/E_wpa3//mods-enabled/attr_filter
reading pairlist file Freeradius/Conf/E_wpa3//mods-config/attr_filter/coa
  # Instantiating module "auth_log" from file Freeradius/Conf/E_wpa3//mods-enabled/detail.log
rlm_detail (auth_log): 'User-Password' suppressed, will not appear in detail output
  # Instantiating module "reply_log" from file Freeradius/Conf/E_wpa3//mods-enabled/detail.log
  # Instantiating module "pre_proxy_log" from file Freeradius/Conf/E_wpa3//mods-enabled/detail.log
  # Instantiating module "post_proxy_log" from file Freeradius/Conf/E_wpa3//mods-enabled/detail.log
  # Instantiating module "linelog" from file Freeradius/Conf/E_wpa3//mods-enabled/linelog
  # Instantiating module "log_accounting" from file Freeradius/Conf/E_wpa3//mods-enabled/linelog
 } # modules
radiusd: #### Loading Virtual Servers ####
server { # from file Freeradius/Conf/E_wpa3//radiusd.conf
} # server
server inner-tunnel { # from file Freeradius/Conf/E_wpa3//sites-enabled/inner-tunnel
 # Loading authenticate {...}
Compiling Auth-Type PAP for attr Auth-Type
Compiling Auth-Type CHAP for attr Auth-Type
Compiling Auth-Type MS-CHAP for attr Auth-Type
 # Loading authorize {...}
Ignoring "sql" (see raddb/mods-available/README.rst)
Ignoring "ldap" (see raddb/mods-available/README.rst)
 # Loading session {...}
 # Loading post-proxy {...}
 # Loading post-auth {...}
 # Skipping contents of 'if' as it is always 'false' -- Freeradius/Conf/E_wpa3//sites-enabled/inner-tunnel:336
Compiling Post-Auth-Type REJECT for attr Post-Auth-Type
} # server inner-tunnel
server default { # from file Freeradius/Conf/E_wpa3//sites-enabled/default
 # Loading authenticate {...}
Compiling Auth-Type PAP for attr Auth-Type
Compiling Auth-Type CHAP for attr Auth-Type
Compiling Auth-Type MS-CHAP for attr Auth-Type
 # Loading authorize {...}
Compiling Autz-Type New-TLS-Connection for attr Autz-Type
 # Loading preacct {...}
 # Loading accounting {...}
 # Loading post-proxy {...}
 # Loading post-auth {...}
Compiling Post-Auth-Type REJECT for attr Post-Auth-Type
Compiling Post-Auth-Type Challenge for attr Post-Auth-Type
Compiling Post-Auth-Type Client-Lost for attr Post-Auth-Type
} # server default
radiusd: #### Opening IP addresses and Ports ####
listen {
  	type = "auth"
  	ipaddr = 127.0.0.1
  	port = 18120
}
listen {
  	type = "auth"
  	ipaddr = *
  	port = 0
   limit {
   	max_connections = 16
   	lifetime = 0
   	idle_timeout = 30
   }
}
listen {
  	type = "acct"
  	ipaddr = *
  	port = 0
   limit {
   	max_connections = 16
   	lifetime = 0
   	idle_timeout = 30
   }
}
listen {
  	type = "auth"
  	ipv6addr = ::
  	port = 0
   limit {
   	max_connections = 16
   	lifetime = 0
   	idle_timeout = 30
   }
}
listen {
  	type = "acct"
  	ipv6addr = ::
  	port = 0
   limit {
   	max_connections = 16
   	lifetime = 0
   	idle_timeout = 30
   }
}
Listening on auth address 127.0.0.1 port 18120 bound to server inner-tunnel
Listening on auth address * port 1812 bound to server default
Listening on acct address * port 1813 bound to server default
Listening on auth address :: port 1812 bound to server default
Listening on acct address :: port 1813 bound to server default
Listening on proxy address * port 56310
Listening on proxy address :: port 40367
Ready to process requests
(0) Received Access-Request Id 0 from 127.0.0.1:57359 to 127.0.0.1:1812 length 230
(0)   User-Name = "anonymous"
(0)   NAS-IP-Address = 127.0.0.1
(0)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(0)   NAS-Port-Type = Wireless-802.11
(0)   Service-Type = Framed-User
(0)   NAS-Port = 1
(0)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(0)   Connect-Info = "CONNECT 54Mbps 802.11g"
(0)   Acct-Session-Id = "4C00A3DC8CC849B5"
(0)   Acct-Multi-Session-Id = "609EA34E53C5D0C8"
(0)   WLAN-Pairwise-Cipher = 1027076
(0)   WLAN-Group-Cipher = 1027076
(0)   WLAN-AKM-Suite = 1027073
(0)   WLAN-Group-Mgmt-Cipher = 1027078
(0)   Framed-MTU = 1400
(0)   EAP-Message = 0x027f000e01616e6f6e796d6f7573
(0)   Message-Authenticator = 0x17cd99b431c69a9908dfe161ceaeccd2
(0) # Executing section authorize from file Freeradius/Conf/E_wpa3//sites-enabled/default
(0)   authorize {
(0)     policy filter_username {
(0)       if (&User-Name) {
(0)       if (&User-Name)  -> TRUE
(0)       if (&User-Name)  {
(0)         if (&User-Name =~ / /) {
(0)         if (&User-Name =~ / /)  -> FALSE
(0)         if (&User-Name =~ /@[^@]*@/ ) {
(0)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(0)         if (&User-Name =~ /\.\./ ) {
(0)         if (&User-Name =~ /\.\./ )  -> FALSE
(0)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(0)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(0)         if (&User-Name =~ /\.$/)  {
(0)         if (&User-Name =~ /\.$/)   -> FALSE
(0)         if (&User-Name =~ /@\./)  {
(0)         if (&User-Name =~ /@\./)   -> FALSE
(0)       } # if (&User-Name)  = notfound
(0)     } # policy filter_username = notfound
(0)     [preprocess] = ok
(0)     [chap] = noop
(0)     [mschap] = noop
(0)     [digest] = noop
(0) suffix: Checking for suffix after "@"
(0) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(0) suffix: No such realm "NULL"
(0)     [suffix] = noop
(0) eap: Peer sent EAP Response (code 2) ID 127 length 14
(0) eap: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
(0)     [eap] = ok
(0)   } # authorize = ok
(0) Found Auth-Type = eap
(0) # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/default
(0)   authenticate {
(0) eap: Peer sent packet with method EAP Identity (1)
(0) eap: Calling submodule eap_md5 to process data
(0) eap_md5: Issuing MD5 Challenge
(0) eap: Sending EAP Request (code 1) ID 128 length 22
(0) eap: EAP session adding &reply:State = 0x35b38fc135338baf
(0)     [eap] = handled
(0)   } # authenticate = handled
(0) Using Post-Auth-Type Challenge
(0) # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/default
(0)   Challenge { ... } # empty sub-section is ignored
(0) Sent Access-Challenge Id 0 from 127.0.0.1:1812 to 127.0.0.1:57359 length 80
(0)   EAP-Message = 0x0180001604100d6f0c43c2faee6143f3b2b9193d4235
(0)   Message-Authenticator = 0x00000000000000000000000000000000
(0)   State = 0x35b38fc135338bafd7cb2a2799695a9c
(0) Finished request
Waking up in 4.9 seconds.
(1) Received Access-Request Id 1 from 127.0.0.1:57359 to 127.0.0.1:1812 length 241
(1)   User-Name = "anonymous"
(1)   NAS-IP-Address = 127.0.0.1
(1)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(1)   NAS-Port-Type = Wireless-802.11
(1)   Service-Type = Framed-User
(1)   NAS-Port = 1
(1)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(1)   Connect-Info = "CONNECT 54Mbps 802.11g"
(1)   Acct-Session-Id = "4C00A3DC8CC849B5"
(1)   Acct-Multi-Session-Id = "609EA34E53C5D0C8"
(1)   WLAN-Pairwise-Cipher = 1027076
(1)   WLAN-Group-Cipher = 1027076
(1)   WLAN-AKM-Suite = 1027073
(1)   WLAN-Group-Mgmt-Cipher = 1027078
(1)   Framed-MTU = 1400
(1)   EAP-Message = 0x02800007031915
(1)   State = 0x35b38fc135338bafd7cb2a2799695a9c
(1)   Message-Authenticator = 0xd115ba80313b2b9effdb0ef219f46e83
(1) session-state: No cached attributes
(1) # Executing section authorize from file Freeradius/Conf/E_wpa3//sites-enabled/default
(1)   authorize {
(1)     policy filter_username {
(1)       if (&User-Name) {
(1)       if (&User-Name)  -> TRUE
(1)       if (&User-Name)  {
(1)         if (&User-Name =~ / /) {
(1)         if (&User-Name =~ / /)  -> FALSE
(1)         if (&User-Name =~ /@[^@]*@/ ) {
(1)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(1)         if (&User-Name =~ /\.\./ ) {
(1)         if (&User-Name =~ /\.\./ )  -> FALSE
(1)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(1)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(1)         if (&User-Name =~ /\.$/)  {
(1)         if (&User-Name =~ /\.$/)   -> FALSE
(1)         if (&User-Name =~ /@\./)  {
(1)         if (&User-Name =~ /@\./)   -> FALSE
(1)       } # if (&User-Name)  = notfound
(1)     } # policy filter_username = notfound
(1)     [preprocess] = ok
(1)     [chap] = noop
(1)     [mschap] = noop
(1)     [digest] = noop
(1) suffix: Checking for suffix after "@"
(1) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(1) suffix: No such realm "NULL"
(1)     [suffix] = noop
(1) eap: Peer sent EAP Response (code 2) ID 128 length 7
(1) eap: No EAP Start, assuming it's an on-going EAP conversation
(1)     [eap] = updated
(1)     [files] = noop
(1)     [expiration] = noop
(1)     [logintime] = noop
Not doing PAP as Auth-Type is already set.
(1)     [pap] = noop
(1)   } # authorize = updated
(1) Found Auth-Type = eap
(1) # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/default
(1)   authenticate {
(1) eap: Expiring EAP session with state 0x35b38fc135338baf
(1) eap: Finished EAP session with state 0x35b38fc135338baf
(1) eap: Previous EAP request found for state 0x35b38fc135338baf, released from the list
(1) eap: Peer sent packet with method EAP NAK (3)
(1) eap: Found mutually acceptable type PEAP (25)
(1) eap: Calling submodule eap_peap to process data
(1) eap_peap: (TLS) Initiating new session
(1) eap: Sending EAP Request (code 1) ID 129 length 6
(1) eap: EAP session adding &reply:State = 0x35b38fc1343296af
(1)     [eap] = handled
(1)   } # authenticate = handled
(1) Using Post-Auth-Type Challenge
(1) # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/default
(1)   Challenge { ... } # empty sub-section is ignored
(1) session-state: Saving cached attributes
(1)   Framed-MTU = 994
(1) Sent Access-Challenge Id 1 from 127.0.0.1:1812 to 127.0.0.1:57359 length 64
(1)   EAP-Message = 0x018100061920
(1)   Message-Authenticator = 0x00000000000000000000000000000000
(1)   State = 0x35b38fc1343296afd7cb2a2799695a9c
(1) Finished request
Waking up in 4.9 seconds.
(2) Received Access-Request Id 2 from 127.0.0.1:57359 to 127.0.0.1:1812 length 476
(2)   User-Name = "anonymous"
(2)   NAS-IP-Address = 127.0.0.1
(2)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(2)   NAS-Port-Type = Wireless-802.11
(2)   Service-Type = Framed-User
(2)   NAS-Port = 1
(2)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(2)   Connect-Info = "CONNECT 54Mbps 802.11g"
(2)   Acct-Session-Id = "4C00A3DC8CC849B5"
(2)   Acct-Multi-Session-Id = "609EA34E53C5D0C8"
(2)   WLAN-Pairwise-Cipher = 1027076
(2)   WLAN-Group-Cipher = 1027076
(2)   WLAN-AKM-Suite = 1027073
(2)   WLAN-Group-Mgmt-Cipher = 1027078
(2)   Framed-MTU = 1400
(2)   EAP-Message = 0x028100f21980000000e816030300e3010000df03030000000180b2b699c7ba273c5d3c2e1a7140c4727fe87bded5671f2b7d8d24aa000076c02cc030c0adc024c028c00ac014c0afc05dc061c049c04dc02bc02fc0acc023c027c009c013c0aec05cc060c048c04c009dc09d003d0035c032c02ac00fc02ec026c005c0a1c05fc063c051c04bc04fc03d009cc09c003c002fc031c029c00ec02dc025c004c0a0c05ec062c050c04ac04ec03c00ff01000040000a0010000e001d001700180019001a001b001c000d001600140603050306010501040303030401030102030201000b00020100001600000017000000230000
(2)   State = 0x35b38fc1343296afd7cb2a2799695a9c
(2)   Message-Authenticator = 0xf331f8ea45e46ae13cf71448f880d857
(2) Restoring &session-state
(2)   &session-state:Framed-MTU = 994
(2) # Executing section authorize from file Freeradius/Conf/E_wpa3//sites-enabled/default
(2)   authorize {
(2)     policy filter_username {
(2)       if (&User-Name) {
(2)       if (&User-Name)  -> TRUE
(2)       if (&User-Name)  {
(2)         if (&User-Name =~ / /) {
(2)         if (&User-Name =~ / /)  -> FALSE
(2)         if (&User-Name =~ /@[^@]*@/ ) {
(2)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(2)         if (&User-Name =~ /\.\./ ) {
(2)         if (&User-Name =~ /\.\./ )  -> FALSE
(2)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(2)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(2)         if (&User-Name =~ /\.$/)  {
(2)         if (&User-Name =~ /\.$/)   -> FALSE
(2)         if (&User-Name =~ /@\./)  {
(2)         if (&User-Name =~ /@\./)   -> FALSE
(2)       } # if (&User-Name)  = notfound
(2)     } # policy filter_username = notfound
(2)     [preprocess] = ok
(2)     [chap] = noop
(2)     [mschap] = noop
(2)     [digest] = noop
(2) suffix: Checking for suffix after "@"
(2) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(2) suffix: No such realm "NULL"
(2)     [suffix] = noop
(2) eap: Peer sent EAP Response (code 2) ID 129 length 242
(2) eap: Continuing tunnel setup
(2)     [eap] = ok
(2)   } # authorize = ok
(2) Found Auth-Type = eap
(2) # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/default
(2)   authenticate {
(2) eap: Expiring EAP session with state 0x35b38fc1343296af
(2) eap: Finished EAP session with state 0x35b38fc1343296af
(2) eap: Previous EAP request found for state 0x35b38fc1343296af, released from the list
(2) eap: Peer sent packet with method EAP PEAP (25)
(2) eap: Calling submodule eap_peap to process data
(2) eap_peap: (TLS) EAP Peer says that the final record size will be 232 bytes
(2) eap_peap: (TLS) EAP Got all data (232 bytes)
(2) eap_peap: (TLS) Handshake state - before SSL initialization
(2) eap_peap: (TLS) Handshake state - Server before SSL initialization
(2) eap_peap: (TLS) Handshake state - Server before SSL initialization
(2) eap_peap: (TLS) recv TLS 1.3 Handshake, ClientHello
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read client hello
(2) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHello
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server hello
(2) eap_peap: (TLS) send TLS 1.2 Handshake, Certificate
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write certificate
(2) eap_peap: (TLS) send TLS 1.2 Handshake, ServerKeyExchange
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write key exchange
(2) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHelloDone
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server done
(2) eap_peap: (TLS) Server : Need to read more data: SSLv3/TLS write server done
(2) eap_peap: (TLS) In Handshake Phase
(2) eap: Sending EAP Request (code 1) ID 130 length 1004
(2) eap: EAP session adding &reply:State = 0x35b38fc1373196af
(2)     [eap] = handled
(2)   } # authenticate = handled
(2) Using Post-Auth-Type Challenge
(2) # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/default
(2)   Challenge { ... } # empty sub-section is ignored
(2) session-state: Saving cached attributes
(2)   Framed-MTU = 994
(2)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(2)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(2)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(2)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(2)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(2) Sent Access-Challenge Id 2 from 127.0.0.1:1812 to 127.0.0.1:57359 length 1068
(2)   EAP-Message = 0x018203ec19c000000ac6160303003d02000039030357cd1c3623052a99b7184a8889fc4c72e73124348b9b011e877ecac68f00315000c030000011ff01000100000b0004030001020017000016030309450b00094100093e00043a308204363082031ea003020102020101300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232303134333834335a170d3234303231383134333834335a307c310b3009060355040613024652310f300d06035504080c0652616469757331153013060355040a0c0c4578616d706c6520496e632e3123302106035504030c1a4578616d70
(2)   Message-Authenticator = 0x00000000000000000000000000000000
(2)   State = 0x35b38fc1373196afd7cb2a2799695a9c
(2) Finished request
Waking up in 4.9 seconds.
(3) Received Access-Request Id 3 from 127.0.0.1:57359 to 127.0.0.1:1812 length 240
(3)   User-Name = "anonymous"
(3)   NAS-IP-Address = 127.0.0.1
(3)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(3)   NAS-Port-Type = Wireless-802.11
(3)   Service-Type = Framed-User
(3)   NAS-Port = 1
(3)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(3)   Connect-Info = "CONNECT 54Mbps 802.11g"
(3)   Acct-Session-Id = "4C00A3DC8CC849B5"
(3)   Acct-Multi-Session-Id = "609EA34E53C5D0C8"
(3)   WLAN-Pairwise-Cipher = 1027076
(3)   WLAN-Group-Cipher = 1027076
(3)   WLAN-AKM-Suite = 1027073
(3)   WLAN-Group-Mgmt-Cipher = 1027078
(3)   Framed-MTU = 1400
(3)   EAP-Message = 0x028200061900
(3)   State = 0x35b38fc1373196afd7cb2a2799695a9c
(3)   Message-Authenticator = 0x61b8fa587031d83bf35433ad35461450
(3) Restoring &session-state
(3)   &session-state:Framed-MTU = 994
(3)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(3)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(3)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(3)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(3)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(3) # Executing section authorize from file Freeradius/Conf/E_wpa3//sites-enabled/default
(3)   authorize {
(3)     policy filter_username {
(3)       if (&User-Name) {
(3)       if (&User-Name)  -> TRUE
(3)       if (&User-Name)  {
(3)         if (&User-Name =~ / /) {
(3)         if (&User-Name =~ / /)  -> FALSE
(3)         if (&User-Name =~ /@[^@]*@/ ) {
(3)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(3)         if (&User-Name =~ /\.\./ ) {
(3)         if (&User-Name =~ /\.\./ )  -> FALSE
(3)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(3)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(3)         if (&User-Name =~ /\.$/)  {
(3)         if (&User-Name =~ /\.$/)   -> FALSE
(3)         if (&User-Name =~ /@\./)  {
(3)         if (&User-Name =~ /@\./)   -> FALSE
(3)       } # if (&User-Name)  = notfound
(3)     } # policy filter_username = notfound
(3)     [preprocess] = ok
(3)     [chap] = noop
(3)     [mschap] = noop
(3)     [digest] = noop
(3) suffix: Checking for suffix after "@"
(3) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(3) suffix: No such realm "NULL"
(3)     [suffix] = noop
(3) eap: Peer sent EAP Response (code 2) ID 130 length 6
(3) eap: Continuing tunnel setup
(3)     [eap] = ok
(3)   } # authorize = ok
(3) Found Auth-Type = eap
(3) # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/default
(3)   authenticate {
(3) eap: Expiring EAP session with state 0x35b38fc1373196af
(3) eap: Finished EAP session with state 0x35b38fc1373196af
(3) eap: Previous EAP request found for state 0x35b38fc1373196af, released from the list
(3) eap: Peer sent packet with method EAP PEAP (25)
(3) eap: Calling submodule eap_peap to process data
(3) eap_peap: (TLS) Peer ACKed our handshake fragment
(3) eap: Sending EAP Request (code 1) ID 131 length 1000
(3) eap: EAP session adding &reply:State = 0x35b38fc1363096af
(3)     [eap] = handled
(3)   } # authenticate = handled
(3) Using Post-Auth-Type Challenge
(3) # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/default
(3)   Challenge { ... } # empty sub-section is ignored
(3) session-state: Saving cached attributes
(3)   Framed-MTU = 994
(3)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(3)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(3)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(3)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(3)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(3) Sent Access-Challenge Id 3 from 127.0.0.1:1812 to 127.0.0.1:57359 length 1064
(3)   EAP-Message = 0x018303e81940c066b4487955d91fae555c757e3bd231c82efaecfd888dd97a9457c262e278b3fbdaf7025184f0c3f702b6ea8337c849aa0bbb2b42c758682ce692b07548e23d780d4dccfed66518d7984235a5b595ee107882efde4494975e2fbe9f38b06c7b3e098706411809ce98342f9c487ab866d8845128d0eb8db8d24a1f6978f41cc4ab813a516702d96003087448f425b838164e3c3419af9cac50755771cf5d87bd38ef6a2a3211e139980004fe308204fa308203e2a0030201020214669e28efd6428e45774f1d66f1b15fb62d50776b300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72
(3)   Message-Authenticator = 0x00000000000000000000000000000000
(3)   State = 0x35b38fc1363096afd7cb2a2799695a9c
(3) Finished request
Waking up in 4.8 seconds.
(4) Received Access-Request Id 4 from 127.0.0.1:57359 to 127.0.0.1:1812 length 240
(4)   User-Name = "anonymous"
(4)   NAS-IP-Address = 127.0.0.1
(4)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(4)   NAS-Port-Type = Wireless-802.11
(4)   Service-Type = Framed-User
(4)   NAS-Port = 1
(4)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(4)   Connect-Info = "CONNECT 54Mbps 802.11g"
(4)   Acct-Session-Id = "4C00A3DC8CC849B5"
(4)   Acct-Multi-Session-Id = "609EA34E53C5D0C8"
(4)   WLAN-Pairwise-Cipher = 1027076
(4)   WLAN-Group-Cipher = 1027076
(4)   WLAN-AKM-Suite = 1027073
(4)   WLAN-Group-Mgmt-Cipher = 1027078
(4)   Framed-MTU = 1400
(4)   EAP-Message = 0x028300061900
(4)   State = 0x35b38fc1363096afd7cb2a2799695a9c
(4)   Message-Authenticator = 0x989cd59743a0b172764e8593e4cf77c2
(4) Restoring &session-state
(4)   &session-state:Framed-MTU = 994
(4)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(4) # Executing section authorize from file Freeradius/Conf/E_wpa3//sites-enabled/default
(4)   authorize {
(4)     policy filter_username {
(4)       if (&User-Name) {
(4)       if (&User-Name)  -> TRUE
(4)       if (&User-Name)  {
(4)         if (&User-Name =~ / /) {
(4)         if (&User-Name =~ / /)  -> FALSE
(4)         if (&User-Name =~ /@[^@]*@/ ) {
(4)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(4)         if (&User-Name =~ /\.\./ ) {
(4)         if (&User-Name =~ /\.\./ )  -> FALSE
(4)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(4)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(4)         if (&User-Name =~ /\.$/)  {
(4)         if (&User-Name =~ /\.$/)   -> FALSE
(4)         if (&User-Name =~ /@\./)  {
(4)         if (&User-Name =~ /@\./)   -> FALSE
(4)       } # if (&User-Name)  = notfound
(4)     } # policy filter_username = notfound
(4)     [preprocess] = ok
(4)     [chap] = noop
(4)     [mschap] = noop
(4)     [digest] = noop
(4) suffix: Checking for suffix after "@"
(4) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(4) suffix: No such realm "NULL"
(4)     [suffix] = noop
(4) eap: Peer sent EAP Response (code 2) ID 131 length 6
(4) eap: Continuing tunnel setup
(4)     [eap] = ok
(4)   } # authorize = ok
(4) Found Auth-Type = eap
(4) # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/default
(4)   authenticate {
(4) eap: Expiring EAP session with state 0x35b38fc1363096af
(4) eap: Finished EAP session with state 0x35b38fc1363096af
(4) eap: Previous EAP request found for state 0x35b38fc1363096af, released from the list
(4) eap: Peer sent packet with method EAP PEAP (25)
(4) eap: Calling submodule eap_peap to process data
(4) eap_peap: (TLS) Peer ACKed our handshake fragment
(4) eap: Sending EAP Request (code 1) ID 132 length 776
(4) eap: EAP session adding &reply:State = 0x35b38fc1313796af
(4)     [eap] = handled
(4)   } # authenticate = handled
(4) Using Post-Auth-Type Challenge
(4) # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/default
(4)   Challenge { ... } # empty sub-section is ignored
(4) session-state: Saving cached attributes
(4)   Framed-MTU = 994
(4)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(4)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(4)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(4)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(4)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(4) Sent Access-Challenge Id 4 from 127.0.0.1:1812 to 127.0.0.1:57359 length 840
(4)   EAP-Message = 0x01840308190078616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f726974798214669e28efd6428e45774f1d66f1b15fb62d50776b300f0603551d130101ff040530030101ff30360603551d1f042f302d302ba029a0278625687474703a2f2f7777772e6578616d706c652e6f72672f6578616d706c655f63612e63726c300d06092a864886f70d01010b05000382010100923f43f461ad7e2ad1959230fac25e5e207d2a15adb3764b46451160c132eb4d79bc86056db703df4e7375b27045b63a9ec6da788f4b66473ee1c8449112b9ecac7ef39d8462b1ff7b42416c8edeb73f13c5b152722a4fd6d622ce848ed2e21f99881e038cf17cdd5479018e5c9ba7a649431736e320e753a2bcaa3e6c3b5f68835851f470c40ceb8f31f909e34b21d586e6169d82a2d9117288dd5ed11b67cbaba86fb7584281d58f
(4)   Message-Authenticator = 0x00000000000000000000000000000000
(4)   State = 0x35b38fc1313796afd7cb2a2799695a9c
(4) Finished request
Waking up in 4.8 seconds.
(5) Received Access-Request Id 5 from 127.0.0.1:57359 to 127.0.0.1:1812 length 337
(5)   User-Name = "anonymous"
(5)   NAS-IP-Address = 127.0.0.1
(5)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(5)   NAS-Port-Type = Wireless-802.11
(5)   Service-Type = Framed-User
(5)   NAS-Port = 1
(5)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(5)   Connect-Info = "CONNECT 54Mbps 802.11g"
(5)   Acct-Session-Id = "4C00A3DC8CC849B5"
(5)   Acct-Multi-Session-Id = "609EA34E53C5D0C8"
(5)   WLAN-Pairwise-Cipher = 1027076
(5)   WLAN-Group-Cipher = 1027076
(5)   WLAN-AKM-Suite = 1027073
(5)   WLAN-Group-Mgmt-Cipher = 1027078
(5)   Framed-MTU = 1400
(5)   EAP-Message = 0x0284006719800000005d1603030025100000212057d8dc7dafa1bc0693c97815a8d1cab5fa53e33b78531287dfaf5140b4437c6c14030300010116030300280000000000000000842cd7607f6460386a28a4fc73f257379be40bbc9fed1f2b296694e84b4aab59
(5)   State = 0x35b38fc1313796afd7cb2a2799695a9c
(5)   Message-Authenticator = 0x234081b5ba6999915a99dc8202e895d1
(5) Restoring &session-state
(5)   &session-state:Framed-MTU = 994
(5)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(5) # Executing section authorize from file Freeradius/Conf/E_wpa3//sites-enabled/default
(5)   authorize {
(5)     policy filter_username {
(5)       if (&User-Name) {
(5)       if (&User-Name)  -> TRUE
(5)       if (&User-Name)  {
(5)         if (&User-Name =~ / /) {
(5)         if (&User-Name =~ / /)  -> FALSE
(5)         if (&User-Name =~ /@[^@]*@/ ) {
(5)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(5)         if (&User-Name =~ /\.\./ ) {
(5)         if (&User-Name =~ /\.\./ )  -> FALSE
(5)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(5)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(5)         if (&User-Name =~ /\.$/)  {
(5)         if (&User-Name =~ /\.$/)   -> FALSE
(5)         if (&User-Name =~ /@\./)  {
(5)         if (&User-Name =~ /@\./)   -> FALSE
(5)       } # if (&User-Name)  = notfound
(5)     } # policy filter_username = notfound
(5)     [preprocess] = ok
(5)     [chap] = noop
(5)     [mschap] = noop
(5)     [digest] = noop
(5) suffix: Checking for suffix after "@"
(5) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(5) suffix: No such realm "NULL"
(5)     [suffix] = noop
(5) eap: Peer sent EAP Response (code 2) ID 132 length 103
(5) eap: Continuing tunnel setup
(5)     [eap] = ok
(5)   } # authorize = ok
(5) Found Auth-Type = eap
(5) # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/default
(5)   authenticate {
(5) eap: Expiring EAP session with state 0x35b38fc1313796af
(5) eap: Finished EAP session with state 0x35b38fc1313796af
(5) eap: Previous EAP request found for state 0x35b38fc1313796af, released from the list
(5) eap: Peer sent packet with method EAP PEAP (25)
(5) eap: Calling submodule eap_peap to process data
(5) eap_peap: (TLS) EAP Peer says that the final record size will be 93 bytes
(5) eap_peap: (TLS) EAP Got all data (93 bytes)
(5) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server done
(5) eap_peap: (TLS) recv TLS 1.2 Handshake, ClientKeyExchange
(5) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read client key exchange
(5) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read change cipher spec
(5) eap_peap: (TLS) recv TLS 1.2 Handshake, Finished
(5) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read finished
(5) eap_peap: (TLS) send TLS 1.2 ChangeCipherSpec
(5) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write change cipher spec
(5) eap_peap: (TLS) send TLS 1.2 Handshake, Finished
(5) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write finished
(5) eap_peap: (TLS) Handshake state - SSL negotiation finished successfully
(5) eap_peap: (TLS) Connection Established
(5) eap_peap:   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(5) eap_peap:   TLS-Session-Version = "TLS 1.2"
(5) eap: Sending EAP Request (code 1) ID 133 length 57
(5) eap: EAP session adding &reply:State = 0x35b38fc1303696af
(5)     [eap] = handled
(5)   } # authenticate = handled
(5) Using Post-Auth-Type Challenge
(5) # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/default
(5)   Challenge { ... } # empty sub-section is ignored
(5) session-state: Saving cached attributes
(5)   Framed-MTU = 994
(5)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(5)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(5)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(5)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(5)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(5)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(5)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(5)   TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(5)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(5)   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(5)   TLS-Session-Version = "TLS 1.2"
(5) Sent Access-Challenge Id 5 from 127.0.0.1:1812 to 127.0.0.1:57359 length 115
(5)   EAP-Message = 0x0185003919001403030001011603030028e8b152a7d165f3a2a8153a1f757b24742085c0a95dfb3b3b34b0cdfa4fb15b6655d589e5a195ec1f
(5)   Message-Authenticator = 0x00000000000000000000000000000000
(5)   State = 0x35b38fc1303696afd7cb2a2799695a9c
(5) Finished request
Waking up in 4.3 seconds.
(6) Received Access-Request Id 6 from 127.0.0.1:57359 to 127.0.0.1:1812 length 240
(6)   User-Name = "anonymous"
(6)   NAS-IP-Address = 127.0.0.1
(6)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(6)   NAS-Port-Type = Wireless-802.11
(6)   Service-Type = Framed-User
(6)   NAS-Port = 1
(6)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(6)   Connect-Info = "CONNECT 54Mbps 802.11g"
(6)   Acct-Session-Id = "4C00A3DC8CC849B5"
(6)   Acct-Multi-Session-Id = "609EA34E53C5D0C8"
(6)   WLAN-Pairwise-Cipher = 1027076
(6)   WLAN-Group-Cipher = 1027076
(6)   WLAN-AKM-Suite = 1027073
(6)   WLAN-Group-Mgmt-Cipher = 1027078
(6)   Framed-MTU = 1400
(6)   EAP-Message = 0x028500061900
(6)   State = 0x35b38fc1303696afd7cb2a2799695a9c
(6)   Message-Authenticator = 0xc9fb85ccd75303672b8531a6c5fe5d96
(6) Restoring &session-state
(6)   &session-state:Framed-MTU = 994
(6)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(6)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(6)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(6)   &session-state:TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(6)   &session-state:TLS-Session-Version = "TLS 1.2"
(6) # Executing section authorize from file Freeradius/Conf/E_wpa3//sites-enabled/default
(6)   authorize {
(6)     policy filter_username {
(6)       if (&User-Name) {
(6)       if (&User-Name)  -> TRUE
(6)       if (&User-Name)  {
(6)         if (&User-Name =~ / /) {
(6)         if (&User-Name =~ / /)  -> FALSE
(6)         if (&User-Name =~ /@[^@]*@/ ) {
(6)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(6)         if (&User-Name =~ /\.\./ ) {
(6)         if (&User-Name =~ /\.\./ )  -> FALSE
(6)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(6)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(6)         if (&User-Name =~ /\.$/)  {
(6)         if (&User-Name =~ /\.$/)   -> FALSE
(6)         if (&User-Name =~ /@\./)  {
(6)         if (&User-Name =~ /@\./)   -> FALSE
(6)       } # if (&User-Name)  = notfound
(6)     } # policy filter_username = notfound
(6)     [preprocess] = ok
(6)     [chap] = noop
(6)     [mschap] = noop
(6)     [digest] = noop
(6) suffix: Checking for suffix after "@"
(6) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(6) suffix: No such realm "NULL"
(6)     [suffix] = noop
(6) eap: Peer sent EAP Response (code 2) ID 133 length 6
(6) eap: Continuing tunnel setup
(6)     [eap] = ok
(6)   } # authorize = ok
(6) Found Auth-Type = eap
(6) # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/default
(6)   authenticate {
(6) eap: Expiring EAP session with state 0x35b38fc1303696af
(6) eap: Finished EAP session with state 0x35b38fc1303696af
(6) eap: Previous EAP request found for state 0x35b38fc1303696af, released from the list
(6) eap: Peer sent packet with method EAP PEAP (25)
(6) eap: Calling submodule eap_peap to process data
(6) eap_peap: (TLS) Peer ACKed our handshake fragment.  handshake is finished
(6) eap_peap: Session established.  Decoding tunneled attributes
(6) eap_peap: PEAP state TUNNEL ESTABLISHED
(6) eap: Sending EAP Request (code 1) ID 134 length 40
(6) eap: EAP session adding &reply:State = 0x35b38fc1333596af
(6)     [eap] = handled
(6)   } # authenticate = handled
(6) Using Post-Auth-Type Challenge
(6) # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/default
(6)   Challenge { ... } # empty sub-section is ignored
(6) session-state: Saving cached attributes
(6)   Framed-MTU = 994
(6)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(6)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(6)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(6)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(6)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(6)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(6)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(6)   TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(6)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(6)   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(6)   TLS-Session-Version = "TLS 1.2"
(6) Sent Access-Challenge Id 6 from 127.0.0.1:1812 to 127.0.0.1:57359 length 98
(6)   EAP-Message = 0x018600281900170303001de8b152a7d165f3a337adabacf61f792286c00a6aefbf79ba18779c24f5
(6)   Message-Authenticator = 0x00000000000000000000000000000000
(6)   State = 0x35b38fc1333596afd7cb2a2799695a9c
(6) Finished request
Waking up in 4.2 seconds.
(7) Received Access-Request Id 7 from 127.0.0.1:57359 to 127.0.0.1:1812 length 285
(7)   User-Name = "anonymous"
(7)   NAS-IP-Address = 127.0.0.1
(7)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(7)   NAS-Port-Type = Wireless-802.11
(7)   Service-Type = Framed-User
(7)   NAS-Port = 1
(7)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(7)   Connect-Info = "CONNECT 54Mbps 802.11g"
(7)   Acct-Session-Id = "4C00A3DC8CC849B5"
(7)   Acct-Multi-Session-Id = "609EA34E53C5D0C8"
(7)   WLAN-Pairwise-Cipher = 1027076
(7)   WLAN-Group-Cipher = 1027076
(7)   WLAN-AKM-Suite = 1027073
(7)   WLAN-Group-Mgmt-Cipher = 1027078
(7)   Framed-MTU = 1400
(7)   EAP-Message = 0x028600331900170303002800000000000000011e4abf33679a02e47088ed438d30901e27b96ee81acef26e2893da4dadb8e739
(7)   State = 0x35b38fc1333596afd7cb2a2799695a9c
(7)   Message-Authenticator = 0x185fae0a69445f451b196510a6e66fae
(7) Restoring &session-state
(7)   &session-state:Framed-MTU = 994
(7)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(7)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(7)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(7)   &session-state:TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(7)   &session-state:TLS-Session-Version = "TLS 1.2"
(7) # Executing section authorize from file Freeradius/Conf/E_wpa3//sites-enabled/default
(7)   authorize {
(7)     policy filter_username {
(7)       if (&User-Name) {
(7)       if (&User-Name)  -> TRUE
(7)       if (&User-Name)  {
(7)         if (&User-Name =~ / /) {
(7)         if (&User-Name =~ / /)  -> FALSE
(7)         if (&User-Name =~ /@[^@]*@/ ) {
(7)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(7)         if (&User-Name =~ /\.\./ ) {
(7)         if (&User-Name =~ /\.\./ )  -> FALSE
(7)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(7)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(7)         if (&User-Name =~ /\.$/)  {
(7)         if (&User-Name =~ /\.$/)   -> FALSE
(7)         if (&User-Name =~ /@\./)  {
(7)         if (&User-Name =~ /@\./)   -> FALSE
(7)       } # if (&User-Name)  = notfound
(7)     } # policy filter_username = notfound
(7)     [preprocess] = ok
(7)     [chap] = noop
(7)     [mschap] = noop
(7)     [digest] = noop
(7) suffix: Checking for suffix after "@"
(7) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(7) suffix: No such realm "NULL"
(7)     [suffix] = noop
(7) eap: Peer sent EAP Response (code 2) ID 134 length 51
(7) eap: Continuing tunnel setup
(7)     [eap] = ok
(7)   } # authorize = ok
(7) Found Auth-Type = eap
(7) # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/default
(7)   authenticate {
(7) eap: Expiring EAP session with state 0x35b38fc1333596af
(7) eap: Finished EAP session with state 0x35b38fc1333596af
(7) eap: Previous EAP request found for state 0x35b38fc1333596af, released from the list
(7) eap: Peer sent packet with method EAP PEAP (25)
(7) eap: Calling submodule eap_peap to process data
(7) eap_peap: (TLS) EAP Done initial handshake
(7) eap_peap: Session established.  Decoding tunneled attributes
(7) eap_peap: PEAP state WAITING FOR INNER IDENTITY
(7) eap_peap: Identity - bob@example.org
(7) eap_peap: Got inner identity 'bob@example.org'
(7) eap_peap: Setting default EAP type for tunneled EAP session
(7) eap_peap: Got tunneled request
(7) eap_peap:   EAP-Message = 0x0286001401626f62406578616d706c652e6f7267
(7) eap_peap: Setting User-Name to bob@example.org
(7) eap_peap: Sending tunneled request to inner-tunnel
(7) eap_peap:   EAP-Message = 0x0286001401626f62406578616d706c652e6f7267
(7) eap_peap:   FreeRADIUS-Proxied-To = 127.0.0.1
(7) eap_peap:   User-Name = "bob@example.org"
(7) Virtual server inner-tunnel received request
(7)   EAP-Message = 0x0286001401626f62406578616d706c652e6f7267
(7)   FreeRADIUS-Proxied-To = 127.0.0.1
(7)   User-Name = "bob@example.org"
(7) server inner-tunnel {
(7)   # Executing section authorize from file Freeradius/Conf/E_wpa3//sites-enabled/inner-tunnel
(7)     authorize {
(7)       policy filter_username {
(7)         if (&User-Name) {
(7)         if (&User-Name)  -> TRUE
(7)         if (&User-Name)  {
(7)           if (&User-Name =~ / /) {
(7)           if (&User-Name =~ / /)  -> FALSE
(7)           if (&User-Name =~ /@[^@]*@/ ) {
(7)           if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(7)           if (&User-Name =~ /\.\./ ) {
(7)           if (&User-Name =~ /\.\./ )  -> FALSE
(7)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(7)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(7)           if (&User-Name =~ /\.$/)  {
(7)           if (&User-Name =~ /\.$/)   -> FALSE
(7)           if (&User-Name =~ /@\./)  {
(7)           if (&User-Name =~ /@\./)   -> FALSE
(7)         } # if (&User-Name)  = notfound
(7)       } # policy filter_username = notfound
(7)       [chap] = noop
(7)       [mschap] = noop
(7) suffix: Checking for suffix after "@"
(7) suffix: Looking up realm "example.org" for User-Name = "bob@example.org"
(7) suffix: No such realm "example.org"
(7)       [suffix] = noop
(7)       update control {
(7)         &Proxy-To-Realm := LOCAL
(7)       } # update control = noop
(7) eap: Peer sent EAP Response (code 2) ID 134 length 20
(7) eap: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
(7)       [eap] = ok
(7)     } # authorize = ok
(7)   Found Auth-Type = eap
(7)   # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/inner-tunnel
(7)     authenticate {
(7) eap: Peer sent packet with method EAP Identity (1)
(7) eap: Calling submodule eap_mschapv2 to process data
(7) eap_mschapv2: Issuing Challenge
(7) eap: Sending EAP Request (code 1) ID 135 length 43
(7) eap: EAP session adding &reply:State = 0xf80bf2cbf88ce846
(7)       [eap] = handled
(7)     } # authenticate = handled
(7) } # server inner-tunnel
(7) Virtual server sending reply
(7)   EAP-Message = 0x0187002b1a0187002610d372352115362cd178af9ea4b3931ee5667265657261646975732d332e302e3236
(7)   Message-Authenticator = 0x00000000000000000000000000000000
(7)   State = 0xf80bf2cbf88ce846013f866ee4245028
(7) eap_peap: Got tunneled reply code 11
(7) eap_peap:   EAP-Message = 0x0187002b1a0187002610d372352115362cd178af9ea4b3931ee5667265657261646975732d332e302e3236
(7) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(7) eap_peap:   State = 0xf80bf2cbf88ce846013f866ee4245028
(7) eap_peap: Got tunneled reply RADIUS code 11
(7) eap_peap:   EAP-Message = 0x0187002b1a0187002610d372352115362cd178af9ea4b3931ee5667265657261646975732d332e302e3236
(7) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(7) eap_peap:   State = 0xf80bf2cbf88ce846013f866ee4245028
(7) eap_peap: Got tunneled Access-Challenge
(7) eap: Sending EAP Request (code 1) ID 135 length 74
(7) eap: EAP session adding &reply:State = 0x35b38fc1323496af
(7)     [eap] = handled
(7)   } # authenticate = handled
(7) Using Post-Auth-Type Challenge
(7) # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/default
(7)   Challenge { ... } # empty sub-section is ignored
(7) session-state: Saving cached attributes
(7)   Framed-MTU = 994
(7)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(7)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(7)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(7)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(7)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(7)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(7)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(7)   TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(7)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(7)   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(7)   TLS-Session-Version = "TLS 1.2"
(7) Sent Access-Challenge Id 7 from 127.0.0.1:1812 to 127.0.0.1:57359 length 132
(7)   EAP-Message = 0x0187004a1900170303003fe8b152a7d165f3a446bc88a4e664faa8a8228bd9b1c5167a81ab8314a05221acd0b5e26f4b76ed2203adda33972a0fd3ca5b27ba2e6d4d6ede2bb63368c314
(7)   Message-Authenticator = 0x00000000000000000000000000000000
(7)   State = 0x35b38fc1323496afd7cb2a2799695a9c
(7) Finished request
Waking up in 4.2 seconds.
(8) Received Access-Request Id 8 from 127.0.0.1:57359 to 127.0.0.1:1812 length 339
(8)   User-Name = "anonymous"
(8)   NAS-IP-Address = 127.0.0.1
(8)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(8)   NAS-Port-Type = Wireless-802.11
(8)   Service-Type = Framed-User
(8)   NAS-Port = 1
(8)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(8)   Connect-Info = "CONNECT 54Mbps 802.11g"
(8)   Acct-Session-Id = "4C00A3DC8CC849B5"
(8)   Acct-Multi-Session-Id = "609EA34E53C5D0C8"
(8)   WLAN-Pairwise-Cipher = 1027076
(8)   WLAN-Group-Cipher = 1027076
(8)   WLAN-AKM-Suite = 1027073
(8)   WLAN-Group-Mgmt-Cipher = 1027078
(8)   Framed-MTU = 1400
(8)   EAP-Message = 0x028700691900170303005e0000000000000002584586b2f9d689901a35852a7a6d8a0bf570c2695406e45553ebd586f52466ad30f3c27502d28c30890ed8f9aac9f2252e52fac2b5a205ffd05d4740b3a262277db568079cb78b6435e73fc6d7234400fb651ff81c29
(8)   State = 0x35b38fc1323496afd7cb2a2799695a9c
(8)   Message-Authenticator = 0xfb87c1c7e0c0e60600fb00b62558fc8f
(8) Restoring &session-state
(8)   &session-state:Framed-MTU = 994
(8)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(8)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(8)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(8)   &session-state:TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(8)   &session-state:TLS-Session-Version = "TLS 1.2"
(8) # Executing section authorize from file Freeradius/Conf/E_wpa3//sites-enabled/default
(8)   authorize {
(8)     policy filter_username {
(8)       if (&User-Name) {
(8)       if (&User-Name)  -> TRUE
(8)       if (&User-Name)  {
(8)         if (&User-Name =~ / /) {
(8)         if (&User-Name =~ / /)  -> FALSE
(8)         if (&User-Name =~ /@[^@]*@/ ) {
(8)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(8)         if (&User-Name =~ /\.\./ ) {
(8)         if (&User-Name =~ /\.\./ )  -> FALSE
(8)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(8)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(8)         if (&User-Name =~ /\.$/)  {
(8)         if (&User-Name =~ /\.$/)   -> FALSE
(8)         if (&User-Name =~ /@\./)  {
(8)         if (&User-Name =~ /@\./)   -> FALSE
(8)       } # if (&User-Name)  = notfound
(8)     } # policy filter_username = notfound
(8)     [preprocess] = ok
(8)     [chap] = noop
(8)     [mschap] = noop
(8)     [digest] = noop
(8) suffix: Checking for suffix after "@"
(8) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(8) suffix: No such realm "NULL"
(8)     [suffix] = noop
(8) eap: Peer sent EAP Response (code 2) ID 135 length 105
(8) eap: Continuing tunnel setup
(8)     [eap] = ok
(8)   } # authorize = ok
(8) Found Auth-Type = eap
(8) # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/default
(8)   authenticate {
(8) eap: Expiring EAP session with state 0xf80bf2cbf88ce846
(8) eap: Finished EAP session with state 0x35b38fc1323496af
(8) eap: Previous EAP request found for state 0x35b38fc1323496af, released from the list
(8) eap: Peer sent packet with method EAP PEAP (25)
(8) eap: Calling submodule eap_peap to process data
(8) eap_peap: (TLS) EAP Done initial handshake
(8) eap_peap: Session established.  Decoding tunneled attributes
(8) eap_peap: PEAP state phase2
(8) eap_peap: EAP method MSCHAPv2 (26)
(8) eap_peap: Got tunneled request
(8) eap_peap:   EAP-Message = 0x0287004a1a02870045319c507da5c598803c1228792862f4fcee0000000000000000a1c6726ae31152393cc8ff43e03f0686c57ab2f2a59d66c300626f62406578616d706c652e6f7267
(8) eap_peap: Setting User-Name to bob@example.org
(8) eap_peap: Sending tunneled request to inner-tunnel
(8) eap_peap:   EAP-Message = 0x0287004a1a02870045319c507da5c598803c1228792862f4fcee0000000000000000a1c6726ae31152393cc8ff43e03f0686c57ab2f2a59d66c300626f62406578616d706c652e6f7267
(8) eap_peap:   FreeRADIUS-Proxied-To = 127.0.0.1
(8) eap_peap:   User-Name = "bob@example.org"
(8) eap_peap:   State = 0xf80bf2cbf88ce846013f866ee4245028
(8) Virtual server inner-tunnel received request
(8)   EAP-Message = 0x0287004a1a02870045319c507da5c598803c1228792862f4fcee0000000000000000a1c6726ae31152393cc8ff43e03f0686c57ab2f2a59d66c300626f62406578616d706c652e6f7267
(8)   FreeRADIUS-Proxied-To = 127.0.0.1
(8)   User-Name = "bob@example.org"
(8)   State = 0xf80bf2cbf88ce846013f866ee4245028
(8) server inner-tunnel {
(8)   session-state: No cached attributes
(8)   # Executing section authorize from file Freeradius/Conf/E_wpa3//sites-enabled/inner-tunnel
(8)     authorize {
(8)       policy filter_username {
(8)         if (&User-Name) {
(8)         if (&User-Name)  -> TRUE
(8)         if (&User-Name)  {
(8)           if (&User-Name =~ / /) {
(8)           if (&User-Name =~ / /)  -> FALSE
(8)           if (&User-Name =~ /@[^@]*@/ ) {
(8)           if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(8)           if (&User-Name =~ /\.\./ ) {
(8)           if (&User-Name =~ /\.\./ )  -> FALSE
(8)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(8)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(8)           if (&User-Name =~ /\.$/)  {
(8)           if (&User-Name =~ /\.$/)   -> FALSE
(8)           if (&User-Name =~ /@\./)  {
(8)           if (&User-Name =~ /@\./)   -> FALSE
(8)         } # if (&User-Name)  = notfound
(8)       } # policy filter_username = notfound
(8)       [chap] = noop
(8)       [mschap] = noop
(8) suffix: Checking for suffix after "@"
(8) suffix: Looking up realm "example.org" for User-Name = "bob@example.org"
(8) suffix: No such realm "example.org"
(8)       [suffix] = noop
(8)       update control {
(8)         &Proxy-To-Realm := LOCAL
(8)       } # update control = noop
(8) eap: Peer sent EAP Response (code 2) ID 135 length 74
(8) eap: No EAP Start, assuming it's an on-going EAP conversation
(8)       [eap] = updated
(8) files: users: Matched entry bob@example.org at line 1
(8) files: EXPAND Hello, %{User-Name}
(8) files:    --> Hello, bob@example.org
(8)       [files] = ok
(8)       [expiration] = noop
(8)       [logintime] = noop
(8) pap: WARNING: Auth-Type already set.  Not setting to PAP
(8)       [pap] = noop
(8)     } # authorize = updated
(8)   Found Auth-Type = eap
(8)   # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/inner-tunnel
(8)     authenticate {
(8) eap: Expiring EAP session with state 0xf80bf2cbf88ce846
(8) eap: Finished EAP session with state 0xf80bf2cbf88ce846
(8) eap: Previous EAP request found for state 0xf80bf2cbf88ce846, released from the list
(8) eap: Peer sent packet with method EAP MSCHAPv2 (26)
(8) eap: Calling submodule eap_mschapv2 to process data
(8) eap_mschapv2: # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/inner-tunnel
(8) eap_mschapv2:   authenticate {
(8) mschap: Found Cleartext-Password, hashing to create NT-Password
(8) mschap: Creating challenge hash with username: bob@example.org
(8) mschap: Client is using MS-CHAPv2
(8) mschap: Adding MS-CHAPv2 MPPE keys
(8) eap_mschapv2:     [mschap] = ok
(8) eap_mschapv2:   } # authenticate = ok
(8) eap_mschapv2: MSCHAP Success
(8) eap: Sending EAP Request (code 1) ID 136 length 51
(8) eap: EAP session adding &reply:State = 0xf80bf2cbf983e846
(8)       [eap] = handled
(8)     } # authenticate = handled
(8) } # server inner-tunnel
(8) Virtual server sending reply
(8)   Reply-Message = "Hello, bob@example.org"
(8)   EAP-Message = 0x018800331a0387002e533d34384343433239454441443943323141313241393439394444394338353036454346344637314138
(8)   Message-Authenticator = 0x00000000000000000000000000000000
(8)   State = 0xf80bf2cbf983e846013f866ee4245028
(8) eap_peap: Got tunneled reply code 11
(8) eap_peap:   Reply-Message = "Hello, bob@example.org"
(8) eap_peap:   EAP-Message = 0x018800331a0387002e533d34384343433239454441443943323141313241393439394444394338353036454346344637314138
(8) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(8) eap_peap:   State = 0xf80bf2cbf983e846013f866ee4245028
(8) eap_peap: Got tunneled reply RADIUS code 11
(8) eap_peap:   Reply-Message = "Hello, bob@example.org"
(8) eap_peap:   EAP-Message = 0x018800331a0387002e533d34384343433239454441443943323141313241393439394444394338353036454346344637314138
(8) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(8) eap_peap:   State = 0xf80bf2cbf983e846013f866ee4245028
(8) eap_peap: Got tunneled Access-Challenge
(8) eap: Sending EAP Request (code 1) ID 136 length 82
(8) eap: EAP session adding &reply:State = 0x35b38fc13d3b96af
(8)     [eap] = handled
(8)   } # authenticate = handled
(8) Using Post-Auth-Type Challenge
(8) # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/default
(8)   Challenge { ... } # empty sub-section is ignored
(8) session-state: Saving cached attributes
(8)   Framed-MTU = 994
(8)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(8)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(8)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(8)   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(8)   TLS-Session-Version = "TLS 1.2"
(8) Sent Access-Challenge Id 8 from 127.0.0.1:1812 to 127.0.0.1:57359 length 140
(8)   EAP-Message = 0x0188005219001703030047e8b152a7d165f3a57d5ab7d4cc76a9002e03b3e21fee0c83e14a8ef3cb8b2aa70ad884383e1d884b4ceeb131eae9d3da6512b190b0166baa6f2e49e35c312f2ad75eae5951f36a
(8)   Message-Authenticator = 0x00000000000000000000000000000000
(8)   State = 0x35b38fc13d3b96afd7cb2a2799695a9c
(8) Finished request
Waking up in 3.9 seconds.
(9) Received Access-Request Id 9 from 127.0.0.1:57359 to 127.0.0.1:1812 length 271
(9)   User-Name = "anonymous"
(9)   NAS-IP-Address = 127.0.0.1
(9)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(9)   NAS-Port-Type = Wireless-802.11
(9)   Service-Type = Framed-User
(9)   NAS-Port = 1
(9)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(9)   Connect-Info = "CONNECT 54Mbps 802.11g"
(9)   Acct-Session-Id = "4C00A3DC8CC849B5"
(9)   Acct-Multi-Session-Id = "609EA34E53C5D0C8"
(9)   WLAN-Pairwise-Cipher = 1027076
(9)   WLAN-Group-Cipher = 1027076
(9)   WLAN-AKM-Suite = 1027073
(9)   WLAN-Group-Mgmt-Cipher = 1027078
(9)   Framed-MTU = 1400
(9)   EAP-Message = 0x028800251900170303001a0000000000000003f891d9903dfaf777781c871be829b73497c8
(9)   State = 0x35b38fc13d3b96afd7cb2a2799695a9c
(9)   Message-Authenticator = 0x27131aa577f6e37cc0d47f4861c34e33
(9) Restoring &session-state
(9)   &session-state:Framed-MTU = 994
(9)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(9)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(9)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(9)   &session-state:TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(9)   &session-state:TLS-Session-Version = "TLS 1.2"
(9) # Executing section authorize from file Freeradius/Conf/E_wpa3//sites-enabled/default
(9)   authorize {
(9)     policy filter_username {
(9)       if (&User-Name) {
(9)       if (&User-Name)  -> TRUE
(9)       if (&User-Name)  {
(9)         if (&User-Name =~ / /) {
(9)         if (&User-Name =~ / /)  -> FALSE
(9)         if (&User-Name =~ /@[^@]*@/ ) {
(9)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(9)         if (&User-Name =~ /\.\./ ) {
(9)         if (&User-Name =~ /\.\./ )  -> FALSE
(9)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(9)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(9)         if (&User-Name =~ /\.$/)  {
(9)         if (&User-Name =~ /\.$/)   -> FALSE
(9)         if (&User-Name =~ /@\./)  {
(9)         if (&User-Name =~ /@\./)   -> FALSE
(9)       } # if (&User-Name)  = notfound
(9)     } # policy filter_username = notfound
(9)     [preprocess] = ok
(9)     [chap] = noop
(9)     [mschap] = noop
(9)     [digest] = noop
(9) suffix: Checking for suffix after "@"
(9) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(9) suffix: No such realm "NULL"
(9)     [suffix] = noop
(9) eap: Peer sent EAP Response (code 2) ID 136 length 37
(9) eap: Continuing tunnel setup
(9)     [eap] = ok
(9)   } # authorize = ok
(9) Found Auth-Type = eap
(9) # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/default
(9)   authenticate {
(9) eap: Expiring EAP session with state 0xf80bf2cbf983e846
(9) eap: Finished EAP session with state 0x35b38fc13d3b96af
(9) eap: Previous EAP request found for state 0x35b38fc13d3b96af, released from the list
(9) eap: Peer sent packet with method EAP PEAP (25)
(9) eap: Calling submodule eap_peap to process data
(9) eap_peap: (TLS) EAP Done initial handshake
(9) eap_peap: Session established.  Decoding tunneled attributes
(9) eap_peap: PEAP state phase2
(9) eap_peap: EAP method MSCHAPv2 (26)
(9) eap_peap: Got tunneled request
(9) eap_peap:   EAP-Message = 0x028800061a03
(9) eap_peap: Setting User-Name to bob@example.org
(9) eap_peap: Sending tunneled request to inner-tunnel
(9) eap_peap:   EAP-Message = 0x028800061a03
(9) eap_peap:   FreeRADIUS-Proxied-To = 127.0.0.1
(9) eap_peap:   User-Name = "bob@example.org"
(9) eap_peap:   State = 0xf80bf2cbf983e846013f866ee4245028
(9) Virtual server inner-tunnel received request
(9)   EAP-Message = 0x028800061a03
(9)   FreeRADIUS-Proxied-To = 127.0.0.1
(9)   User-Name = "bob@example.org"
(9)   State = 0xf80bf2cbf983e846013f866ee4245028
(9) server inner-tunnel {
(9)   session-state: No cached attributes
(9)   # Executing section authorize from file Freeradius/Conf/E_wpa3//sites-enabled/inner-tunnel
(9)     authorize {
(9)       policy filter_username {
(9)         if (&User-Name) {
(9)         if (&User-Name)  -> TRUE
(9)         if (&User-Name)  {
(9)           if (&User-Name =~ / /) {
(9)           if (&User-Name =~ / /)  -> FALSE
(9)           if (&User-Name =~ /@[^@]*@/ ) {
(9)           if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(9)           if (&User-Name =~ /\.\./ ) {
(9)           if (&User-Name =~ /\.\./ )  -> FALSE
(9)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(9)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(9)           if (&User-Name =~ /\.$/)  {
(9)           if (&User-Name =~ /\.$/)   -> FALSE
(9)           if (&User-Name =~ /@\./)  {
(9)           if (&User-Name =~ /@\./)   -> FALSE
(9)         } # if (&User-Name)  = notfound
(9)       } # policy filter_username = notfound
(9)       [chap] = noop
(9)       [mschap] = noop
(9) suffix: Checking for suffix after "@"
(9) suffix: Looking up realm "example.org" for User-Name = "bob@example.org"
(9) suffix: No such realm "example.org"
(9)       [suffix] = noop
(9)       update control {
(9)         &Proxy-To-Realm := LOCAL
(9)       } # update control = noop
(9) eap: Peer sent EAP Response (code 2) ID 136 length 6
(9) eap: No EAP Start, assuming it's an on-going EAP conversation
(9)       [eap] = updated
(9) files: users: Matched entry bob@example.org at line 1
(9) files: EXPAND Hello, %{User-Name}
(9) files:    --> Hello, bob@example.org
(9)       [files] = ok
(9)       [expiration] = noop
(9)       [logintime] = noop
(9) pap: WARNING: Auth-Type already set.  Not setting to PAP
(9)       [pap] = noop
(9)     } # authorize = updated
(9)   Found Auth-Type = eap
(9)   # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/inner-tunnel
(9)     authenticate {
(9) eap: Expiring EAP session with state 0xf80bf2cbf983e846
(9) eap: Finished EAP session with state 0xf80bf2cbf983e846
(9) eap: Previous EAP request found for state 0xf80bf2cbf983e846, released from the list
(9) eap: Peer sent packet with method EAP MSCHAPv2 (26)
(9) eap: Calling submodule eap_mschapv2 to process data
(9) eap: Sending EAP Success (code 3) ID 136 length 4
(9) eap: Freeing handler
(9)       [eap] = ok
(9)     } # authenticate = ok
(9)   # Executing section post-auth from file Freeradius/Conf/E_wpa3//sites-enabled/inner-tunnel
(9)     post-auth {
(9)       if (0) {
(9)       if (0)  -> FALSE
(9)     } # post-auth = noop
(9) } # server inner-tunnel
(9) Virtual server sending reply
(9)   Reply-Message = "Hello, bob@example.org"
(9)   MS-MPPE-Encryption-Policy = Encryption-Allowed
(9)   MS-MPPE-Encryption-Types = RC4-40or128-bit-Allowed
(9)   MS-MPPE-Send-Key = 0x3e0ad008303ae217a0fdff4356cf3674
(9)   MS-MPPE-Recv-Key = 0x7a07f0dcc4c618d4a9b578db66abde45
(9)   EAP-Message = 0x03880004
(9)   Message-Authenticator = 0x00000000000000000000000000000000
(9)   User-Name = "bob@example.org"
(9) eap_peap: Got tunneled reply code 2
(9) eap_peap:   Reply-Message = "Hello, bob@example.org"
(9) eap_peap:   MS-MPPE-Encryption-Policy = Encryption-Allowed
(9) eap_peap:   MS-MPPE-Encryption-Types = RC4-40or128-bit-Allowed
(9) eap_peap:   MS-MPPE-Send-Key = 0x3e0ad008303ae217a0fdff4356cf3674
(9) eap_peap:   MS-MPPE-Recv-Key = 0x7a07f0dcc4c618d4a9b578db66abde45
(9) eap_peap:   EAP-Message = 0x03880004
(9) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(9) eap_peap:   User-Name = "bob@example.org"
(9) eap_peap: Got tunneled reply RADIUS code 2
(9) eap_peap:   Reply-Message = "Hello, bob@example.org"
(9) eap_peap:   MS-MPPE-Encryption-Policy = Encryption-Allowed
(9) eap_peap:   MS-MPPE-Encryption-Types = RC4-40or128-bit-Allowed
(9) eap_peap:   MS-MPPE-Send-Key = 0x3e0ad008303ae217a0fdff4356cf3674
(9) eap_peap:   MS-MPPE-Recv-Key = 0x7a07f0dcc4c618d4a9b578db66abde45
(9) eap_peap:   EAP-Message = 0x03880004
(9) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(9) eap_peap:   User-Name = "bob@example.org"
(9) eap_peap: Tunneled authentication was successful
(9) eap_peap: SUCCESS
(9) eap: Sending EAP Request (code 1) ID 137 length 46
(9) eap: EAP session adding &reply:State = 0x35b38fc13c3a96af
(9)     [eap] = handled
(9)   } # authenticate = handled
(9) Using Post-Auth-Type Challenge
(9) # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/default
(9)   Challenge { ... } # empty sub-section is ignored
(9) session-state: Saving cached attributes
(9)   Framed-MTU = 994
(9)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(9)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(9)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(9)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(9)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(9)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(9)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(9)   TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(9)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(9)   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(9)   TLS-Session-Version = "TLS 1.2"
(9) Sent Access-Challenge Id 9 from 127.0.0.1:1812 to 127.0.0.1:57359 length 104
(9)   EAP-Message = 0x0189002e19001703030023e8b152a7d165f3a62e0d47d10c0cf6ece7ffc5156887cfdba438765d6efe6333453231
(9)   Message-Authenticator = 0x00000000000000000000000000000000
(9)   State = 0x35b38fc13c3a96afd7cb2a2799695a9c
(9) Finished request
Waking up in 3.8 seconds.
(10) Received Access-Request Id 10 from 127.0.0.1:57359 to 127.0.0.1:1812 length 280
(10)   User-Name = "anonymous"
(10)   NAS-IP-Address = 127.0.0.1
(10)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(10)   NAS-Port-Type = Wireless-802.11
(10)   Service-Type = Framed-User
(10)   NAS-Port = 1
(10)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(10)   Connect-Info = "CONNECT 54Mbps 802.11g"
(10)   Acct-Session-Id = "4C00A3DC8CC849B5"
(10)   Acct-Multi-Session-Id = "609EA34E53C5D0C8"
(10)   WLAN-Pairwise-Cipher = 1027076
(10)   WLAN-Group-Cipher = 1027076
(10)   WLAN-AKM-Suite = 1027073
(10)   WLAN-Group-Mgmt-Cipher = 1027078
(10)   Framed-MTU = 1400
(10)   EAP-Message = 0x0289002e1900170303002300000000000000044d2c6c248d52fe02fae05229c984675b633e1ad9f1cc3897c30f54
(10)   State = 0x35b38fc13c3a96afd7cb2a2799695a9c
(10)   Message-Authenticator = 0x8f87e44fcd018cd86398ecc2141c6afd
(10) Restoring &session-state
(10)   &session-state:Framed-MTU = 994
(10)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(10)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(10)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(10)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(10)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(10)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(10)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(10)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(10)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(10)   &session-state:TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(10)   &session-state:TLS-Session-Version = "TLS 1.2"
(10) # Executing section authorize from file Freeradius/Conf/E_wpa3//sites-enabled/default
(10)   authorize {
(10)     policy filter_username {
(10)       if (&User-Name) {
(10)       if (&User-Name)  -> TRUE
(10)       if (&User-Name)  {
(10)         if (&User-Name =~ / /) {
(10)         if (&User-Name =~ / /)  -> FALSE
(10)         if (&User-Name =~ /@[^@]*@/ ) {
(10)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(10)         if (&User-Name =~ /\.\./ ) {
(10)         if (&User-Name =~ /\.\./ )  -> FALSE
(10)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(10)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(10)         if (&User-Name =~ /\.$/)  {
(10)         if (&User-Name =~ /\.$/)   -> FALSE
(10)         if (&User-Name =~ /@\./)  {
(10)         if (&User-Name =~ /@\./)   -> FALSE
(10)       } # if (&User-Name)  = notfound
(10)     } # policy filter_username = notfound
(10)     [preprocess] = ok
(10)     [chap] = noop
(10)     [mschap] = noop
(10)     [digest] = noop
(10) suffix: Checking for suffix after "@"
(10) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(10) suffix: No such realm "NULL"
(10)     [suffix] = noop
(10) eap: Peer sent EAP Response (code 2) ID 137 length 46
(10) eap: Continuing tunnel setup
(10)     [eap] = ok
(10)   } # authorize = ok
(10) Found Auth-Type = eap
(10) # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/default
(10)   authenticate {
(10) eap: Expiring EAP session with state 0x35b38fc13c3a96af
(10) eap: Finished EAP session with state 0x35b38fc13c3a96af
(10) eap: Previous EAP request found for state 0x35b38fc13c3a96af, released from the list
(10) eap: Peer sent packet with method EAP PEAP (25)
(10) eap: Calling submodule eap_peap to process data
(10) eap_peap: (TLS) EAP Done initial handshake
(10) eap_peap: Session established.  Decoding tunneled attributes
(10) eap_peap: PEAP state send tlv success
(10) eap_peap: Received EAP-TLV response
(10) eap_peap: Success
(10) eap: Sending EAP Success (code 3) ID 137 length 4
(10) eap: Freeing handler
(10)     [eap] = ok
(10)   } # authenticate = ok
(10) # Executing section post-auth from file Freeradius/Conf/E_wpa3//sites-enabled/default
(10)   post-auth {
(10)     if (session-state:User-Name && reply:User-Name && request:User-Name && (reply:User-Name == request:User-Name)) {
(10)     if (session-state:User-Name && reply:User-Name && request:User-Name && (reply:User-Name == request:User-Name))  -> FALSE
(10)     update {
(10)       &reply::Framed-MTU += &session-state:Framed-MTU[*] -> 994
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) recv TLS 1.3 Handshake, ClientHello'
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, ServerHello'
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, Certificate'
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, ServerKeyExchange'
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, ServerHelloDone'
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) recv TLS 1.2 Handshake, ClientKeyExchange'
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) recv TLS 1.2 Handshake, Finished'
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 ChangeCipherSpec'
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, Finished'
(10)       &reply::TLS-Session-Cipher-Suite += &session-state:TLS-Session-Cipher-Suite[*] -> 'ECDHE-RSA-AES256-GCM-SHA384'
(10)       &reply::TLS-Session-Version += &session-state:TLS-Session-Version[*] -> 'TLS 1.2'
(10)     } # update = noop
(10)     [exec] = noop
(10)     policy remove_reply_message_if_eap {
(10)       if (&reply:EAP-Message && &reply:Reply-Message) {
(10)       if (&reply:EAP-Message && &reply:Reply-Message)  -> FALSE
(10)       else {
(10)         [noop] = noop
(10)       } # else = noop
(10)     } # policy remove_reply_message_if_eap = noop
(10)     if (EAP-Key-Name && &reply:EAP-Session-Id) {
(10)     if (EAP-Key-Name && &reply:EAP-Session-Id)  -> FALSE
(10)   } # post-auth = noop
(10) Sent Access-Accept Id 10 from 127.0.0.1:1812 to 127.0.0.1:57359 length 177
(10)   MS-MPPE-Recv-Key = 0x3325e9b076453745a616a96011827895d0b9ce9788709cfd6632712c472ac8f5
(10)   MS-MPPE-Send-Key = 0x272e44a27a19e9da66565627e3b105a4dc2634c93ed7a9421d890897036659dc
(10)   EAP-Message = 0x03890004
(10)   Message-Authenticator = 0x00000000000000000000000000000000
(10)   User-Name = "anonymous"
(10)   Framed-MTU += 994
(10) Finished request
Waking up in 3.7 seconds.
(0) Cleaning up request packet ID 0 with timestamp +5 due to cleanup_delay was reached
(1) Cleaning up request packet ID 1 with timestamp +5 due to cleanup_delay was reached
(2) Cleaning up request packet ID 2 with timestamp +5 due to cleanup_delay was reached
(3) Cleaning up request packet ID 3 with timestamp +5 due to cleanup_delay was reached
(4) Cleaning up request packet ID 4 with timestamp +5 due to cleanup_delay was reached
Waking up in 0.4 seconds.
(5) Cleaning up request packet ID 5 with timestamp +6 due to cleanup_delay was reached
Waking up in 0.1 seconds.
(6) Cleaning up request packet ID 6 with timestamp +6 due to cleanup_delay was reached
(7) Cleaning up request packet ID 7 with timestamp +6 due to cleanup_delay was reached
Waking up in 0.2 seconds.
(8) Cleaning up request packet ID 8 with timestamp +6 due to cleanup_delay was reached
(9) Cleaning up request packet ID 9 with timestamp +6 due to cleanup_delay was reached
(10) Cleaning up request packet ID 10 with timestamp +6 due to cleanup_delay was reached
Ready to process requests
Ready to process requests
Signalled to terminate
Exiting normally

[0;36mFreeRADIUS is stopped.[0m


[20:03:58.331] Beginning saving session of stdout and stderr Test/Tmp/Log/ESP32/e_rogue_wpa3...
[0;32mSuccess.[0m

[20:03:58.333] Fetching configuration directory associated to e_rogue_wpa3...
[0;32mSuccess.[0m

[20:03:58.350] Looking for Freeradius/Conf/E_rogue_wpa3/...
[0;32mSuccess.[0m

[0;36mRunning FreeRADIUS. Press Ctrl-C to stop.[0m

FreeRADIUS Version 3.0.26
Copyright (C) 1999-2021 The FreeRADIUS server project and contributors
There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE
You may redistribute copies of FreeRADIUS under the terms of the
GNU General Public License
For more information about these matters, see the file named COPYRIGHT
Starting - reading configuration files ...
including dictionary file /usr/share/freeradius/dictionary
including dictionary file /usr/share/freeradius/dictionary.dhcp
including dictionary file /usr/share/freeradius/dictionary.vqp
including dictionary file Freeradius/Conf/E_rogue_wpa3//dictionary
including configuration file Freeradius/Conf/E_rogue_wpa3//radiusd.conf
including configuration file Freeradius/Conf/E_rogue_wpa3//proxy.conf
including configuration file Freeradius/Conf/E_rogue_wpa3//clients.conf
including files in directory Freeradius/Conf/E_rogue_wpa3//mods-enabled/
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/files
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/passwd
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/expr
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/soh
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/digest
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/dynamic_clients
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/unix
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/echo
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/preprocess
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/replicate
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/pap
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/detail
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/cache_eap
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/mschap
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/eap
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/logintime
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/utf8
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/unpack
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/radutmp
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/expiration
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/chap
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/realm
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/sradutmp
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/attr_filter
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/ntlm_auth
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/detail.log
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/exec
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/linelog
including files in directory Freeradius/Conf/E_rogue_wpa3//policy.d/
including configuration file Freeradius/Conf/E_rogue_wpa3//policy.d/operator-name
including configuration file Freeradius/Conf/E_rogue_wpa3//policy.d/dhcp
including configuration file Freeradius/Conf/E_rogue_wpa3//policy.d/rfc7542
including configuration file Freeradius/Conf/E_rogue_wpa3//policy.d/accounting
including configuration file Freeradius/Conf/E_rogue_wpa3//policy.d/filter
including configuration file Freeradius/Conf/E_rogue_wpa3//policy.d/cui
including configuration file Freeradius/Conf/E_rogue_wpa3//policy.d/moonshot-targeted-ids
including configuration file Freeradius/Conf/E_rogue_wpa3//policy.d/canonicalization
including configuration file Freeradius/Conf/E_rogue_wpa3//policy.d/eap
including configuration file Freeradius/Conf/E_rogue_wpa3//policy.d/control
including configuration file Freeradius/Conf/E_rogue_wpa3//policy.d/abfab-tr
including configuration file Freeradius/Conf/E_rogue_wpa3//policy.d/debug
including files in directory Freeradius/Conf/E_rogue_wpa3//sites-enabled/
including configuration file Freeradius/Conf/E_rogue_wpa3//sites-enabled/inner-tunnel
including configuration file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
main {
 security {
 	user = "freerad"
 	group = "freerad"
 	allow_core_dumps = no
 }
	name = "freeradius"
	prefix = "/usr"
	localstatedir = "/var"
	logdir = "/var/log/freeradius"
	run_dir = "/var/run/freeradius"
}
main {
	name = "freeradius"
	prefix = "/usr"
	localstatedir = "/var"
	sbindir = "/usr/sbin"
	logdir = "/var/log/freeradius"
	run_dir = "/var/run/freeradius"
	libdir = "/usr/lib/freeradius"
	radacctdir = "/var/log/freeradius/radacct"
	hostname_lookups = no
	max_request_time = 30
	cleanup_delay = 5
	max_requests = 16384
	postauth_client_lost = no
	pidfile = "/var/run/freeradius/freeradius.pid"
	checkrad = "/usr/sbin/checkrad"
	debug_level = 0
	proxy_requests = yes
 log {
 	stripped_names = no
 	auth = no
 	auth_badpass = no
 	auth_goodpass = no
 	colourise = yes
 	msg_denied = "You are already logged in - access denied"
 }
 resources {
 }
 security {
 	max_attributes = 200
 	reject_delay = 1.000000
 	status_server = yes
 }
}
radiusd: #### Loading Realms and Home Servers ####
 proxy server {
 	retry_delay = 5
 	retry_count = 3
 	default_fallback = no
 	dead_time = 120
 	wake_all_if_all_dead = no
 }
 home_server localhost {
 	ipaddr = 127.0.0.1
 	port = 1812
 	type = "auth"
 	secret = <<< secret >>>
 	response_window = 20.000000
 	response_timeouts = 1
 	max_outstanding = 65536
 	zombie_period = 40
 	status_check = "status-server"
 	ping_interval = 30
 	check_interval = 30
 	check_timeout = 4
 	num_answers_to_alive = 3
 	revive_interval = 120
  limit {
  	max_connections = 16
  	max_requests = 0
  	lifetime = 0
  	idle_timeout = 0
  }
  coa {
  	irt = 2
  	mrt = 16
  	mrc = 5
  	mrd = 30
  }
 }
 home_server_pool my_auth_failover {
	type = fail-over
	home_server = localhost
 }
 realm example.com {
	auth_pool = my_auth_failover
 }
 realm LOCAL {
 }
radiusd: #### Loading Clients ####
 client localhost {
 	ipaddr = 127.0.0.1
 	require_message_authenticator = no
 	secret = <<< secret >>>
 	nas_type = "other"
 	proto = "*"
  limit {
  	max_connections = 16
  	lifetime = 0
  	idle_timeout = 30
  }
 }
 client localhost_ipv6 {
 	ipv6addr = ::1
 	require_message_authenticator = no
 	secret = <<< secret >>>
  limit {
  	max_connections = 16
  	lifetime = 0
  	idle_timeout = 30
  }
 }
Debugger not attached
systemd watchdog is disabled
 # Creating Auth-Type = mschap
 # Creating Auth-Type = eap
 # Creating Auth-Type = PAP
 # Creating Auth-Type = CHAP
 # Creating Auth-Type = MS-CHAP
 # Creating Auth-Type = digest
 # Creating Autz-Type = New-TLS-Connection
radiusd: #### Instantiating modules ####
 modules {
  # Loaded module rlm_files
  # Loading module "files" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/files
  files {
  	filename = "Freeradius/Conf/E_rogue_wpa3//mods-config/files/authorize"
  	acctusersfile = "Freeradius/Conf/E_rogue_wpa3//mods-config/files/accounting"
  	preproxy_usersfile = "Freeradius/Conf/E_rogue_wpa3//mods-config/files/pre-proxy"
  }
  # Loaded module rlm_passwd
  # Loading module "etc_passwd" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/passwd
  passwd etc_passwd {
  	filename = "/etc/passwd"
  	format = "*User-Name:Crypt-Password:"
  	delimiter = ":"
  	ignore_nislike = no
  	ignore_empty = yes
  	allow_multiple_keys = no
  	hash_size = 100
  }
  # Loaded module rlm_expr
  # Loading module "expr" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/expr
  expr {
  	safe_characters = "@abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789.-_: /√§√©√∂√º√†√¢√¶√ß√®√©√™√´√Æ√Ø√¥≈ì√π√ª√ºa√ø√Ñ√â√ñ√ú√ü√Ä√Ç√Ü√á√à√â√ä√ã√é√è√î≈í√ô√õ√ú≈∏"
  }
  # Loaded module rlm_soh
  # Loading module "soh" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/soh
  soh {
  	dhcp = yes
  }
  # Loaded module rlm_digest
  # Loading module "digest" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/digest
  # Loaded module rlm_dynamic_clients
  # Loading module "dynamic_clients" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/dynamic_clients
  # Loaded module rlm_unix
  # Loading module "unix" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/unix
  unix {
  	radwtmp = "/var/log/freeradius/radwtmp"
  }
Creating attribute Unix-Group
  # Loaded module rlm_exec
  # Loading module "echo" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/echo
  exec echo {
  	wait = yes
  	program = "/bin/echo %{User-Name}"
  	input_pairs = "request"
  	output_pairs = "reply"
  	shell_escape = yes
  }
  # Loaded module rlm_preprocess
  # Loading module "preprocess" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/preprocess
  preprocess {
  	huntgroups = "Freeradius/Conf/E_rogue_wpa3//mods-config/preprocess/huntgroups"
  	hints = "Freeradius/Conf/E_rogue_wpa3//mods-config/preprocess/hints"
  	with_ascend_hack = no
  	ascend_channels_per_line = 23
  	with_ntdomain_hack = no
  	with_specialix_jetstream_hack = no
  	with_cisco_vsa_hack = no
  	with_alvarion_vsa_hack = no
  }
  # Loaded module rlm_replicate
  # Loading module "replicate" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/replicate
  # Loaded module rlm_pap
  # Loading module "pap" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/pap
  pap {
  	normalise = yes
  }
  # Loaded module rlm_always
  # Loading module "reject" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  always reject {
  	rcode = "reject"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "fail" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  always fail {
  	rcode = "fail"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "ok" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  always ok {
  	rcode = "ok"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "handled" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  always handled {
  	rcode = "handled"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "invalid" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  always invalid {
  	rcode = "invalid"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "userlock" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  always userlock {
  	rcode = "userlock"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "notfound" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  always notfound {
  	rcode = "notfound"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "noop" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  always noop {
  	rcode = "noop"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "updated" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  always updated {
  	rcode = "updated"
  	simulcount = 0
  	mpp = no
  }
  # Loaded module rlm_detail
  # Loading module "detail" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/detail
  detail {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loaded module rlm_cache
  # Loading module "cache_eap" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/cache_eap
  cache cache_eap {
  	driver = "rlm_cache_rbtree"
  	key = "%{%{control:State}:-%{%{reply:State}:-%{State}}}"
  	ttl = 15
  	max_entries = 0
  	epoch = 0
  	add_stats = no
  }
  # Loaded module rlm_mschap
  # Loading module "mschap" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/mschap
  mschap {
  	use_mppe = yes
  	require_encryption = no
  	require_strong = no
  	with_ntdomain_hack = yes
   passchange {
   }
  	allow_retry = yes
  	winbind_retry_with_normalised_username = no
  }
  # Loaded module rlm_eap
  # Loading module "eap" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/eap
  eap {
  	default_eap_type = "md5"
  	timer_expire = 60
  	ignore_unknown_eap_types = no
  	cisco_accounting_username_bug = no
  	max_sessions = 16384
  }
  # Loaded module rlm_logintime
  # Loading module "logintime" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/logintime
  logintime {
  	minimum_timeout = 60
  }
  # Loaded module rlm_utf8
  # Loading module "utf8" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/utf8
  # Loaded module rlm_unpack
  # Loading module "unpack" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/unpack
  # Loaded module rlm_radutmp
  # Loading module "radutmp" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/radutmp
  radutmp {
  	filename = "/var/log/freeradius/radutmp"
  	username = "%{User-Name}"
  	case_sensitive = yes
  	check_with_nas = yes
  	permissions = 384
  	caller_id = yes
  }
  # Loaded module rlm_expiration
  # Loading module "expiration" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/expiration
  # Loaded module rlm_chap
  # Loading module "chap" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/chap
  # Loaded module rlm_realm
  # Loading module "IPASS" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/realm
  realm IPASS {
  	format = "prefix"
  	delimiter = "/"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "suffix" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/realm
  realm suffix {
  	format = "suffix"
  	delimiter = "@"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "bangpath" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/realm
  realm bangpath {
  	format = "prefix"
  	delimiter = "!"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "realmpercent" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/realm
  realm realmpercent {
  	format = "suffix"
  	delimiter = "%"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "ntdomain" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/realm
  realm ntdomain {
  	format = "prefix"
  	delimiter = "\\"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "sradutmp" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/sradutmp
  radutmp sradutmp {
  	filename = "/var/log/freeradius/sradutmp"
  	username = "%{User-Name}"
  	case_sensitive = yes
  	check_with_nas = yes
  	permissions = 420
  	caller_id = no
  }
  # Loaded module rlm_attr_filter
  # Loading module "attr_filter.post-proxy" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/attr_filter
  attr_filter attr_filter.post-proxy {
  	filename = "Freeradius/Conf/E_rogue_wpa3//mods-config/attr_filter/post-proxy"
  	key = "%{Realm}"
  	relaxed = no
  }
  # Loading module "attr_filter.pre-proxy" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/attr_filter
  attr_filter attr_filter.pre-proxy {
  	filename = "Freeradius/Conf/E_rogue_wpa3//mods-config/attr_filter/pre-proxy"
  	key = "%{Realm}"
  	relaxed = no
  }
  # Loading module "attr_filter.access_reject" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/attr_filter
  attr_filter attr_filter.access_reject {
  	filename = "Freeradius/Conf/E_rogue_wpa3//mods-config/attr_filter/access_reject"
  	key = "%{User-Name}"
  	relaxed = no
  }
  # Loading module "attr_filter.access_challenge" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/attr_filter
  attr_filter attr_filter.access_challenge {
  	filename = "Freeradius/Conf/E_rogue_wpa3//mods-config/attr_filter/access_challenge"
  	key = "%{User-Name}"
  	relaxed = no
  }
  # Loading module "attr_filter.accounting_response" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/attr_filter
  attr_filter attr_filter.accounting_response {
  	filename = "Freeradius/Conf/E_rogue_wpa3//mods-config/attr_filter/accounting_response"
  	key = "%{User-Name}"
  	relaxed = no
  }
  # Loading module "attr_filter.coa" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/attr_filter
  attr_filter attr_filter.coa {
  	filename = "Freeradius/Conf/E_rogue_wpa3//mods-config/attr_filter/coa"
  	key = "%{User-Name}"
  	relaxed = no
  }
  # Loading module "ntlm_auth" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/ntlm_auth
  exec ntlm_auth {
  	wait = yes
  	program = "/path/to/ntlm_auth --request-nt-key --domain=MYDOMAIN --username=%{mschap:User-Name} --password=%{User-Password}"
  	shell_escape = yes
  }
  # Loading module "auth_log" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/detail.log
  detail auth_log {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/auth-detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loading module "reply_log" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/detail.log
  detail reply_log {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/reply-detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loading module "pre_proxy_log" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/detail.log
  detail pre_proxy_log {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/pre-proxy-detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loading module "post_proxy_log" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/detail.log
  detail post_proxy_log {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/post-proxy-detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loading module "exec" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/exec
  exec {
  	wait = no
  	input_pairs = "request"
  	shell_escape = yes
  	timeout = 10
  }
  # Loaded module rlm_linelog
  # Loading module "linelog" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/linelog
  linelog {
  	filename = "/var/log/freeradius/linelog"
  	escape_filenames = no
  	syslog_severity = "info"
  	permissions = 384
  	format = "This is a log message for %{User-Name}"
  	reference = "messages.%{%{reply:Packet-Type}:-default}"
  }
  # Loading module "log_accounting" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/linelog
  linelog log_accounting {
  	filename = "/var/log/freeradius/linelog-accounting"
  	escape_filenames = no
  	syslog_severity = "info"
  	permissions = 384
  	format = ""
  	reference = "Accounting-Request.%{%{Acct-Status-Type}:-unknown}"
  }
  instantiate {
  }
  # Instantiating module "files" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/files
reading pairlist file Freeradius/Conf/E_rogue_wpa3//mods-config/files/authorize
reading pairlist file Freeradius/Conf/E_rogue_wpa3//mods-config/files/accounting
reading pairlist file Freeradius/Conf/E_rogue_wpa3//mods-config/files/pre-proxy
  # Instantiating module "etc_passwd" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/passwd
rlm_passwd: nfields: 3 keyfield 0(User-Name) listable: no
  # Instantiating module "preprocess" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/preprocess
reading pairlist file Freeradius/Conf/E_rogue_wpa3//mods-config/preprocess/huntgroups
reading pairlist file Freeradius/Conf/E_rogue_wpa3//mods-config/preprocess/hints
  # Instantiating module "pap" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/pap
  # Instantiating module "reject" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  # Instantiating module "fail" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  # Instantiating module "ok" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  # Instantiating module "handled" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  # Instantiating module "invalid" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  # Instantiating module "userlock" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  # Instantiating module "notfound" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  # Instantiating module "noop" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  # Instantiating module "updated" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  # Instantiating module "detail" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/detail
  # Instantiating module "cache_eap" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/cache_eap
rlm_cache (cache_eap): Driver rlm_cache_rbtree (module rlm_cache_rbtree) loaded and linked
  # Instantiating module "mschap" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/mschap
rlm_mschap (mschap): using internal authentication
  # Instantiating module "eap" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/eap
   # Linked to sub-module rlm_eap_md5
   # Linked to sub-module rlm_eap_gtc
   gtc {
   	challenge = "Password: "
   	auth_type = "PAP"
   }
   # Linked to sub-module rlm_eap_tls
   tls {
   	tls = "tls-common"
   }
   tls-config tls-common {
   	verify_depth = 0
   	ca_path = "Freeradius/Conf/E_rogue_wpa3//certs"
   	pem_file_type = yes
   	private_key_file = "Freeradius/Conf/E_rogue_wpa3//certs/server.key"
   	certificate_file = "Freeradius/Conf/E_rogue_wpa3//certs/server.crt"
   	ca_file = "Freeradius/Conf/E_rogue_wpa3//certs/ca.pem"
   	private_key_password = <<< secret >>>
   	fragment_size = 1024
   	include_length = yes
   	auto_chain = yes
   	check_crl = no
   	check_all_crl = no
   	ca_path_reload_interval = 0
   	cipher_list = "DEFAULT"
   	cipher_server_preference = no
   	reject_unknown_intermediate_ca = no
   	ecdh_curve = ""
   	tls_max_version = "1.2"
   	tls_min_version = "1.2"
    cache {
    	enable = no
    	lifetime = 24
    	max_entries = 255
    }
    verify {
    	skip_if_ocsp_ok = no
    }
    ocsp {
    	enable = no
    	override_cert_url = yes
    	url = "http://127.0.0.1/ocsp/"
    	use_nonce = yes
    	timeout = 0
    	softfail = no
    }
   }
   # Linked to sub-module rlm_eap_ttls
   ttls {
   	tls = "tls-common"
   	default_eap_type = "md5"
   	copy_request_to_tunnel = no
   	use_tunneled_reply = no
   	virtual_server = "inner-tunnel"
   	include_length = yes
   	require_client_cert = no
   }
tls: Using cached TLS configuration from previous invocation
   # Linked to sub-module rlm_eap_peap
   peap {
   	tls = "tls-common"
   	default_eap_type = "mschapv2"
   	copy_request_to_tunnel = no
   	use_tunneled_reply = no
   	proxy_tunneled_request_as_eap = yes
   	virtual_server = "inner-tunnel"
   	soh = no
   	require_client_cert = no
   }
tls: Using cached TLS configuration from previous invocation
   # Linked to sub-module rlm_eap_mschapv2
   mschapv2 {
   	with_ntdomain_hack = no
   	send_error = no
   }
  # Instantiating module "logintime" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/logintime
  # Instantiating module "expiration" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/expiration
  # Instantiating module "IPASS" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/realm
  # Instantiating module "suffix" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/realm
  # Instantiating module "bangpath" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/realm
  # Instantiating module "realmpercent" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/realm
  # Instantiating module "ntdomain" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/realm
  # Instantiating module "attr_filter.post-proxy" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/attr_filter
reading pairlist file Freeradius/Conf/E_rogue_wpa3//mods-config/attr_filter/post-proxy
  # Instantiating module "attr_filter.pre-proxy" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/attr_filter
reading pairlist file Freeradius/Conf/E_rogue_wpa3//mods-config/attr_filter/pre-proxy
  # Instantiating module "attr_filter.access_reject" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/attr_filter
reading pairlist file Freeradius/Conf/E_rogue_wpa3//mods-config/attr_filter/access_reject
  # Instantiating module "attr_filter.access_challenge" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/attr_filter
reading pairlist file Freeradius/Conf/E_rogue_wpa3//mods-config/attr_filter/access_challenge
  # Instantiating module "attr_filter.accounting_response" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/attr_filter
reading pairlist file Freeradius/Conf/E_rogue_wpa3//mods-config/attr_filter/accounting_response
  # Instantiating module "attr_filter.coa" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/attr_filter
reading pairlist file Freeradius/Conf/E_rogue_wpa3//mods-config/attr_filter/coa
  # Instantiating module "auth_log" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/detail.log
rlm_detail (auth_log): 'User-Password' suppressed, will not appear in detail output
  # Instantiating module "reply_log" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/detail.log
  # Instantiating module "pre_proxy_log" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/detail.log
  # Instantiating module "post_proxy_log" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/detail.log
  # Instantiating module "linelog" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/linelog
  # Instantiating module "log_accounting" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/linelog
 } # modules
radiusd: #### Loading Virtual Servers ####
server { # from file Freeradius/Conf/E_rogue_wpa3//radiusd.conf
} # server
server inner-tunnel { # from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/inner-tunnel
 # Loading authenticate {...}
Compiling Auth-Type PAP for attr Auth-Type
Compiling Auth-Type CHAP for attr Auth-Type
Compiling Auth-Type MS-CHAP for attr Auth-Type
 # Loading authorize {...}
Ignoring "sql" (see raddb/mods-available/README.rst)
Ignoring "ldap" (see raddb/mods-available/README.rst)
 # Loading session {...}
 # Loading post-proxy {...}
 # Loading post-auth {...}
 # Skipping contents of 'if' as it is always 'false' -- Freeradius/Conf/E_rogue_wpa3//sites-enabled/inner-tunnel:336
Compiling Post-Auth-Type REJECT for attr Post-Auth-Type
} # server inner-tunnel
server default { # from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
 # Loading authenticate {...}
Compiling Auth-Type PAP for attr Auth-Type
Compiling Auth-Type CHAP for attr Auth-Type
Compiling Auth-Type MS-CHAP for attr Auth-Type
 # Loading authorize {...}
Compiling Autz-Type New-TLS-Connection for attr Autz-Type
 # Loading preacct {...}
 # Loading accounting {...}
 # Loading post-proxy {...}
 # Loading post-auth {...}
Compiling Post-Auth-Type REJECT for attr Post-Auth-Type
Compiling Post-Auth-Type Challenge for attr Post-Auth-Type
Compiling Post-Auth-Type Client-Lost for attr Post-Auth-Type
} # server default
radiusd: #### Opening IP addresses and Ports ####
listen {
  	type = "auth"
  	ipaddr = 127.0.0.1
  	port = 18120
}
listen {
  	type = "auth"
  	ipaddr = *
  	port = 0
   limit {
   	max_connections = 16
   	lifetime = 0
   	idle_timeout = 30
   }
}
listen {
  	type = "acct"
  	ipaddr = *
  	port = 0
   limit {
   	max_connections = 16
   	lifetime = 0
   	idle_timeout = 30
   }
}
listen {
  	type = "auth"
  	ipv6addr = ::
  	port = 0
   limit {
   	max_connections = 16
   	lifetime = 0
   	idle_timeout = 30
   }
}
listen {
  	type = "acct"
  	ipv6addr = ::
  	port = 0
   limit {
   	max_connections = 16
   	lifetime = 0
   	idle_timeout = 30
   }
}
Listening on auth address 127.0.0.1 port 18120 bound to server inner-tunnel
Listening on auth address * port 1812 bound to server default
Listening on acct address * port 1813 bound to server default
Listening on auth address :: port 1812 bound to server default
Listening on acct address :: port 1813 bound to server default
Listening on proxy address * port 58764
Listening on proxy address :: port 36755
Ready to process requests
(0) Received Access-Request Id 0 from 127.0.0.1:34030 to 127.0.0.1:1812 length 230
(0)   User-Name = "anonymous"
(0)   NAS-IP-Address = 127.0.0.1
(0)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(0)   NAS-Port-Type = Wireless-802.11
(0)   Service-Type = Framed-User
(0)   NAS-Port = 1
(0)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(0)   Connect-Info = "CONNECT 54Mbps 802.11g"
(0)   Acct-Session-Id = "438644E561DD546B"
(0)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(0)   WLAN-Pairwise-Cipher = 1027076
(0)   WLAN-Group-Cipher = 1027076
(0)   WLAN-AKM-Suite = 1027073
(0)   WLAN-Group-Mgmt-Cipher = 1027078
(0)   Framed-MTU = 1400
(0)   EAP-Message = 0x02ff000e01616e6f6e796d6f7573
(0)   Message-Authenticator = 0x3a7931b2367a00b19eb4e2eff32d1042
(0) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(0)   authorize {
(0)     policy filter_username {
(0)       if (&User-Name) {
(0)       if (&User-Name)  -> TRUE
(0)       if (&User-Name)  {
(0)         if (&User-Name =~ / /) {
(0)         if (&User-Name =~ / /)  -> FALSE
(0)         if (&User-Name =~ /@[^@]*@/ ) {
(0)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(0)         if (&User-Name =~ /\.\./ ) {
(0)         if (&User-Name =~ /\.\./ )  -> FALSE
(0)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(0)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(0)         if (&User-Name =~ /\.$/)  {
(0)         if (&User-Name =~ /\.$/)   -> FALSE
(0)         if (&User-Name =~ /@\./)  {
(0)         if (&User-Name =~ /@\./)   -> FALSE
(0)       } # if (&User-Name)  = notfound
(0)     } # policy filter_username = notfound
(0)     [preprocess] = ok
(0)     [chap] = noop
(0)     [mschap] = noop
(0)     [digest] = noop
(0) suffix: Checking for suffix after "@"
(0) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(0) suffix: No such realm "NULL"
(0)     [suffix] = noop
(0) eap: Peer sent EAP Response (code 2) ID 255 length 14
(0) eap: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
(0)     [eap] = ok
(0)   } # authorize = ok
(0) Found Auth-Type = eap
(0) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(0)   authenticate {
(0) eap: Peer sent packet with method EAP Identity (1)
(0) eap: Calling submodule eap_md5 to process data
(0) eap_md5: Issuing MD5 Challenge
(0) eap: Sending EAP Request (code 1) ID 0 length 22
(0) eap: EAP session adding &reply:State = 0xf8eda5dbf8eda1be
(0)     [eap] = handled
(0)   } # authenticate = handled
(0) Using Post-Auth-Type Challenge
(0) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(0)   Challenge { ... } # empty sub-section is ignored
(0) Sent Access-Challenge Id 0 from 127.0.0.1:1812 to 127.0.0.1:34030 length 80
(0)   EAP-Message = 0x01000016041087a523f32c13b58b5d3f96fe047d2bec
(0)   Message-Authenticator = 0x00000000000000000000000000000000
(0)   State = 0xf8eda5dbf8eda1be7d312e32b30b945c
(0) Finished request
Waking up in 4.9 seconds.
(1) Received Access-Request Id 1 from 127.0.0.1:34030 to 127.0.0.1:1812 length 241
(1)   User-Name = "anonymous"
(1)   NAS-IP-Address = 127.0.0.1
(1)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(1)   NAS-Port-Type = Wireless-802.11
(1)   Service-Type = Framed-User
(1)   NAS-Port = 1
(1)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(1)   Connect-Info = "CONNECT 54Mbps 802.11g"
(1)   Acct-Session-Id = "438644E561DD546B"
(1)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(1)   WLAN-Pairwise-Cipher = 1027076
(1)   WLAN-Group-Cipher = 1027076
(1)   WLAN-AKM-Suite = 1027073
(1)   WLAN-Group-Mgmt-Cipher = 1027078
(1)   Framed-MTU = 1400
(1)   EAP-Message = 0x02000007031915
(1)   State = 0xf8eda5dbf8eda1be7d312e32b30b945c
(1)   Message-Authenticator = 0x125512613f159452efdcf59dfd5526f2
(1) session-state: No cached attributes
(1) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(1)   authorize {
(1)     policy filter_username {
(1)       if (&User-Name) {
(1)       if (&User-Name)  -> TRUE
(1)       if (&User-Name)  {
(1)         if (&User-Name =~ / /) {
(1)         if (&User-Name =~ / /)  -> FALSE
(1)         if (&User-Name =~ /@[^@]*@/ ) {
(1)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(1)         if (&User-Name =~ /\.\./ ) {
(1)         if (&User-Name =~ /\.\./ )  -> FALSE
(1)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(1)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(1)         if (&User-Name =~ /\.$/)  {
(1)         if (&User-Name =~ /\.$/)   -> FALSE
(1)         if (&User-Name =~ /@\./)  {
(1)         if (&User-Name =~ /@\./)   -> FALSE
(1)       } # if (&User-Name)  = notfound
(1)     } # policy filter_username = notfound
(1)     [preprocess] = ok
(1)     [chap] = noop
(1)     [mschap] = noop
(1)     [digest] = noop
(1) suffix: Checking for suffix after "@"
(1) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(1) suffix: No such realm "NULL"
(1)     [suffix] = noop
(1) eap: Peer sent EAP Response (code 2) ID 0 length 7
(1) eap: No EAP Start, assuming it's an on-going EAP conversation
(1)     [eap] = updated
(1)     [files] = noop
(1)     [expiration] = noop
(1)     [logintime] = noop
Not doing PAP as Auth-Type is already set.
(1)     [pap] = noop
(1)   } # authorize = updated
(1) Found Auth-Type = eap
(1) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(1)   authenticate {
(1) eap: Expiring EAP session with state 0xf8eda5dbf8eda1be
(1) eap: Finished EAP session with state 0xf8eda5dbf8eda1be
(1) eap: Previous EAP request found for state 0xf8eda5dbf8eda1be, released from the list
(1) eap: Peer sent packet with method EAP NAK (3)
(1) eap: Found mutually acceptable type PEAP (25)
(1) eap: Calling submodule eap_peap to process data
(1) eap_peap: (TLS) Initiating new session
(1) eap: Sending EAP Request (code 1) ID 1 length 6
(1) eap: EAP session adding &reply:State = 0xf8eda5dbf9ecbcbe
(1)     [eap] = handled
(1)   } # authenticate = handled
(1) Using Post-Auth-Type Challenge
(1) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(1)   Challenge { ... } # empty sub-section is ignored
(1) session-state: Saving cached attributes
(1)   Framed-MTU = 994
(1) Sent Access-Challenge Id 1 from 127.0.0.1:1812 to 127.0.0.1:34030 length 64
(1)   EAP-Message = 0x010100061920
(1)   Message-Authenticator = 0x00000000000000000000000000000000
(1)   State = 0xf8eda5dbf9ecbcbe7d312e32b30b945c
(1) Finished request
Waking up in 4.9 seconds.
(2) Received Access-Request Id 2 from 127.0.0.1:34030 to 127.0.0.1:1812 length 476
(2)   User-Name = "anonymous"
(2)   NAS-IP-Address = 127.0.0.1
(2)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(2)   NAS-Port-Type = Wireless-802.11
(2)   Service-Type = Framed-User
(2)   NAS-Port = 1
(2)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(2)   Connect-Info = "CONNECT 54Mbps 802.11g"
(2)   Acct-Session-Id = "438644E561DD546B"
(2)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(2)   WLAN-Pairwise-Cipher = 1027076
(2)   WLAN-Group-Cipher = 1027076
(2)   WLAN-AKM-Suite = 1027073
(2)   WLAN-Group-Mgmt-Cipher = 1027078
(2)   Framed-MTU = 1400
(2)   EAP-Message = 0x020100f21980000000e816030300e3010000df030300000019c60607ad26a04825c42491484a76c18346ce36bb019f1546a6a451c6000076c02cc030c0adc024c028c00ac014c0afc05dc061c049c04dc02bc02fc0acc023c027c009c013c0aec05cc060c048c04c009dc09d003d0035c032c02ac00fc02ec026c005c0a1c05fc063c051c04bc04fc03d009cc09c003c002fc031c029c00ec02dc025c004c0a0c05ec062c050c04ac04ec03c00ff01000040000a0010000e001d001700180019001a001b001c000d001600140603050306010501040303030401030102030201000b00020100001600000017000000230000
(2)   State = 0xf8eda5dbf9ecbcbe7d312e32b30b945c
(2)   Message-Authenticator = 0x6a539759ed619ed065a65d4e0863d882
(2) Restoring &session-state
(2)   &session-state:Framed-MTU = 994
(2) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(2)   authorize {
(2)     policy filter_username {
(2)       if (&User-Name) {
(2)       if (&User-Name)  -> TRUE
(2)       if (&User-Name)  {
(2)         if (&User-Name =~ / /) {
(2)         if (&User-Name =~ / /)  -> FALSE
(2)         if (&User-Name =~ /@[^@]*@/ ) {
(2)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(2)         if (&User-Name =~ /\.\./ ) {
(2)         if (&User-Name =~ /\.\./ )  -> FALSE
(2)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(2)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(2)         if (&User-Name =~ /\.$/)  {
(2)         if (&User-Name =~ /\.$/)   -> FALSE
(2)         if (&User-Name =~ /@\./)  {
(2)         if (&User-Name =~ /@\./)   -> FALSE
(2)       } # if (&User-Name)  = notfound
(2)     } # policy filter_username = notfound
(2)     [preprocess] = ok
(2)     [chap] = noop
(2)     [mschap] = noop
(2)     [digest] = noop
(2) suffix: Checking for suffix after "@"
(2) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(2) suffix: No such realm "NULL"
(2)     [suffix] = noop
(2) eap: Peer sent EAP Response (code 2) ID 1 length 242
(2) eap: Continuing tunnel setup
(2)     [eap] = ok
(2)   } # authorize = ok
(2) Found Auth-Type = eap
(2) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(2)   authenticate {
(2) eap: Expiring EAP session with state 0xf8eda5dbf9ecbcbe
(2) eap: Finished EAP session with state 0xf8eda5dbf9ecbcbe
(2) eap: Previous EAP request found for state 0xf8eda5dbf9ecbcbe, released from the list
(2) eap: Peer sent packet with method EAP PEAP (25)
(2) eap: Calling submodule eap_peap to process data
(2) eap_peap: (TLS) EAP Peer says that the final record size will be 232 bytes
(2) eap_peap: (TLS) EAP Got all data (232 bytes)
(2) eap_peap: (TLS) Handshake state - before SSL initialization
(2) eap_peap: (TLS) Handshake state - Server before SSL initialization
(2) eap_peap: (TLS) Handshake state - Server before SSL initialization
(2) eap_peap: (TLS) recv TLS 1.3 Handshake, ClientHello
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read client hello
(2) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHello
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server hello
(2) eap_peap: (TLS) send TLS 1.2 Handshake, Certificate
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write certificate
(2) eap_peap: (TLS) send TLS 1.2 Handshake, ServerKeyExchange
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write key exchange
(2) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHelloDone
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server done
(2) eap_peap: (TLS) Server : Need to read more data: SSLv3/TLS write server done
(2) eap_peap: (TLS) In Handshake Phase
(2) eap: Sending EAP Request (code 1) ID 2 length 1004
(2) eap: EAP session adding &reply:State = 0xf8eda5dbfaefbcbe
(2)     [eap] = handled
(2)   } # authenticate = handled
(2) Using Post-Auth-Type Challenge
(2) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(2)   Challenge { ... } # empty sub-section is ignored
(2) session-state: Saving cached attributes
(2)   Framed-MTU = 994
(2)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(2)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(2)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(2)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(2)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(2) Sent Access-Challenge Id 2 from 127.0.0.1:1812 to 127.0.0.1:34030 length 1068
(2)   EAP-Message = 0x010203ec19c000000ac6160303003d020000390303f6e295fb64811a4f52adc6e6c45f00fc23f7b3d1cbd793f44d9e445092defb5100c030000011ff01000100000b0004030001020017000016030309450b00094100093e00043a308204363082031ea003020102020101300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232303134343035385a170d3234303231383134343035385a307c310b3009060355040613024652310f300d06035504080c0652616469757331153013060355040a0c0c4578616d706c6520496e632e3123302106035504030c1a4578616d70
(2)   Message-Authenticator = 0x00000000000000000000000000000000
(2)   State = 0xf8eda5dbfaefbcbe7d312e32b30b945c
(2) Finished request
Waking up in 4.9 seconds.
(3) Received Access-Request Id 3 from 127.0.0.1:34030 to 127.0.0.1:1812 length 240
(3)   User-Name = "anonymous"
(3)   NAS-IP-Address = 127.0.0.1
(3)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(3)   NAS-Port-Type = Wireless-802.11
(3)   Service-Type = Framed-User
(3)   NAS-Port = 1
(3)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(3)   Connect-Info = "CONNECT 54Mbps 802.11g"
(3)   Acct-Session-Id = "438644E561DD546B"
(3)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(3)   WLAN-Pairwise-Cipher = 1027076
(3)   WLAN-Group-Cipher = 1027076
(3)   WLAN-AKM-Suite = 1027073
(3)   WLAN-Group-Mgmt-Cipher = 1027078
(3)   Framed-MTU = 1400
(3)   EAP-Message = 0x020200061900
(3)   State = 0xf8eda5dbfaefbcbe7d312e32b30b945c
(3)   Message-Authenticator = 0xeee3ec534642f95c80b43c3685a29f93
(3) Restoring &session-state
(3)   &session-state:Framed-MTU = 994
(3)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(3)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(3)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(3)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(3)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(3) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(3)   authorize {
(3)     policy filter_username {
(3)       if (&User-Name) {
(3)       if (&User-Name)  -> TRUE
(3)       if (&User-Name)  {
(3)         if (&User-Name =~ / /) {
(3)         if (&User-Name =~ / /)  -> FALSE
(3)         if (&User-Name =~ /@[^@]*@/ ) {
(3)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(3)         if (&User-Name =~ /\.\./ ) {
(3)         if (&User-Name =~ /\.\./ )  -> FALSE
(3)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(3)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(3)         if (&User-Name =~ /\.$/)  {
(3)         if (&User-Name =~ /\.$/)   -> FALSE
(3)         if (&User-Name =~ /@\./)  {
(3)         if (&User-Name =~ /@\./)   -> FALSE
(3)       } # if (&User-Name)  = notfound
(3)     } # policy filter_username = notfound
(3)     [preprocess] = ok
(3)     [chap] = noop
(3)     [mschap] = noop
(3)     [digest] = noop
(3) suffix: Checking for suffix after "@"
(3) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(3) suffix: No such realm "NULL"
(3)     [suffix] = noop
(3) eap: Peer sent EAP Response (code 2) ID 2 length 6
(3) eap: Continuing tunnel setup
(3)     [eap] = ok
(3)   } # authorize = ok
(3) Found Auth-Type = eap
(3) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(3)   authenticate {
(3) eap: Expiring EAP session with state 0xf8eda5dbfaefbcbe
(3) eap: Finished EAP session with state 0xf8eda5dbfaefbcbe
(3) eap: Previous EAP request found for state 0xf8eda5dbfaefbcbe, released from the list
(3) eap: Peer sent packet with method EAP PEAP (25)
(3) eap: Calling submodule eap_peap to process data
(3) eap_peap: (TLS) Peer ACKed our handshake fragment
(3) eap: Sending EAP Request (code 1) ID 3 length 1000
(3) eap: EAP session adding &reply:State = 0xf8eda5dbfbeebcbe
(3)     [eap] = handled
(3)   } # authenticate = handled
(3) Using Post-Auth-Type Challenge
(3) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(3)   Challenge { ... } # empty sub-section is ignored
(3) session-state: Saving cached attributes
(3)   Framed-MTU = 994
(3)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(3)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(3)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(3)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(3)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(3) Sent Access-Challenge Id 3 from 127.0.0.1:1812 to 127.0.0.1:34030 length 1064
(3)   EAP-Message = 0x010303e8194087befe9b36c4eee5514a6ce0d692160ea6d9e1fc0d3d3770b77f8b079a013246fadcf528c63464c5e9d2300563aaa12b1ca1471e09da68797ab5c40554ae52c21289c417609a02a0889e761f6c3d244c6766a6a766b1f1292134398a9dc0179ff601e9f17a910a8591f20ad07388df17a4a59b7316e68880f36090741d349cc4b4e0d742cbfb8947bab078008661a8163a72170809669fbd0fc8aeb1a84c5813bb00036cdb862c8a400004fe308204fa308203e2a00302010202147d47217251ce22b1ff50ee4b4a088bf5a83ad710300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72
(3)   Message-Authenticator = 0x00000000000000000000000000000000
(3)   State = 0xf8eda5dbfbeebcbe7d312e32b30b945c
(3) Finished request
Waking up in 4.8 seconds.
(4) Received Access-Request Id 4 from 127.0.0.1:34030 to 127.0.0.1:1812 length 240
(4)   User-Name = "anonymous"
(4)   NAS-IP-Address = 127.0.0.1
(4)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(4)   NAS-Port-Type = Wireless-802.11
(4)   Service-Type = Framed-User
(4)   NAS-Port = 1
(4)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(4)   Connect-Info = "CONNECT 54Mbps 802.11g"
(4)   Acct-Session-Id = "438644E561DD546B"
(4)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(4)   WLAN-Pairwise-Cipher = 1027076
(4)   WLAN-Group-Cipher = 1027076
(4)   WLAN-AKM-Suite = 1027073
(4)   WLAN-Group-Mgmt-Cipher = 1027078
(4)   Framed-MTU = 1400
(4)   EAP-Message = 0x020300061900
(4)   State = 0xf8eda5dbfbeebcbe7d312e32b30b945c
(4)   Message-Authenticator = 0x3a9ae1a06bae01f2b578f427516d823b
(4) Restoring &session-state
(4)   &session-state:Framed-MTU = 994
(4)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(4) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(4)   authorize {
(4)     policy filter_username {
(4)       if (&User-Name) {
(4)       if (&User-Name)  -> TRUE
(4)       if (&User-Name)  {
(4)         if (&User-Name =~ / /) {
(4)         if (&User-Name =~ / /)  -> FALSE
(4)         if (&User-Name =~ /@[^@]*@/ ) {
(4)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(4)         if (&User-Name =~ /\.\./ ) {
(4)         if (&User-Name =~ /\.\./ )  -> FALSE
(4)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(4)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(4)         if (&User-Name =~ /\.$/)  {
(4)         if (&User-Name =~ /\.$/)   -> FALSE
(4)         if (&User-Name =~ /@\./)  {
(4)         if (&User-Name =~ /@\./)   -> FALSE
(4)       } # if (&User-Name)  = notfound
(4)     } # policy filter_username = notfound
(4)     [preprocess] = ok
(4)     [chap] = noop
(4)     [mschap] = noop
(4)     [digest] = noop
(4) suffix: Checking for suffix after "@"
(4) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(4) suffix: No such realm "NULL"
(4)     [suffix] = noop
(4) eap: Peer sent EAP Response (code 2) ID 3 length 6
(4) eap: Continuing tunnel setup
(4)     [eap] = ok
(4)   } # authorize = ok
(4) Found Auth-Type = eap
(4) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(4)   authenticate {
(4) eap: Expiring EAP session with state 0xf8eda5dbfbeebcbe
(4) eap: Finished EAP session with state 0xf8eda5dbfbeebcbe
(4) eap: Previous EAP request found for state 0xf8eda5dbfbeebcbe, released from the list
(4) eap: Peer sent packet with method EAP PEAP (25)
(4) eap: Calling submodule eap_peap to process data
(4) eap_peap: (TLS) Peer ACKed our handshake fragment
(4) eap: Sending EAP Request (code 1) ID 4 length 776
(4) eap: EAP session adding &reply:State = 0xf8eda5dbfce9bcbe
(4)     [eap] = handled
(4)   } # authenticate = handled
(4) Using Post-Auth-Type Challenge
(4) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(4)   Challenge { ... } # empty sub-section is ignored
(4) session-state: Saving cached attributes
(4)   Framed-MTU = 994
(4)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(4)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(4)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(4)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(4)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(4) Sent Access-Challenge Id 4 from 127.0.0.1:1812 to 127.0.0.1:34030 length 840
(4)   EAP-Message = 0x01040308190078616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f7269747982147d47217251ce22b1ff50ee4b4a088bf5a83ad710300f0603551d130101ff040530030101ff30360603551d1f042f302d302ba029a0278625687474703a2f2f7777772e6578616d706c652e6f72672f6578616d706c655f63612e63726c300d06092a864886f70d01010b0500038201010055f89737d1724a549c214e365757f01e0edf07642a13c83c22ec0857171b5e788d91b63a9d1d1a9d7d7651c9cf6c27a90669077d8f6a7afc17c8c8205d652a1f8c9f9fcd23124e632e4607232a1248a44c7ce7eed0df789c88c6e43c0d6714b1641e5f6cd31f9c67e134c4ddc0d685554ffaf9340fe27e20a5ad895c49c9fe45ec71b552744b309abaae1ca889128910c434a68f4e61257c91929ea018f65255180809113213278950
(4)   Message-Authenticator = 0x00000000000000000000000000000000
(4)   State = 0xf8eda5dbfce9bcbe7d312e32b30b945c
(4) Finished request
Waking up in 4.8 seconds.
(5) Received Access-Request Id 5 from 127.0.0.1:34030 to 127.0.0.1:1812 length 251
(5)   User-Name = "anonymous"
(5)   NAS-IP-Address = 127.0.0.1
(5)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(5)   NAS-Port-Type = Wireless-802.11
(5)   Service-Type = Framed-User
(5)   NAS-Port = 1
(5)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(5)   Connect-Info = "CONNECT 54Mbps 802.11g"
(5)   Acct-Session-Id = "438644E561DD546B"
(5)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(5)   WLAN-Pairwise-Cipher = 1027076
(5)   WLAN-Group-Cipher = 1027076
(5)   WLAN-AKM-Suite = 1027073
(5)   WLAN-Group-Mgmt-Cipher = 1027078
(5)   Framed-MTU = 1400
(5)   EAP-Message = 0x0204001119800000000715030300020230
(5)   State = 0xf8eda5dbfce9bcbe7d312e32b30b945c
(5)   Message-Authenticator = 0x9ca17334d8b1c6a2c281cb7e17bdcca9
(5) Restoring &session-state
(5)   &session-state:Framed-MTU = 994
(5)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(5) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(5)   authorize {
(5)     policy filter_username {
(5)       if (&User-Name) {
(5)       if (&User-Name)  -> TRUE
(5)       if (&User-Name)  {
(5)         if (&User-Name =~ / /) {
(5)         if (&User-Name =~ / /)  -> FALSE
(5)         if (&User-Name =~ /@[^@]*@/ ) {
(5)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(5)         if (&User-Name =~ /\.\./ ) {
(5)         if (&User-Name =~ /\.\./ )  -> FALSE
(5)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(5)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(5)         if (&User-Name =~ /\.$/)  {
(5)         if (&User-Name =~ /\.$/)   -> FALSE
(5)         if (&User-Name =~ /@\./)  {
(5)         if (&User-Name =~ /@\./)   -> FALSE
(5)       } # if (&User-Name)  = notfound
(5)     } # policy filter_username = notfound
(5)     [preprocess] = ok
(5)     [chap] = noop
(5)     [mschap] = noop
(5)     [digest] = noop
(5) suffix: Checking for suffix after "@"
(5) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(5) suffix: No such realm "NULL"
(5)     [suffix] = noop
(5) eap: Peer sent EAP Response (code 2) ID 4 length 17
(5) eap: Continuing tunnel setup
(5)     [eap] = ok
(5)   } # authorize = ok
(5) Found Auth-Type = eap
(5) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(5)   authenticate {
(5) eap: Expiring EAP session with state 0xf8eda5dbfce9bcbe
(5) eap: Finished EAP session with state 0xf8eda5dbfce9bcbe
(5) eap: Previous EAP request found for state 0xf8eda5dbfce9bcbe, released from the list
(5) eap: Peer sent packet with method EAP PEAP (25)
(5) eap: Calling submodule eap_peap to process data
(5) eap_peap: (TLS) EAP Peer says that the final record size will be 7 bytes
(5) eap_peap: (TLS) EAP Got all data (7 bytes)
(5) eap_peap: (TLS) recv TLS 1.2 Alert, fatal unknown_ca
(5) eap_peap: (TLS) The client is informing us that it does not recognize the CA used to issue the server certificate.  Please update the client so that it knows about the CA.
(5) eap_peap: ERROR: (TLS) Alert read:fatal:unknown CA
(5) eap_peap: (TLS) Server : Need to read more data: error
(5) eap_peap: ERROR: (TLS) Failed reading from OpenSSL: error:0A000418:SSL routines::tlsv1 alert unknown ca
(5) eap_peap: (TLS) In Handshake Phase
(5) eap_peap: (TLS) Application data.
(5) eap_peap: ERROR: (TLS) Cannot continue, as the peer is misbehaving.
(5) eap_peap: ERROR: [eaptls process] = fail
(5) eap: ERROR: Failed continuing EAP PEAP (25) session.  EAP sub-module failed
(5) eap: Sending EAP Failure (code 4) ID 4 length 4
(5) eap: Failed in EAP select
(5)     [eap] = invalid
(5)   } # authenticate = invalid
(5) Failed to authenticate the user
(5) Using Post-Auth-Type Reject
(5) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(5)   Post-Auth-Type REJECT {
(5) attr_filter.access_reject: EXPAND %{User-Name}
(5) attr_filter.access_reject:    --> anonymous
(5) attr_filter.access_reject: Matched entry DEFAULT at line 11
(5)     [attr_filter.access_reject] = updated
(5)     [eap] = noop
(5)     policy remove_reply_message_if_eap {
(5)       if (&reply:EAP-Message && &reply:Reply-Message) {
(5)       if (&reply:EAP-Message && &reply:Reply-Message)  -> FALSE
(5)       else {
(5)         [noop] = noop
(5)       } # else = noop
(5)     } # policy remove_reply_message_if_eap = noop
(5)   } # Post-Auth-Type REJECT = updated
(5) Delaying response for 1.000000 seconds
Waking up in 0.3 seconds.
Waking up in 0.6 seconds.
(5) Sending delayed response
(5) Sent Access-Reject Id 5 from 127.0.0.1:1812 to 127.0.0.1:34030 length 44
(5)   EAP-Message = 0x04040004
(5)   Message-Authenticator = 0x00000000000000000000000000000000
Waking up in 3.7 seconds.
(6) Received Access-Request Id 6 from 127.0.0.1:34030 to 127.0.0.1:1812 length 230
(6)   User-Name = "anonymous"
(6)   NAS-IP-Address = 127.0.0.1
(6)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(6)   NAS-Port-Type = Wireless-802.11
(6)   Service-Type = Framed-User
(6)   NAS-Port = 1
(6)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(6)   Connect-Info = "CONNECT 54Mbps 802.11g"
(6)   Acct-Session-Id = "438644E561DD546B"
(6)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(6)   WLAN-Pairwise-Cipher = 1027076
(6)   WLAN-Group-Cipher = 1027076
(6)   WLAN-AKM-Suite = 1027073
(6)   WLAN-Group-Mgmt-Cipher = 1027078
(6)   Framed-MTU = 1400
(6)   EAP-Message = 0x0217000e01616e6f6e796d6f7573
(6)   Message-Authenticator = 0x7ccfe40d9b81e8ed36523e7a2827762c
(6) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(6)   authorize {
(6)     policy filter_username {
(6)       if (&User-Name) {
(6)       if (&User-Name)  -> TRUE
(6)       if (&User-Name)  {
(6)         if (&User-Name =~ / /) {
(6)         if (&User-Name =~ / /)  -> FALSE
(6)         if (&User-Name =~ /@[^@]*@/ ) {
(6)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(6)         if (&User-Name =~ /\.\./ ) {
(6)         if (&User-Name =~ /\.\./ )  -> FALSE
(6)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(6)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(6)         if (&User-Name =~ /\.$/)  {
(6)         if (&User-Name =~ /\.$/)   -> FALSE
(6)         if (&User-Name =~ /@\./)  {
(6)         if (&User-Name =~ /@\./)   -> FALSE
(6)       } # if (&User-Name)  = notfound
(6)     } # policy filter_username = notfound
(6)     [preprocess] = ok
(6)     [chap] = noop
(6)     [mschap] = noop
(6)     [digest] = noop
(6) suffix: Checking for suffix after "@"
(6) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(6) suffix: No such realm "NULL"
(6)     [suffix] = noop
(6) eap: Peer sent EAP Response (code 2) ID 23 length 14
(6) eap: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
(6)     [eap] = ok
(6)   } # authorize = ok
(6) Found Auth-Type = eap
(6) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(6)   authenticate {
(6) eap: Peer sent packet with method EAP Identity (1)
(6) eap: Calling submodule eap_md5 to process data
(6) eap_md5: Issuing MD5 Challenge
(6) eap: Sending EAP Request (code 1) ID 24 length 22
(6) eap: EAP session adding &reply:State = 0x31d4b0f631ccb41b
(6)     [eap] = handled
(6)   } # authenticate = handled
(6) Using Post-Auth-Type Challenge
(6) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(6)   Challenge { ... } # empty sub-section is ignored
(6) Sent Access-Challenge Id 6 from 127.0.0.1:1812 to 127.0.0.1:34030 length 80
(6)   EAP-Message = 0x01180016041069105b06bf34acb340593a8594537fc3
(6)   Message-Authenticator = 0x00000000000000000000000000000000
(6)   State = 0x31d4b0f631ccb41b72766effa64658f5
(6) Finished request
Waking up in 0.7 seconds.
(7) Received Access-Request Id 7 from 127.0.0.1:34030 to 127.0.0.1:1812 length 241
(7)   User-Name = "anonymous"
(7)   NAS-IP-Address = 127.0.0.1
(7)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(7)   NAS-Port-Type = Wireless-802.11
(7)   Service-Type = Framed-User
(7)   NAS-Port = 1
(7)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(7)   Connect-Info = "CONNECT 54Mbps 802.11g"
(7)   Acct-Session-Id = "438644E561DD546B"
(7)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(7)   WLAN-Pairwise-Cipher = 1027076
(7)   WLAN-Group-Cipher = 1027076
(7)   WLAN-AKM-Suite = 1027073
(7)   WLAN-Group-Mgmt-Cipher = 1027078
(7)   Framed-MTU = 1400
(7)   EAP-Message = 0x02180007031915
(7)   State = 0x31d4b0f631ccb41b72766effa64658f5
(7)   Message-Authenticator = 0xf172341f0e7b5c959ff054bb88894f31
(7) session-state: No cached attributes
(7) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(7)   authorize {
(7)     policy filter_username {
(7)       if (&User-Name) {
(7)       if (&User-Name)  -> TRUE
(7)       if (&User-Name)  {
(7)         if (&User-Name =~ / /) {
(7)         if (&User-Name =~ / /)  -> FALSE
(7)         if (&User-Name =~ /@[^@]*@/ ) {
(7)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(7)         if (&User-Name =~ /\.\./ ) {
(7)         if (&User-Name =~ /\.\./ )  -> FALSE
(7)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(7)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(7)         if (&User-Name =~ /\.$/)  {
(7)         if (&User-Name =~ /\.$/)   -> FALSE
(7)         if (&User-Name =~ /@\./)  {
(7)         if (&User-Name =~ /@\./)   -> FALSE
(7)       } # if (&User-Name)  = notfound
(7)     } # policy filter_username = notfound
(7)     [preprocess] = ok
(7)     [chap] = noop
(7)     [mschap] = noop
(7)     [digest] = noop
(7) suffix: Checking for suffix after "@"
(7) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(7) suffix: No such realm "NULL"
(7)     [suffix] = noop
(7) eap: Peer sent EAP Response (code 2) ID 24 length 7
(7) eap: No EAP Start, assuming it's an on-going EAP conversation
(7)     [eap] = updated
(7)     [files] = noop
(7)     [expiration] = noop
(7)     [logintime] = noop
Not doing PAP as Auth-Type is already set.
(7)     [pap] = noop
(7)   } # authorize = updated
(7) Found Auth-Type = eap
(7) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(7)   authenticate {
(7) eap: Expiring EAP session with state 0x31d4b0f631ccb41b
(7) eap: Finished EAP session with state 0x31d4b0f631ccb41b
(7) eap: Previous EAP request found for state 0x31d4b0f631ccb41b, released from the list
(7) eap: Peer sent packet with method EAP NAK (3)
(7) eap: Found mutually acceptable type PEAP (25)
(7) eap: Calling submodule eap_peap to process data
(7) eap_peap: (TLS) Initiating new session
(7) eap: Sending EAP Request (code 1) ID 25 length 6
(7) eap: EAP session adding &reply:State = 0x31d4b0f630cda91b
(7)     [eap] = handled
(7)   } # authenticate = handled
(7) Using Post-Auth-Type Challenge
(7) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(7)   Challenge { ... } # empty sub-section is ignored
(7) session-state: Saving cached attributes
(7)   Framed-MTU = 994
(7) Sent Access-Challenge Id 7 from 127.0.0.1:1812 to 127.0.0.1:34030 length 64
(7)   EAP-Message = 0x011900061920
(7)   Message-Authenticator = 0x00000000000000000000000000000000
(7)   State = 0x31d4b0f630cda91b72766effa64658f5
(7) Finished request
Waking up in 0.7 seconds.
(8) Received Access-Request Id 8 from 127.0.0.1:34030 to 127.0.0.1:1812 length 476
(8)   User-Name = "anonymous"
(8)   NAS-IP-Address = 127.0.0.1
(8)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(8)   NAS-Port-Type = Wireless-802.11
(8)   Service-Type = Framed-User
(8)   NAS-Port = 1
(8)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(8)   Connect-Info = "CONNECT 54Mbps 802.11g"
(8)   Acct-Session-Id = "438644E561DD546B"
(8)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(8)   WLAN-Pairwise-Cipher = 1027076
(8)   WLAN-Group-Cipher = 1027076
(8)   WLAN-AKM-Suite = 1027073
(8)   WLAN-Group-Mgmt-Cipher = 1027078
(8)   Framed-MTU = 1400
(8)   EAP-Message = 0x021900f21980000000e816030300e3010000df03030000001d998e26ed6c0f0606ffcd040953e54888d584aab2cbe31d86332753d3000076c02cc030c0adc024c028c00ac014c0afc05dc061c049c04dc02bc02fc0acc023c027c009c013c0aec05cc060c048c04c009dc09d003d0035c032c02ac00fc02ec026c005c0a1c05fc063c051c04bc04fc03d009cc09c003c002fc031c029c00ec02dc025c004c0a0c05ec062c050c04ac04ec03c00ff01000040000a0010000e001d001700180019001a001b001c000d001600140603050306010501040303030401030102030201000b00020100001600000017000000230000
(8)   State = 0x31d4b0f630cda91b72766effa64658f5
(8)   Message-Authenticator = 0xdc70c8e2f92c5fcafd4d5453ae4b628d
(8) Restoring &session-state
(8)   &session-state:Framed-MTU = 994
(8) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(8)   authorize {
(8)     policy filter_username {
(8)       if (&User-Name) {
(8)       if (&User-Name)  -> TRUE
(8)       if (&User-Name)  {
(8)         if (&User-Name =~ / /) {
(8)         if (&User-Name =~ / /)  -> FALSE
(8)         if (&User-Name =~ /@[^@]*@/ ) {
(8)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(8)         if (&User-Name =~ /\.\./ ) {
(8)         if (&User-Name =~ /\.\./ )  -> FALSE
(8)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(8)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(8)         if (&User-Name =~ /\.$/)  {
(8)         if (&User-Name =~ /\.$/)   -> FALSE
(8)         if (&User-Name =~ /@\./)  {
(8)         if (&User-Name =~ /@\./)   -> FALSE
(8)       } # if (&User-Name)  = notfound
(8)     } # policy filter_username = notfound
(8)     [preprocess] = ok
(8)     [chap] = noop
(8)     [mschap] = noop
(8)     [digest] = noop
(8) suffix: Checking for suffix after "@"
(8) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(8) suffix: No such realm "NULL"
(8)     [suffix] = noop
(8) eap: Peer sent EAP Response (code 2) ID 25 length 242
(8) eap: Continuing tunnel setup
(8)     [eap] = ok
(8)   } # authorize = ok
(8) Found Auth-Type = eap
(8) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(8)   authenticate {
(8) eap: Expiring EAP session with state 0x31d4b0f630cda91b
(8) eap: Finished EAP session with state 0x31d4b0f630cda91b
(8) eap: Previous EAP request found for state 0x31d4b0f630cda91b, released from the list
(8) eap: Peer sent packet with method EAP PEAP (25)
(8) eap: Calling submodule eap_peap to process data
(8) eap_peap: (TLS) EAP Peer says that the final record size will be 232 bytes
(8) eap_peap: (TLS) EAP Got all data (232 bytes)
(8) eap_peap: (TLS) Handshake state - before SSL initialization
(8) eap_peap: (TLS) Handshake state - Server before SSL initialization
(8) eap_peap: (TLS) Handshake state - Server before SSL initialization
(8) eap_peap: (TLS) recv TLS 1.3 Handshake, ClientHello
(8) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read client hello
(8) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHello
(8) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server hello
(8) eap_peap: (TLS) send TLS 1.2 Handshake, Certificate
(8) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write certificate
(8) eap_peap: (TLS) send TLS 1.2 Handshake, ServerKeyExchange
(8) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write key exchange
(8) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHelloDone
(8) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server done
(8) eap_peap: (TLS) Server : Need to read more data: SSLv3/TLS write server done
(8) eap_peap: (TLS) In Handshake Phase
(8) eap: Sending EAP Request (code 1) ID 26 length 1004
(8) eap: EAP session adding &reply:State = 0x31d4b0f633cea91b
(8)     [eap] = handled
(8)   } # authenticate = handled
(8) Using Post-Auth-Type Challenge
(8) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(8)   Challenge { ... } # empty sub-section is ignored
(8) session-state: Saving cached attributes
(8)   Framed-MTU = 994
(8)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(8) Sent Access-Challenge Id 8 from 127.0.0.1:1812 to 127.0.0.1:34030 length 1068
(8)   EAP-Message = 0x011a03ec19c000000ac6160303003d020000390303e545b6d49ac5eefd0575090fd16f313af7037b01706d6ac7c38edd6e5ed3743a00c030000011ff01000100000b0004030001020017000016030309450b00094100093e00043a308204363082031ea003020102020101300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232303134343035385a170d3234303231383134343035385a307c310b3009060355040613024652310f300d06035504080c0652616469757331153013060355040a0c0c4578616d706c6520496e632e3123302106035504030c1a4578616d70
(8)   Message-Authenticator = 0x00000000000000000000000000000000
(8)   State = 0x31d4b0f633cea91b72766effa64658f5
(8) Finished request
Waking up in 0.7 seconds.
(9) Received Access-Request Id 9 from 127.0.0.1:34030 to 127.0.0.1:1812 length 240
(9)   User-Name = "anonymous"
(9)   NAS-IP-Address = 127.0.0.1
(9)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(9)   NAS-Port-Type = Wireless-802.11
(9)   Service-Type = Framed-User
(9)   NAS-Port = 1
(9)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(9)   Connect-Info = "CONNECT 54Mbps 802.11g"
(9)   Acct-Session-Id = "438644E561DD546B"
(9)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(9)   WLAN-Pairwise-Cipher = 1027076
(9)   WLAN-Group-Cipher = 1027076
(9)   WLAN-AKM-Suite = 1027073
(9)   WLAN-Group-Mgmt-Cipher = 1027078
(9)   Framed-MTU = 1400
(9)   EAP-Message = 0x021a00061900
(9)   State = 0x31d4b0f633cea91b72766effa64658f5
(9)   Message-Authenticator = 0xbeb9844119c3bfe0f49bdfe7d452e17e
(9) Restoring &session-state
(9)   &session-state:Framed-MTU = 994
(9)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(9) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(9)   authorize {
(9)     policy filter_username {
(9)       if (&User-Name) {
(9)       if (&User-Name)  -> TRUE
(9)       if (&User-Name)  {
(9)         if (&User-Name =~ / /) {
(9)         if (&User-Name =~ / /)  -> FALSE
(9)         if (&User-Name =~ /@[^@]*@/ ) {
(9)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(9)         if (&User-Name =~ /\.\./ ) {
(9)         if (&User-Name =~ /\.\./ )  -> FALSE
(9)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(9)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(9)         if (&User-Name =~ /\.$/)  {
(9)         if (&User-Name =~ /\.$/)   -> FALSE
(9)         if (&User-Name =~ /@\./)  {
(9)         if (&User-Name =~ /@\./)   -> FALSE
(9)       } # if (&User-Name)  = notfound
(9)     } # policy filter_username = notfound
(9)     [preprocess] = ok
(9)     [chap] = noop
(9)     [mschap] = noop
(9)     [digest] = noop
(9) suffix: Checking for suffix after "@"
(9) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(9) suffix: No such realm "NULL"
(9)     [suffix] = noop
(9) eap: Peer sent EAP Response (code 2) ID 26 length 6
(9) eap: Continuing tunnel setup
(9)     [eap] = ok
(9)   } # authorize = ok
(9) Found Auth-Type = eap
(9) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(9)   authenticate {
(9) eap: Expiring EAP session with state 0x31d4b0f633cea91b
(9) eap: Finished EAP session with state 0x31d4b0f633cea91b
(9) eap: Previous EAP request found for state 0x31d4b0f633cea91b, released from the list
(9) eap: Peer sent packet with method EAP PEAP (25)
(9) eap: Calling submodule eap_peap to process data
(9) eap_peap: (TLS) Peer ACKed our handshake fragment
(9) eap: Sending EAP Request (code 1) ID 27 length 1000
(9) eap: EAP session adding &reply:State = 0x31d4b0f632cfa91b
(9)     [eap] = handled
(9)   } # authenticate = handled
(9) Using Post-Auth-Type Challenge
(9) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(9)   Challenge { ... } # empty sub-section is ignored
(9) session-state: Saving cached attributes
(9)   Framed-MTU = 994
(9)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(9)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(9)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(9)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(9)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(9) Sent Access-Challenge Id 9 from 127.0.0.1:1812 to 127.0.0.1:34030 length 1064
(9)   EAP-Message = 0x011b03e8194087befe9b36c4eee5514a6ce0d692160ea6d9e1fc0d3d3770b77f8b079a013246fadcf528c63464c5e9d2300563aaa12b1ca1471e09da68797ab5c40554ae52c21289c417609a02a0889e761f6c3d244c6766a6a766b1f1292134398a9dc0179ff601e9f17a910a8591f20ad07388df17a4a59b7316e68880f36090741d349cc4b4e0d742cbfb8947bab078008661a8163a72170809669fbd0fc8aeb1a84c5813bb00036cdb862c8a400004fe308204fa308203e2a00302010202147d47217251ce22b1ff50ee4b4a088bf5a83ad710300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72
(9)   Message-Authenticator = 0x00000000000000000000000000000000
(9)   State = 0x31d4b0f632cfa91b72766effa64658f5
(9) Finished request
Waking up in 0.6 seconds.
(10) Received Access-Request Id 10 from 127.0.0.1:34030 to 127.0.0.1:1812 length 240
(10)   User-Name = "anonymous"
(10)   NAS-IP-Address = 127.0.0.1
(10)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(10)   NAS-Port-Type = Wireless-802.11
(10)   Service-Type = Framed-User
(10)   NAS-Port = 1
(10)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(10)   Connect-Info = "CONNECT 54Mbps 802.11g"
(10)   Acct-Session-Id = "438644E561DD546B"
(10)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(10)   WLAN-Pairwise-Cipher = 1027076
(10)   WLAN-Group-Cipher = 1027076
(10)   WLAN-AKM-Suite = 1027073
(10)   WLAN-Group-Mgmt-Cipher = 1027078
(10)   Framed-MTU = 1400
(10)   EAP-Message = 0x021b00061900
(10)   State = 0x31d4b0f632cfa91b72766effa64658f5
(10)   Message-Authenticator = 0xfdeff1d603dd0bc58f1c3f657aba7b6c
(10) Restoring &session-state
(10)   &session-state:Framed-MTU = 994
(10)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(10)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(10)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(10)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(10)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(10) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(10)   authorize {
(10)     policy filter_username {
(10)       if (&User-Name) {
(10)       if (&User-Name)  -> TRUE
(10)       if (&User-Name)  {
(10)         if (&User-Name =~ / /) {
(10)         if (&User-Name =~ / /)  -> FALSE
(10)         if (&User-Name =~ /@[^@]*@/ ) {
(10)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(10)         if (&User-Name =~ /\.\./ ) {
(10)         if (&User-Name =~ /\.\./ )  -> FALSE
(10)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(10)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(10)         if (&User-Name =~ /\.$/)  {
(10)         if (&User-Name =~ /\.$/)   -> FALSE
(10)         if (&User-Name =~ /@\./)  {
(10)         if (&User-Name =~ /@\./)   -> FALSE
(10)       } # if (&User-Name)  = notfound
(10)     } # policy filter_username = notfound
(10)     [preprocess] = ok
(10)     [chap] = noop
(10)     [mschap] = noop
(10)     [digest] = noop
(10) suffix: Checking for suffix after "@"
(10) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(10) suffix: No such realm "NULL"
(10)     [suffix] = noop
(10) eap: Peer sent EAP Response (code 2) ID 27 length 6
(10) eap: Continuing tunnel setup
(10)     [eap] = ok
(10)   } # authorize = ok
(10) Found Auth-Type = eap
(10) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(10)   authenticate {
(10) eap: Expiring EAP session with state 0x31d4b0f632cfa91b
(10) eap: Finished EAP session with state 0x31d4b0f632cfa91b
(10) eap: Previous EAP request found for state 0x31d4b0f632cfa91b, released from the list
(10) eap: Peer sent packet with method EAP PEAP (25)
(10) eap: Calling submodule eap_peap to process data
(10) eap_peap: (TLS) Peer ACKed our handshake fragment
(10) eap: Sending EAP Request (code 1) ID 28 length 776
(10) eap: EAP session adding &reply:State = 0x31d4b0f635c8a91b
(10)     [eap] = handled
(10)   } # authenticate = handled
(10) Using Post-Auth-Type Challenge
(10) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(10)   Challenge { ... } # empty sub-section is ignored
(10) session-state: Saving cached attributes
(10)   Framed-MTU = 994
(10)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(10)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(10)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(10)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(10)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(10) Sent Access-Challenge Id 10 from 127.0.0.1:1812 to 127.0.0.1:34030 length 840
(10)   EAP-Message = 0x011c0308190078616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f7269747982147d47217251ce22b1ff50ee4b4a088bf5a83ad710300f0603551d130101ff040530030101ff30360603551d1f042f302d302ba029a0278625687474703a2f2f7777772e6578616d706c652e6f72672f6578616d706c655f63612e63726c300d06092a864886f70d01010b0500038201010055f89737d1724a549c214e365757f01e0edf07642a13c83c22ec0857171b5e788d91b63a9d1d1a9d7d7651c9cf6c27a90669077d8f6a7afc17c8c8205d652a1f8c9f9fcd23124e632e4607232a1248a44c7ce7eed0df789c88c6e43c0d6714b1641e5f6cd31f9c67e134c4ddc0d685554ffaf9340fe27e20a5ad895c49c9fe45ec71b552744b309abaae1ca889128910c434a68f4e61257c91929ea018f65255180809113213278950
(10)   Message-Authenticator = 0x00000000000000000000000000000000
(10)   State = 0x31d4b0f635c8a91b72766effa64658f5
(10) Finished request
Waking up in 0.6 seconds.
(11) Received Access-Request Id 11 from 127.0.0.1:34030 to 127.0.0.1:1812 length 251
(11)   User-Name = "anonymous"
(11)   NAS-IP-Address = 127.0.0.1
(11)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(11)   NAS-Port-Type = Wireless-802.11
(11)   Service-Type = Framed-User
(11)   NAS-Port = 1
(11)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(11)   Connect-Info = "CONNECT 54Mbps 802.11g"
(11)   Acct-Session-Id = "438644E561DD546B"
(11)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(11)   WLAN-Pairwise-Cipher = 1027076
(11)   WLAN-Group-Cipher = 1027076
(11)   WLAN-AKM-Suite = 1027073
(11)   WLAN-Group-Mgmt-Cipher = 1027078
(11)   Framed-MTU = 1400
(11)   EAP-Message = 0x021c001119800000000715030300020230
(11)   State = 0x31d4b0f635c8a91b72766effa64658f5
(11)   Message-Authenticator = 0xab413272b62191c478e1aca72a76fc79
(11) Restoring &session-state
(11)   &session-state:Framed-MTU = 994
(11)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(11)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(11)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(11)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(11)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(11) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(11)   authorize {
(11)     policy filter_username {
(11)       if (&User-Name) {
(11)       if (&User-Name)  -> TRUE
(11)       if (&User-Name)  {
(11)         if (&User-Name =~ / /) {
(11)         if (&User-Name =~ / /)  -> FALSE
(11)         if (&User-Name =~ /@[^@]*@/ ) {
(11)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(11)         if (&User-Name =~ /\.\./ ) {
(11)         if (&User-Name =~ /\.\./ )  -> FALSE
(11)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(11)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(11)         if (&User-Name =~ /\.$/)  {
(11)         if (&User-Name =~ /\.$/)   -> FALSE
(11)         if (&User-Name =~ /@\./)  {
(11)         if (&User-Name =~ /@\./)   -> FALSE
(11)       } # if (&User-Name)  = notfound
(11)     } # policy filter_username = notfound
(11)     [preprocess] = ok
(11)     [chap] = noop
(11)     [mschap] = noop
(11)     [digest] = noop
(11) suffix: Checking for suffix after "@"
(11) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(11) suffix: No such realm "NULL"
(11)     [suffix] = noop
(11) eap: Peer sent EAP Response (code 2) ID 28 length 17
(11) eap: Continuing tunnel setup
(11)     [eap] = ok
(11)   } # authorize = ok
(11) Found Auth-Type = eap
(11) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(11)   authenticate {
(11) eap: Expiring EAP session with state 0x31d4b0f635c8a91b
(11) eap: Finished EAP session with state 0x31d4b0f635c8a91b
(11) eap: Previous EAP request found for state 0x31d4b0f635c8a91b, released from the list
(11) eap: Peer sent packet with method EAP PEAP (25)
(11) eap: Calling submodule eap_peap to process data
(11) eap_peap: (TLS) EAP Peer says that the final record size will be 7 bytes
(11) eap_peap: (TLS) EAP Got all data (7 bytes)
(11) eap_peap: (TLS) recv TLS 1.2 Alert, fatal unknown_ca
(11) eap_peap: (TLS) The client is informing us that it does not recognize the CA used to issue the server certificate.  Please update the client so that it knows about the CA.
(11) eap_peap: ERROR: (TLS) Alert read:fatal:unknown CA
(11) eap_peap: (TLS) Server : Need to read more data: error
(11) eap_peap: ERROR: (TLS) Failed reading from OpenSSL: error:0A000418:SSL routines::tlsv1 alert unknown ca
(11) eap_peap: (TLS) In Handshake Phase
(11) eap_peap: (TLS) Application data.
(11) eap_peap: ERROR: (TLS) Cannot continue, as the peer is misbehaving.
(11) eap_peap: ERROR: [eaptls process] = fail
(11) eap: ERROR: Failed continuing EAP PEAP (25) session.  EAP sub-module failed
(11) eap: Sending EAP Failure (code 4) ID 28 length 4
(11) eap: Failed in EAP select
(11)     [eap] = invalid
(11)   } # authenticate = invalid
(11) Failed to authenticate the user
(11) Using Post-Auth-Type Reject
(11) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(11)   Post-Auth-Type REJECT {
(11) attr_filter.access_reject: EXPAND %{User-Name}
(11) attr_filter.access_reject:    --> anonymous
(11) attr_filter.access_reject: Matched entry DEFAULT at line 11
(11)     [attr_filter.access_reject] = updated
(11)     [eap] = noop
(11)     policy remove_reply_message_if_eap {
(11)       if (&reply:EAP-Message && &reply:Reply-Message) {
(11)       if (&reply:EAP-Message && &reply:Reply-Message)  -> FALSE
(11)       else {
(11)         [noop] = noop
(11)       } # else = noop
(11)     } # policy remove_reply_message_if_eap = noop
(11)   } # Post-Auth-Type REJECT = updated
(11) Delaying response for 1.000000 seconds
Waking up in 0.3 seconds.
Waking up in 0.2 seconds.
(0) Cleaning up request packet ID 0 with timestamp +10 due to cleanup_delay was reached
(1) Cleaning up request packet ID 1 with timestamp +10 due to cleanup_delay was reached
(2) Cleaning up request packet ID 2 with timestamp +10 due to cleanup_delay was reached
(3) Cleaning up request packet ID 3 with timestamp +10 due to cleanup_delay was reached
(4) Cleaning up request packet ID 4 with timestamp +10 due to cleanup_delay was reached
(5) Cleaning up request packet ID 5 with timestamp +10 due to cleanup_delay was reached
Waking up in 0.2 seconds.
(11) Sending delayed response
(11) Sent Access-Reject Id 11 from 127.0.0.1:1812 to 127.0.0.1:34030 length 44
(11)   EAP-Message = 0x041c0004
(11)   Message-Authenticator = 0x00000000000000000000000000000000
Waking up in 3.7 seconds.
(12) Received Access-Request Id 12 from 127.0.0.1:34030 to 127.0.0.1:1812 length 230
(12)   User-Name = "anonymous"
(12)   NAS-IP-Address = 127.0.0.1
(12)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(12)   NAS-Port-Type = Wireless-802.11
(12)   Service-Type = Framed-User
(12)   NAS-Port = 1
(12)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(12)   Connect-Info = "CONNECT 54Mbps 802.11g"
(12)   Acct-Session-Id = "438644E561DD546B"
(12)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(12)   WLAN-Pairwise-Cipher = 1027076
(12)   WLAN-Group-Cipher = 1027076
(12)   WLAN-AKM-Suite = 1027073
(12)   WLAN-Group-Mgmt-Cipher = 1027078
(12)   Framed-MTU = 1400
(12)   EAP-Message = 0x0233000e01616e6f6e796d6f7573
(12)   Message-Authenticator = 0x56255cfd58ab12f165c02984ff62e118
(12) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(12)   authorize {
(12)     policy filter_username {
(12)       if (&User-Name) {
(12)       if (&User-Name)  -> TRUE
(12)       if (&User-Name)  {
(12)         if (&User-Name =~ / /) {
(12)         if (&User-Name =~ / /)  -> FALSE
(12)         if (&User-Name =~ /@[^@]*@/ ) {
(12)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(12)         if (&User-Name =~ /\.\./ ) {
(12)         if (&User-Name =~ /\.\./ )  -> FALSE
(12)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(12)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(12)         if (&User-Name =~ /\.$/)  {
(12)         if (&User-Name =~ /\.$/)   -> FALSE
(12)         if (&User-Name =~ /@\./)  {
(12)         if (&User-Name =~ /@\./)   -> FALSE
(12)       } # if (&User-Name)  = notfound
(12)     } # policy filter_username = notfound
(12)     [preprocess] = ok
(12)     [chap] = noop
(12)     [mschap] = noop
(12)     [digest] = noop
(12) suffix: Checking for suffix after "@"
(12) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(12) suffix: No such realm "NULL"
(12)     [suffix] = noop
(12) eap: Peer sent EAP Response (code 2) ID 51 length 14
(12) eap: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
(12)     [eap] = ok
(12)   } # authorize = ok
(12) Found Auth-Type = eap
(12) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(12)   authenticate {
(12) eap: Peer sent packet with method EAP Identity (1)
(12) eap: Calling submodule eap_md5 to process data
(12) eap_md5: Issuing MD5 Challenge
(12) eap: Sending EAP Request (code 1) ID 52 length 22
(12) eap: EAP session adding &reply:State = 0x481701374823055a
(12)     [eap] = handled
(12)   } # authenticate = handled
(12) Using Post-Auth-Type Challenge
(12) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(12)   Challenge { ... } # empty sub-section is ignored
(12) Sent Access-Challenge Id 12 from 127.0.0.1:1812 to 127.0.0.1:34030 length 80
(12)   EAP-Message = 0x01340016041034f99663f1e2959101430cdbfa7e9317
(12)   Message-Authenticator = 0x00000000000000000000000000000000
(12)   State = 0x481701374823055ad85b9f3f1779ed98
(12) Finished request
Waking up in 0.8 seconds.
(13) Received Access-Request Id 13 from 127.0.0.1:34030 to 127.0.0.1:1812 length 241
(13)   User-Name = "anonymous"
(13)   NAS-IP-Address = 127.0.0.1
(13)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(13)   NAS-Port-Type = Wireless-802.11
(13)   Service-Type = Framed-User
(13)   NAS-Port = 1
(13)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(13)   Connect-Info = "CONNECT 54Mbps 802.11g"
(13)   Acct-Session-Id = "438644E561DD546B"
(13)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(13)   WLAN-Pairwise-Cipher = 1027076
(13)   WLAN-Group-Cipher = 1027076
(13)   WLAN-AKM-Suite = 1027073
(13)   WLAN-Group-Mgmt-Cipher = 1027078
(13)   Framed-MTU = 1400
(13)   EAP-Message = 0x02340007031915
(13)   State = 0x481701374823055ad85b9f3f1779ed98
(13)   Message-Authenticator = 0x1c527e3eac31e972ec9e4978c8730ead
(13) session-state: No cached attributes
(13) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(13)   authorize {
(13)     policy filter_username {
(13)       if (&User-Name) {
(13)       if (&User-Name)  -> TRUE
(13)       if (&User-Name)  {
(13)         if (&User-Name =~ / /) {
(13)         if (&User-Name =~ / /)  -> FALSE
(13)         if (&User-Name =~ /@[^@]*@/ ) {
(13)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(13)         if (&User-Name =~ /\.\./ ) {
(13)         if (&User-Name =~ /\.\./ )  -> FALSE
(13)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(13)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(13)         if (&User-Name =~ /\.$/)  {
(13)         if (&User-Name =~ /\.$/)   -> FALSE
(13)         if (&User-Name =~ /@\./)  {
(13)         if (&User-Name =~ /@\./)   -> FALSE
(13)       } # if (&User-Name)  = notfound
(13)     } # policy filter_username = notfound
(13)     [preprocess] = ok
(13)     [chap] = noop
(13)     [mschap] = noop
(13)     [digest] = noop
(13) suffix: Checking for suffix after "@"
(13) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(13) suffix: No such realm "NULL"
(13)     [suffix] = noop
(13) eap: Peer sent EAP Response (code 2) ID 52 length 7
(13) eap: No EAP Start, assuming it's an on-going EAP conversation
(13)     [eap] = updated
(13)     [files] = noop
(13)     [expiration] = noop
(13)     [logintime] = noop
Not doing PAP as Auth-Type is already set.
(13)     [pap] = noop
(13)   } # authorize = updated
(13) Found Auth-Type = eap
(13) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(13)   authenticate {
(13) eap: Expiring EAP session with state 0x481701374823055a
(13) eap: Finished EAP session with state 0x481701374823055a
(13) eap: Previous EAP request found for state 0x481701374823055a, released from the list
(13) eap: Peer sent packet with method EAP NAK (3)
(13) eap: Found mutually acceptable type PEAP (25)
(13) eap: Calling submodule eap_peap to process data
(13) eap_peap: (TLS) Initiating new session
(13) eap: Sending EAP Request (code 1) ID 53 length 6
(13) eap: EAP session adding &reply:State = 0x481701374922185a
(13)     [eap] = handled
(13)   } # authenticate = handled
(13) Using Post-Auth-Type Challenge
(13) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(13)   Challenge { ... } # empty sub-section is ignored
(13) session-state: Saving cached attributes
(13)   Framed-MTU = 994
(13) Sent Access-Challenge Id 13 from 127.0.0.1:1812 to 127.0.0.1:34030 length 64
(13)   EAP-Message = 0x013500061920
(13)   Message-Authenticator = 0x00000000000000000000000000000000
(13)   State = 0x481701374922185ad85b9f3f1779ed98
(13) Finished request
Waking up in 0.7 seconds.
(14) Received Access-Request Id 14 from 127.0.0.1:34030 to 127.0.0.1:1812 length 476
(14)   User-Name = "anonymous"
(14)   NAS-IP-Address = 127.0.0.1
(14)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(14)   NAS-Port-Type = Wireless-802.11
(14)   Service-Type = Framed-User
(14)   NAS-Port = 1
(14)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(14)   Connect-Info = "CONNECT 54Mbps 802.11g"
(14)   Acct-Session-Id = "438644E561DD546B"
(14)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(14)   WLAN-Pairwise-Cipher = 1027076
(14)   WLAN-Group-Cipher = 1027076
(14)   WLAN-AKM-Suite = 1027073
(14)   WLAN-Group-Mgmt-Cipher = 1027078
(14)   Framed-MTU = 1400
(14)   EAP-Message = 0x023500f21980000000e816030300e3010000df030300000022ae4ace5c62bc61795a4fdd818984bb24b784ff22b50bef8d7f436cae000076c02cc030c0adc024c028c00ac014c0afc05dc061c049c04dc02bc02fc0acc023c027c009c013c0aec05cc060c048c04c009dc09d003d0035c032c02ac00fc02ec026c005c0a1c05fc063c051c04bc04fc03d009cc09c003c002fc031c029c00ec02dc025c004c0a0c05ec062c050c04ac04ec03c00ff01000040000a0010000e001d001700180019001a001b001c000d001600140603050306010501040303030401030102030201000b00020100001600000017000000230000
(14)   State = 0x481701374922185ad85b9f3f1779ed98
(14)   Message-Authenticator = 0x36beffa3c7c6c3c80f52499ece742831
(14) Restoring &session-state
(14)   &session-state:Framed-MTU = 994
(14) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(14)   authorize {
(14)     policy filter_username {
(14)       if (&User-Name) {
(14)       if (&User-Name)  -> TRUE
(14)       if (&User-Name)  {
(14)         if (&User-Name =~ / /) {
(14)         if (&User-Name =~ / /)  -> FALSE
(14)         if (&User-Name =~ /@[^@]*@/ ) {
(14)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(14)         if (&User-Name =~ /\.\./ ) {
(14)         if (&User-Name =~ /\.\./ )  -> FALSE
(14)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(14)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(14)         if (&User-Name =~ /\.$/)  {
(14)         if (&User-Name =~ /\.$/)   -> FALSE
(14)         if (&User-Name =~ /@\./)  {
(14)         if (&User-Name =~ /@\./)   -> FALSE
(14)       } # if (&User-Name)  = notfound
(14)     } # policy filter_username = notfound
(14)     [preprocess] = ok
(14)     [chap] = noop
(14)     [mschap] = noop
(14)     [digest] = noop
(14) suffix: Checking for suffix after "@"
(14) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(14) suffix: No such realm "NULL"
(14)     [suffix] = noop
(14) eap: Peer sent EAP Response (code 2) ID 53 length 242
(14) eap: Continuing tunnel setup
(14)     [eap] = ok
(14)   } # authorize = ok
(14) Found Auth-Type = eap
(14) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(14)   authenticate {
(14) eap: Expiring EAP session with state 0x481701374922185a
(14) eap: Finished EAP session with state 0x481701374922185a
(14) eap: Previous EAP request found for state 0x481701374922185a, released from the list
(14) eap: Peer sent packet with method EAP PEAP (25)
(14) eap: Calling submodule eap_peap to process data
(14) eap_peap: (TLS) EAP Peer says that the final record size will be 232 bytes
(14) eap_peap: (TLS) EAP Got all data (232 bytes)
(14) eap_peap: (TLS) Handshake state - before SSL initialization
(14) eap_peap: (TLS) Handshake state - Server before SSL initialization
(14) eap_peap: (TLS) Handshake state - Server before SSL initialization
(14) eap_peap: (TLS) recv TLS 1.3 Handshake, ClientHello
(14) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read client hello
(14) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHello
(14) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server hello
(14) eap_peap: (TLS) send TLS 1.2 Handshake, Certificate
(14) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write certificate
(14) eap_peap: (TLS) send TLS 1.2 Handshake, ServerKeyExchange
(14) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write key exchange
(14) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHelloDone
(14) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server done
(14) eap_peap: (TLS) Server : Need to read more data: SSLv3/TLS write server done
(14) eap_peap: (TLS) In Handshake Phase
(14) eap: Sending EAP Request (code 1) ID 54 length 1004
(14) eap: EAP session adding &reply:State = 0x481701374a21185a
(14)     [eap] = handled
(14)   } # authenticate = handled
(14) Using Post-Auth-Type Challenge
(14) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(14)   Challenge { ... } # empty sub-section is ignored
(14) session-state: Saving cached attributes
(14)   Framed-MTU = 994
(14)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(14)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(14)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(14)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(14)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(14) Sent Access-Challenge Id 14 from 127.0.0.1:1812 to 127.0.0.1:34030 length 1068
(14)   EAP-Message = 0x013603ec19c000000ac6160303003d020000390303c1e0047314e4994651378c9e236340e58a297e2e50deab91992c75015aae490e00c030000011ff01000100000b0004030001020017000016030309450b00094100093e00043a308204363082031ea003020102020101300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232303134343035385a170d3234303231383134343035385a307c310b3009060355040613024652310f300d06035504080c0652616469757331153013060355040a0c0c4578616d706c6520496e632e3123302106035504030c1a4578616d70
(14)   Message-Authenticator = 0x00000000000000000000000000000000
(14)   State = 0x481701374a21185ad85b9f3f1779ed98
(14) Finished request
Waking up in 0.7 seconds.
(15) Received Access-Request Id 15 from 127.0.0.1:34030 to 127.0.0.1:1812 length 240
(15)   User-Name = "anonymous"
(15)   NAS-IP-Address = 127.0.0.1
(15)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(15)   NAS-Port-Type = Wireless-802.11
(15)   Service-Type = Framed-User
(15)   NAS-Port = 1
(15)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(15)   Connect-Info = "CONNECT 54Mbps 802.11g"
(15)   Acct-Session-Id = "438644E561DD546B"
(15)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(15)   WLAN-Pairwise-Cipher = 1027076
(15)   WLAN-Group-Cipher = 1027076
(15)   WLAN-AKM-Suite = 1027073
(15)   WLAN-Group-Mgmt-Cipher = 1027078
(15)   Framed-MTU = 1400
(15)   EAP-Message = 0x023600061900
(15)   State = 0x481701374a21185ad85b9f3f1779ed98
(15)   Message-Authenticator = 0x97229fb836790d7fa0eeaa3fc95da103
(15) Restoring &session-state
(15)   &session-state:Framed-MTU = 994
(15)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(15)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(15)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(15)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(15)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(15) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(15)   authorize {
(15)     policy filter_username {
(15)       if (&User-Name) {
(15)       if (&User-Name)  -> TRUE
(15)       if (&User-Name)  {
(15)         if (&User-Name =~ / /) {
(15)         if (&User-Name =~ / /)  -> FALSE
(15)         if (&User-Name =~ /@[^@]*@/ ) {
(15)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(15)         if (&User-Name =~ /\.\./ ) {
(15)         if (&User-Name =~ /\.\./ )  -> FALSE
(15)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(15)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(15)         if (&User-Name =~ /\.$/)  {
(15)         if (&User-Name =~ /\.$/)   -> FALSE
(15)         if (&User-Name =~ /@\./)  {
(15)         if (&User-Name =~ /@\./)   -> FALSE
(15)       } # if (&User-Name)  = notfound
(15)     } # policy filter_username = notfound
(15)     [preprocess] = ok
(15)     [chap] = noop
(15)     [mschap] = noop
(15)     [digest] = noop
(15) suffix: Checking for suffix after "@"
(15) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(15) suffix: No such realm "NULL"
(15)     [suffix] = noop
(15) eap: Peer sent EAP Response (code 2) ID 54 length 6
(15) eap: Continuing tunnel setup
(15)     [eap] = ok
(15)   } # authorize = ok
(15) Found Auth-Type = eap
(15) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(15)   authenticate {
(15) eap: Expiring EAP session with state 0x481701374a21185a
(15) eap: Finished EAP session with state 0x481701374a21185a
(15) eap: Previous EAP request found for state 0x481701374a21185a, released from the list
(15) eap: Peer sent packet with method EAP PEAP (25)
(15) eap: Calling submodule eap_peap to process data
(15) eap_peap: (TLS) Peer ACKed our handshake fragment
(15) eap: Sending EAP Request (code 1) ID 55 length 1000
(15) eap: EAP session adding &reply:State = 0x481701374b20185a
(15)     [eap] = handled
(15)   } # authenticate = handled
(15) Using Post-Auth-Type Challenge
(15) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(15)   Challenge { ... } # empty sub-section is ignored
(15) session-state: Saving cached attributes
(15)   Framed-MTU = 994
(15)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(15)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(15)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(15)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(15)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(15) Sent Access-Challenge Id 15 from 127.0.0.1:1812 to 127.0.0.1:34030 length 1064
(15)   EAP-Message = 0x013703e8194087befe9b36c4eee5514a6ce0d692160ea6d9e1fc0d3d3770b77f8b079a013246fadcf528c63464c5e9d2300563aaa12b1ca1471e09da68797ab5c40554ae52c21289c417609a02a0889e761f6c3d244c6766a6a766b1f1292134398a9dc0179ff601e9f17a910a8591f20ad07388df17a4a59b7316e68880f36090741d349cc4b4e0d742cbfb8947bab078008661a8163a72170809669fbd0fc8aeb1a84c5813bb00036cdb862c8a400004fe308204fa308203e2a00302010202147d47217251ce22b1ff50ee4b4a088bf5a83ad710300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72
(15)   Message-Authenticator = 0x00000000000000000000000000000000
(15)   State = 0x481701374b20185ad85b9f3f1779ed98
(15) Finished request
Waking up in 0.6 seconds.
(16) Received Access-Request Id 16 from 127.0.0.1:34030 to 127.0.0.1:1812 length 240
(16)   User-Name = "anonymous"
(16)   NAS-IP-Address = 127.0.0.1
(16)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(16)   NAS-Port-Type = Wireless-802.11
(16)   Service-Type = Framed-User
(16)   NAS-Port = 1
(16)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(16)   Connect-Info = "CONNECT 54Mbps 802.11g"
(16)   Acct-Session-Id = "438644E561DD546B"
(16)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(16)   WLAN-Pairwise-Cipher = 1027076
(16)   WLAN-Group-Cipher = 1027076
(16)   WLAN-AKM-Suite = 1027073
(16)   WLAN-Group-Mgmt-Cipher = 1027078
(16)   Framed-MTU = 1400
(16)   EAP-Message = 0x023700061900
(16)   State = 0x481701374b20185ad85b9f3f1779ed98
(16)   Message-Authenticator = 0x828776e11a171fa098b190b2a3840ab2
(16) Restoring &session-state
(16)   &session-state:Framed-MTU = 994
(16)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(16)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(16)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(16)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(16)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(16) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(16)   authorize {
(16)     policy filter_username {
(16)       if (&User-Name) {
(16)       if (&User-Name)  -> TRUE
(16)       if (&User-Name)  {
(16)         if (&User-Name =~ / /) {
(16)         if (&User-Name =~ / /)  -> FALSE
(16)         if (&User-Name =~ /@[^@]*@/ ) {
(16)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(16)         if (&User-Name =~ /\.\./ ) {
(16)         if (&User-Name =~ /\.\./ )  -> FALSE
(16)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(16)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(16)         if (&User-Name =~ /\.$/)  {
(16)         if (&User-Name =~ /\.$/)   -> FALSE
(16)         if (&User-Name =~ /@\./)  {
(16)         if (&User-Name =~ /@\./)   -> FALSE
(16)       } # if (&User-Name)  = notfound
(16)     } # policy filter_username = notfound
(16)     [preprocess] = ok
(16)     [chap] = noop
(16)     [mschap] = noop
(16)     [digest] = noop
(16) suffix: Checking for suffix after "@"
(16) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(16) suffix: No such realm "NULL"
(16)     [suffix] = noop
(16) eap: Peer sent EAP Response (code 2) ID 55 length 6
(16) eap: Continuing tunnel setup
(16)     [eap] = ok
(16)   } # authorize = ok
(16) Found Auth-Type = eap
(16) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(16)   authenticate {
(16) eap: Expiring EAP session with state 0x481701374b20185a
(16) eap: Finished EAP session with state 0x481701374b20185a
(16) eap: Previous EAP request found for state 0x481701374b20185a, released from the list
(16) eap: Peer sent packet with method EAP PEAP (25)
(16) eap: Calling submodule eap_peap to process data
(16) eap_peap: (TLS) Peer ACKed our handshake fragment
(16) eap: Sending EAP Request (code 1) ID 56 length 776
(16) eap: EAP session adding &reply:State = 0x481701374c2f185a
(16)     [eap] = handled
(16)   } # authenticate = handled
(16) Using Post-Auth-Type Challenge
(16) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(16)   Challenge { ... } # empty sub-section is ignored
(16) session-state: Saving cached attributes
(16)   Framed-MTU = 994
(16)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(16)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(16)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(16)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(16)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(16) Sent Access-Challenge Id 16 from 127.0.0.1:1812 to 127.0.0.1:34030 length 840
(16)   EAP-Message = 0x01380308190078616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f7269747982147d47217251ce22b1ff50ee4b4a088bf5a83ad710300f0603551d130101ff040530030101ff30360603551d1f042f302d302ba029a0278625687474703a2f2f7777772e6578616d706c652e6f72672f6578616d706c655f63612e63726c300d06092a864886f70d01010b0500038201010055f89737d1724a549c214e365757f01e0edf07642a13c83c22ec0857171b5e788d91b63a9d1d1a9d7d7651c9cf6c27a90669077d8f6a7afc17c8c8205d652a1f8c9f9fcd23124e632e4607232a1248a44c7ce7eed0df789c88c6e43c0d6714b1641e5f6cd31f9c67e134c4ddc0d685554ffaf9340fe27e20a5ad895c49c9fe45ec71b552744b309abaae1ca889128910c434a68f4e61257c91929ea018f65255180809113213278950
(16)   Message-Authenticator = 0x00000000000000000000000000000000
(16)   State = 0x481701374c2f185ad85b9f3f1779ed98
(16) Finished request
Waking up in 0.6 seconds.
(17) Received Access-Request Id 17 from 127.0.0.1:34030 to 127.0.0.1:1812 length 251
(17)   User-Name = "anonymous"
(17)   NAS-IP-Address = 127.0.0.1
(17)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(17)   NAS-Port-Type = Wireless-802.11
(17)   Service-Type = Framed-User
(17)   NAS-Port = 1
(17)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(17)   Connect-Info = "CONNECT 54Mbps 802.11g"
(17)   Acct-Session-Id = "438644E561DD546B"
(17)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(17)   WLAN-Pairwise-Cipher = 1027076
(17)   WLAN-Group-Cipher = 1027076
(17)   WLAN-AKM-Suite = 1027073
(17)   WLAN-Group-Mgmt-Cipher = 1027078
(17)   Framed-MTU = 1400
(17)   EAP-Message = 0x0238001119800000000715030300020230
(17)   State = 0x481701374c2f185ad85b9f3f1779ed98
(17)   Message-Authenticator = 0x43feee18ac1fb9aa72f2d25ee5bfce9b
(17) Restoring &session-state
(17)   &session-state:Framed-MTU = 994
(17)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(17)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(17)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(17)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(17)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(17) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(17)   authorize {
(17)     policy filter_username {
(17)       if (&User-Name) {
(17)       if (&User-Name)  -> TRUE
(17)       if (&User-Name)  {
(17)         if (&User-Name =~ / /) {
(17)         if (&User-Name =~ / /)  -> FALSE
(17)         if (&User-Name =~ /@[^@]*@/ ) {
(17)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(17)         if (&User-Name =~ /\.\./ ) {
(17)         if (&User-Name =~ /\.\./ )  -> FALSE
(17)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(17)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(17)         if (&User-Name =~ /\.$/)  {
(17)         if (&User-Name =~ /\.$/)   -> FALSE
(17)         if (&User-Name =~ /@\./)  {
(17)         if (&User-Name =~ /@\./)   -> FALSE
(17)       } # if (&User-Name)  = notfound
(17)     } # policy filter_username = notfound
(17)     [preprocess] = ok
(17)     [chap] = noop
(17)     [mschap] = noop
(17)     [digest] = noop
(17) suffix: Checking for suffix after "@"
(17) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(17) suffix: No such realm "NULL"
(17)     [suffix] = noop
(17) eap: Peer sent EAP Response (code 2) ID 56 length 17
(17) eap: Continuing tunnel setup
(17)     [eap] = ok
(17)   } # authorize = ok
(17) Found Auth-Type = eap
(17) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(17)   authenticate {
(17) eap: Expiring EAP session with state 0x481701374c2f185a
(17) eap: Finished EAP session with state 0x481701374c2f185a
(17) eap: Previous EAP request found for state 0x481701374c2f185a, released from the list
(17) eap: Peer sent packet with method EAP PEAP (25)
(17) eap: Calling submodule eap_peap to process data
(17) eap_peap: (TLS) EAP Peer says that the final record size will be 7 bytes
(17) eap_peap: (TLS) EAP Got all data (7 bytes)
(17) eap_peap: (TLS) recv TLS 1.2 Alert, fatal unknown_ca
(17) eap_peap: (TLS) The client is informing us that it does not recognize the CA used to issue the server certificate.  Please update the client so that it knows about the CA.
(17) eap_peap: ERROR: (TLS) Alert read:fatal:unknown CA
(17) eap_peap: (TLS) Server : Need to read more data: error
(17) eap_peap: ERROR: (TLS) Failed reading from OpenSSL: error:0A000418:SSL routines::tlsv1 alert unknown ca
(17) eap_peap: (TLS) In Handshake Phase
(17) eap_peap: (TLS) Application data.
(17) eap_peap: ERROR: (TLS) Cannot continue, as the peer is misbehaving.
(17) eap_peap: ERROR: [eaptls process] = fail
(17) eap: ERROR: Failed continuing EAP PEAP (25) session.  EAP sub-module failed
(17) eap: Sending EAP Failure (code 4) ID 56 length 4
(17) eap: Failed in EAP select
(17)     [eap] = invalid
(17)   } # authenticate = invalid
(17) Failed to authenticate the user
(17) Using Post-Auth-Type Reject
(17) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(17)   Post-Auth-Type REJECT {
(17) attr_filter.access_reject: EXPAND %{User-Name}
(17) attr_filter.access_reject:    --> anonymous
(17) attr_filter.access_reject: Matched entry DEFAULT at line 11
(17)     [attr_filter.access_reject] = updated
(17)     [eap] = noop
(17)     policy remove_reply_message_if_eap {
(17)       if (&reply:EAP-Message && &reply:Reply-Message) {
(17)       if (&reply:EAP-Message && &reply:Reply-Message)  -> FALSE
(17)       else {
(17)         [noop] = noop
(17)       } # else = noop
(17)     } # policy remove_reply_message_if_eap = noop
(17)   } # Post-Auth-Type REJECT = updated
(17) Delaying response for 1.000000 seconds
Waking up in 0.3 seconds.
Waking up in 0.2 seconds.
(6) Cleaning up request packet ID 6 with timestamp +14 due to cleanup_delay was reached
(7) Cleaning up request packet ID 7 with timestamp +14 due to cleanup_delay was reached
(8) Cleaning up request packet ID 8 with timestamp +14 due to cleanup_delay was reached
(9) Cleaning up request packet ID 9 with timestamp +14 due to cleanup_delay was reached
(10) Cleaning up request packet ID 10 with timestamp +14 due to cleanup_delay was reached
(11) Cleaning up request packet ID 11 with timestamp +14 due to cleanup_delay was reached
Waking up in 0.1 seconds.
(17) Sending delayed response
(17) Sent Access-Reject Id 17 from 127.0.0.1:1812 to 127.0.0.1:34030 length 44
(17)   EAP-Message = 0x04380004
(17)   Message-Authenticator = 0x00000000000000000000000000000000
Waking up in 3.7 seconds.
(18) Received Access-Request Id 18 from 127.0.0.1:34030 to 127.0.0.1:1812 length 230
(18)   User-Name = "anonymous"
(18)   NAS-IP-Address = 127.0.0.1
(18)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(18)   NAS-Port-Type = Wireless-802.11
(18)   Service-Type = Framed-User
(18)   NAS-Port = 1
(18)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(18)   Connect-Info = "CONNECT 54Mbps 802.11g"
(18)   Acct-Session-Id = "438644E561DD546B"
(18)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(18)   WLAN-Pairwise-Cipher = 1027076
(18)   WLAN-Group-Cipher = 1027076
(18)   WLAN-AKM-Suite = 1027073
(18)   WLAN-Group-Mgmt-Cipher = 1027078
(18)   Framed-MTU = 1400
(18)   EAP-Message = 0x023c000e01616e6f6e796d6f7573
(18)   Message-Authenticator = 0xfd7bf9ef188c0cd1d31d174e7ba4cf07
(18) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(18)   authorize {
(18)     policy filter_username {
(18)       if (&User-Name) {
(18)       if (&User-Name)  -> TRUE
(18)       if (&User-Name)  {
(18)         if (&User-Name =~ / /) {
(18)         if (&User-Name =~ / /)  -> FALSE
(18)         if (&User-Name =~ /@[^@]*@/ ) {
(18)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(18)         if (&User-Name =~ /\.\./ ) {
(18)         if (&User-Name =~ /\.\./ )  -> FALSE
(18)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(18)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(18)         if (&User-Name =~ /\.$/)  {
(18)         if (&User-Name =~ /\.$/)   -> FALSE
(18)         if (&User-Name =~ /@\./)  {
(18)         if (&User-Name =~ /@\./)   -> FALSE
(18)       } # if (&User-Name)  = notfound
(18)     } # policy filter_username = notfound
(18)     [preprocess] = ok
(18)     [chap] = noop
(18)     [mschap] = noop
(18)     [digest] = noop
(18) suffix: Checking for suffix after "@"
(18) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(18) suffix: No such realm "NULL"
(18)     [suffix] = noop
(18) eap: Peer sent EAP Response (code 2) ID 60 length 14
(18) eap: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
(18)     [eap] = ok
(18)   } # authorize = ok
(18) Found Auth-Type = eap
(18) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(18)   authenticate {
(18) eap: Peer sent packet with method EAP Identity (1)
(18) eap: Calling submodule eap_md5 to process data
(18) eap_md5: Issuing MD5 Challenge
(18) eap: Sending EAP Request (code 1) ID 61 length 22
(18) eap: EAP session adding &reply:State = 0x7c6c64af7c51604f
(18)     [eap] = handled
(18)   } # authenticate = handled
(18) Using Post-Auth-Type Challenge
(18) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(18)   Challenge { ... } # empty sub-section is ignored
(18) Sent Access-Challenge Id 18 from 127.0.0.1:1812 to 127.0.0.1:34030 length 80
(18)   EAP-Message = 0x013d00160410694449d6aada6e59fd81e4337d712493
(18)   Message-Authenticator = 0x00000000000000000000000000000000
(18)   State = 0x7c6c64af7c51604f9c82057772269e4a
(18) Finished request
Waking up in 0.7 seconds.
(19) Received Access-Request Id 19 from 127.0.0.1:34030 to 127.0.0.1:1812 length 241
(19)   User-Name = "anonymous"
(19)   NAS-IP-Address = 127.0.0.1
(19)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(19)   NAS-Port-Type = Wireless-802.11
(19)   Service-Type = Framed-User
(19)   NAS-Port = 1
(19)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(19)   Connect-Info = "CONNECT 54Mbps 802.11g"
(19)   Acct-Session-Id = "438644E561DD546B"
(19)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(19)   WLAN-Pairwise-Cipher = 1027076
(19)   WLAN-Group-Cipher = 1027076
(19)   WLAN-AKM-Suite = 1027073
(19)   WLAN-Group-Mgmt-Cipher = 1027078
(19)   Framed-MTU = 1400
(19)   EAP-Message = 0x023d0007031915
(19)   State = 0x7c6c64af7c51604f9c82057772269e4a
(19)   Message-Authenticator = 0xc84f9419878eba692d1f8459f0f3676e
(19) session-state: No cached attributes
(19) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(19)   authorize {
(19)     policy filter_username {
(19)       if (&User-Name) {
(19)       if (&User-Name)  -> TRUE
(19)       if (&User-Name)  {
(19)         if (&User-Name =~ / /) {
(19)         if (&User-Name =~ / /)  -> FALSE
(19)         if (&User-Name =~ /@[^@]*@/ ) {
(19)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(19)         if (&User-Name =~ /\.\./ ) {
(19)         if (&User-Name =~ /\.\./ )  -> FALSE
(19)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(19)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(19)         if (&User-Name =~ /\.$/)  {
(19)         if (&User-Name =~ /\.$/)   -> FALSE
(19)         if (&User-Name =~ /@\./)  {
(19)         if (&User-Name =~ /@\./)   -> FALSE
(19)       } # if (&User-Name)  = notfound
(19)     } # policy filter_username = notfound
(19)     [preprocess] = ok
(19)     [chap] = noop
(19)     [mschap] = noop
(19)     [digest] = noop
(19) suffix: Checking for suffix after "@"
(19) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(19) suffix: No such realm "NULL"
(19)     [suffix] = noop
(19) eap: Peer sent EAP Response (code 2) ID 61 length 7
(19) eap: No EAP Start, assuming it's an on-going EAP conversation
(19)     [eap] = updated
(19)     [files] = noop
(19)     [expiration] = noop
(19)     [logintime] = noop
Not doing PAP as Auth-Type is already set.
(19)     [pap] = noop
(19)   } # authorize = updated
(19) Found Auth-Type = eap
(19) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(19)   authenticate {
(19) eap: Expiring EAP session with state 0x7c6c64af7c51604f
(19) eap: Finished EAP session with state 0x7c6c64af7c51604f
(19) eap: Previous EAP request found for state 0x7c6c64af7c51604f, released from the list
(19) eap: Peer sent packet with method EAP NAK (3)
(19) eap: Found mutually acceptable type PEAP (25)
(19) eap: Calling submodule eap_peap to process data
(19) eap_peap: (TLS) Initiating new session
(19) eap: Sending EAP Request (code 1) ID 62 length 6
(19) eap: EAP session adding &reply:State = 0x7c6c64af7d527d4f
(19)     [eap] = handled
(19)   } # authenticate = handled
(19) Using Post-Auth-Type Challenge
(19) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(19)   Challenge { ... } # empty sub-section is ignored
(19) session-state: Saving cached attributes
(19)   Framed-MTU = 994
(19) Sent Access-Challenge Id 19 from 127.0.0.1:1812 to 127.0.0.1:34030 length 64
(19)   EAP-Message = 0x013e00061920
(19)   Message-Authenticator = 0x00000000000000000000000000000000
(19)   State = 0x7c6c64af7d527d4f9c82057772269e4a
(19) Finished request
Waking up in 0.7 seconds.
(20) Received Access-Request Id 20 from 127.0.0.1:34030 to 127.0.0.1:1812 length 476
(20)   User-Name = "anonymous"
(20)   NAS-IP-Address = 127.0.0.1
(20)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(20)   NAS-Port-Type = Wireless-802.11
(20)   Service-Type = Framed-User
(20)   NAS-Port = 1
(20)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(20)   Connect-Info = "CONNECT 54Mbps 802.11g"
(20)   Acct-Session-Id = "438644E561DD546B"
(20)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(20)   WLAN-Pairwise-Cipher = 1027076
(20)   WLAN-Group-Cipher = 1027076
(20)   WLAN-AKM-Suite = 1027073
(20)   WLAN-Group-Mgmt-Cipher = 1027078
(20)   Framed-MTU = 1400
(20)   EAP-Message = 0x023e00f21980000000e816030300e3010000df030300000026b729fa7f68d8928d784e2d9c20d15c453c565d6e02460fd7d513f0d8000076c02cc030c0adc024c028c00ac014c0afc05dc061c049c04dc02bc02fc0acc023c027c009c013c0aec05cc060c048c04c009dc09d003d0035c032c02ac00fc02ec026c005c0a1c05fc063c051c04bc04fc03d009cc09c003c002fc031c029c00ec02dc025c004c0a0c05ec062c050c04ac04ec03c00ff01000040000a0010000e001d001700180019001a001b001c000d001600140603050306010501040303030401030102030201000b00020100001600000017000000230000
(20)   State = 0x7c6c64af7d527d4f9c82057772269e4a
(20)   Message-Authenticator = 0x3b2f8abad4bfd300cdd35ffe82f45f0f
(20) Restoring &session-state
(20)   &session-state:Framed-MTU = 994
(20) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(20)   authorize {
(20)     policy filter_username {
(20)       if (&User-Name) {
(20)       if (&User-Name)  -> TRUE
(20)       if (&User-Name)  {
(20)         if (&User-Name =~ / /) {
(20)         if (&User-Name =~ / /)  -> FALSE
(20)         if (&User-Name =~ /@[^@]*@/ ) {
(20)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(20)         if (&User-Name =~ /\.\./ ) {
(20)         if (&User-Name =~ /\.\./ )  -> FALSE
(20)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(20)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(20)         if (&User-Name =~ /\.$/)  {
(20)         if (&User-Name =~ /\.$/)   -> FALSE
(20)         if (&User-Name =~ /@\./)  {
(20)         if (&User-Name =~ /@\./)   -> FALSE
(20)       } # if (&User-Name)  = notfound
(20)     } # policy filter_username = notfound
(20)     [preprocess] = ok
(20)     [chap] = noop
(20)     [mschap] = noop
(20)     [digest] = noop
(20) suffix: Checking for suffix after "@"
(20) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(20) suffix: No such realm "NULL"
(20)     [suffix] = noop
(20) eap: Peer sent EAP Response (code 2) ID 62 length 242
(20) eap: Continuing tunnel setup
(20)     [eap] = ok
(20)   } # authorize = ok
(20) Found Auth-Type = eap
(20) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(20)   authenticate {
(20) eap: Expiring EAP session with state 0x7c6c64af7d527d4f
(20) eap: Finished EAP session with state 0x7c6c64af7d527d4f
(20) eap: Previous EAP request found for state 0x7c6c64af7d527d4f, released from the list
(20) eap: Peer sent packet with method EAP PEAP (25)
(20) eap: Calling submodule eap_peap to process data
(20) eap_peap: (TLS) EAP Peer says that the final record size will be 232 bytes
(20) eap_peap: (TLS) EAP Got all data (232 bytes)
(20) eap_peap: (TLS) Handshake state - before SSL initialization
(20) eap_peap: (TLS) Handshake state - Server before SSL initialization
(20) eap_peap: (TLS) Handshake state - Server before SSL initialization
(20) eap_peap: (TLS) recv TLS 1.3 Handshake, ClientHello
(20) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read client hello
(20) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHello
(20) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server hello
(20) eap_peap: (TLS) send TLS 1.2 Handshake, Certificate
(20) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write certificate
(20) eap_peap: (TLS) send TLS 1.2 Handshake, ServerKeyExchange
(20) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write key exchange
(20) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHelloDone
(20) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server done
(20) eap_peap: (TLS) Server : Need to read more data: SSLv3/TLS write server done
(20) eap_peap: (TLS) In Handshake Phase
(20) eap: Sending EAP Request (code 1) ID 63 length 1004
(20) eap: EAP session adding &reply:State = 0x7c6c64af7e537d4f
(20)     [eap] = handled
(20)   } # authenticate = handled
(20) Using Post-Auth-Type Challenge
(20) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(20)   Challenge { ... } # empty sub-section is ignored
(20) session-state: Saving cached attributes
(20)   Framed-MTU = 994
(20)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(20)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(20)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(20)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(20)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(20) Sent Access-Challenge Id 20 from 127.0.0.1:1812 to 127.0.0.1:34030 length 1068
(20)   EAP-Message = 0x013f03ec19c000000ac6160303003d0200003903037b108bca76e7a297ac9728149d3be4276010bfe43b937bedb620d79ed4fc882d00c030000011ff01000100000b0004030001020017000016030309450b00094100093e00043a308204363082031ea003020102020101300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232303134343035385a170d3234303231383134343035385a307c310b3009060355040613024652310f300d06035504080c0652616469757331153013060355040a0c0c4578616d706c6520496e632e3123302106035504030c1a4578616d70
(20)   Message-Authenticator = 0x00000000000000000000000000000000
(20)   State = 0x7c6c64af7e537d4f9c82057772269e4a
(20) Finished request
Waking up in 0.7 seconds.
(21) Received Access-Request Id 21 from 127.0.0.1:34030 to 127.0.0.1:1812 length 240
(21)   User-Name = "anonymous"
(21)   NAS-IP-Address = 127.0.0.1
(21)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(21)   NAS-Port-Type = Wireless-802.11
(21)   Service-Type = Framed-User
(21)   NAS-Port = 1
(21)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(21)   Connect-Info = "CONNECT 54Mbps 802.11g"
(21)   Acct-Session-Id = "438644E561DD546B"
(21)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(21)   WLAN-Pairwise-Cipher = 1027076
(21)   WLAN-Group-Cipher = 1027076
(21)   WLAN-AKM-Suite = 1027073
(21)   WLAN-Group-Mgmt-Cipher = 1027078
(21)   Framed-MTU = 1400
(21)   EAP-Message = 0x023f00061900
(21)   State = 0x7c6c64af7e537d4f9c82057772269e4a
(21)   Message-Authenticator = 0xed89e8693d53e7849f6c7ba112078491
(21) Restoring &session-state
(21)   &session-state:Framed-MTU = 994
(21)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(21)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(21)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(21)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(21)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(21) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(21)   authorize {
(21)     policy filter_username {
(21)       if (&User-Name) {
(21)       if (&User-Name)  -> TRUE
(21)       if (&User-Name)  {
(21)         if (&User-Name =~ / /) {
(21)         if (&User-Name =~ / /)  -> FALSE
(21)         if (&User-Name =~ /@[^@]*@/ ) {
(21)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(21)         if (&User-Name =~ /\.\./ ) {
(21)         if (&User-Name =~ /\.\./ )  -> FALSE
(21)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(21)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(21)         if (&User-Name =~ /\.$/)  {
(21)         if (&User-Name =~ /\.$/)   -> FALSE
(21)         if (&User-Name =~ /@\./)  {
(21)         if (&User-Name =~ /@\./)   -> FALSE
(21)       } # if (&User-Name)  = notfound
(21)     } # policy filter_username = notfound
(21)     [preprocess] = ok
(21)     [chap] = noop
(21)     [mschap] = noop
(21)     [digest] = noop
(21) suffix: Checking for suffix after "@"
(21) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(21) suffix: No such realm "NULL"
(21)     [suffix] = noop
(21) eap: Peer sent EAP Response (code 2) ID 63 length 6
(21) eap: Continuing tunnel setup
(21)     [eap] = ok
(21)   } # authorize = ok
(21) Found Auth-Type = eap
(21) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(21)   authenticate {
(21) eap: Expiring EAP session with state 0x7c6c64af7e537d4f
(21) eap: Finished EAP session with state 0x7c6c64af7e537d4f
(21) eap: Previous EAP request found for state 0x7c6c64af7e537d4f, released from the list
(21) eap: Peer sent packet with method EAP PEAP (25)
(21) eap: Calling submodule eap_peap to process data
(21) eap_peap: (TLS) Peer ACKed our handshake fragment
(21) eap: Sending EAP Request (code 1) ID 64 length 1000
(21) eap: EAP session adding &reply:State = 0x7c6c64af7f2c7d4f
(21)     [eap] = handled
(21)   } # authenticate = handled
(21) Using Post-Auth-Type Challenge
(21) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(21)   Challenge { ... } # empty sub-section is ignored
(21) session-state: Saving cached attributes
(21)   Framed-MTU = 994
(21)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(21)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(21)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(21)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(21)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(21) Sent Access-Challenge Id 21 from 127.0.0.1:1812 to 127.0.0.1:34030 length 1064
(21)   EAP-Message = 0x014003e8194087befe9b36c4eee5514a6ce0d692160ea6d9e1fc0d3d3770b77f8b079a013246fadcf528c63464c5e9d2300563aaa12b1ca1471e09da68797ab5c40554ae52c21289c417609a02a0889e761f6c3d244c6766a6a766b1f1292134398a9dc0179ff601e9f17a910a8591f20ad07388df17a4a59b7316e68880f36090741d349cc4b4e0d742cbfb8947bab078008661a8163a72170809669fbd0fc8aeb1a84c5813bb00036cdb862c8a400004fe308204fa308203e2a00302010202147d47217251ce22b1ff50ee4b4a088bf5a83ad710300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72
(21)   Message-Authenticator = 0x00000000000000000000000000000000
(21)   State = 0x7c6c64af7f2c7d4f9c82057772269e4a
(21) Finished request
Waking up in 0.6 seconds.
(22) Received Access-Request Id 22 from 127.0.0.1:34030 to 127.0.0.1:1812 length 240
(22)   User-Name = "anonymous"
(22)   NAS-IP-Address = 127.0.0.1
(22)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(22)   NAS-Port-Type = Wireless-802.11
(22)   Service-Type = Framed-User
(22)   NAS-Port = 1
(22)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(22)   Connect-Info = "CONNECT 54Mbps 802.11g"
(22)   Acct-Session-Id = "438644E561DD546B"
(22)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(22)   WLAN-Pairwise-Cipher = 1027076
(22)   WLAN-Group-Cipher = 1027076
(22)   WLAN-AKM-Suite = 1027073
(22)   WLAN-Group-Mgmt-Cipher = 1027078
(22)   Framed-MTU = 1400
(22)   EAP-Message = 0x024000061900
(22)   State = 0x7c6c64af7f2c7d4f9c82057772269e4a
(22)   Message-Authenticator = 0xec0508391203694599e2ee2a1bfbbd65
(22) Restoring &session-state
(22)   &session-state:Framed-MTU = 994
(22)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(22)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(22)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(22)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(22)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(22) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(22)   authorize {
(22)     policy filter_username {
(22)       if (&User-Name) {
(22)       if (&User-Name)  -> TRUE
(22)       if (&User-Name)  {
(22)         if (&User-Name =~ / /) {
(22)         if (&User-Name =~ / /)  -> FALSE
(22)         if (&User-Name =~ /@[^@]*@/ ) {
(22)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(22)         if (&User-Name =~ /\.\./ ) {
(22)         if (&User-Name =~ /\.\./ )  -> FALSE
(22)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(22)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(22)         if (&User-Name =~ /\.$/)  {
(22)         if (&User-Name =~ /\.$/)   -> FALSE
(22)         if (&User-Name =~ /@\./)  {
(22)         if (&User-Name =~ /@\./)   -> FALSE
(22)       } # if (&User-Name)  = notfound
(22)     } # policy filter_username = notfound
(22)     [preprocess] = ok
(22)     [chap] = noop
(22)     [mschap] = noop
(22)     [digest] = noop
(22) suffix: Checking for suffix after "@"
(22) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(22) suffix: No such realm "NULL"
(22)     [suffix] = noop
(22) eap: Peer sent EAP Response (code 2) ID 64 length 6
(22) eap: Continuing tunnel setup
(22)     [eap] = ok
(22)   } # authorize = ok
(22) Found Auth-Type = eap
(22) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(22)   authenticate {
(22) eap: Expiring EAP session with state 0x7c6c64af7f2c7d4f
(22) eap: Finished EAP session with state 0x7c6c64af7f2c7d4f
(22) eap: Previous EAP request found for state 0x7c6c64af7f2c7d4f, released from the list
(22) eap: Peer sent packet with method EAP PEAP (25)
(22) eap: Calling submodule eap_peap to process data
(22) eap_peap: (TLS) Peer ACKed our handshake fragment
(22) eap: Sending EAP Request (code 1) ID 65 length 776
(22) eap: EAP session adding &reply:State = 0x7c6c64af782d7d4f
(22)     [eap] = handled
(22)   } # authenticate = handled
(22) Using Post-Auth-Type Challenge
(22) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(22)   Challenge { ... } # empty sub-section is ignored
(22) session-state: Saving cached attributes
(22)   Framed-MTU = 994
(22)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(22)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(22)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(22)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(22)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(22) Sent Access-Challenge Id 22 from 127.0.0.1:1812 to 127.0.0.1:34030 length 840
(22)   EAP-Message = 0x01410308190078616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f7269747982147d47217251ce22b1ff50ee4b4a088bf5a83ad710300f0603551d130101ff040530030101ff30360603551d1f042f302d302ba029a0278625687474703a2f2f7777772e6578616d706c652e6f72672f6578616d706c655f63612e63726c300d06092a864886f70d01010b0500038201010055f89737d1724a549c214e365757f01e0edf07642a13c83c22ec0857171b5e788d91b63a9d1d1a9d7d7651c9cf6c27a90669077d8f6a7afc17c8c8205d652a1f8c9f9fcd23124e632e4607232a1248a44c7ce7eed0df789c88c6e43c0d6714b1641e5f6cd31f9c67e134c4ddc0d685554ffaf9340fe27e20a5ad895c49c9fe45ec71b552744b309abaae1ca889128910c434a68f4e61257c91929ea018f65255180809113213278950
(22)   Message-Authenticator = 0x00000000000000000000000000000000
(22)   State = 0x7c6c64af782d7d4f9c82057772269e4a
(22) Finished request
Waking up in 0.6 seconds.
(23) Received Access-Request Id 23 from 127.0.0.1:34030 to 127.0.0.1:1812 length 251
(23)   User-Name = "anonymous"
(23)   NAS-IP-Address = 127.0.0.1
(23)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(23)   NAS-Port-Type = Wireless-802.11
(23)   Service-Type = Framed-User
(23)   NAS-Port = 1
(23)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(23)   Connect-Info = "CONNECT 54Mbps 802.11g"
(23)   Acct-Session-Id = "438644E561DD546B"
(23)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(23)   WLAN-Pairwise-Cipher = 1027076
(23)   WLAN-Group-Cipher = 1027076
(23)   WLAN-AKM-Suite = 1027073
(23)   WLAN-Group-Mgmt-Cipher = 1027078
(23)   Framed-MTU = 1400
(23)   EAP-Message = 0x0241001119800000000715030300020230
(23)   State = 0x7c6c64af782d7d4f9c82057772269e4a
(23)   Message-Authenticator = 0xb87b477200b500a52aa68f282e947fdd
(23) Restoring &session-state
(23)   &session-state:Framed-MTU = 994
(23)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(23)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(23)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(23)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(23)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(23) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(23)   authorize {
(23)     policy filter_username {
(23)       if (&User-Name) {
(23)       if (&User-Name)  -> TRUE
(23)       if (&User-Name)  {
(23)         if (&User-Name =~ / /) {
(23)         if (&User-Name =~ / /)  -> FALSE
(23)         if (&User-Name =~ /@[^@]*@/ ) {
(23)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(23)         if (&User-Name =~ /\.\./ ) {
(23)         if (&User-Name =~ /\.\./ )  -> FALSE
(23)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(23)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(23)         if (&User-Name =~ /\.$/)  {
(23)         if (&User-Name =~ /\.$/)   -> FALSE
(23)         if (&User-Name =~ /@\./)  {
(23)         if (&User-Name =~ /@\./)   -> FALSE
(23)       } # if (&User-Name)  = notfound
(23)     } # policy filter_username = notfound
(23)     [preprocess] = ok
(23)     [chap] = noop
(23)     [mschap] = noop
(23)     [digest] = noop
(23) suffix: Checking for suffix after "@"
(23) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(23) suffix: No such realm "NULL"
(23)     [suffix] = noop
(23) eap: Peer sent EAP Response (code 2) ID 65 length 17
(23) eap: Continuing tunnel setup
(23)     [eap] = ok
(23)   } # authorize = ok
(23) Found Auth-Type = eap
(23) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(23)   authenticate {
(23) eap: Expiring EAP session with state 0x7c6c64af782d7d4f
(23) eap: Finished EAP session with state 0x7c6c64af782d7d4f
(23) eap: Previous EAP request found for state 0x7c6c64af782d7d4f, released from the list
(23) eap: Peer sent packet with method EAP PEAP (25)
(23) eap: Calling submodule eap_peap to process data
(23) eap_peap: (TLS) EAP Peer says that the final record size will be 7 bytes
(23) eap_peap: (TLS) EAP Got all data (7 bytes)
(23) eap_peap: (TLS) recv TLS 1.2 Alert, fatal unknown_ca
(23) eap_peap: (TLS) The client is informing us that it does not recognize the CA used to issue the server certificate.  Please update the client so that it knows about the CA.
(23) eap_peap: ERROR: (TLS) Alert read:fatal:unknown CA
(23) eap_peap: (TLS) Server : Need to read more data: error
(23) eap_peap: ERROR: (TLS) Failed reading from OpenSSL: error:0A000418:SSL routines::tlsv1 alert unknown ca
(23) eap_peap: (TLS) In Handshake Phase
(23) eap_peap: (TLS) Application data.
(23) eap_peap: ERROR: (TLS) Cannot continue, as the peer is misbehaving.
(23) eap_peap: ERROR: [eaptls process] = fail
(23) eap: ERROR: Failed continuing EAP PEAP (25) session.  EAP sub-module failed
(23) eap: Sending EAP Failure (code 4) ID 65 length 4
(23) eap: Failed in EAP select
(23)     [eap] = invalid
(23)   } # authenticate = invalid
(23) Failed to authenticate the user
(23) Using Post-Auth-Type Reject
(23) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(23)   Post-Auth-Type REJECT {
(23) attr_filter.access_reject: EXPAND %{User-Name}
(23) attr_filter.access_reject:    --> anonymous
(23) attr_filter.access_reject: Matched entry DEFAULT at line 11
(23)     [attr_filter.access_reject] = updated
(23)     [eap] = noop
(23)     policy remove_reply_message_if_eap {
(23)       if (&reply:EAP-Message && &reply:Reply-Message) {
(23)       if (&reply:EAP-Message && &reply:Reply-Message)  -> FALSE
(23)       else {
(23)         [noop] = noop
(23)       } # else = noop
(23)     } # policy remove_reply_message_if_eap = noop
(23)   } # Post-Auth-Type REJECT = updated
(23) Delaying response for 1.000000 seconds
Waking up in 0.3 seconds.
Waking up in 0.2 seconds.
(12) Cleaning up request packet ID 12 with timestamp +18 due to cleanup_delay was reached
(13) Cleaning up request packet ID 13 with timestamp +18 due to cleanup_delay was reached
(14) Cleaning up request packet ID 14 with timestamp +18 due to cleanup_delay was reached
(15) Cleaning up request packet ID 15 with timestamp +18 due to cleanup_delay was reached
(16) Cleaning up request packet ID 16 with timestamp +18 due to cleanup_delay was reached
(17) Cleaning up request packet ID 17 with timestamp +19 due to cleanup_delay was reached
Waking up in 0.2 seconds.
(23) Sending delayed response
(23) Sent Access-Reject Id 23 from 127.0.0.1:1812 to 127.0.0.1:34030 length 44
(23)   EAP-Message = 0x04410004
(23)   Message-Authenticator = 0x00000000000000000000000000000000
Waking up in 3.7 seconds.
(24) Received Access-Request Id 24 from 127.0.0.1:34030 to 127.0.0.1:1812 length 230
(24)   User-Name = "anonymous"
(24)   NAS-IP-Address = 127.0.0.1
(24)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(24)   NAS-Port-Type = Wireless-802.11
(24)   Service-Type = Framed-User
(24)   NAS-Port = 1
(24)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(24)   Connect-Info = "CONNECT 54Mbps 802.11g"
(24)   Acct-Session-Id = "438644E561DD546B"
(24)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(24)   WLAN-Pairwise-Cipher = 1027076
(24)   WLAN-Group-Cipher = 1027076
(24)   WLAN-AKM-Suite = 1027073
(24)   WLAN-Group-Mgmt-Cipher = 1027078
(24)   Framed-MTU = 1400
(24)   EAP-Message = 0x0277000e01616e6f6e796d6f7573
(24)   Message-Authenticator = 0xcb5924f4cd75c5f15aec9afa6e483db1
(24) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(24)   authorize {
(24)     policy filter_username {
(24)       if (&User-Name) {
(24)       if (&User-Name)  -> TRUE
(24)       if (&User-Name)  {
(24)         if (&User-Name =~ / /) {
(24)         if (&User-Name =~ / /)  -> FALSE
(24)         if (&User-Name =~ /@[^@]*@/ ) {
(24)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(24)         if (&User-Name =~ /\.\./ ) {
(24)         if (&User-Name =~ /\.\./ )  -> FALSE
(24)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(24)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(24)         if (&User-Name =~ /\.$/)  {
(24)         if (&User-Name =~ /\.$/)   -> FALSE
(24)         if (&User-Name =~ /@\./)  {
(24)         if (&User-Name =~ /@\./)   -> FALSE
(24)       } # if (&User-Name)  = notfound
(24)     } # policy filter_username = notfound
(24)     [preprocess] = ok
(24)     [chap] = noop
(24)     [mschap] = noop
(24)     [digest] = noop
(24) suffix: Checking for suffix after "@"
(24) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(24) suffix: No such realm "NULL"
(24)     [suffix] = noop
(24) eap: Peer sent EAP Response (code 2) ID 119 length 14
(24) eap: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
(24)     [eap] = ok
(24)   } # authorize = ok
(24) Found Auth-Type = eap
(24) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(24)   authenticate {
(24) eap: Peer sent packet with method EAP Identity (1)
(24) eap: Calling submodule eap_md5 to process data
(24) eap_md5: Issuing MD5 Challenge
(24) eap: Sending EAP Request (code 1) ID 120 length 22
(24) eap: EAP session adding &reply:State = 0xe1d5cc82e1adc86c
(24)     [eap] = handled
(24)   } # authenticate = handled
(24) Using Post-Auth-Type Challenge
(24) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(24)   Challenge { ... } # empty sub-section is ignored
(24) Sent Access-Challenge Id 24 from 127.0.0.1:1812 to 127.0.0.1:34030 length 80
(24)   EAP-Message = 0x017800160410e52fb3a9a794bcf62c3020c8fe73b95b
(24)   Message-Authenticator = 0x00000000000000000000000000000000
(24)   State = 0xe1d5cc82e1adc86cafd0e1f4da79c7b8
(24) Finished request
Waking up in 0.8 seconds.
(25) Received Access-Request Id 25 from 127.0.0.1:34030 to 127.0.0.1:1812 length 241
(25)   User-Name = "anonymous"
(25)   NAS-IP-Address = 127.0.0.1
(25)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(25)   NAS-Port-Type = Wireless-802.11
(25)   Service-Type = Framed-User
(25)   NAS-Port = 1
(25)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(25)   Connect-Info = "CONNECT 54Mbps 802.11g"
(25)   Acct-Session-Id = "438644E561DD546B"
(25)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(25)   WLAN-Pairwise-Cipher = 1027076
(25)   WLAN-Group-Cipher = 1027076
(25)   WLAN-AKM-Suite = 1027073
(25)   WLAN-Group-Mgmt-Cipher = 1027078
(25)   Framed-MTU = 1400
(25)   EAP-Message = 0x02780007031915
(25)   State = 0xe1d5cc82e1adc86cafd0e1f4da79c7b8
(25)   Message-Authenticator = 0x9d8ae4bdc0e3106378370c4f506b97ba
(25) session-state: No cached attributes
(25) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(25)   authorize {
(25)     policy filter_username {
(25)       if (&User-Name) {
(25)       if (&User-Name)  -> TRUE
(25)       if (&User-Name)  {
(25)         if (&User-Name =~ / /) {
(25)         if (&User-Name =~ / /)  -> FALSE
(25)         if (&User-Name =~ /@[^@]*@/ ) {
(25)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(25)         if (&User-Name =~ /\.\./ ) {
(25)         if (&User-Name =~ /\.\./ )  -> FALSE
(25)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(25)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(25)         if (&User-Name =~ /\.$/)  {
(25)         if (&User-Name =~ /\.$/)   -> FALSE
(25)         if (&User-Name =~ /@\./)  {
(25)         if (&User-Name =~ /@\./)   -> FALSE
(25)       } # if (&User-Name)  = notfound
(25)     } # policy filter_username = notfound
(25)     [preprocess] = ok
(25)     [chap] = noop
(25)     [mschap] = noop
(25)     [digest] = noop
(25) suffix: Checking for suffix after "@"
(25) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(25) suffix: No such realm "NULL"
(25)     [suffix] = noop
(25) eap: Peer sent EAP Response (code 2) ID 120 length 7
(25) eap: No EAP Start, assuming it's an on-going EAP conversation
(25)     [eap] = updated
(25)     [files] = noop
(25)     [expiration] = noop
(25)     [logintime] = noop
Not doing PAP as Auth-Type is already set.
(25)     [pap] = noop
(25)   } # authorize = updated
(25) Found Auth-Type = eap
(25) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(25)   authenticate {
(25) eap: Expiring EAP session with state 0xe1d5cc82e1adc86c
(25) eap: Finished EAP session with state 0xe1d5cc82e1adc86c
(25) eap: Previous EAP request found for state 0xe1d5cc82e1adc86c, released from the list
(25) eap: Peer sent packet with method EAP NAK (3)
(25) eap: Found mutually acceptable type PEAP (25)
(25) eap: Calling submodule eap_peap to process data
(25) eap_peap: (TLS) Initiating new session
(25) eap: Sending EAP Request (code 1) ID 121 length 6
(25) eap: EAP session adding &reply:State = 0xe1d5cc82e0acd56c
(25)     [eap] = handled
(25)   } # authenticate = handled
(25) Using Post-Auth-Type Challenge
(25) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(25)   Challenge { ... } # empty sub-section is ignored
(25) session-state: Saving cached attributes
(25)   Framed-MTU = 994
(25) Sent Access-Challenge Id 25 from 127.0.0.1:1812 to 127.0.0.1:34030 length 64
(25)   EAP-Message = 0x017900061920
(25)   Message-Authenticator = 0x00000000000000000000000000000000
(25)   State = 0xe1d5cc82e0acd56cafd0e1f4da79c7b8
(25) Finished request
Waking up in 0.7 seconds.
(26) Received Access-Request Id 26 from 127.0.0.1:34030 to 127.0.0.1:1812 length 476
(26)   User-Name = "anonymous"
(26)   NAS-IP-Address = 127.0.0.1
(26)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(26)   NAS-Port-Type = Wireless-802.11
(26)   Service-Type = Framed-User
(26)   NAS-Port = 1
(26)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(26)   Connect-Info = "CONNECT 54Mbps 802.11g"
(26)   Acct-Session-Id = "438644E561DD546B"
(26)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(26)   WLAN-Pairwise-Cipher = 1027076
(26)   WLAN-Group-Cipher = 1027076
(26)   WLAN-AKM-Suite = 1027073
(26)   WLAN-Group-Mgmt-Cipher = 1027078
(26)   Framed-MTU = 1400
(26)   EAP-Message = 0x027900f21980000000e816030300e3010000df03030000002afead8349b51b8d7097aa478b40b37c4edd9cd324d25215c723c9722f000076c02cc030c0adc024c028c00ac014c0afc05dc061c049c04dc02bc02fc0acc023c027c009c013c0aec05cc060c048c04c009dc09d003d0035c032c02ac00fc02ec026c005c0a1c05fc063c051c04bc04fc03d009cc09c003c002fc031c029c00ec02dc025c004c0a0c05ec062c050c04ac04ec03c00ff01000040000a0010000e001d001700180019001a001b001c000d001600140603050306010501040303030401030102030201000b00020100001600000017000000230000
(26)   State = 0xe1d5cc82e0acd56cafd0e1f4da79c7b8
(26)   Message-Authenticator = 0x801fb325836d250613613e8306370436
(26) Restoring &session-state
(26)   &session-state:Framed-MTU = 994
(26) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(26)   authorize {
(26)     policy filter_username {
(26)       if (&User-Name) {
(26)       if (&User-Name)  -> TRUE
(26)       if (&User-Name)  {
(26)         if (&User-Name =~ / /) {
(26)         if (&User-Name =~ / /)  -> FALSE
(26)         if (&User-Name =~ /@[^@]*@/ ) {
(26)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(26)         if (&User-Name =~ /\.\./ ) {
(26)         if (&User-Name =~ /\.\./ )  -> FALSE
(26)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(26)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(26)         if (&User-Name =~ /\.$/)  {
(26)         if (&User-Name =~ /\.$/)   -> FALSE
(26)         if (&User-Name =~ /@\./)  {
(26)         if (&User-Name =~ /@\./)   -> FALSE
(26)       } # if (&User-Name)  = notfound
(26)     } # policy filter_username = notfound
(26)     [preprocess] = ok
(26)     [chap] = noop
(26)     [mschap] = noop
(26)     [digest] = noop
(26) suffix: Checking for suffix after "@"
(26) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(26) suffix: No such realm "NULL"
(26)     [suffix] = noop
(26) eap: Peer sent EAP Response (code 2) ID 121 length 242
(26) eap: Continuing tunnel setup
(26)     [eap] = ok
(26)   } # authorize = ok
(26) Found Auth-Type = eap
(26) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(26)   authenticate {
(26) eap: Expiring EAP session with state 0xe1d5cc82e0acd56c
(26) eap: Finished EAP session with state 0xe1d5cc82e0acd56c
(26) eap: Previous EAP request found for state 0xe1d5cc82e0acd56c, released from the list
(26) eap: Peer sent packet with method EAP PEAP (25)
(26) eap: Calling submodule eap_peap to process data
(26) eap_peap: (TLS) EAP Peer says that the final record size will be 232 bytes
(26) eap_peap: (TLS) EAP Got all data (232 bytes)
(26) eap_peap: (TLS) Handshake state - before SSL initialization
(26) eap_peap: (TLS) Handshake state - Server before SSL initialization
(26) eap_peap: (TLS) Handshake state - Server before SSL initialization
(26) eap_peap: (TLS) recv TLS 1.3 Handshake, ClientHello
(26) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read client hello
(26) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHello
(26) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server hello
(26) eap_peap: (TLS) send TLS 1.2 Handshake, Certificate
(26) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write certificate
(26) eap_peap: (TLS) send TLS 1.2 Handshake, ServerKeyExchange
(26) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write key exchange
(26) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHelloDone
(26) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server done
(26) eap_peap: (TLS) Server : Need to read more data: SSLv3/TLS write server done
(26) eap_peap: (TLS) In Handshake Phase
(26) eap: Sending EAP Request (code 1) ID 122 length 1004
(26) eap: EAP session adding &reply:State = 0xe1d5cc82e3afd56c
(26)     [eap] = handled
(26)   } # authenticate = handled
(26) Using Post-Auth-Type Challenge
(26) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(26)   Challenge { ... } # empty sub-section is ignored
(26) session-state: Saving cached attributes
(26)   Framed-MTU = 994
(26)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(26)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(26)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(26)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(26)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(26) Sent Access-Challenge Id 26 from 127.0.0.1:1812 to 127.0.0.1:34030 length 1068
(26)   EAP-Message = 0x017a03ec19c000000ac6160303003d02000039030359ea5baa5b5dff42804bcedc1a24042e58d5b3e6264c0b863c30a46a162c027400c030000011ff01000100000b0004030001020017000016030309450b00094100093e00043a308204363082031ea003020102020101300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232303134343035385a170d3234303231383134343035385a307c310b3009060355040613024652310f300d06035504080c0652616469757331153013060355040a0c0c4578616d706c6520496e632e3123302106035504030c1a4578616d70
(26)   Message-Authenticator = 0x00000000000000000000000000000000
(26)   State = 0xe1d5cc82e3afd56cafd0e1f4da79c7b8
(26) Finished request
Waking up in 0.7 seconds.
(27) Received Access-Request Id 27 from 127.0.0.1:34030 to 127.0.0.1:1812 length 240
(27)   User-Name = "anonymous"
(27)   NAS-IP-Address = 127.0.0.1
(27)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(27)   NAS-Port-Type = Wireless-802.11
(27)   Service-Type = Framed-User
(27)   NAS-Port = 1
(27)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(27)   Connect-Info = "CONNECT 54Mbps 802.11g"
(27)   Acct-Session-Id = "438644E561DD546B"
(27)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(27)   WLAN-Pairwise-Cipher = 1027076
(27)   WLAN-Group-Cipher = 1027076
(27)   WLAN-AKM-Suite = 1027073
(27)   WLAN-Group-Mgmt-Cipher = 1027078
(27)   Framed-MTU = 1400
(27)   EAP-Message = 0x027a00061900
(27)   State = 0xe1d5cc82e3afd56cafd0e1f4da79c7b8
(27)   Message-Authenticator = 0x792c9fb0d3eae581952e4ff1e7d27ef8
(27) Restoring &session-state
(27)   &session-state:Framed-MTU = 994
(27)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(27)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(27)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(27)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(27)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(27) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(27)   authorize {
(27)     policy filter_username {
(27)       if (&User-Name) {
(27)       if (&User-Name)  -> TRUE
(27)       if (&User-Name)  {
(27)         if (&User-Name =~ / /) {
(27)         if (&User-Name =~ / /)  -> FALSE
(27)         if (&User-Name =~ /@[^@]*@/ ) {
(27)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(27)         if (&User-Name =~ /\.\./ ) {
(27)         if (&User-Name =~ /\.\./ )  -> FALSE
(27)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(27)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(27)         if (&User-Name =~ /\.$/)  {
(27)         if (&User-Name =~ /\.$/)   -> FALSE
(27)         if (&User-Name =~ /@\./)  {
(27)         if (&User-Name =~ /@\./)   -> FALSE
(27)       } # if (&User-Name)  = notfound
(27)     } # policy filter_username = notfound
(27)     [preprocess] = ok
(27)     [chap] = noop
(27)     [mschap] = noop
(27)     [digest] = noop
(27) suffix: Checking for suffix after "@"
(27) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(27) suffix: No such realm "NULL"
(27)     [suffix] = noop
(27) eap: Peer sent EAP Response (code 2) ID 122 length 6
(27) eap: Continuing tunnel setup
(27)     [eap] = ok
(27)   } # authorize = ok
(27) Found Auth-Type = eap
(27) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(27)   authenticate {
(27) eap: Expiring EAP session with state 0xe1d5cc82e3afd56c
(27) eap: Finished EAP session with state 0xe1d5cc82e3afd56c
(27) eap: Previous EAP request found for state 0xe1d5cc82e3afd56c, released from the list
(27) eap: Peer sent packet with method EAP PEAP (25)
(27) eap: Calling submodule eap_peap to process data
(27) eap_peap: (TLS) Peer ACKed our handshake fragment
(27) eap: Sending EAP Request (code 1) ID 123 length 1000
(27) eap: EAP session adding &reply:State = 0xe1d5cc82e2aed56c
(27)     [eap] = handled
(27)   } # authenticate = handled
(27) Using Post-Auth-Type Challenge
(27) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(27)   Challenge { ... } # empty sub-section is ignored
(27) session-state: Saving cached attributes
(27)   Framed-MTU = 994
(27)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(27)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(27)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(27)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(27)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(27) Sent Access-Challenge Id 27 from 127.0.0.1:1812 to 127.0.0.1:34030 length 1064
(27)   EAP-Message = 0x017b03e8194087befe9b36c4eee5514a6ce0d692160ea6d9e1fc0d3d3770b77f8b079a013246fadcf528c63464c5e9d2300563aaa12b1ca1471e09da68797ab5c40554ae52c21289c417609a02a0889e761f6c3d244c6766a6a766b1f1292134398a9dc0179ff601e9f17a910a8591f20ad07388df17a4a59b7316e68880f36090741d349cc4b4e0d742cbfb8947bab078008661a8163a72170809669fbd0fc8aeb1a84c5813bb00036cdb862c8a400004fe308204fa308203e2a00302010202147d47217251ce22b1ff50ee4b4a088bf5a83ad710300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72
(27)   Message-Authenticator = 0x00000000000000000000000000000000
(27)   State = 0xe1d5cc82e2aed56cafd0e1f4da79c7b8
(27) Finished request
Waking up in 0.6 seconds.
(28) Received Access-Request Id 28 from 127.0.0.1:34030 to 127.0.0.1:1812 length 240
(28)   User-Name = "anonymous"
(28)   NAS-IP-Address = 127.0.0.1
(28)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(28)   NAS-Port-Type = Wireless-802.11
(28)   Service-Type = Framed-User
(28)   NAS-Port = 1
(28)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(28)   Connect-Info = "CONNECT 54Mbps 802.11g"
(28)   Acct-Session-Id = "438644E561DD546B"
(28)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(28)   WLAN-Pairwise-Cipher = 1027076
(28)   WLAN-Group-Cipher = 1027076
(28)   WLAN-AKM-Suite = 1027073
(28)   WLAN-Group-Mgmt-Cipher = 1027078
(28)   Framed-MTU = 1400
(28)   EAP-Message = 0x027b00061900
(28)   State = 0xe1d5cc82e2aed56cafd0e1f4da79c7b8
(28)   Message-Authenticator = 0x0331116c35c72c06d1f0c394fa425b63
(28) Restoring &session-state
(28)   &session-state:Framed-MTU = 994
(28)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(28)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(28)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(28)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(28)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(28) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(28)   authorize {
(28)     policy filter_username {
(28)       if (&User-Name) {
(28)       if (&User-Name)  -> TRUE
(28)       if (&User-Name)  {
(28)         if (&User-Name =~ / /) {
(28)         if (&User-Name =~ / /)  -> FALSE
(28)         if (&User-Name =~ /@[^@]*@/ ) {
(28)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(28)         if (&User-Name =~ /\.\./ ) {
(28)         if (&User-Name =~ /\.\./ )  -> FALSE
(28)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(28)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(28)         if (&User-Name =~ /\.$/)  {
(28)         if (&User-Name =~ /\.$/)   -> FALSE
(28)         if (&User-Name =~ /@\./)  {
(28)         if (&User-Name =~ /@\./)   -> FALSE
(28)       } # if (&User-Name)  = notfound
(28)     } # policy filter_username = notfound
(28)     [preprocess] = ok
(28)     [chap] = noop
(28)     [mschap] = noop
(28)     [digest] = noop
(28) suffix: Checking for suffix after "@"
(28) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(28) suffix: No such realm "NULL"
(28)     [suffix] = noop
(28) eap: Peer sent EAP Response (code 2) ID 123 length 6
(28) eap: Continuing tunnel setup
(28)     [eap] = ok
(28)   } # authorize = ok
(28) Found Auth-Type = eap
(28) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(28)   authenticate {
(28) eap: Expiring EAP session with state 0xe1d5cc82e2aed56c
(28) eap: Finished EAP session with state 0xe1d5cc82e2aed56c
(28) eap: Previous EAP request found for state 0xe1d5cc82e2aed56c, released from the list
(28) eap: Peer sent packet with method EAP PEAP (25)
(28) eap: Calling submodule eap_peap to process data
(28) eap_peap: (TLS) Peer ACKed our handshake fragment
(28) eap: Sending EAP Request (code 1) ID 124 length 776
(28) eap: EAP session adding &reply:State = 0xe1d5cc82e5a9d56c
(28)     [eap] = handled
(28)   } # authenticate = handled
(28) Using Post-Auth-Type Challenge
(28) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(28)   Challenge { ... } # empty sub-section is ignored
(28) session-state: Saving cached attributes
(28)   Framed-MTU = 994
(28)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(28)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(28)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(28)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(28)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(28) Sent Access-Challenge Id 28 from 127.0.0.1:1812 to 127.0.0.1:34030 length 840
(28)   EAP-Message = 0x017c0308190078616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f7269747982147d47217251ce22b1ff50ee4b4a088bf5a83ad710300f0603551d130101ff040530030101ff30360603551d1f042f302d302ba029a0278625687474703a2f2f7777772e6578616d706c652e6f72672f6578616d706c655f63612e63726c300d06092a864886f70d01010b0500038201010055f89737d1724a549c214e365757f01e0edf07642a13c83c22ec0857171b5e788d91b63a9d1d1a9d7d7651c9cf6c27a90669077d8f6a7afc17c8c8205d652a1f8c9f9fcd23124e632e4607232a1248a44c7ce7eed0df789c88c6e43c0d6714b1641e5f6cd31f9c67e134c4ddc0d685554ffaf9340fe27e20a5ad895c49c9fe45ec71b552744b309abaae1ca889128910c434a68f4e61257c91929ea018f65255180809113213278950
(28)   Message-Authenticator = 0x00000000000000000000000000000000
(28)   State = 0xe1d5cc82e5a9d56cafd0e1f4da79c7b8
(28) Finished request
Waking up in 0.6 seconds.
(29) Received Access-Request Id 29 from 127.0.0.1:34030 to 127.0.0.1:1812 length 251
(29)   User-Name = "anonymous"
(29)   NAS-IP-Address = 127.0.0.1
(29)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(29)   NAS-Port-Type = Wireless-802.11
(29)   Service-Type = Framed-User
(29)   NAS-Port = 1
(29)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(29)   Connect-Info = "CONNECT 54Mbps 802.11g"
(29)   Acct-Session-Id = "438644E561DD546B"
(29)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(29)   WLAN-Pairwise-Cipher = 1027076
(29)   WLAN-Group-Cipher = 1027076
(29)   WLAN-AKM-Suite = 1027073
(29)   WLAN-Group-Mgmt-Cipher = 1027078
(29)   Framed-MTU = 1400
(29)   EAP-Message = 0x027c001119800000000715030300020230
(29)   State = 0xe1d5cc82e5a9d56cafd0e1f4da79c7b8
(29)   Message-Authenticator = 0x1adec6a044487c83a21e78953aa3eaf9
(29) Restoring &session-state
(29)   &session-state:Framed-MTU = 994
(29)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(29)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(29)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(29)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(29)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(29) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(29)   authorize {
(29)     policy filter_username {
(29)       if (&User-Name) {
(29)       if (&User-Name)  -> TRUE
(29)       if (&User-Name)  {
(29)         if (&User-Name =~ / /) {
(29)         if (&User-Name =~ / /)  -> FALSE
(29)         if (&User-Name =~ /@[^@]*@/ ) {
(29)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(29)         if (&User-Name =~ /\.\./ ) {
(29)         if (&User-Name =~ /\.\./ )  -> FALSE
(29)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(29)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(29)         if (&User-Name =~ /\.$/)  {
(29)         if (&User-Name =~ /\.$/)   -> FALSE
(29)         if (&User-Name =~ /@\./)  {
(29)         if (&User-Name =~ /@\./)   -> FALSE
(29)       } # if (&User-Name)  = notfound
(29)     } # policy filter_username = notfound
(29)     [preprocess] = ok
(29)     [chap] = noop
(29)     [mschap] = noop
(29)     [digest] = noop
(29) suffix: Checking for suffix after "@"
(29) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(29) suffix: No such realm "NULL"
(29)     [suffix] = noop
(29) eap: Peer sent EAP Response (code 2) ID 124 length 17
(29) eap: Continuing tunnel setup
(29)     [eap] = ok
(29)   } # authorize = ok
(29) Found Auth-Type = eap
(29) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(29)   authenticate {
(29) eap: Expiring EAP session with state 0xe1d5cc82e5a9d56c
(29) eap: Finished EAP session with state 0xe1d5cc82e5a9d56c
(29) eap: Previous EAP request found for state 0xe1d5cc82e5a9d56c, released from the list
(29) eap: Peer sent packet with method EAP PEAP (25)
(29) eap: Calling submodule eap_peap to process data
(29) eap_peap: (TLS) EAP Peer says that the final record size will be 7 bytes
(29) eap_peap: (TLS) EAP Got all data (7 bytes)
(29) eap_peap: (TLS) recv TLS 1.2 Alert, fatal unknown_ca
(29) eap_peap: (TLS) The client is informing us that it does not recognize the CA used to issue the server certificate.  Please update the client so that it knows about the CA.
(29) eap_peap: ERROR: (TLS) Alert read:fatal:unknown CA
(29) eap_peap: (TLS) Server : Need to read more data: error
(29) eap_peap: ERROR: (TLS) Failed reading from OpenSSL: error:0A000418:SSL routines::tlsv1 alert unknown ca
(29) eap_peap: (TLS) In Handshake Phase
(29) eap_peap: (TLS) Application data.
(29) eap_peap: ERROR: (TLS) Cannot continue, as the peer is misbehaving.
(29) eap_peap: ERROR: [eaptls process] = fail
(29) eap: ERROR: Failed continuing EAP PEAP (25) session.  EAP sub-module failed
(29) eap: Sending EAP Failure (code 4) ID 124 length 4
(29) eap: Failed in EAP select
(29)     [eap] = invalid
(29)   } # authenticate = invalid
(29) Failed to authenticate the user
(29) Using Post-Auth-Type Reject
(29) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(29)   Post-Auth-Type REJECT {
(29) attr_filter.access_reject: EXPAND %{User-Name}
(29) attr_filter.access_reject:    --> anonymous
(29) attr_filter.access_reject: Matched entry DEFAULT at line 11
(29)     [attr_filter.access_reject] = updated
(29)     [eap] = noop
(29)     policy remove_reply_message_if_eap {
(29)       if (&reply:EAP-Message && &reply:Reply-Message) {
(29)       if (&reply:EAP-Message && &reply:Reply-Message)  -> FALSE
(29)       else {
(29)         [noop] = noop
(29)       } # else = noop
(29)     } # policy remove_reply_message_if_eap = noop
(29)   } # Post-Auth-Type REJECT = updated
(29) Delaying response for 1.000000 seconds
Waking up in 0.3 seconds.
Waking up in 0.2 seconds.
(18) Cleaning up request packet ID 18 with timestamp +23 due to cleanup_delay was reached
(19) Cleaning up request packet ID 19 with timestamp +23 due to cleanup_delay was reached
(20) Cleaning up request packet ID 20 with timestamp +23 due to cleanup_delay was reached
(21) Cleaning up request packet ID 21 with timestamp +23 due to cleanup_delay was reached
(22) Cleaning up request packet ID 22 with timestamp +23 due to cleanup_delay was reached
(23) Cleaning up request packet ID 23 with timestamp +23 due to cleanup_delay was reached
Waking up in 0.1 seconds.
(29) Sending delayed response
(29) Sent Access-Reject Id 29 from 127.0.0.1:1812 to 127.0.0.1:34030 length 44
(29)   EAP-Message = 0x047c0004
(29)   Message-Authenticator = 0x00000000000000000000000000000000
Waking up in 3.7 seconds.
(30) Received Access-Request Id 30 from 127.0.0.1:34030 to 127.0.0.1:1812 length 230
(30)   User-Name = "anonymous"
(30)   NAS-IP-Address = 127.0.0.1
(30)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(30)   NAS-Port-Type = Wireless-802.11
(30)   Service-Type = Framed-User
(30)   NAS-Port = 1
(30)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(30)   Connect-Info = "CONNECT 54Mbps 802.11g"
(30)   Acct-Session-Id = "438644E561DD546B"
(30)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(30)   WLAN-Pairwise-Cipher = 1027076
(30)   WLAN-Group-Cipher = 1027076
(30)   WLAN-AKM-Suite = 1027073
(30)   WLAN-Group-Mgmt-Cipher = 1027078
(30)   Framed-MTU = 1400
(30)   EAP-Message = 0x0219000e01616e6f6e796d6f7573
(30)   Message-Authenticator = 0x7064de9d56988dbbdeaa3f6d7d66c399
(30) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(30)   authorize {
(30)     policy filter_username {
(30)       if (&User-Name) {
(30)       if (&User-Name)  -> TRUE
(30)       if (&User-Name)  {
(30)         if (&User-Name =~ / /) {
(30)         if (&User-Name =~ / /)  -> FALSE
(30)         if (&User-Name =~ /@[^@]*@/ ) {
(30)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(30)         if (&User-Name =~ /\.\./ ) {
(30)         if (&User-Name =~ /\.\./ )  -> FALSE
(30)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(30)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(30)         if (&User-Name =~ /\.$/)  {
(30)         if (&User-Name =~ /\.$/)   -> FALSE
(30)         if (&User-Name =~ /@\./)  {
(30)         if (&User-Name =~ /@\./)   -> FALSE
(30)       } # if (&User-Name)  = notfound
(30)     } # policy filter_username = notfound
(30)     [preprocess] = ok
(30)     [chap] = noop
(30)     [mschap] = noop
(30)     [digest] = noop
(30) suffix: Checking for suffix after "@"
(30) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(30) suffix: No such realm "NULL"
(30)     [suffix] = noop
(30) eap: Peer sent EAP Response (code 2) ID 25 length 14
(30) eap: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
(30)     [eap] = ok
(30)   } # authorize = ok
(30) Found Auth-Type = eap
(30) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(30)   authenticate {
(30) eap: Peer sent packet with method EAP Identity (1)
(30) eap: Calling submodule eap_md5 to process data
(30) eap_md5: Issuing MD5 Challenge
(30) eap: Sending EAP Request (code 1) ID 26 length 22
(30) eap: EAP session adding &reply:State = 0x3d4d86dd3d578264
(30)     [eap] = handled
(30)   } # authenticate = handled
(30) Using Post-Auth-Type Challenge
(30) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(30)   Challenge { ... } # empty sub-section is ignored
(30) Sent Access-Challenge Id 30 from 127.0.0.1:1812 to 127.0.0.1:34030 length 80
(30)   EAP-Message = 0x011a001604104827870d932b290d1a2fe9c4d705a6b8
(30)   Message-Authenticator = 0x00000000000000000000000000000000
(30)   State = 0x3d4d86dd3d578264c4e9628990eae656
(30) Finished request
Waking up in 0.8 seconds.
(31) Received Access-Request Id 31 from 127.0.0.1:34030 to 127.0.0.1:1812 length 241
(31)   User-Name = "anonymous"
(31)   NAS-IP-Address = 127.0.0.1
(31)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(31)   NAS-Port-Type = Wireless-802.11
(31)   Service-Type = Framed-User
(31)   NAS-Port = 1
(31)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(31)   Connect-Info = "CONNECT 54Mbps 802.11g"
(31)   Acct-Session-Id = "438644E561DD546B"
(31)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(31)   WLAN-Pairwise-Cipher = 1027076
(31)   WLAN-Group-Cipher = 1027076
(31)   WLAN-AKM-Suite = 1027073
(31)   WLAN-Group-Mgmt-Cipher = 1027078
(31)   Framed-MTU = 1400
(31)   EAP-Message = 0x021a0007031915
(31)   State = 0x3d4d86dd3d578264c4e9628990eae656
(31)   Message-Authenticator = 0x09c6c4743cfbbdaa55ea55b52e143dc2
(31) session-state: No cached attributes
(31) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(31)   authorize {
(31)     policy filter_username {
(31)       if (&User-Name) {
(31)       if (&User-Name)  -> TRUE
(31)       if (&User-Name)  {
(31)         if (&User-Name =~ / /) {
(31)         if (&User-Name =~ / /)  -> FALSE
(31)         if (&User-Name =~ /@[^@]*@/ ) {
(31)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(31)         if (&User-Name =~ /\.\./ ) {
(31)         if (&User-Name =~ /\.\./ )  -> FALSE
(31)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(31)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(31)         if (&User-Name =~ /\.$/)  {
(31)         if (&User-Name =~ /\.$/)   -> FALSE
(31)         if (&User-Name =~ /@\./)  {
(31)         if (&User-Name =~ /@\./)   -> FALSE
(31)       } # if (&User-Name)  = notfound
(31)     } # policy filter_username = notfound
(31)     [preprocess] = ok
(31)     [chap] = noop
(31)     [mschap] = noop
(31)     [digest] = noop
(31) suffix: Checking for suffix after "@"
(31) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(31) suffix: No such realm "NULL"
(31)     [suffix] = noop
(31) eap: Peer sent EAP Response (code 2) ID 26 length 7
(31) eap: No EAP Start, assuming it's an on-going EAP conversation
(31)     [eap] = updated
(31)     [files] = noop
(31)     [expiration] = noop
(31)     [logintime] = noop
Not doing PAP as Auth-Type is already set.
(31)     [pap] = noop
(31)   } # authorize = updated
(31) Found Auth-Type = eap
(31) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(31)   authenticate {
(31) eap: Expiring EAP session with state 0x3d4d86dd3d578264
(31) eap: Finished EAP session with state 0x3d4d86dd3d578264
(31) eap: Previous EAP request found for state 0x3d4d86dd3d578264, released from the list
(31) eap: Peer sent packet with method EAP NAK (3)
(31) eap: Found mutually acceptable type PEAP (25)
(31) eap: Calling submodule eap_peap to process data
(31) eap_peap: (TLS) Initiating new session
(31) eap: Sending EAP Request (code 1) ID 27 length 6
(31) eap: EAP session adding &reply:State = 0x3d4d86dd3c569f64
(31)     [eap] = handled
(31)   } # authenticate = handled
(31) Using Post-Auth-Type Challenge
(31) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(31)   Challenge { ... } # empty sub-section is ignored
(31) session-state: Saving cached attributes
(31)   Framed-MTU = 994
(31) Sent Access-Challenge Id 31 from 127.0.0.1:1812 to 127.0.0.1:34030 length 64
(31)   EAP-Message = 0x011b00061920
(31)   Message-Authenticator = 0x00000000000000000000000000000000
(31)   State = 0x3d4d86dd3c569f64c4e9628990eae656
(31) Finished request
Waking up in 0.7 seconds.
(32) Received Access-Request Id 32 from 127.0.0.1:34030 to 127.0.0.1:1812 length 476
(32)   User-Name = "anonymous"
(32)   NAS-IP-Address = 127.0.0.1
(32)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(32)   NAS-Port-Type = Wireless-802.11
(32)   Service-Type = Framed-User
(32)   NAS-Port = 1
(32)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(32)   Connect-Info = "CONNECT 54Mbps 802.11g"
(32)   Acct-Session-Id = "438644E561DD546B"
(32)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(32)   WLAN-Pairwise-Cipher = 1027076
(32)   WLAN-Group-Cipher = 1027076
(32)   WLAN-AKM-Suite = 1027073
(32)   WLAN-Group-Mgmt-Cipher = 1027078
(32)   Framed-MTU = 1400
(32)   EAP-Message = 0x021b00f21980000000e816030300e3010000df03030000002eb631e1ea671f14d5765786bf25167b2c358628271fa5b70ac8284c36000076c02cc030c0adc024c028c00ac014c0afc05dc061c049c04dc02bc02fc0acc023c027c009c013c0aec05cc060c048c04c009dc09d003d0035c032c02ac00fc02ec026c005c0a1c05fc063c051c04bc04fc03d009cc09c003c002fc031c029c00ec02dc025c004c0a0c05ec062c050c04ac04ec03c00ff01000040000a0010000e001d001700180019001a001b001c000d001600140603050306010501040303030401030102030201000b00020100001600000017000000230000
(32)   State = 0x3d4d86dd3c569f64c4e9628990eae656
(32)   Message-Authenticator = 0xb82c697c55f2f1efe0dfebded433d54e
(32) Restoring &session-state
(32)   &session-state:Framed-MTU = 994
(32) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(32)   authorize {
(32)     policy filter_username {
(32)       if (&User-Name) {
(32)       if (&User-Name)  -> TRUE
(32)       if (&User-Name)  {
(32)         if (&User-Name =~ / /) {
(32)         if (&User-Name =~ / /)  -> FALSE
(32)         if (&User-Name =~ /@[^@]*@/ ) {
(32)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(32)         if (&User-Name =~ /\.\./ ) {
(32)         if (&User-Name =~ /\.\./ )  -> FALSE
(32)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(32)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(32)         if (&User-Name =~ /\.$/)  {
(32)         if (&User-Name =~ /\.$/)   -> FALSE
(32)         if (&User-Name =~ /@\./)  {
(32)         if (&User-Name =~ /@\./)   -> FALSE
(32)       } # if (&User-Name)  = notfound
(32)     } # policy filter_username = notfound
(32)     [preprocess] = ok
(32)     [chap] = noop
(32)     [mschap] = noop
(32)     [digest] = noop
(32) suffix: Checking for suffix after "@"
(32) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(32) suffix: No such realm "NULL"
(32)     [suffix] = noop
(32) eap: Peer sent EAP Response (code 2) ID 27 length 242
(32) eap: Continuing tunnel setup
(32)     [eap] = ok
(32)   } # authorize = ok
(32) Found Auth-Type = eap
(32) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(32)   authenticate {
(32) eap: Expiring EAP session with state 0x3d4d86dd3c569f64
(32) eap: Finished EAP session with state 0x3d4d86dd3c569f64
(32) eap: Previous EAP request found for state 0x3d4d86dd3c569f64, released from the list
(32) eap: Peer sent packet with method EAP PEAP (25)
(32) eap: Calling submodule eap_peap to process data
(32) eap_peap: (TLS) EAP Peer says that the final record size will be 232 bytes
(32) eap_peap: (TLS) EAP Got all data (232 bytes)
(32) eap_peap: (TLS) Handshake state - before SSL initialization
(32) eap_peap: (TLS) Handshake state - Server before SSL initialization
(32) eap_peap: (TLS) Handshake state - Server before SSL initialization
(32) eap_peap: (TLS) recv TLS 1.3 Handshake, ClientHello
(32) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read client hello
(32) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHello
(32) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server hello
(32) eap_peap: (TLS) send TLS 1.2 Handshake, Certificate
(32) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write certificate
(32) eap_peap: (TLS) send TLS 1.2 Handshake, ServerKeyExchange
(32) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write key exchange
(32) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHelloDone
(32) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server done
(32) eap_peap: (TLS) Server : Need to read more data: SSLv3/TLS write server done
(32) eap_peap: (TLS) In Handshake Phase
(32) eap: Sending EAP Request (code 1) ID 28 length 1004
(32) eap: EAP session adding &reply:State = 0x3d4d86dd3f519f64
(32)     [eap] = handled
(32)   } # authenticate = handled
(32) Using Post-Auth-Type Challenge
(32) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(32)   Challenge { ... } # empty sub-section is ignored
(32) session-state: Saving cached attributes
(32)   Framed-MTU = 994
(32)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(32)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(32)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(32)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(32)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(32) Sent Access-Challenge Id 32 from 127.0.0.1:1812 to 127.0.0.1:34030 length 1068
(32)   EAP-Message = 0x011c03ec19c000000ac6160303003d020000390303fd890c511b1ee87f3e0a8dccf3dd64f7a3d6b0be28a15f961eaa4f13f1d1212c00c030000011ff01000100000b0004030001020017000016030309450b00094100093e00043a308204363082031ea003020102020101300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232303134343035385a170d3234303231383134343035385a307c310b3009060355040613024652310f300d06035504080c0652616469757331153013060355040a0c0c4578616d706c6520496e632e3123302106035504030c1a4578616d70
(32)   Message-Authenticator = 0x00000000000000000000000000000000
(32)   State = 0x3d4d86dd3f519f64c4e9628990eae656
(32) Finished request
Waking up in 0.7 seconds.
(33) Received Access-Request Id 33 from 127.0.0.1:34030 to 127.0.0.1:1812 length 240
(33)   User-Name = "anonymous"
(33)   NAS-IP-Address = 127.0.0.1
(33)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(33)   NAS-Port-Type = Wireless-802.11
(33)   Service-Type = Framed-User
(33)   NAS-Port = 1
(33)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(33)   Connect-Info = "CONNECT 54Mbps 802.11g"
(33)   Acct-Session-Id = "438644E561DD546B"
(33)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(33)   WLAN-Pairwise-Cipher = 1027076
(33)   WLAN-Group-Cipher = 1027076
(33)   WLAN-AKM-Suite = 1027073
(33)   WLAN-Group-Mgmt-Cipher = 1027078
(33)   Framed-MTU = 1400
(33)   EAP-Message = 0x021c00061900
(33)   State = 0x3d4d86dd3f519f64c4e9628990eae656
(33)   Message-Authenticator = 0x4bbb76798a489899f6b2b529ba4e0ab0
(33) Restoring &session-state
(33)   &session-state:Framed-MTU = 994
(33)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(33)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(33)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(33)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(33)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(33) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(33)   authorize {
(33)     policy filter_username {
(33)       if (&User-Name) {
(33)       if (&User-Name)  -> TRUE
(33)       if (&User-Name)  {
(33)         if (&User-Name =~ / /) {
(33)         if (&User-Name =~ / /)  -> FALSE
(33)         if (&User-Name =~ /@[^@]*@/ ) {
(33)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(33)         if (&User-Name =~ /\.\./ ) {
(33)         if (&User-Name =~ /\.\./ )  -> FALSE
(33)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(33)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(33)         if (&User-Name =~ /\.$/)  {
(33)         if (&User-Name =~ /\.$/)   -> FALSE
(33)         if (&User-Name =~ /@\./)  {
(33)         if (&User-Name =~ /@\./)   -> FALSE
(33)       } # if (&User-Name)  = notfound
(33)     } # policy filter_username = notfound
(33)     [preprocess] = ok
(33)     [chap] = noop
(33)     [mschap] = noop
(33)     [digest] = noop
(33) suffix: Checking for suffix after "@"
(33) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(33) suffix: No such realm "NULL"
(33)     [suffix] = noop
(33) eap: Peer sent EAP Response (code 2) ID 28 length 6
(33) eap: Continuing tunnel setup
(33)     [eap] = ok
(33)   } # authorize = ok
(33) Found Auth-Type = eap
(33) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(33)   authenticate {
(33) eap: Expiring EAP session with state 0x3d4d86dd3f519f64
(33) eap: Finished EAP session with state 0x3d4d86dd3f519f64
(33) eap: Previous EAP request found for state 0x3d4d86dd3f519f64, released from the list
(33) eap: Peer sent packet with method EAP PEAP (25)
(33) eap: Calling submodule eap_peap to process data
(33) eap_peap: (TLS) Peer ACKed our handshake fragment
(33) eap: Sending EAP Request (code 1) ID 29 length 1000
(33) eap: EAP session adding &reply:State = 0x3d4d86dd3e509f64
(33)     [eap] = handled
(33)   } # authenticate = handled
(33) Using Post-Auth-Type Challenge
(33) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(33)   Challenge { ... } # empty sub-section is ignored
(33) session-state: Saving cached attributes
(33)   Framed-MTU = 994
(33)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(33)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(33)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(33)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(33)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(33) Sent Access-Challenge Id 33 from 127.0.0.1:1812 to 127.0.0.1:34030 length 1064
(33)   EAP-Message = 0x011d03e8194087befe9b36c4eee5514a6ce0d692160ea6d9e1fc0d3d3770b77f8b079a013246fadcf528c63464c5e9d2300563aaa12b1ca1471e09da68797ab5c40554ae52c21289c417609a02a0889e761f6c3d244c6766a6a766b1f1292134398a9dc0179ff601e9f17a910a8591f20ad07388df17a4a59b7316e68880f36090741d349cc4b4e0d742cbfb8947bab078008661a8163a72170809669fbd0fc8aeb1a84c5813bb00036cdb862c8a400004fe308204fa308203e2a00302010202147d47217251ce22b1ff50ee4b4a088bf5a83ad710300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72
(33)   Message-Authenticator = 0x00000000000000000000000000000000
(33)   State = 0x3d4d86dd3e509f64c4e9628990eae656
(33) Finished request
Waking up in 0.6 seconds.
(34) Received Access-Request Id 34 from 127.0.0.1:34030 to 127.0.0.1:1812 length 240
(34)   User-Name = "anonymous"
(34)   NAS-IP-Address = 127.0.0.1
(34)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(34)   NAS-Port-Type = Wireless-802.11
(34)   Service-Type = Framed-User
(34)   NAS-Port = 1
(34)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(34)   Connect-Info = "CONNECT 54Mbps 802.11g"
(34)   Acct-Session-Id = "438644E561DD546B"
(34)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(34)   WLAN-Pairwise-Cipher = 1027076
(34)   WLAN-Group-Cipher = 1027076
(34)   WLAN-AKM-Suite = 1027073
(34)   WLAN-Group-Mgmt-Cipher = 1027078
(34)   Framed-MTU = 1400
(34)   EAP-Message = 0x021d00061900
(34)   State = 0x3d4d86dd3e509f64c4e9628990eae656
(34)   Message-Authenticator = 0xed10b5db336c861314072b56297e41c7
(34) Restoring &session-state
(34)   &session-state:Framed-MTU = 994
(34)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(34)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(34)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(34)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(34)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(34) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(34)   authorize {
(34)     policy filter_username {
(34)       if (&User-Name) {
(34)       if (&User-Name)  -> TRUE
(34)       if (&User-Name)  {
(34)         if (&User-Name =~ / /) {
(34)         if (&User-Name =~ / /)  -> FALSE
(34)         if (&User-Name =~ /@[^@]*@/ ) {
(34)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(34)         if (&User-Name =~ /\.\./ ) {
(34)         if (&User-Name =~ /\.\./ )  -> FALSE
(34)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(34)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(34)         if (&User-Name =~ /\.$/)  {
(34)         if (&User-Name =~ /\.$/)   -> FALSE
(34)         if (&User-Name =~ /@\./)  {
(34)         if (&User-Name =~ /@\./)   -> FALSE
(34)       } # if (&User-Name)  = notfound
(34)     } # policy filter_username = notfound
(34)     [preprocess] = ok
(34)     [chap] = noop
(34)     [mschap] = noop
(34)     [digest] = noop
(34) suffix: Checking for suffix after "@"
(34) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(34) suffix: No such realm "NULL"
(34)     [suffix] = noop
(34) eap: Peer sent EAP Response (code 2) ID 29 length 6
(34) eap: Continuing tunnel setup
(34)     [eap] = ok
(34)   } # authorize = ok
(34) Found Auth-Type = eap
(34) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(34)   authenticate {
(34) eap: Expiring EAP session with state 0x3d4d86dd3e509f64
(34) eap: Finished EAP session with state 0x3d4d86dd3e509f64
(34) eap: Previous EAP request found for state 0x3d4d86dd3e509f64, released from the list
(34) eap: Peer sent packet with method EAP PEAP (25)
(34) eap: Calling submodule eap_peap to process data
(34) eap_peap: (TLS) Peer ACKed our handshake fragment
(34) eap: Sending EAP Request (code 1) ID 30 length 776
(34) eap: EAP session adding &reply:State = 0x3d4d86dd39539f64
(34)     [eap] = handled
(34)   } # authenticate = handled
(34) Using Post-Auth-Type Challenge
(34) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(34)   Challenge { ... } # empty sub-section is ignored
(34) session-state: Saving cached attributes
(34)   Framed-MTU = 994
(34)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(34)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(34)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(34)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(34)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(34) Sent Access-Challenge Id 34 from 127.0.0.1:1812 to 127.0.0.1:34030 length 840
(34)   EAP-Message = 0x011e0308190078616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f7269747982147d47217251ce22b1ff50ee4b4a088bf5a83ad710300f0603551d130101ff040530030101ff30360603551d1f042f302d302ba029a0278625687474703a2f2f7777772e6578616d706c652e6f72672f6578616d706c655f63612e63726c300d06092a864886f70d01010b0500038201010055f89737d1724a549c214e365757f01e0edf07642a13c83c22ec0857171b5e788d91b63a9d1d1a9d7d7651c9cf6c27a90669077d8f6a7afc17c8c8205d652a1f8c9f9fcd23124e632e4607232a1248a44c7ce7eed0df789c88c6e43c0d6714b1641e5f6cd31f9c67e134c4ddc0d685554ffaf9340fe27e20a5ad895c49c9fe45ec71b552744b309abaae1ca889128910c434a68f4e61257c91929ea018f65255180809113213278950
(34)   Message-Authenticator = 0x00000000000000000000000000000000
(34)   State = 0x3d4d86dd39539f64c4e9628990eae656
(34) Finished request
Waking up in 0.6 seconds.
(35) Received Access-Request Id 35 from 127.0.0.1:34030 to 127.0.0.1:1812 length 251
(35)   User-Name = "anonymous"
(35)   NAS-IP-Address = 127.0.0.1
(35)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(35)   NAS-Port-Type = Wireless-802.11
(35)   Service-Type = Framed-User
(35)   NAS-Port = 1
(35)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(35)   Connect-Info = "CONNECT 54Mbps 802.11g"
(35)   Acct-Session-Id = "438644E561DD546B"
(35)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(35)   WLAN-Pairwise-Cipher = 1027076
(35)   WLAN-Group-Cipher = 1027076
(35)   WLAN-AKM-Suite = 1027073
(35)   WLAN-Group-Mgmt-Cipher = 1027078
(35)   Framed-MTU = 1400
(35)   EAP-Message = 0x021e001119800000000715030300020230
(35)   State = 0x3d4d86dd39539f64c4e9628990eae656
(35)   Message-Authenticator = 0x24ad3ab3a940958b5f442d4894f3ac9e
(35) Restoring &session-state
(35)   &session-state:Framed-MTU = 994
(35)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(35)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(35)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(35)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(35)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(35) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(35)   authorize {
(35)     policy filter_username {
(35)       if (&User-Name) {
(35)       if (&User-Name)  -> TRUE
(35)       if (&User-Name)  {
(35)         if (&User-Name =~ / /) {
(35)         if (&User-Name =~ / /)  -> FALSE
(35)         if (&User-Name =~ /@[^@]*@/ ) {
(35)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(35)         if (&User-Name =~ /\.\./ ) {
(35)         if (&User-Name =~ /\.\./ )  -> FALSE
(35)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(35)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(35)         if (&User-Name =~ /\.$/)  {
(35)         if (&User-Name =~ /\.$/)   -> FALSE
(35)         if (&User-Name =~ /@\./)  {
(35)         if (&User-Name =~ /@\./)   -> FALSE
(35)       } # if (&User-Name)  = notfound
(35)     } # policy filter_username = notfound
(35)     [preprocess] = ok
(35)     [chap] = noop
(35)     [mschap] = noop
(35)     [digest] = noop
(35) suffix: Checking for suffix after "@"
(35) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(35) suffix: No such realm "NULL"
(35)     [suffix] = noop
(35) eap: Peer sent EAP Response (code 2) ID 30 length 17
(35) eap: Continuing tunnel setup
(35)     [eap] = ok
(35)   } # authorize = ok
(35) Found Auth-Type = eap
(35) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(35)   authenticate {
(35) eap: Expiring EAP session with state 0x3d4d86dd39539f64
(35) eap: Finished EAP session with state 0x3d4d86dd39539f64
(35) eap: Previous EAP request found for state 0x3d4d86dd39539f64, released from the list
(35) eap: Peer sent packet with method EAP PEAP (25)
(35) eap: Calling submodule eap_peap to process data
(35) eap_peap: (TLS) EAP Peer says that the final record size will be 7 bytes
(35) eap_peap: (TLS) EAP Got all data (7 bytes)
(35) eap_peap: (TLS) recv TLS 1.2 Alert, fatal unknown_ca
(35) eap_peap: (TLS) The client is informing us that it does not recognize the CA used to issue the server certificate.  Please update the client so that it knows about the CA.
(35) eap_peap: ERROR: (TLS) Alert read:fatal:unknown CA
(35) eap_peap: (TLS) Server : Need to read more data: error
(35) eap_peap: ERROR: (TLS) Failed reading from OpenSSL: error:0A000418:SSL routines::tlsv1 alert unknown ca
(35) eap_peap: (TLS) In Handshake Phase
(35) eap_peap: (TLS) Application data.
(35) eap_peap: ERROR: (TLS) Cannot continue, as the peer is misbehaving.
(35) eap_peap: ERROR: [eaptls process] = fail
(35) eap: ERROR: Failed continuing EAP PEAP (25) session.  EAP sub-module failed
(35) eap: Sending EAP Failure (code 4) ID 30 length 4
(35) eap: Failed in EAP select
(35)     [eap] = invalid
(35)   } # authenticate = invalid
(35) Failed to authenticate the user
(35) Using Post-Auth-Type Reject
(35) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(35)   Post-Auth-Type REJECT {
(35) attr_filter.access_reject: EXPAND %{User-Name}
(35) attr_filter.access_reject:    --> anonymous
(35) attr_filter.access_reject: Matched entry DEFAULT at line 11
(35)     [attr_filter.access_reject] = updated
(35)     [eap] = noop
(35)     policy remove_reply_message_if_eap {
(35)       if (&reply:EAP-Message && &reply:Reply-Message) {
(35)       if (&reply:EAP-Message && &reply:Reply-Message)  -> FALSE
(35)       else {
(35)         [noop] = noop
(35)       } # else = noop
(35)     } # policy remove_reply_message_if_eap = noop
(35)   } # Post-Auth-Type REJECT = updated
(35) Delaying response for 1.000000 seconds
Waking up in 0.3 seconds.
Waking up in 0.2 seconds.
(24) Cleaning up request packet ID 24 with timestamp +27 due to cleanup_delay was reached
(25) Cleaning up request packet ID 25 with timestamp +27 due to cleanup_delay was reached
(26) Cleaning up request packet ID 26 with timestamp +27 due to cleanup_delay was reached
(27) Cleaning up request packet ID 27 with timestamp +27 due to cleanup_delay was reached
(28) Cleaning up request packet ID 28 with timestamp +27 due to cleanup_delay was reached
(29) Cleaning up request packet ID 29 with timestamp +27 due to cleanup_delay was reached
Waking up in 0.1 seconds.
(35) Sending delayed response
(35) Sent Access-Reject Id 35 from 127.0.0.1:1812 to 127.0.0.1:34030 length 44
(35)   EAP-Message = 0x041e0004
(35)   Message-Authenticator = 0x00000000000000000000000000000000
Waking up in 3.7 seconds.
(36) Received Access-Request Id 36 from 127.0.0.1:34030 to 127.0.0.1:1812 length 230
(36)   User-Name = "anonymous"
(36)   NAS-IP-Address = 127.0.0.1
(36)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(36)   NAS-Port-Type = Wireless-802.11
(36)   Service-Type = Framed-User
(36)   NAS-Port = 1
(36)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(36)   Connect-Info = "CONNECT 54Mbps 802.11g"
(36)   Acct-Session-Id = "438644E561DD546B"
(36)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(36)   WLAN-Pairwise-Cipher = 1027076
(36)   WLAN-Group-Cipher = 1027076
(36)   WLAN-AKM-Suite = 1027073
(36)   WLAN-Group-Mgmt-Cipher = 1027078
(36)   Framed-MTU = 1400
(36)   EAP-Message = 0x0248000e01616e6f6e796d6f7573
(36)   Message-Authenticator = 0x346ef62ea39c281ff45ab3ce4b01ec23
(36) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(36)   authorize {
(36)     policy filter_username {
(36)       if (&User-Name) {
(36)       if (&User-Name)  -> TRUE
(36)       if (&User-Name)  {
(36)         if (&User-Name =~ / /) {
(36)         if (&User-Name =~ / /)  -> FALSE
(36)         if (&User-Name =~ /@[^@]*@/ ) {
(36)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(36)         if (&User-Name =~ /\.\./ ) {
(36)         if (&User-Name =~ /\.\./ )  -> FALSE
(36)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(36)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(36)         if (&User-Name =~ /\.$/)  {
(36)         if (&User-Name =~ /\.$/)   -> FALSE
(36)         if (&User-Name =~ /@\./)  {
(36)         if (&User-Name =~ /@\./)   -> FALSE
(36)       } # if (&User-Name)  = notfound
(36)     } # policy filter_username = notfound
(36)     [preprocess] = ok
(36)     [chap] = noop
(36)     [mschap] = noop
(36)     [digest] = noop
(36) suffix: Checking for suffix after "@"
(36) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(36) suffix: No such realm "NULL"
(36)     [suffix] = noop
(36) eap: Peer sent EAP Response (code 2) ID 72 length 14
(36) eap: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
(36)     [eap] = ok
(36)   } # authorize = ok
(36) Found Auth-Type = eap
(36) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(36)   authenticate {
(36) eap: Peer sent packet with method EAP Identity (1)
(36) eap: Calling submodule eap_md5 to process data
(36) eap_md5: Issuing MD5 Challenge
(36) eap: Sending EAP Request (code 1) ID 73 length 22
(36) eap: EAP session adding &reply:State = 0x44d772a1449e76a2
(36)     [eap] = handled
(36)   } # authenticate = handled
(36) Using Post-Auth-Type Challenge
(36) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(36)   Challenge { ... } # empty sub-section is ignored
(36) Sent Access-Challenge Id 36 from 127.0.0.1:1812 to 127.0.0.1:34030 length 80
(36)   EAP-Message = 0x0149001604103760d767bdb6ecd5ce164a93fc3831b6
(36)   Message-Authenticator = 0x00000000000000000000000000000000
(36)   State = 0x44d772a1449e76a2b220a7e3643b8a37
(36) Finished request
Waking up in 0.8 seconds.
(37) Received Access-Request Id 37 from 127.0.0.1:34030 to 127.0.0.1:1812 length 241
(37)   User-Name = "anonymous"
(37)   NAS-IP-Address = 127.0.0.1
(37)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(37)   NAS-Port-Type = Wireless-802.11
(37)   Service-Type = Framed-User
(37)   NAS-Port = 1
(37)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(37)   Connect-Info = "CONNECT 54Mbps 802.11g"
(37)   Acct-Session-Id = "438644E561DD546B"
(37)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(37)   WLAN-Pairwise-Cipher = 1027076
(37)   WLAN-Group-Cipher = 1027076
(37)   WLAN-AKM-Suite = 1027073
(37)   WLAN-Group-Mgmt-Cipher = 1027078
(37)   Framed-MTU = 1400
(37)   EAP-Message = 0x02490007031915
(37)   State = 0x44d772a1449e76a2b220a7e3643b8a37
(37)   Message-Authenticator = 0xe18098cba2aa378c9d99d0aa5300252d
(37) session-state: No cached attributes
(37) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(37)   authorize {
(37)     policy filter_username {
(37)       if (&User-Name) {
(37)       if (&User-Name)  -> TRUE
(37)       if (&User-Name)  {
(37)         if (&User-Name =~ / /) {
(37)         if (&User-Name =~ / /)  -> FALSE
(37)         if (&User-Name =~ /@[^@]*@/ ) {
(37)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(37)         if (&User-Name =~ /\.\./ ) {
(37)         if (&User-Name =~ /\.\./ )  -> FALSE
(37)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(37)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(37)         if (&User-Name =~ /\.$/)  {
(37)         if (&User-Name =~ /\.$/)   -> FALSE
(37)         if (&User-Name =~ /@\./)  {
(37)         if (&User-Name =~ /@\./)   -> FALSE
(37)       } # if (&User-Name)  = notfound
(37)     } # policy filter_username = notfound
(37)     [preprocess] = ok
(37)     [chap] = noop
(37)     [mschap] = noop
(37)     [digest] = noop
(37) suffix: Checking for suffix after "@"
(37) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(37) suffix: No such realm "NULL"
(37)     [suffix] = noop
(37) eap: Peer sent EAP Response (code 2) ID 73 length 7
(37) eap: No EAP Start, assuming it's an on-going EAP conversation
(37)     [eap] = updated
(37)     [files] = noop
(37)     [expiration] = noop
(37)     [logintime] = noop
Not doing PAP as Auth-Type is already set.
(37)     [pap] = noop
(37)   } # authorize = updated
(37) Found Auth-Type = eap
(37) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(37)   authenticate {
(37) eap: Expiring EAP session with state 0x44d772a1449e76a2
(37) eap: Finished EAP session with state 0x44d772a1449e76a2
(37) eap: Previous EAP request found for state 0x44d772a1449e76a2, released from the list
(37) eap: Peer sent packet with method EAP NAK (3)
(37) eap: Found mutually acceptable type PEAP (25)
(37) eap: Calling submodule eap_peap to process data
(37) eap_peap: (TLS) Initiating new session
(37) eap: Sending EAP Request (code 1) ID 74 length 6
(37) eap: EAP session adding &reply:State = 0x44d772a1459d6ba2
(37)     [eap] = handled
(37)   } # authenticate = handled
(37) Using Post-Auth-Type Challenge
(37) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(37)   Challenge { ... } # empty sub-section is ignored
(37) session-state: Saving cached attributes
(37)   Framed-MTU = 994
(37) Sent Access-Challenge Id 37 from 127.0.0.1:1812 to 127.0.0.1:34030 length 64
(37)   EAP-Message = 0x014a00061920
(37)   Message-Authenticator = 0x00000000000000000000000000000000
(37)   State = 0x44d772a1459d6ba2b220a7e3643b8a37
(37) Finished request
Waking up in 0.7 seconds.
(38) Received Access-Request Id 38 from 127.0.0.1:34030 to 127.0.0.1:1812 length 476
(38)   User-Name = "anonymous"
(38)   NAS-IP-Address = 127.0.0.1
(38)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(38)   NAS-Port-Type = Wireless-802.11
(38)   Service-Type = Framed-User
(38)   NAS-Port = 1
(38)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(38)   Connect-Info = "CONNECT 54Mbps 802.11g"
(38)   Acct-Session-Id = "438644E561DD546B"
(38)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(38)   WLAN-Pairwise-Cipher = 1027076
(38)   WLAN-Group-Cipher = 1027076
(38)   WLAN-AKM-Suite = 1027073
(38)   WLAN-Group-Mgmt-Cipher = 1027078
(38)   Framed-MTU = 1400
(38)   EAP-Message = 0x024a00f21980000000e816030300e3010000df03030000003276ef881d28188d43e0c5ae420ac18424d756950f556694ca52dd3a48000076c02cc030c0adc024c028c00ac014c0afc05dc061c049c04dc02bc02fc0acc023c027c009c013c0aec05cc060c048c04c009dc09d003d0035c032c02ac00fc02ec026c005c0a1c05fc063c051c04bc04fc03d009cc09c003c002fc031c029c00ec02dc025c004c0a0c05ec062c050c04ac04ec03c00ff01000040000a0010000e001d001700180019001a001b001c000d001600140603050306010501040303030401030102030201000b00020100001600000017000000230000
(38)   State = 0x44d772a1459d6ba2b220a7e3643b8a37
(38)   Message-Authenticator = 0x97444ddd73293857110e23cd24d308d5
(38) Restoring &session-state
(38)   &session-state:Framed-MTU = 994
(38) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(38)   authorize {
(38)     policy filter_username {
(38)       if (&User-Name) {
(38)       if (&User-Name)  -> TRUE
(38)       if (&User-Name)  {
(38)         if (&User-Name =~ / /) {
(38)         if (&User-Name =~ / /)  -> FALSE
(38)         if (&User-Name =~ /@[^@]*@/ ) {
(38)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(38)         if (&User-Name =~ /\.\./ ) {
(38)         if (&User-Name =~ /\.\./ )  -> FALSE
(38)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(38)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(38)         if (&User-Name =~ /\.$/)  {
(38)         if (&User-Name =~ /\.$/)   -> FALSE
(38)         if (&User-Name =~ /@\./)  {
(38)         if (&User-Name =~ /@\./)   -> FALSE
(38)       } # if (&User-Name)  = notfound
(38)     } # policy filter_username = notfound
(38)     [preprocess] = ok
(38)     [chap] = noop
(38)     [mschap] = noop
(38)     [digest] = noop
(38) suffix: Checking for suffix after "@"
(38) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(38) suffix: No such realm "NULL"
(38)     [suffix] = noop
(38) eap: Peer sent EAP Response (code 2) ID 74 length 242
(38) eap: Continuing tunnel setup
(38)     [eap] = ok
(38)   } # authorize = ok
(38) Found Auth-Type = eap
(38) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(38)   authenticate {
(38) eap: Expiring EAP session with state 0x44d772a1459d6ba2
(38) eap: Finished EAP session with state 0x44d772a1459d6ba2
(38) eap: Previous EAP request found for state 0x44d772a1459d6ba2, released from the list
(38) eap: Peer sent packet with method EAP PEAP (25)
(38) eap: Calling submodule eap_peap to process data
(38) eap_peap: (TLS) EAP Peer says that the final record size will be 232 bytes
(38) eap_peap: (TLS) EAP Got all data (232 bytes)
(38) eap_peap: (TLS) Handshake state - before SSL initialization
(38) eap_peap: (TLS) Handshake state - Server before SSL initialization
(38) eap_peap: (TLS) Handshake state - Server before SSL initialization
(38) eap_peap: (TLS) recv TLS 1.3 Handshake, ClientHello
(38) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read client hello
(38) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHello
(38) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server hello
(38) eap_peap: (TLS) send TLS 1.2 Handshake, Certificate
(38) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write certificate
(38) eap_peap: (TLS) send TLS 1.2 Handshake, ServerKeyExchange
(38) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write key exchange
(38) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHelloDone
(38) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server done
(38) eap_peap: (TLS) Server : Need to read more data: SSLv3/TLS write server done
(38) eap_peap: (TLS) In Handshake Phase
(38) eap: Sending EAP Request (code 1) ID 75 length 1004
(38) eap: EAP session adding &reply:State = 0x44d772a1469c6ba2
(38)     [eap] = handled
(38)   } # authenticate = handled
(38) Using Post-Auth-Type Challenge
(38) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(38)   Challenge { ... } # empty sub-section is ignored
(38) session-state: Saving cached attributes
(38)   Framed-MTU = 994
(38)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(38)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(38)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(38)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(38)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(38) Sent Access-Challenge Id 38 from 127.0.0.1:1812 to 127.0.0.1:34030 length 1068
(38)   EAP-Message = 0x014b03ec19c000000ac6160303003d020000390303a30c32a4e7bd6305ba2a2491b58a2c73185adc95ba990ca7936e9656a06346e300c030000011ff01000100000b0004030001020017000016030309450b00094100093e00043a308204363082031ea003020102020101300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232303134343035385a170d3234303231383134343035385a307c310b3009060355040613024652310f300d06035504080c0652616469757331153013060355040a0c0c4578616d706c6520496e632e3123302106035504030c1a4578616d70
(38)   Message-Authenticator = 0x00000000000000000000000000000000
(38)   State = 0x44d772a1469c6ba2b220a7e3643b8a37
(38) Finished request
Waking up in 0.7 seconds.
(39) Received Access-Request Id 39 from 127.0.0.1:34030 to 127.0.0.1:1812 length 240
(39)   User-Name = "anonymous"
(39)   NAS-IP-Address = 127.0.0.1
(39)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(39)   NAS-Port-Type = Wireless-802.11
(39)   Service-Type = Framed-User
(39)   NAS-Port = 1
(39)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(39)   Connect-Info = "CONNECT 54Mbps 802.11g"
(39)   Acct-Session-Id = "438644E561DD546B"
(39)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(39)   WLAN-Pairwise-Cipher = 1027076
(39)   WLAN-Group-Cipher = 1027076
(39)   WLAN-AKM-Suite = 1027073
(39)   WLAN-Group-Mgmt-Cipher = 1027078
(39)   Framed-MTU = 1400
(39)   EAP-Message = 0x024b00061900
(39)   State = 0x44d772a1469c6ba2b220a7e3643b8a37
(39)   Message-Authenticator = 0x2d6e889db09292547208895311eeb371
(39) Restoring &session-state
(39)   &session-state:Framed-MTU = 994
(39)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(39)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(39)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(39)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(39)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(39) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(39)   authorize {
(39)     policy filter_username {
(39)       if (&User-Name) {
(39)       if (&User-Name)  -> TRUE
(39)       if (&User-Name)  {
(39)         if (&User-Name =~ / /) {
(39)         if (&User-Name =~ / /)  -> FALSE
(39)         if (&User-Name =~ /@[^@]*@/ ) {
(39)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(39)         if (&User-Name =~ /\.\./ ) {
(39)         if (&User-Name =~ /\.\./ )  -> FALSE
(39)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(39)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(39)         if (&User-Name =~ /\.$/)  {
(39)         if (&User-Name =~ /\.$/)   -> FALSE
(39)         if (&User-Name =~ /@\./)  {
(39)         if (&User-Name =~ /@\./)   -> FALSE
(39)       } # if (&User-Name)  = notfound
(39)     } # policy filter_username = notfound
(39)     [preprocess] = ok
(39)     [chap] = noop
(39)     [mschap] = noop
(39)     [digest] = noop
(39) suffix: Checking for suffix after "@"
(39) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(39) suffix: No such realm "NULL"
(39)     [suffix] = noop
(39) eap: Peer sent EAP Response (code 2) ID 75 length 6
(39) eap: Continuing tunnel setup
(39)     [eap] = ok
(39)   } # authorize = ok
(39) Found Auth-Type = eap
(39) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(39)   authenticate {
(39) eap: Expiring EAP session with state 0x44d772a1469c6ba2
(39) eap: Finished EAP session with state 0x44d772a1469c6ba2
(39) eap: Previous EAP request found for state 0x44d772a1469c6ba2, released from the list
(39) eap: Peer sent packet with method EAP PEAP (25)
(39) eap: Calling submodule eap_peap to process data
(39) eap_peap: (TLS) Peer ACKed our handshake fragment
(39) eap: Sending EAP Request (code 1) ID 76 length 1000
(39) eap: EAP session adding &reply:State = 0x44d772a1479b6ba2
(39)     [eap] = handled
(39)   } # authenticate = handled
(39) Using Post-Auth-Type Challenge
(39) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(39)   Challenge { ... } # empty sub-section is ignored
(39) session-state: Saving cached attributes
(39)   Framed-MTU = 994
(39)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(39)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(39)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(39)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(39)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(39) Sent Access-Challenge Id 39 from 127.0.0.1:1812 to 127.0.0.1:34030 length 1064
(39)   EAP-Message = 0x014c03e8194087befe9b36c4eee5514a6ce0d692160ea6d9e1fc0d3d3770b77f8b079a013246fadcf528c63464c5e9d2300563aaa12b1ca1471e09da68797ab5c40554ae52c21289c417609a02a0889e761f6c3d244c6766a6a766b1f1292134398a9dc0179ff601e9f17a910a8591f20ad07388df17a4a59b7316e68880f36090741d349cc4b4e0d742cbfb8947bab078008661a8163a72170809669fbd0fc8aeb1a84c5813bb00036cdb862c8a400004fe308204fa308203e2a00302010202147d47217251ce22b1ff50ee4b4a088bf5a83ad710300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72
(39)   Message-Authenticator = 0x00000000000000000000000000000000
(39)   State = 0x44d772a1479b6ba2b220a7e3643b8a37
(39) Finished request
Waking up in 0.6 seconds.
(40) Received Access-Request Id 40 from 127.0.0.1:34030 to 127.0.0.1:1812 length 240
(40)   User-Name = "anonymous"
(40)   NAS-IP-Address = 127.0.0.1
(40)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(40)   NAS-Port-Type = Wireless-802.11
(40)   Service-Type = Framed-User
(40)   NAS-Port = 1
(40)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(40)   Connect-Info = "CONNECT 54Mbps 802.11g"
(40)   Acct-Session-Id = "438644E561DD546B"
(40)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(40)   WLAN-Pairwise-Cipher = 1027076
(40)   WLAN-Group-Cipher = 1027076
(40)   WLAN-AKM-Suite = 1027073
(40)   WLAN-Group-Mgmt-Cipher = 1027078
(40)   Framed-MTU = 1400
(40)   EAP-Message = 0x024c00061900
(40)   State = 0x44d772a1479b6ba2b220a7e3643b8a37
(40)   Message-Authenticator = 0xad87fd27aa7d1889c5a6cf245074ca0f
(40) Restoring &session-state
(40)   &session-state:Framed-MTU = 994
(40)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(40)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(40)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(40)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(40)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(40) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(40)   authorize {
(40)     policy filter_username {
(40)       if (&User-Name) {
(40)       if (&User-Name)  -> TRUE
(40)       if (&User-Name)  {
(40)         if (&User-Name =~ / /) {
(40)         if (&User-Name =~ / /)  -> FALSE
(40)         if (&User-Name =~ /@[^@]*@/ ) {
(40)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(40)         if (&User-Name =~ /\.\./ ) {
(40)         if (&User-Name =~ /\.\./ )  -> FALSE
(40)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(40)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(40)         if (&User-Name =~ /\.$/)  {
(40)         if (&User-Name =~ /\.$/)   -> FALSE
(40)         if (&User-Name =~ /@\./)  {
(40)         if (&User-Name =~ /@\./)   -> FALSE
(40)       } # if (&User-Name)  = notfound
(40)     } # policy filter_username = notfound
(40)     [preprocess] = ok
(40)     [chap] = noop
(40)     [mschap] = noop
(40)     [digest] = noop
(40) suffix: Checking for suffix after "@"
(40) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(40) suffix: No such realm "NULL"
(40)     [suffix] = noop
(40) eap: Peer sent EAP Response (code 2) ID 76 length 6
(40) eap: Continuing tunnel setup
(40)     [eap] = ok
(40)   } # authorize = ok
(40) Found Auth-Type = eap
(40) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(40)   authenticate {
(40) eap: Expiring EAP session with state 0x44d772a1479b6ba2
(40) eap: Finished EAP session with state 0x44d772a1479b6ba2
(40) eap: Previous EAP request found for state 0x44d772a1479b6ba2, released from the list
(40) eap: Peer sent packet with method EAP PEAP (25)
(40) eap: Calling submodule eap_peap to process data
(40) eap_peap: (TLS) Peer ACKed our handshake fragment
(40) eap: Sending EAP Request (code 1) ID 77 length 776
(40) eap: EAP session adding &reply:State = 0x44d772a1409a6ba2
(40)     [eap] = handled
(40)   } # authenticate = handled
(40) Using Post-Auth-Type Challenge
(40) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(40)   Challenge { ... } # empty sub-section is ignored
(40) session-state: Saving cached attributes
(40)   Framed-MTU = 994
(40)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(40)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(40)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(40)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(40)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(40) Sent Access-Challenge Id 40 from 127.0.0.1:1812 to 127.0.0.1:34030 length 840
(40)   EAP-Message = 0x014d0308190078616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f7269747982147d47217251ce22b1ff50ee4b4a088bf5a83ad710300f0603551d130101ff040530030101ff30360603551d1f042f302d302ba029a0278625687474703a2f2f7777772e6578616d706c652e6f72672f6578616d706c655f63612e63726c300d06092a864886f70d01010b0500038201010055f89737d1724a549c214e365757f01e0edf07642a13c83c22ec0857171b5e788d91b63a9d1d1a9d7d7651c9cf6c27a90669077d8f6a7afc17c8c8205d652a1f8c9f9fcd23124e632e4607232a1248a44c7ce7eed0df789c88c6e43c0d6714b1641e5f6cd31f9c67e134c4ddc0d685554ffaf9340fe27e20a5ad895c49c9fe45ec71b552744b309abaae1ca889128910c434a68f4e61257c91929ea018f65255180809113213278950
(40)   Message-Authenticator = 0x00000000000000000000000000000000
(40)   State = 0x44d772a1409a6ba2b220a7e3643b8a37
(40) Finished request
Waking up in 0.6 seconds.
(41) Received Access-Request Id 41 from 127.0.0.1:34030 to 127.0.0.1:1812 length 251
(41)   User-Name = "anonymous"
(41)   NAS-IP-Address = 127.0.0.1
(41)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(41)   NAS-Port-Type = Wireless-802.11
(41)   Service-Type = Framed-User
(41)   NAS-Port = 1
(41)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(41)   Connect-Info = "CONNECT 54Mbps 802.11g"
(41)   Acct-Session-Id = "438644E561DD546B"
(41)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(41)   WLAN-Pairwise-Cipher = 1027076
(41)   WLAN-Group-Cipher = 1027076
(41)   WLAN-AKM-Suite = 1027073
(41)   WLAN-Group-Mgmt-Cipher = 1027078
(41)   Framed-MTU = 1400
(41)   EAP-Message = 0x024d001119800000000715030300020230
(41)   State = 0x44d772a1409a6ba2b220a7e3643b8a37
(41)   Message-Authenticator = 0xbaa09e574fddc4b412ced85673c8e761
(41) Restoring &session-state
(41)   &session-state:Framed-MTU = 994
(41)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(41)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(41)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(41)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(41)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(41) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(41)   authorize {
(41)     policy filter_username {
(41)       if (&User-Name) {
(41)       if (&User-Name)  -> TRUE
(41)       if (&User-Name)  {
(41)         if (&User-Name =~ / /) {
(41)         if (&User-Name =~ / /)  -> FALSE
(41)         if (&User-Name =~ /@[^@]*@/ ) {
(41)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(41)         if (&User-Name =~ /\.\./ ) {
(41)         if (&User-Name =~ /\.\./ )  -> FALSE
(41)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(41)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(41)         if (&User-Name =~ /\.$/)  {
(41)         if (&User-Name =~ /\.$/)   -> FALSE
(41)         if (&User-Name =~ /@\./)  {
(41)         if (&User-Name =~ /@\./)   -> FALSE
(41)       } # if (&User-Name)  = notfound
(41)     } # policy filter_username = notfound
(41)     [preprocess] = ok
(41)     [chap] = noop
(41)     [mschap] = noop
(41)     [digest] = noop
(41) suffix: Checking for suffix after "@"
(41) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(41) suffix: No such realm "NULL"
(41)     [suffix] = noop
(41) eap: Peer sent EAP Response (code 2) ID 77 length 17
(41) eap: Continuing tunnel setup
(41)     [eap] = ok
(41)   } # authorize = ok
(41) Found Auth-Type = eap
(41) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(41)   authenticate {
(41) eap: Expiring EAP session with state 0x44d772a1409a6ba2
(41) eap: Finished EAP session with state 0x44d772a1409a6ba2
(41) eap: Previous EAP request found for state 0x44d772a1409a6ba2, released from the list
(41) eap: Peer sent packet with method EAP PEAP (25)
(41) eap: Calling submodule eap_peap to process data
(41) eap_peap: (TLS) EAP Peer says that the final record size will be 7 bytes
(41) eap_peap: (TLS) EAP Got all data (7 bytes)
(41) eap_peap: (TLS) recv TLS 1.2 Alert, fatal unknown_ca
(41) eap_peap: (TLS) The client is informing us that it does not recognize the CA used to issue the server certificate.  Please update the client so that it knows about the CA.
(41) eap_peap: ERROR: (TLS) Alert read:fatal:unknown CA
(41) eap_peap: (TLS) Server : Need to read more data: error
(41) eap_peap: ERROR: (TLS) Failed reading from OpenSSL: error:0A000418:SSL routines::tlsv1 alert unknown ca
(41) eap_peap: (TLS) In Handshake Phase
(41) eap_peap: (TLS) Application data.
(41) eap_peap: ERROR: (TLS) Cannot continue, as the peer is misbehaving.
(41) eap_peap: ERROR: [eaptls process] = fail
(41) eap: ERROR: Failed continuing EAP PEAP (25) session.  EAP sub-module failed
(41) eap: Sending EAP Failure (code 4) ID 77 length 4
(41) eap: Failed in EAP select
(41)     [eap] = invalid
(41)   } # authenticate = invalid
(41) Failed to authenticate the user
(41) Using Post-Auth-Type Reject
(41) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(41)   Post-Auth-Type REJECT {
(41) attr_filter.access_reject: EXPAND %{User-Name}
(41) attr_filter.access_reject:    --> anonymous
(41) attr_filter.access_reject: Matched entry DEFAULT at line 11
(41)     [attr_filter.access_reject] = updated
(41)     [eap] = noop
(41)     policy remove_reply_message_if_eap {
(41)       if (&reply:EAP-Message && &reply:Reply-Message) {
(41)       if (&reply:EAP-Message && &reply:Reply-Message)  -> FALSE
(41)       else {
(41)         [noop] = noop
(41)       } # else = noop
(41)     } # policy remove_reply_message_if_eap = noop
(41)   } # Post-Auth-Type REJECT = updated
(41) Delaying response for 1.000000 seconds
Waking up in 0.3 seconds.
Waking up in 0.2 seconds.
(30) Cleaning up request packet ID 30 with timestamp +31 due to cleanup_delay was reached
(31) Cleaning up request packet ID 31 with timestamp +31 due to cleanup_delay was reached
(32) Cleaning up request packet ID 32 with timestamp +31 due to cleanup_delay was reached
(33) Cleaning up request packet ID 33 with timestamp +31 due to cleanup_delay was reached
(34) Cleaning up request packet ID 34 with timestamp +31 due to cleanup_delay was reached
(35) Cleaning up request packet ID 35 with timestamp +31 due to cleanup_delay was reached
Waking up in 0.1 seconds.
(41) Sending delayed response
(41) Sent Access-Reject Id 41 from 127.0.0.1:1812 to 127.0.0.1:34030 length 44
(41)   EAP-Message = 0x044d0004
(41)   Message-Authenticator = 0x00000000000000000000000000000000
Waking up in 3.7 seconds.
(42) Received Access-Request Id 42 from 127.0.0.1:34030 to 127.0.0.1:1812 length 230
(42)   User-Name = "anonymous"
(42)   NAS-IP-Address = 127.0.0.1
(42)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(42)   NAS-Port-Type = Wireless-802.11
(42)   Service-Type = Framed-User
(42)   NAS-Port = 1
(42)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(42)   Connect-Info = "CONNECT 54Mbps 802.11g"
(42)   Acct-Session-Id = "438644E561DD546B"
(42)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(42)   WLAN-Pairwise-Cipher = 1027076
(42)   WLAN-Group-Cipher = 1027076
(42)   WLAN-AKM-Suite = 1027073
(42)   WLAN-Group-Mgmt-Cipher = 1027078
(42)   Framed-MTU = 1400
(42)   EAP-Message = 0x02db000e01616e6f6e796d6f7573
(42)   Message-Authenticator = 0x94fb27ea76829a2f3f80da924efa8b41
(42) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(42)   authorize {
(42)     policy filter_username {
(42)       if (&User-Name) {
(42)       if (&User-Name)  -> TRUE
(42)       if (&User-Name)  {
(42)         if (&User-Name =~ / /) {
(42)         if (&User-Name =~ / /)  -> FALSE
(42)         if (&User-Name =~ /@[^@]*@/ ) {
(42)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(42)         if (&User-Name =~ /\.\./ ) {
(42)         if (&User-Name =~ /\.\./ )  -> FALSE
(42)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(42)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(42)         if (&User-Name =~ /\.$/)  {
(42)         if (&User-Name =~ /\.$/)   -> FALSE
(42)         if (&User-Name =~ /@\./)  {
(42)         if (&User-Name =~ /@\./)   -> FALSE
(42)       } # if (&User-Name)  = notfound
(42)     } # policy filter_username = notfound
(42)     [preprocess] = ok
(42)     [chap] = noop
(42)     [mschap] = noop
(42)     [digest] = noop
(42) suffix: Checking for suffix after "@"
(42) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(42) suffix: No such realm "NULL"
(42)     [suffix] = noop
(42) eap: Peer sent EAP Response (code 2) ID 219 length 14
(42) eap: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
(42)     [eap] = ok
(42)   } # authorize = ok
(42) Found Auth-Type = eap
(42) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(42)   authenticate {
(42) eap: Peer sent packet with method EAP Identity (1)
(42) eap: Calling submodule eap_md5 to process data
(42) eap_md5: Issuing MD5 Challenge
(42) eap: Sending EAP Request (code 1) ID 220 length 22
(42) eap: EAP session adding &reply:State = 0xe3323f65e3ee3b3b
(42)     [eap] = handled
(42)   } # authenticate = handled
(42) Using Post-Auth-Type Challenge
(42) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(42)   Challenge { ... } # empty sub-section is ignored
(42) Sent Access-Challenge Id 42 from 127.0.0.1:1812 to 127.0.0.1:34030 length 80
(42)   EAP-Message = 0x01dc0016041015d4e97f678ac57c2e7203f929cc3e78
(42)   Message-Authenticator = 0x00000000000000000000000000000000
(42)   State = 0xe3323f65e3ee3b3b47339a3c2932140c
(42) Finished request
Waking up in 0.8 seconds.
(43) Received Access-Request Id 43 from 127.0.0.1:34030 to 127.0.0.1:1812 length 241
(43)   User-Name = "anonymous"
(43)   NAS-IP-Address = 127.0.0.1
(43)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(43)   NAS-Port-Type = Wireless-802.11
(43)   Service-Type = Framed-User
(43)   NAS-Port = 1
(43)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(43)   Connect-Info = "CONNECT 54Mbps 802.11g"
(43)   Acct-Session-Id = "438644E561DD546B"
(43)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(43)   WLAN-Pairwise-Cipher = 1027076
(43)   WLAN-Group-Cipher = 1027076
(43)   WLAN-AKM-Suite = 1027073
(43)   WLAN-Group-Mgmt-Cipher = 1027078
(43)   Framed-MTU = 1400
(43)   EAP-Message = 0x02dc0007031915
(43)   State = 0xe3323f65e3ee3b3b47339a3c2932140c
(43)   Message-Authenticator = 0x58c958ddf4880c57ea0d1b52a44ff747
(43) session-state: No cached attributes
(43) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(43)   authorize {
(43)     policy filter_username {
(43)       if (&User-Name) {
(43)       if (&User-Name)  -> TRUE
(43)       if (&User-Name)  {
(43)         if (&User-Name =~ / /) {
(43)         if (&User-Name =~ / /)  -> FALSE
(43)         if (&User-Name =~ /@[^@]*@/ ) {
(43)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(43)         if (&User-Name =~ /\.\./ ) {
(43)         if (&User-Name =~ /\.\./ )  -> FALSE
(43)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(43)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(43)         if (&User-Name =~ /\.$/)  {
(43)         if (&User-Name =~ /\.$/)   -> FALSE
(43)         if (&User-Name =~ /@\./)  {
(43)         if (&User-Name =~ /@\./)   -> FALSE
(43)       } # if (&User-Name)  = notfound
(43)     } # policy filter_username = notfound
(43)     [preprocess] = ok
(43)     [chap] = noop
(43)     [mschap] = noop
(43)     [digest] = noop
(43) suffix: Checking for suffix after "@"
(43) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(43) suffix: No such realm "NULL"
(43)     [suffix] = noop
(43) eap: Peer sent EAP Response (code 2) ID 220 length 7
(43) eap: No EAP Start, assuming it's an on-going EAP conversation
(43)     [eap] = updated
(43)     [files] = noop
(43)     [expiration] = noop
(43)     [logintime] = noop
Not doing PAP as Auth-Type is already set.
(43)     [pap] = noop
(43)   } # authorize = updated
(43) Found Auth-Type = eap
(43) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(43)   authenticate {
(43) eap: Expiring EAP session with state 0xe3323f65e3ee3b3b
(43) eap: Finished EAP session with state 0xe3323f65e3ee3b3b
(43) eap: Previous EAP request found for state 0xe3323f65e3ee3b3b, released from the list
(43) eap: Peer sent packet with method EAP NAK (3)
(43) eap: Found mutually acceptable type PEAP (25)
(43) eap: Calling submodule eap_peap to process data
(43) eap_peap: (TLS) Initiating new session
(43) eap: Sending EAP Request (code 1) ID 221 length 6
(43) eap: EAP session adding &reply:State = 0xe3323f65e2ef263b
(43)     [eap] = handled
(43)   } # authenticate = handled
(43) Using Post-Auth-Type Challenge
(43) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(43)   Challenge { ... } # empty sub-section is ignored
(43) session-state: Saving cached attributes
(43)   Framed-MTU = 994
(43) Sent Access-Challenge Id 43 from 127.0.0.1:1812 to 127.0.0.1:34030 length 64
(43)   EAP-Message = 0x01dd00061920
(43)   Message-Authenticator = 0x00000000000000000000000000000000
(43)   State = 0xe3323f65e2ef263b47339a3c2932140c
(43) Finished request
Waking up in 0.7 seconds.
(44) Received Access-Request Id 44 from 127.0.0.1:34030 to 127.0.0.1:1812 length 476
(44)   User-Name = "anonymous"
(44)   NAS-IP-Address = 127.0.0.1
(44)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(44)   NAS-Port-Type = Wireless-802.11
(44)   Service-Type = Framed-User
(44)   NAS-Port = 1
(44)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(44)   Connect-Info = "CONNECT 54Mbps 802.11g"
(44)   Acct-Session-Id = "438644E561DD546B"
(44)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(44)   WLAN-Pairwise-Cipher = 1027076
(44)   WLAN-Group-Cipher = 1027076
(44)   WLAN-AKM-Suite = 1027073
(44)   WLAN-Group-Mgmt-Cipher = 1027078
(44)   Framed-MTU = 1400
(44)   EAP-Message = 0x02dd00f21980000000e816030300e3010000df030300000037cadf53c2b8186c10abf8d5b64c8e2be976189578b1c45c95182719c2000076c02cc030c0adc024c028c00ac014c0afc05dc061c049c04dc02bc02fc0acc023c027c009c013c0aec05cc060c048c04c009dc09d003d0035c032c02ac00fc02ec026c005c0a1c05fc063c051c04bc04fc03d009cc09c003c002fc031c029c00ec02dc025c004c0a0c05ec062c050c04ac04ec03c00ff01000040000a0010000e001d001700180019001a001b001c000d001600140603050306010501040303030401030102030201000b00020100001600000017000000230000
(44)   State = 0xe3323f65e2ef263b47339a3c2932140c
(44)   Message-Authenticator = 0x48b348dc8407b3d40bc358f17678893c
(44) Restoring &session-state
(44)   &session-state:Framed-MTU = 994
(44) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(44)   authorize {
(44)     policy filter_username {
(44)       if (&User-Name) {
(44)       if (&User-Name)  -> TRUE
(44)       if (&User-Name)  {
(44)         if (&User-Name =~ / /) {
(44)         if (&User-Name =~ / /)  -> FALSE
(44)         if (&User-Name =~ /@[^@]*@/ ) {
(44)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(44)         if (&User-Name =~ /\.\./ ) {
(44)         if (&User-Name =~ /\.\./ )  -> FALSE
(44)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(44)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(44)         if (&User-Name =~ /\.$/)  {
(44)         if (&User-Name =~ /\.$/)   -> FALSE
(44)         if (&User-Name =~ /@\./)  {
(44)         if (&User-Name =~ /@\./)   -> FALSE
(44)       } # if (&User-Name)  = notfound
(44)     } # policy filter_username = notfound
(44)     [preprocess] = ok
(44)     [chap] = noop
(44)     [mschap] = noop
(44)     [digest] = noop
(44) suffix: Checking for suffix after "@"
(44) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(44) suffix: No such realm "NULL"
(44)     [suffix] = noop
(44) eap: Peer sent EAP Response (code 2) ID 221 length 242
(44) eap: Continuing tunnel setup
(44)     [eap] = ok
(44)   } # authorize = ok
(44) Found Auth-Type = eap
(44) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(44)   authenticate {
(44) eap: Expiring EAP session with state 0xe3323f65e2ef263b
(44) eap: Finished EAP session with state 0xe3323f65e2ef263b
(44) eap: Previous EAP request found for state 0xe3323f65e2ef263b, released from the list
(44) eap: Peer sent packet with method EAP PEAP (25)
(44) eap: Calling submodule eap_peap to process data
(44) eap_peap: (TLS) EAP Peer says that the final record size will be 232 bytes
(44) eap_peap: (TLS) EAP Got all data (232 bytes)
(44) eap_peap: (TLS) Handshake state - before SSL initialization
(44) eap_peap: (TLS) Handshake state - Server before SSL initialization
(44) eap_peap: (TLS) Handshake state - Server before SSL initialization
(44) eap_peap: (TLS) recv TLS 1.3 Handshake, ClientHello
(44) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read client hello
(44) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHello
(44) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server hello
(44) eap_peap: (TLS) send TLS 1.2 Handshake, Certificate
(44) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write certificate
(44) eap_peap: (TLS) send TLS 1.2 Handshake, ServerKeyExchange
(44) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write key exchange
(44) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHelloDone
(44) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server done
(44) eap_peap: (TLS) Server : Need to read more data: SSLv3/TLS write server done
(44) eap_peap: (TLS) In Handshake Phase
(44) eap: Sending EAP Request (code 1) ID 222 length 1004
(44) eap: EAP session adding &reply:State = 0xe3323f65e1ec263b
(44)     [eap] = handled
(44)   } # authenticate = handled
(44) Using Post-Auth-Type Challenge
(44) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(44)   Challenge { ... } # empty sub-section is ignored
(44) session-state: Saving cached attributes
(44)   Framed-MTU = 994
(44)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(44)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(44)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(44)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(44)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(44) Sent Access-Challenge Id 44 from 127.0.0.1:1812 to 127.0.0.1:34030 length 1068
(44)   EAP-Message = 0x01de03ec19c000000ac6160303003d020000390303c6a4df100ca72ff38b714cf90545bbea690b186d3d48d60bdfbcc6bc77eea12300c030000011ff01000100000b0004030001020017000016030309450b00094100093e00043a308204363082031ea003020102020101300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232303134343035385a170d3234303231383134343035385a307c310b3009060355040613024652310f300d06035504080c0652616469757331153013060355040a0c0c4578616d706c6520496e632e3123302106035504030c1a4578616d70
(44)   Message-Authenticator = 0x00000000000000000000000000000000
(44)   State = 0xe3323f65e1ec263b47339a3c2932140c
(44) Finished request
Waking up in 0.7 seconds.
(45) Received Access-Request Id 45 from 127.0.0.1:34030 to 127.0.0.1:1812 length 240
(45)   User-Name = "anonymous"
(45)   NAS-IP-Address = 127.0.0.1
(45)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(45)   NAS-Port-Type = Wireless-802.11
(45)   Service-Type = Framed-User
(45)   NAS-Port = 1
(45)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(45)   Connect-Info = "CONNECT 54Mbps 802.11g"
(45)   Acct-Session-Id = "438644E561DD546B"
(45)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(45)   WLAN-Pairwise-Cipher = 1027076
(45)   WLAN-Group-Cipher = 1027076
(45)   WLAN-AKM-Suite = 1027073
(45)   WLAN-Group-Mgmt-Cipher = 1027078
(45)   Framed-MTU = 1400
(45)   EAP-Message = 0x02de00061900
(45)   State = 0xe3323f65e1ec263b47339a3c2932140c
(45)   Message-Authenticator = 0x8e21841457aafea6d764d007118ae05a
(45) Restoring &session-state
(45)   &session-state:Framed-MTU = 994
(45)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(45)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(45)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(45)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(45)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(45) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(45)   authorize {
(45)     policy filter_username {
(45)       if (&User-Name) {
(45)       if (&User-Name)  -> TRUE
(45)       if (&User-Name)  {
(45)         if (&User-Name =~ / /) {
(45)         if (&User-Name =~ / /)  -> FALSE
(45)         if (&User-Name =~ /@[^@]*@/ ) {
(45)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(45)         if (&User-Name =~ /\.\./ ) {
(45)         if (&User-Name =~ /\.\./ )  -> FALSE
(45)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(45)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(45)         if (&User-Name =~ /\.$/)  {
(45)         if (&User-Name =~ /\.$/)   -> FALSE
(45)         if (&User-Name =~ /@\./)  {
(45)         if (&User-Name =~ /@\./)   -> FALSE
(45)       } # if (&User-Name)  = notfound
(45)     } # policy filter_username = notfound
(45)     [preprocess] = ok
(45)     [chap] = noop
(45)     [mschap] = noop
(45)     [digest] = noop
(45) suffix: Checking for suffix after "@"
(45) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(45) suffix: No such realm "NULL"
(45)     [suffix] = noop
(45) eap: Peer sent EAP Response (code 2) ID 222 length 6
(45) eap: Continuing tunnel setup
(45)     [eap] = ok
(45)   } # authorize = ok
(45) Found Auth-Type = eap
(45) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(45)   authenticate {
(45) eap: Expiring EAP session with state 0xe3323f65e1ec263b
(45) eap: Finished EAP session with state 0xe3323f65e1ec263b
(45) eap: Previous EAP request found for state 0xe3323f65e1ec263b, released from the list
(45) eap: Peer sent packet with method EAP PEAP (25)
(45) eap: Calling submodule eap_peap to process data
(45) eap_peap: (TLS) Peer ACKed our handshake fragment
(45) eap: Sending EAP Request (code 1) ID 223 length 1000
(45) eap: EAP session adding &reply:State = 0xe3323f65e0ed263b
(45)     [eap] = handled
(45)   } # authenticate = handled
(45) Using Post-Auth-Type Challenge
(45) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(45)   Challenge { ... } # empty sub-section is ignored
(45) session-state: Saving cached attributes
(45)   Framed-MTU = 994
(45)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(45)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(45)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(45)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(45)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(45) Sent Access-Challenge Id 45 from 127.0.0.1:1812 to 127.0.0.1:34030 length 1064
(45)   EAP-Message = 0x01df03e8194087befe9b36c4eee5514a6ce0d692160ea6d9e1fc0d3d3770b77f8b079a013246fadcf528c63464c5e9d2300563aaa12b1ca1471e09da68797ab5c40554ae52c21289c417609a02a0889e761f6c3d244c6766a6a766b1f1292134398a9dc0179ff601e9f17a910a8591f20ad07388df17a4a59b7316e68880f36090741d349cc4b4e0d742cbfb8947bab078008661a8163a72170809669fbd0fc8aeb1a84c5813bb00036cdb862c8a400004fe308204fa308203e2a00302010202147d47217251ce22b1ff50ee4b4a088bf5a83ad710300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72
(45)   Message-Authenticator = 0x00000000000000000000000000000000
(45)   State = 0xe3323f65e0ed263b47339a3c2932140c
(45) Finished request
Waking up in 0.6 seconds.
(46) Received Access-Request Id 46 from 127.0.0.1:34030 to 127.0.0.1:1812 length 240
(46)   User-Name = "anonymous"
(46)   NAS-IP-Address = 127.0.0.1
(46)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(46)   NAS-Port-Type = Wireless-802.11
(46)   Service-Type = Framed-User
(46)   NAS-Port = 1
(46)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(46)   Connect-Info = "CONNECT 54Mbps 802.11g"
(46)   Acct-Session-Id = "438644E561DD546B"
(46)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(46)   WLAN-Pairwise-Cipher = 1027076
(46)   WLAN-Group-Cipher = 1027076
(46)   WLAN-AKM-Suite = 1027073
(46)   WLAN-Group-Mgmt-Cipher = 1027078
(46)   Framed-MTU = 1400
(46)   EAP-Message = 0x02df00061900
(46)   State = 0xe3323f65e0ed263b47339a3c2932140c
(46)   Message-Authenticator = 0xaaad04f840b3c004b268e8fe7176f243
(46) Restoring &session-state
(46)   &session-state:Framed-MTU = 994
(46)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(46)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(46)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(46)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(46)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(46) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(46)   authorize {
(46)     policy filter_username {
(46)       if (&User-Name) {
(46)       if (&User-Name)  -> TRUE
(46)       if (&User-Name)  {
(46)         if (&User-Name =~ / /) {
(46)         if (&User-Name =~ / /)  -> FALSE
(46)         if (&User-Name =~ /@[^@]*@/ ) {
(46)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(46)         if (&User-Name =~ /\.\./ ) {
(46)         if (&User-Name =~ /\.\./ )  -> FALSE
(46)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(46)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(46)         if (&User-Name =~ /\.$/)  {
(46)         if (&User-Name =~ /\.$/)   -> FALSE
(46)         if (&User-Name =~ /@\./)  {
(46)         if (&User-Name =~ /@\./)   -> FALSE
(46)       } # if (&User-Name)  = notfound
(46)     } # policy filter_username = notfound
(46)     [preprocess] = ok
(46)     [chap] = noop
(46)     [mschap] = noop
(46)     [digest] = noop
(46) suffix: Checking for suffix after "@"
(46) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(46) suffix: No such realm "NULL"
(46)     [suffix] = noop
(46) eap: Peer sent EAP Response (code 2) ID 223 length 6
(46) eap: Continuing tunnel setup
(46)     [eap] = ok
(46)   } # authorize = ok
(46) Found Auth-Type = eap
(46) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(46)   authenticate {
(46) eap: Expiring EAP session with state 0xe3323f65e0ed263b
(46) eap: Finished EAP session with state 0xe3323f65e0ed263b
(46) eap: Previous EAP request found for state 0xe3323f65e0ed263b, released from the list
(46) eap: Peer sent packet with method EAP PEAP (25)
(46) eap: Calling submodule eap_peap to process data
(46) eap_peap: (TLS) Peer ACKed our handshake fragment
(46) eap: Sending EAP Request (code 1) ID 224 length 776
(46) eap: EAP session adding &reply:State = 0xe3323f65e7d2263b
(46)     [eap] = handled
(46)   } # authenticate = handled
(46) Using Post-Auth-Type Challenge
(46) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(46)   Challenge { ... } # empty sub-section is ignored
(46) session-state: Saving cached attributes
(46)   Framed-MTU = 994
(46)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(46)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(46)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(46)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(46)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(46) Sent Access-Challenge Id 46 from 127.0.0.1:1812 to 127.0.0.1:34030 length 840
(46)   EAP-Message = 0x01e00308190078616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f7269747982147d47217251ce22b1ff50ee4b4a088bf5a83ad710300f0603551d130101ff040530030101ff30360603551d1f042f302d302ba029a0278625687474703a2f2f7777772e6578616d706c652e6f72672f6578616d706c655f63612e63726c300d06092a864886f70d01010b0500038201010055f89737d1724a549c214e365757f01e0edf07642a13c83c22ec0857171b5e788d91b63a9d1d1a9d7d7651c9cf6c27a90669077d8f6a7afc17c8c8205d652a1f8c9f9fcd23124e632e4607232a1248a44c7ce7eed0df789c88c6e43c0d6714b1641e5f6cd31f9c67e134c4ddc0d685554ffaf9340fe27e20a5ad895c49c9fe45ec71b552744b309abaae1ca889128910c434a68f4e61257c91929ea018f65255180809113213278950
(46)   Message-Authenticator = 0x00000000000000000000000000000000
(46)   State = 0xe3323f65e7d2263b47339a3c2932140c
(46) Finished request
Waking up in 0.6 seconds.
(47) Received Access-Request Id 47 from 127.0.0.1:34030 to 127.0.0.1:1812 length 251
(47)   User-Name = "anonymous"
(47)   NAS-IP-Address = 127.0.0.1
(47)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(47)   NAS-Port-Type = Wireless-802.11
(47)   Service-Type = Framed-User
(47)   NAS-Port = 1
(47)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(47)   Connect-Info = "CONNECT 54Mbps 802.11g"
(47)   Acct-Session-Id = "438644E561DD546B"
(47)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(47)   WLAN-Pairwise-Cipher = 1027076
(47)   WLAN-Group-Cipher = 1027076
(47)   WLAN-AKM-Suite = 1027073
(47)   WLAN-Group-Mgmt-Cipher = 1027078
(47)   Framed-MTU = 1400
(47)   EAP-Message = 0x02e0001119800000000715030300020230
(47)   State = 0xe3323f65e7d2263b47339a3c2932140c
(47)   Message-Authenticator = 0xf99ceed736382a4b8869a45b3979d738
(47) Restoring &session-state
(47)   &session-state:Framed-MTU = 994
(47)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(47)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(47)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(47)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(47)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(47) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(47)   authorize {
(47)     policy filter_username {
(47)       if (&User-Name) {
(47)       if (&User-Name)  -> TRUE
(47)       if (&User-Name)  {
(47)         if (&User-Name =~ / /) {
(47)         if (&User-Name =~ / /)  -> FALSE
(47)         if (&User-Name =~ /@[^@]*@/ ) {
(47)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(47)         if (&User-Name =~ /\.\./ ) {
(47)         if (&User-Name =~ /\.\./ )  -> FALSE
(47)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(47)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(47)         if (&User-Name =~ /\.$/)  {
(47)         if (&User-Name =~ /\.$/)   -> FALSE
(47)         if (&User-Name =~ /@\./)  {
(47)         if (&User-Name =~ /@\./)   -> FALSE
(47)       } # if (&User-Name)  = notfound
(47)     } # policy filter_username = notfound
(47)     [preprocess] = ok
(47)     [chap] = noop
(47)     [mschap] = noop
(47)     [digest] = noop
(47) suffix: Checking for suffix after "@"
(47) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(47) suffix: No such realm "NULL"
(47)     [suffix] = noop
(47) eap: Peer sent EAP Response (code 2) ID 224 length 17
(47) eap: Continuing tunnel setup
(47)     [eap] = ok
(47)   } # authorize = ok
(47) Found Auth-Type = eap
(47) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(47)   authenticate {
(47) eap: Expiring EAP session with state 0xe3323f65e7d2263b
(47) eap: Finished EAP session with state 0xe3323f65e7d2263b
(47) eap: Previous EAP request found for state 0xe3323f65e7d2263b, released from the list
(47) eap: Peer sent packet with method EAP PEAP (25)
(47) eap: Calling submodule eap_peap to process data
(47) eap_peap: (TLS) EAP Peer says that the final record size will be 7 bytes
(47) eap_peap: (TLS) EAP Got all data (7 bytes)
(47) eap_peap: (TLS) recv TLS 1.2 Alert, fatal unknown_ca
(47) eap_peap: (TLS) The client is informing us that it does not recognize the CA used to issue the server certificate.  Please update the client so that it knows about the CA.
(47) eap_peap: ERROR: (TLS) Alert read:fatal:unknown CA
(47) eap_peap: (TLS) Server : Need to read more data: error
(47) eap_peap: ERROR: (TLS) Failed reading from OpenSSL: error:0A000418:SSL routines::tlsv1 alert unknown ca
(47) eap_peap: (TLS) In Handshake Phase
(47) eap_peap: (TLS) Application data.
(47) eap_peap: ERROR: (TLS) Cannot continue, as the peer is misbehaving.
(47) eap_peap: ERROR: [eaptls process] = fail
(47) eap: ERROR: Failed continuing EAP PEAP (25) session.  EAP sub-module failed
(47) eap: Sending EAP Failure (code 4) ID 224 length 4
(47) eap: Failed in EAP select
(47)     [eap] = invalid
(47)   } # authenticate = invalid
(47) Failed to authenticate the user
(47) Using Post-Auth-Type Reject
(47) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(47)   Post-Auth-Type REJECT {
(47) attr_filter.access_reject: EXPAND %{User-Name}
(47) attr_filter.access_reject:    --> anonymous
(47) attr_filter.access_reject: Matched entry DEFAULT at line 11
(47)     [attr_filter.access_reject] = updated
(47)     [eap] = noop
(47)     policy remove_reply_message_if_eap {
(47)       if (&reply:EAP-Message && &reply:Reply-Message) {
(47)       if (&reply:EAP-Message && &reply:Reply-Message)  -> FALSE
(47)       else {
(47)         [noop] = noop
(47)       } # else = noop
(47)     } # policy remove_reply_message_if_eap = noop
(47)   } # Post-Auth-Type REJECT = updated
(47) Delaying response for 1.000000 seconds
Waking up in 0.3 seconds.
Waking up in 0.2 seconds.
(36) Cleaning up request packet ID 36 with timestamp +35 due to cleanup_delay was reached
(37) Cleaning up request packet ID 37 with timestamp +35 due to cleanup_delay was reached
(38) Cleaning up request packet ID 38 with timestamp +35 due to cleanup_delay was reached
(39) Cleaning up request packet ID 39 with timestamp +35 due to cleanup_delay was reached
(40) Cleaning up request packet ID 40 with timestamp +35 due to cleanup_delay was reached
(41) Cleaning up request packet ID 41 with timestamp +35 due to cleanup_delay was reached
Waking up in 0.1 seconds.
(47) Sending delayed response
(47) Sent Access-Reject Id 47 from 127.0.0.1:1812 to 127.0.0.1:34030 length 44
(47)   EAP-Message = 0x04e00004
(47)   Message-Authenticator = 0x00000000000000000000000000000000
Waking up in 3.7 seconds.
(48) Received Access-Request Id 48 from 127.0.0.1:34030 to 127.0.0.1:1812 length 230
(48)   User-Name = "anonymous"
(48)   NAS-IP-Address = 127.0.0.1
(48)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(48)   NAS-Port-Type = Wireless-802.11
(48)   Service-Type = Framed-User
(48)   NAS-Port = 1
(48)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(48)   Connect-Info = "CONNECT 54Mbps 802.11g"
(48)   Acct-Session-Id = "438644E561DD546B"
(48)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(48)   WLAN-Pairwise-Cipher = 1027076
(48)   WLAN-Group-Cipher = 1027076
(48)   WLAN-AKM-Suite = 1027073
(48)   WLAN-Group-Mgmt-Cipher = 1027078
(48)   Framed-MTU = 1400
(48)   EAP-Message = 0x0227000e01616e6f6e796d6f7573
(48)   Message-Authenticator = 0xa37d5a35fbb341952b190df2d49b00d7
(48) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(48)   authorize {
(48)     policy filter_username {
(48)       if (&User-Name) {
(48)       if (&User-Name)  -> TRUE
(48)       if (&User-Name)  {
(48)         if (&User-Name =~ / /) {
(48)         if (&User-Name =~ / /)  -> FALSE
(48)         if (&User-Name =~ /@[^@]*@/ ) {
(48)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(48)         if (&User-Name =~ /\.\./ ) {
(48)         if (&User-Name =~ /\.\./ )  -> FALSE
(48)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(48)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(48)         if (&User-Name =~ /\.$/)  {
(48)         if (&User-Name =~ /\.$/)   -> FALSE
(48)         if (&User-Name =~ /@\./)  {
(48)         if (&User-Name =~ /@\./)   -> FALSE
(48)       } # if (&User-Name)  = notfound
(48)     } # policy filter_username = notfound
(48)     [preprocess] = ok
(48)     [chap] = noop
(48)     [mschap] = noop
(48)     [digest] = noop
(48) suffix: Checking for suffix after "@"
(48) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(48) suffix: No such realm "NULL"
(48)     [suffix] = noop
(48) eap: Peer sent EAP Response (code 2) ID 39 length 14
(48) eap: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
(48)     [eap] = ok
(48)   } # authorize = ok
(48) Found Auth-Type = eap
(48) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(48)   authenticate {
(48) eap: Peer sent packet with method EAP Identity (1)
(48) eap: Calling submodule eap_md5 to process data
(48) eap_md5: Issuing MD5 Challenge
(48) eap: Sending EAP Request (code 1) ID 40 length 22
(48) eap: EAP session adding &reply:State = 0xd811353fd839317b
(48)     [eap] = handled
(48)   } # authenticate = handled
(48) Using Post-Auth-Type Challenge
(48) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(48)   Challenge { ... } # empty sub-section is ignored
(48) Sent Access-Challenge Id 48 from 127.0.0.1:1812 to 127.0.0.1:34030 length 80
(48)   EAP-Message = 0x012800160410512a93e629074c080436abec9712aa50
(48)   Message-Authenticator = 0x00000000000000000000000000000000
(48)   State = 0xd811353fd839317b3eab512523d46c6a
(48) Finished request
Waking up in 0.8 seconds.
(49) Received Access-Request Id 49 from 127.0.0.1:34030 to 127.0.0.1:1812 length 241
(49)   User-Name = "anonymous"
(49)   NAS-IP-Address = 127.0.0.1
(49)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(49)   NAS-Port-Type = Wireless-802.11
(49)   Service-Type = Framed-User
(49)   NAS-Port = 1
(49)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(49)   Connect-Info = "CONNECT 54Mbps 802.11g"
(49)   Acct-Session-Id = "438644E561DD546B"
(49)   Acct-Multi-Session-Id = "BEFE7AF3DBA329B8"
(49)   WLAN-Pairwise-Cipher = 1027076
(49)   WLAN-Group-Cipher = 1027076
(49)   WLAN-AKM-Suite = 1027073
(49)   WLAN-Group-Mgmt-Cipher = 1027078
(49)   Framed-MTU = 1400
(49)   EAP-Message = 0x02280007031915
(49)   State = 0xd811353fd839317b3eab512523d46c6a
(49)   Message-Authenticator = 0xc71e1c5bfa22c5a0f9f5812e0bdd0836
(49) session-state: No cached attributes
(49) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(49)   authorize {
(49)     policy filter_username {
(49)       if (&User-Name) {
(49)       if (&User-Name)  -> TRUE
(49)       if (&User-Name)  {
(49)         if (&User-Name =~ / /) {
(49)         if (&User-Name =~ / /)  -> FALSE
(49)         if (&User-Name =~ /@[^@]*@/ ) {
(49)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(49)         if (&User-Name =~ /\.\./ ) {
(49)         if (&User-Name =~ /\.\./ )  -> FALSE
(49)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(49)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(49)         if (&User-Name =~ /\.$/)  {
(49)         if (&User-Name =~ /\.$/)   -> FALSE
(49)         if (&User-Name =~ /@\./)  {
(49)         if (&User-Name =~ /@\./)   -> FALSE
(49)       } # if (&User-Name)  = notfound
(49)     } # policy filter_username = notfound
(49)     [preprocess] = ok
(49)     [chap] = noop
(49)     [mschap] = noop
(49)     [digest] = noop
(49) suffix: Checking for suffix after "@"
(49) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(49) suffix: No such realm "NULL"
(49)     [suffix] = noop
(49) eap: Peer sent EAP Response (code 2) ID 40 length 7
(49) eap: No EAP Start, assuming it's an on-going EAP conversation
(49)     [eap] = updated
(49)     [files] = noop
(49)     [expiration] = noop
(49)     [logintime] = noop
Not doing PAP as Auth-Type is already set.
(49)     [pap] = noop
(49)   } # authorize = updated
(49) Found Auth-Type = eap
(49) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(49)   authenticate {
(49) eap: Expiring EAP session with state 0xd811353fd839317b
(49) eap: Finished EAP session with state 0xd811353fd839317b
(49) eap: Previous EAP request found for state 0xd811353fd839317b, released from the list
(49) eap: Peer sent packet with method EAP NAK (3)
(49) eap: Found mutually acceptable type PEAP (25)
(49) eap: Calling submodule eap_peap to process data
(49) eap_peap: (TLS) Initiating new session
(49) eap: Sending EAP Request (code 1) ID 41 length 6
(49) eap: EAP session adding &reply:State = 0xd811353fd9382c7b
(49)     [eap] = handled
(49)   } # authenticate = handled
(49) Using Post-Auth-Type Challenge
(49) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(49)   Challenge { ... } # empty sub-section is ignored
(49) session-state: Saving cached attributes
(49)   Framed-MTU = 994
(49) Sent Access-Challenge Id 49 from 127.0.0.1:1812 to 127.0.0.1:34030 length 64
(49)   EAP-Message = 0x012900061920
(49)   Message-Authenticator = 0x00000000000000000000000000000000
(49)   State = 0xd811353fd9382c7b3eab512523d46c6a
(49) Finished request
Waking up in 0.7 seconds.
Waking up in 0.4 seconds.
Signalled to terminate
Exiting normally

[0;36mFreeRADIUS is stopped.[0m


