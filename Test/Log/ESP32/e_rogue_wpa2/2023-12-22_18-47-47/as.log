[18:47:54.578] Beginning saving session of stdout and stderr Test/Tmp/Log/ESP32/e_rogue_wpa2...
[0;32mSuccess.[0m

[18:47:54.579] Fetching configuration directory associated to e_wpa2...
[0;32mSuccess.[0m

[18:47:54.596] Looking for Freeradius/Conf/E_wpa2/...
[0;32mSuccess.[0m

[0;36mRunning FreeRADIUS. Press Ctrl-C to stop.[0m

FreeRADIUS Version 3.0.26
Copyright (C) 1999-2021 The FreeRADIUS server project and contributors
There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE
You may redistribute copies of FreeRADIUS under the terms of the
GNU General Public License
For more information about these matters, see the file named COPYRIGHT
Starting - reading configuration files ...
including dictionary file /usr/share/freeradius/dictionary
including dictionary file /usr/share/freeradius/dictionary.dhcp
including dictionary file /usr/share/freeradius/dictionary.vqp
including dictionary file Freeradius/Conf/E_wpa2//dictionary
including configuration file Freeradius/Conf/E_wpa2//radiusd.conf
including configuration file Freeradius/Conf/E_wpa2//proxy.conf
including configuration file Freeradius/Conf/E_wpa2//clients.conf
including files in directory Freeradius/Conf/E_wpa2//mods-enabled/
including configuration file Freeradius/Conf/E_wpa2//mods-enabled/files
including configuration file Freeradius/Conf/E_wpa2//mods-enabled/passwd
including configuration file Freeradius/Conf/E_wpa2//mods-enabled/expr
including configuration file Freeradius/Conf/E_wpa2//mods-enabled/soh
including configuration file Freeradius/Conf/E_wpa2//mods-enabled/digest
including configuration file Freeradius/Conf/E_wpa2//mods-enabled/dynamic_clients
including configuration file Freeradius/Conf/E_wpa2//mods-enabled/unix
including configuration file Freeradius/Conf/E_wpa2//mods-enabled/echo
including configuration file Freeradius/Conf/E_wpa2//mods-enabled/preprocess
including configuration file Freeradius/Conf/E_wpa2//mods-enabled/replicate
including configuration file Freeradius/Conf/E_wpa2//mods-enabled/pap
including configuration file Freeradius/Conf/E_wpa2//mods-enabled/always
including configuration file Freeradius/Conf/E_wpa2//mods-enabled/detail
including configuration file Freeradius/Conf/E_wpa2//mods-enabled/cache_eap
including configuration file Freeradius/Conf/E_wpa2//mods-enabled/mschap
including configuration file Freeradius/Conf/E_wpa2//mods-enabled/eap
including configuration file Freeradius/Conf/E_wpa2//mods-enabled/logintime
including configuration file Freeradius/Conf/E_wpa2//mods-enabled/utf8
including configuration file Freeradius/Conf/E_wpa2//mods-enabled/unpack
including configuration file Freeradius/Conf/E_wpa2//mods-enabled/radutmp
including configuration file Freeradius/Conf/E_wpa2//mods-enabled/expiration
including configuration file Freeradius/Conf/E_wpa2//mods-enabled/chap
including configuration file Freeradius/Conf/E_wpa2//mods-enabled/realm
including configuration file Freeradius/Conf/E_wpa2//mods-enabled/sradutmp
including configuration file Freeradius/Conf/E_wpa2//mods-enabled/attr_filter
including configuration file Freeradius/Conf/E_wpa2//mods-enabled/ntlm_auth
including configuration file Freeradius/Conf/E_wpa2//mods-enabled/detail.log
including configuration file Freeradius/Conf/E_wpa2//mods-enabled/exec
including configuration file Freeradius/Conf/E_wpa2//mods-enabled/linelog
including files in directory Freeradius/Conf/E_wpa2//policy.d/
including configuration file Freeradius/Conf/E_wpa2//policy.d/operator-name
including configuration file Freeradius/Conf/E_wpa2//policy.d/dhcp
including configuration file Freeradius/Conf/E_wpa2//policy.d/rfc7542
including configuration file Freeradius/Conf/E_wpa2//policy.d/accounting
including configuration file Freeradius/Conf/E_wpa2//policy.d/filter
including configuration file Freeradius/Conf/E_wpa2//policy.d/cui
including configuration file Freeradius/Conf/E_wpa2//policy.d/moonshot-targeted-ids
including configuration file Freeradius/Conf/E_wpa2//policy.d/canonicalization
including configuration file Freeradius/Conf/E_wpa2//policy.d/eap
including configuration file Freeradius/Conf/E_wpa2//policy.d/control
including configuration file Freeradius/Conf/E_wpa2//policy.d/abfab-tr
including configuration file Freeradius/Conf/E_wpa2//policy.d/debug
including files in directory Freeradius/Conf/E_wpa2//sites-enabled/
including configuration file Freeradius/Conf/E_wpa2//sites-enabled/inner-tunnel
including configuration file Freeradius/Conf/E_wpa2//sites-enabled/default
main {
 security {
 	user = "freerad"
 	group = "freerad"
 	allow_core_dumps = no
 }
	name = "freeradius"
	prefix = "/usr"
	localstatedir = "/var"
	logdir = "/var/log/freeradius"
	run_dir = "/var/run/freeradius"
}
main {
	name = "freeradius"
	prefix = "/usr"
	localstatedir = "/var"
	sbindir = "/usr/sbin"
	logdir = "/var/log/freeradius"
	run_dir = "/var/run/freeradius"
	libdir = "/usr/lib/freeradius"
	radacctdir = "/var/log/freeradius/radacct"
	hostname_lookups = no
	max_request_time = 30
	cleanup_delay = 5
	max_requests = 16384
	postauth_client_lost = no
	pidfile = "/var/run/freeradius/freeradius.pid"
	checkrad = "/usr/sbin/checkrad"
	debug_level = 0
	proxy_requests = yes
 log {
 	stripped_names = no
 	auth = no
 	auth_badpass = no
 	auth_goodpass = no
 	colourise = yes
 	msg_denied = "You are already logged in - access denied"
 }
 resources {
 }
 security {
 	max_attributes = 200
 	reject_delay = 1.000000
 	status_server = yes
 }
}
radiusd: #### Loading Realms and Home Servers ####
 proxy server {
 	retry_delay = 5
 	retry_count = 3
 	default_fallback = no
 	dead_time = 120
 	wake_all_if_all_dead = no
 }
 home_server localhost {
 	ipaddr = 127.0.0.1
 	port = 1812
 	type = "auth"
 	secret = <<< secret >>>
 	response_window = 20.000000
 	response_timeouts = 1
 	max_outstanding = 65536
 	zombie_period = 40
 	status_check = "status-server"
 	ping_interval = 30
 	check_interval = 30
 	check_timeout = 4
 	num_answers_to_alive = 3
 	revive_interval = 120
  limit {
  	max_connections = 16
  	max_requests = 0
  	lifetime = 0
  	idle_timeout = 0
  }
  coa {
  	irt = 2
  	mrt = 16
  	mrc = 5
  	mrd = 30
  }
 }
 home_server_pool my_auth_failover {
	type = fail-over
	home_server = localhost
 }
 realm example.com {
	auth_pool = my_auth_failover
 }
 realm LOCAL {
 }
radiusd: #### Loading Clients ####
 client localhost {
 	ipaddr = 127.0.0.1
 	require_message_authenticator = no
 	secret = <<< secret >>>
 	nas_type = "other"
 	proto = "*"
  limit {
  	max_connections = 16
  	lifetime = 0
  	idle_timeout = 30
  }
 }
 client localhost_ipv6 {
 	ipv6addr = ::1
 	require_message_authenticator = no
 	secret = <<< secret >>>
  limit {
  	max_connections = 16
  	lifetime = 0
  	idle_timeout = 30
  }
 }
Debugger not attached
systemd watchdog is disabled
 # Creating Auth-Type = mschap
 # Creating Auth-Type = eap
 # Creating Auth-Type = PAP
 # Creating Auth-Type = CHAP
 # Creating Auth-Type = MS-CHAP
 # Creating Auth-Type = digest
 # Creating Autz-Type = New-TLS-Connection
radiusd: #### Instantiating modules ####
 modules {
  # Loaded module rlm_files
  # Loading module "files" from file Freeradius/Conf/E_wpa2//mods-enabled/files
  files {
  	filename = "Freeradius/Conf/E_wpa2//mods-config/files/authorize"
  	acctusersfile = "Freeradius/Conf/E_wpa2//mods-config/files/accounting"
  	preproxy_usersfile = "Freeradius/Conf/E_wpa2//mods-config/files/pre-proxy"
  }
  # Loaded module rlm_passwd
  # Loading module "etc_passwd" from file Freeradius/Conf/E_wpa2//mods-enabled/passwd
  passwd etc_passwd {
  	filename = "/etc/passwd"
  	format = "*User-Name:Crypt-Password:"
  	delimiter = ":"
  	ignore_nislike = no
  	ignore_empty = yes
  	allow_multiple_keys = no
  	hash_size = 100
  }
  # Loaded module rlm_expr
  # Loading module "expr" from file Freeradius/Conf/E_wpa2//mods-enabled/expr
  expr {
  	safe_characters = "@abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789.-_: /√§√©√∂√º√†√¢√¶√ß√®√©√™√´√Æ√Ø√¥≈ì√π√ª√ºa√ø√Ñ√â√ñ√ú√ü√Ä√Ç√Ü√á√à√â√ä√ã√é√è√î≈í√ô√õ√ú≈∏"
  }
  # Loaded module rlm_soh
  # Loading module "soh" from file Freeradius/Conf/E_wpa2//mods-enabled/soh
  soh {
  	dhcp = yes
  }
  # Loaded module rlm_digest
  # Loading module "digest" from file Freeradius/Conf/E_wpa2//mods-enabled/digest
  # Loaded module rlm_dynamic_clients
  # Loading module "dynamic_clients" from file Freeradius/Conf/E_wpa2//mods-enabled/dynamic_clients
  # Loaded module rlm_unix
  # Loading module "unix" from file Freeradius/Conf/E_wpa2//mods-enabled/unix
  unix {
  	radwtmp = "/var/log/freeradius/radwtmp"
  }
Creating attribute Unix-Group
  # Loaded module rlm_exec
  # Loading module "echo" from file Freeradius/Conf/E_wpa2//mods-enabled/echo
  exec echo {
  	wait = yes
  	program = "/bin/echo %{User-Name}"
  	input_pairs = "request"
  	output_pairs = "reply"
  	shell_escape = yes
  }
  # Loaded module rlm_preprocess
  # Loading module "preprocess" from file Freeradius/Conf/E_wpa2//mods-enabled/preprocess
  preprocess {
  	huntgroups = "Freeradius/Conf/E_wpa2//mods-config/preprocess/huntgroups"
  	hints = "Freeradius/Conf/E_wpa2//mods-config/preprocess/hints"
  	with_ascend_hack = no
  	ascend_channels_per_line = 23
  	with_ntdomain_hack = no
  	with_specialix_jetstream_hack = no
  	with_cisco_vsa_hack = no
  	with_alvarion_vsa_hack = no
  }
  # Loaded module rlm_replicate
  # Loading module "replicate" from file Freeradius/Conf/E_wpa2//mods-enabled/replicate
  # Loaded module rlm_pap
  # Loading module "pap" from file Freeradius/Conf/E_wpa2//mods-enabled/pap
  pap {
  	normalise = yes
  }
  # Loaded module rlm_always
  # Loading module "reject" from file Freeradius/Conf/E_wpa2//mods-enabled/always
  always reject {
  	rcode = "reject"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "fail" from file Freeradius/Conf/E_wpa2//mods-enabled/always
  always fail {
  	rcode = "fail"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "ok" from file Freeradius/Conf/E_wpa2//mods-enabled/always
  always ok {
  	rcode = "ok"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "handled" from file Freeradius/Conf/E_wpa2//mods-enabled/always
  always handled {
  	rcode = "handled"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "invalid" from file Freeradius/Conf/E_wpa2//mods-enabled/always
  always invalid {
  	rcode = "invalid"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "userlock" from file Freeradius/Conf/E_wpa2//mods-enabled/always
  always userlock {
  	rcode = "userlock"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "notfound" from file Freeradius/Conf/E_wpa2//mods-enabled/always
  always notfound {
  	rcode = "notfound"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "noop" from file Freeradius/Conf/E_wpa2//mods-enabled/always
  always noop {
  	rcode = "noop"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "updated" from file Freeradius/Conf/E_wpa2//mods-enabled/always
  always updated {
  	rcode = "updated"
  	simulcount = 0
  	mpp = no
  }
  # Loaded module rlm_detail
  # Loading module "detail" from file Freeradius/Conf/E_wpa2//mods-enabled/detail
  detail {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loaded module rlm_cache
  # Loading module "cache_eap" from file Freeradius/Conf/E_wpa2//mods-enabled/cache_eap
  cache cache_eap {
  	driver = "rlm_cache_rbtree"
  	key = "%{%{control:State}:-%{%{reply:State}:-%{State}}}"
  	ttl = 15
  	max_entries = 0
  	epoch = 0
  	add_stats = no
  }
  # Loaded module rlm_mschap
  # Loading module "mschap" from file Freeradius/Conf/E_wpa2//mods-enabled/mschap
  mschap {
  	use_mppe = yes
  	require_encryption = no
  	require_strong = no
  	with_ntdomain_hack = yes
   passchange {
   }
  	allow_retry = yes
  	winbind_retry_with_normalised_username = no
  }
  # Loaded module rlm_eap
  # Loading module "eap" from file Freeradius/Conf/E_wpa2//mods-enabled/eap
  eap {
  	default_eap_type = "md5"
  	timer_expire = 60
  	ignore_unknown_eap_types = no
  	cisco_accounting_username_bug = no
  	max_sessions = 16384
  }
  # Loaded module rlm_logintime
  # Loading module "logintime" from file Freeradius/Conf/E_wpa2//mods-enabled/logintime
  logintime {
  	minimum_timeout = 60
  }
  # Loaded module rlm_utf8
  # Loading module "utf8" from file Freeradius/Conf/E_wpa2//mods-enabled/utf8
  # Loaded module rlm_unpack
  # Loading module "unpack" from file Freeradius/Conf/E_wpa2//mods-enabled/unpack
  # Loaded module rlm_radutmp
  # Loading module "radutmp" from file Freeradius/Conf/E_wpa2//mods-enabled/radutmp
  radutmp {
  	filename = "/var/log/freeradius/radutmp"
  	username = "%{User-Name}"
  	case_sensitive = yes
  	check_with_nas = yes
  	permissions = 384
  	caller_id = yes
  }
  # Loaded module rlm_expiration
  # Loading module "expiration" from file Freeradius/Conf/E_wpa2//mods-enabled/expiration
  # Loaded module rlm_chap
  # Loading module "chap" from file Freeradius/Conf/E_wpa2//mods-enabled/chap
  # Loaded module rlm_realm
  # Loading module "IPASS" from file Freeradius/Conf/E_wpa2//mods-enabled/realm
  realm IPASS {
  	format = "prefix"
  	delimiter = "/"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "suffix" from file Freeradius/Conf/E_wpa2//mods-enabled/realm
  realm suffix {
  	format = "suffix"
  	delimiter = "@"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "bangpath" from file Freeradius/Conf/E_wpa2//mods-enabled/realm
  realm bangpath {
  	format = "prefix"
  	delimiter = "!"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "realmpercent" from file Freeradius/Conf/E_wpa2//mods-enabled/realm
  realm realmpercent {
  	format = "suffix"
  	delimiter = "%"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "ntdomain" from file Freeradius/Conf/E_wpa2//mods-enabled/realm
  realm ntdomain {
  	format = "prefix"
  	delimiter = "\\"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "sradutmp" from file Freeradius/Conf/E_wpa2//mods-enabled/sradutmp
  radutmp sradutmp {
  	filename = "/var/log/freeradius/sradutmp"
  	username = "%{User-Name}"
  	case_sensitive = yes
  	check_with_nas = yes
  	permissions = 420
  	caller_id = no
  }
  # Loaded module rlm_attr_filter
  # Loading module "attr_filter.post-proxy" from file Freeradius/Conf/E_wpa2//mods-enabled/attr_filter
  attr_filter attr_filter.post-proxy {
  	filename = "Freeradius/Conf/E_wpa2//mods-config/attr_filter/post-proxy"
  	key = "%{Realm}"
  	relaxed = no
  }
  # Loading module "attr_filter.pre-proxy" from file Freeradius/Conf/E_wpa2//mods-enabled/attr_filter
  attr_filter attr_filter.pre-proxy {
  	filename = "Freeradius/Conf/E_wpa2//mods-config/attr_filter/pre-proxy"
  	key = "%{Realm}"
  	relaxed = no
  }
  # Loading module "attr_filter.access_reject" from file Freeradius/Conf/E_wpa2//mods-enabled/attr_filter
  attr_filter attr_filter.access_reject {
  	filename = "Freeradius/Conf/E_wpa2//mods-config/attr_filter/access_reject"
  	key = "%{User-Name}"
  	relaxed = no
  }
  # Loading module "attr_filter.access_challenge" from file Freeradius/Conf/E_wpa2//mods-enabled/attr_filter
  attr_filter attr_filter.access_challenge {
  	filename = "Freeradius/Conf/E_wpa2//mods-config/attr_filter/access_challenge"
  	key = "%{User-Name}"
  	relaxed = no
  }
  # Loading module "attr_filter.accounting_response" from file Freeradius/Conf/E_wpa2//mods-enabled/attr_filter
  attr_filter attr_filter.accounting_response {
  	filename = "Freeradius/Conf/E_wpa2//mods-config/attr_filter/accounting_response"
  	key = "%{User-Name}"
  	relaxed = no
  }
  # Loading module "attr_filter.coa" from file Freeradius/Conf/E_wpa2//mods-enabled/attr_filter
  attr_filter attr_filter.coa {
  	filename = "Freeradius/Conf/E_wpa2//mods-config/attr_filter/coa"
  	key = "%{User-Name}"
  	relaxed = no
  }
  # Loading module "ntlm_auth" from file Freeradius/Conf/E_wpa2//mods-enabled/ntlm_auth
  exec ntlm_auth {
  	wait = yes
  	program = "/path/to/ntlm_auth --request-nt-key --domain=MYDOMAIN --username=%{mschap:User-Name} --password=%{User-Password}"
  	shell_escape = yes
  }
  # Loading module "auth_log" from file Freeradius/Conf/E_wpa2//mods-enabled/detail.log
  detail auth_log {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/auth-detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loading module "reply_log" from file Freeradius/Conf/E_wpa2//mods-enabled/detail.log
  detail reply_log {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/reply-detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loading module "pre_proxy_log" from file Freeradius/Conf/E_wpa2//mods-enabled/detail.log
  detail pre_proxy_log {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/pre-proxy-detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loading module "post_proxy_log" from file Freeradius/Conf/E_wpa2//mods-enabled/detail.log
  detail post_proxy_log {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/post-proxy-detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loading module "exec" from file Freeradius/Conf/E_wpa2//mods-enabled/exec
  exec {
  	wait = no
  	input_pairs = "request"
  	shell_escape = yes
  	timeout = 10
  }
  # Loaded module rlm_linelog
  # Loading module "linelog" from file Freeradius/Conf/E_wpa2//mods-enabled/linelog
  linelog {
  	filename = "/var/log/freeradius/linelog"
  	escape_filenames = no
  	syslog_severity = "info"
  	permissions = 384
  	format = "This is a log message for %{User-Name}"
  	reference = "messages.%{%{reply:Packet-Type}:-default}"
  }
  # Loading module "log_accounting" from file Freeradius/Conf/E_wpa2//mods-enabled/linelog
  linelog log_accounting {
  	filename = "/var/log/freeradius/linelog-accounting"
  	escape_filenames = no
  	syslog_severity = "info"
  	permissions = 384
  	format = ""
  	reference = "Accounting-Request.%{%{Acct-Status-Type}:-unknown}"
  }
  instantiate {
  }
  # Instantiating module "files" from file Freeradius/Conf/E_wpa2//mods-enabled/files
reading pairlist file Freeradius/Conf/E_wpa2//mods-config/files/authorize
reading pairlist file Freeradius/Conf/E_wpa2//mods-config/files/accounting
reading pairlist file Freeradius/Conf/E_wpa2//mods-config/files/pre-proxy
  # Instantiating module "etc_passwd" from file Freeradius/Conf/E_wpa2//mods-enabled/passwd
rlm_passwd: nfields: 3 keyfield 0(User-Name) listable: no
  # Instantiating module "preprocess" from file Freeradius/Conf/E_wpa2//mods-enabled/preprocess
reading pairlist file Freeradius/Conf/E_wpa2//mods-config/preprocess/huntgroups
reading pairlist file Freeradius/Conf/E_wpa2//mods-config/preprocess/hints
  # Instantiating module "pap" from file Freeradius/Conf/E_wpa2//mods-enabled/pap
  # Instantiating module "reject" from file Freeradius/Conf/E_wpa2//mods-enabled/always
  # Instantiating module "fail" from file Freeradius/Conf/E_wpa2//mods-enabled/always
  # Instantiating module "ok" from file Freeradius/Conf/E_wpa2//mods-enabled/always
  # Instantiating module "handled" from file Freeradius/Conf/E_wpa2//mods-enabled/always
  # Instantiating module "invalid" from file Freeradius/Conf/E_wpa2//mods-enabled/always
  # Instantiating module "userlock" from file Freeradius/Conf/E_wpa2//mods-enabled/always
  # Instantiating module "notfound" from file Freeradius/Conf/E_wpa2//mods-enabled/always
  # Instantiating module "noop" from file Freeradius/Conf/E_wpa2//mods-enabled/always
  # Instantiating module "updated" from file Freeradius/Conf/E_wpa2//mods-enabled/always
  # Instantiating module "detail" from file Freeradius/Conf/E_wpa2//mods-enabled/detail
  # Instantiating module "cache_eap" from file Freeradius/Conf/E_wpa2//mods-enabled/cache_eap
rlm_cache (cache_eap): Driver rlm_cache_rbtree (module rlm_cache_rbtree) loaded and linked
  # Instantiating module "mschap" from file Freeradius/Conf/E_wpa2//mods-enabled/mschap
rlm_mschap (mschap): using internal authentication
  # Instantiating module "eap" from file Freeradius/Conf/E_wpa2//mods-enabled/eap
   # Linked to sub-module rlm_eap_md5
   # Linked to sub-module rlm_eap_gtc
   gtc {
   	challenge = "Password: "
   	auth_type = "PAP"
   }
   # Linked to sub-module rlm_eap_tls
   tls {
   	tls = "tls-common"
   }
   tls-config tls-common {
   	verify_depth = 0
   	ca_path = "Freeradius/Conf/E_wpa2//certs"
   	pem_file_type = yes
   	private_key_file = "Freeradius/Conf/E_wpa2//certs/server.key"
   	certificate_file = "Freeradius/Conf/E_wpa2//certs/server.crt"
   	ca_file = "Freeradius/Conf/E_wpa2//certs/ca.pem"
   	private_key_password = <<< secret >>>
   	fragment_size = 1024
   	include_length = yes
   	auto_chain = yes
   	check_crl = no
   	check_all_crl = no
   	ca_path_reload_interval = 0
   	cipher_list = "DEFAULT"
   	cipher_server_preference = no
   	reject_unknown_intermediate_ca = no
   	ecdh_curve = ""
   	tls_max_version = "1.2"
   	tls_min_version = "1.2"
    cache {
    	enable = no
    	lifetime = 24
    	max_entries = 255
    }
    verify {
    	skip_if_ocsp_ok = no
    }
    ocsp {
    	enable = no
    	override_cert_url = yes
    	url = "http://127.0.0.1/ocsp/"
    	use_nonce = yes
    	timeout = 0
    	softfail = no
    }
   }
   # Linked to sub-module rlm_eap_ttls
   ttls {
   	tls = "tls-common"
   	default_eap_type = "md5"
   	copy_request_to_tunnel = no
   	use_tunneled_reply = no
   	virtual_server = "inner-tunnel"
   	include_length = yes
   	require_client_cert = no
   }
tls: Using cached TLS configuration from previous invocation
   # Linked to sub-module rlm_eap_peap
   peap {
   	tls = "tls-common"
   	default_eap_type = "mschapv2"
   	copy_request_to_tunnel = no
   	use_tunneled_reply = no
   	proxy_tunneled_request_as_eap = yes
   	virtual_server = "inner-tunnel"
   	soh = no
   	require_client_cert = no
   }
tls: Using cached TLS configuration from previous invocation
   # Linked to sub-module rlm_eap_mschapv2
   mschapv2 {
   	with_ntdomain_hack = no
   	send_error = no
   }
  # Instantiating module "logintime" from file Freeradius/Conf/E_wpa2//mods-enabled/logintime
  # Instantiating module "expiration" from file Freeradius/Conf/E_wpa2//mods-enabled/expiration
  # Instantiating module "IPASS" from file Freeradius/Conf/E_wpa2//mods-enabled/realm
  # Instantiating module "suffix" from file Freeradius/Conf/E_wpa2//mods-enabled/realm
  # Instantiating module "bangpath" from file Freeradius/Conf/E_wpa2//mods-enabled/realm
  # Instantiating module "realmpercent" from file Freeradius/Conf/E_wpa2//mods-enabled/realm
  # Instantiating module "ntdomain" from file Freeradius/Conf/E_wpa2//mods-enabled/realm
  # Instantiating module "attr_filter.post-proxy" from file Freeradius/Conf/E_wpa2//mods-enabled/attr_filter
reading pairlist file Freeradius/Conf/E_wpa2//mods-config/attr_filter/post-proxy
  # Instantiating module "attr_filter.pre-proxy" from file Freeradius/Conf/E_wpa2//mods-enabled/attr_filter
reading pairlist file Freeradius/Conf/E_wpa2//mods-config/attr_filter/pre-proxy
  # Instantiating module "attr_filter.access_reject" from file Freeradius/Conf/E_wpa2//mods-enabled/attr_filter
reading pairlist file Freeradius/Conf/E_wpa2//mods-config/attr_filter/access_reject
  # Instantiating module "attr_filter.access_challenge" from file Freeradius/Conf/E_wpa2//mods-enabled/attr_filter
reading pairlist file Freeradius/Conf/E_wpa2//mods-config/attr_filter/access_challenge
  # Instantiating module "attr_filter.accounting_response" from file Freeradius/Conf/E_wpa2//mods-enabled/attr_filter
reading pairlist file Freeradius/Conf/E_wpa2//mods-config/attr_filter/accounting_response
  # Instantiating module "attr_filter.coa" from file Freeradius/Conf/E_wpa2//mods-enabled/attr_filter
reading pairlist file Freeradius/Conf/E_wpa2//mods-config/attr_filter/coa
  # Instantiating module "auth_log" from file Freeradius/Conf/E_wpa2//mods-enabled/detail.log
rlm_detail (auth_log): 'User-Password' suppressed, will not appear in detail output
  # Instantiating module "reply_log" from file Freeradius/Conf/E_wpa2//mods-enabled/detail.log
  # Instantiating module "pre_proxy_log" from file Freeradius/Conf/E_wpa2//mods-enabled/detail.log
  # Instantiating module "post_proxy_log" from file Freeradius/Conf/E_wpa2//mods-enabled/detail.log
  # Instantiating module "linelog" from file Freeradius/Conf/E_wpa2//mods-enabled/linelog
  # Instantiating module "log_accounting" from file Freeradius/Conf/E_wpa2//mods-enabled/linelog
 } # modules
radiusd: #### Loading Virtual Servers ####
server { # from file Freeradius/Conf/E_wpa2//radiusd.conf
} # server
server inner-tunnel { # from file Freeradius/Conf/E_wpa2//sites-enabled/inner-tunnel
 # Loading authenticate {...}
Compiling Auth-Type PAP for attr Auth-Type
Compiling Auth-Type CHAP for attr Auth-Type
Compiling Auth-Type MS-CHAP for attr Auth-Type
 # Loading authorize {...}
Ignoring "sql" (see raddb/mods-available/README.rst)
Ignoring "ldap" (see raddb/mods-available/README.rst)
 # Loading session {...}
 # Loading post-proxy {...}
 # Loading post-auth {...}
 # Skipping contents of 'if' as it is always 'false' -- Freeradius/Conf/E_wpa2//sites-enabled/inner-tunnel:336
Compiling Post-Auth-Type REJECT for attr Post-Auth-Type
} # server inner-tunnel
server default { # from file Freeradius/Conf/E_wpa2//sites-enabled/default
 # Loading authenticate {...}
Compiling Auth-Type PAP for attr Auth-Type
Compiling Auth-Type CHAP for attr Auth-Type
Compiling Auth-Type MS-CHAP for attr Auth-Type
 # Loading authorize {...}
Compiling Autz-Type New-TLS-Connection for attr Autz-Type
 # Loading preacct {...}
 # Loading accounting {...}
 # Loading post-proxy {...}
 # Loading post-auth {...}
Compiling Post-Auth-Type REJECT for attr Post-Auth-Type
Compiling Post-Auth-Type Challenge for attr Post-Auth-Type
Compiling Post-Auth-Type Client-Lost for attr Post-Auth-Type
} # server default
radiusd: #### Opening IP addresses and Ports ####
listen {
  	type = "auth"
  	ipaddr = 127.0.0.1
  	port = 18120
}
listen {
  	type = "auth"
  	ipaddr = *
  	port = 0
   limit {
   	max_connections = 16
   	lifetime = 0
   	idle_timeout = 30
   }
}
listen {
  	type = "acct"
  	ipaddr = *
  	port = 0
   limit {
   	max_connections = 16
   	lifetime = 0
   	idle_timeout = 30
   }
}
listen {
  	type = "auth"
  	ipv6addr = ::
  	port = 0
   limit {
   	max_connections = 16
   	lifetime = 0
   	idle_timeout = 30
   }
}
listen {
  	type = "acct"
  	ipv6addr = ::
  	port = 0
   limit {
   	max_connections = 16
   	lifetime = 0
   	idle_timeout = 30
   }
}
Listening on auth address 127.0.0.1 port 18120 bound to server inner-tunnel
Listening on auth address * port 1812 bound to server default
Listening on acct address * port 1813 bound to server default
Listening on auth address :: port 1812 bound to server default
Listening on acct address :: port 1813 bound to server default
Listening on proxy address * port 42756
Listening on proxy address :: port 49749
Ready to process requests
(0) Received Access-Request Id 0 from 127.0.0.1:51373 to 127.0.0.1:1812 length 230
(0)   User-Name = "anonymous"
(0)   NAS-IP-Address = 127.0.0.1
(0)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(0)   NAS-Port-Type = Wireless-802.11
(0)   Service-Type = Framed-User
(0)   NAS-Port = 1
(0)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(0)   Connect-Info = "CONNECT 54Mbps 802.11g"
(0)   Acct-Session-Id = "98A06883BF9F9973"
(0)   Acct-Multi-Session-Id = "2E4AB55ED5E28AB9"
(0)   WLAN-Pairwise-Cipher = 1027076
(0)   WLAN-Group-Cipher = 1027076
(0)   WLAN-AKM-Suite = 1027073
(0)   WLAN-Group-Mgmt-Cipher = 1027078
(0)   Framed-MTU = 1400
(0)   EAP-Message = 0x0204000e01616e6f6e796d6f7573
(0)   Message-Authenticator = 0x1b18eee99f22ce188234ebd16fdeb4a1
(0) # Executing section authorize from file Freeradius/Conf/E_wpa2//sites-enabled/default
(0)   authorize {
(0)     policy filter_username {
(0)       if (&User-Name) {
(0)       if (&User-Name)  -> TRUE
(0)       if (&User-Name)  {
(0)         if (&User-Name =~ / /) {
(0)         if (&User-Name =~ / /)  -> FALSE
(0)         if (&User-Name =~ /@[^@]*@/ ) {
(0)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(0)         if (&User-Name =~ /\.\./ ) {
(0)         if (&User-Name =~ /\.\./ )  -> FALSE
(0)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(0)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(0)         if (&User-Name =~ /\.$/)  {
(0)         if (&User-Name =~ /\.$/)   -> FALSE
(0)         if (&User-Name =~ /@\./)  {
(0)         if (&User-Name =~ /@\./)   -> FALSE
(0)       } # if (&User-Name)  = notfound
(0)     } # policy filter_username = notfound
(0)     [preprocess] = ok
(0)     [chap] = noop
(0)     [mschap] = noop
(0)     [digest] = noop
(0) suffix: Checking for suffix after "@"
(0) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(0) suffix: No such realm "NULL"
(0)     [suffix] = noop
(0) eap: Peer sent EAP Response (code 2) ID 4 length 14
(0) eap: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
(0)     [eap] = ok
(0)   } # authorize = ok
(0) Found Auth-Type = eap
(0) # Executing group from file Freeradius/Conf/E_wpa2//sites-enabled/default
(0)   authenticate {
(0) eap: Peer sent packet with method EAP Identity (1)
(0) eap: Calling submodule eap_md5 to process data
(0) eap_md5: Issuing MD5 Challenge
(0) eap: Sending EAP Request (code 1) ID 5 length 22
(0) eap: EAP session adding &reply:State = 0xd41cd916d419ddea
(0)     [eap] = handled
(0)   } # authenticate = handled
(0) Using Post-Auth-Type Challenge
(0) # Executing group from file Freeradius/Conf/E_wpa2//sites-enabled/default
(0)   Challenge { ... } # empty sub-section is ignored
(0) Sent Access-Challenge Id 0 from 127.0.0.1:1812 to 127.0.0.1:51373 length 80
(0)   EAP-Message = 0x0105001604106b47ca70315d763efd72c805dd66e6cf
(0)   Message-Authenticator = 0x00000000000000000000000000000000
(0)   State = 0xd41cd916d419ddea6933cbebcf9f5f76
(0) Finished request
Waking up in 4.9 seconds.
(1) Received Access-Request Id 1 from 127.0.0.1:51373 to 127.0.0.1:1812 length 241
(1)   User-Name = "anonymous"
(1)   NAS-IP-Address = 127.0.0.1
(1)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(1)   NAS-Port-Type = Wireless-802.11
(1)   Service-Type = Framed-User
(1)   NAS-Port = 1
(1)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(1)   Connect-Info = "CONNECT 54Mbps 802.11g"
(1)   Acct-Session-Id = "98A06883BF9F9973"
(1)   Acct-Multi-Session-Id = "2E4AB55ED5E28AB9"
(1)   WLAN-Pairwise-Cipher = 1027076
(1)   WLAN-Group-Cipher = 1027076
(1)   WLAN-AKM-Suite = 1027073
(1)   WLAN-Group-Mgmt-Cipher = 1027078
(1)   Framed-MTU = 1400
(1)   EAP-Message = 0x02050007031915
(1)   State = 0xd41cd916d419ddea6933cbebcf9f5f76
(1)   Message-Authenticator = 0x28a32614df363cdbfdf387b4d31abc37
(1) session-state: No cached attributes
(1) # Executing section authorize from file Freeradius/Conf/E_wpa2//sites-enabled/default
(1)   authorize {
(1)     policy filter_username {
(1)       if (&User-Name) {
(1)       if (&User-Name)  -> TRUE
(1)       if (&User-Name)  {
(1)         if (&User-Name =~ / /) {
(1)         if (&User-Name =~ / /)  -> FALSE
(1)         if (&User-Name =~ /@[^@]*@/ ) {
(1)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(1)         if (&User-Name =~ /\.\./ ) {
(1)         if (&User-Name =~ /\.\./ )  -> FALSE
(1)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(1)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(1)         if (&User-Name =~ /\.$/)  {
(1)         if (&User-Name =~ /\.$/)   -> FALSE
(1)         if (&User-Name =~ /@\./)  {
(1)         if (&User-Name =~ /@\./)   -> FALSE
(1)       } # if (&User-Name)  = notfound
(1)     } # policy filter_username = notfound
(1)     [preprocess] = ok
(1)     [chap] = noop
(1)     [mschap] = noop
(1)     [digest] = noop
(1) suffix: Checking for suffix after "@"
(1) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(1) suffix: No such realm "NULL"
(1)     [suffix] = noop
(1) eap: Peer sent EAP Response (code 2) ID 5 length 7
(1) eap: No EAP Start, assuming it's an on-going EAP conversation
(1)     [eap] = updated
(1)     [files] = noop
(1)     [expiration] = noop
(1)     [logintime] = noop
Not doing PAP as Auth-Type is already set.
(1)     [pap] = noop
(1)   } # authorize = updated
(1) Found Auth-Type = eap
(1) # Executing group from file Freeradius/Conf/E_wpa2//sites-enabled/default
(1)   authenticate {
(1) eap: Expiring EAP session with state 0xd41cd916d419ddea
(1) eap: Finished EAP session with state 0xd41cd916d419ddea
(1) eap: Previous EAP request found for state 0xd41cd916d419ddea, released from the list
(1) eap: Peer sent packet with method EAP NAK (3)
(1) eap: Found mutually acceptable type PEAP (25)
(1) eap: Calling submodule eap_peap to process data
(1) eap_peap: (TLS) Initiating new session
(1) eap: Sending EAP Request (code 1) ID 6 length 6
(1) eap: EAP session adding &reply:State = 0xd41cd916d51ac0ea
(1)     [eap] = handled
(1)   } # authenticate = handled
(1) Using Post-Auth-Type Challenge
(1) # Executing group from file Freeradius/Conf/E_wpa2//sites-enabled/default
(1)   Challenge { ... } # empty sub-section is ignored
(1) session-state: Saving cached attributes
(1)   Framed-MTU = 994
(1) Sent Access-Challenge Id 1 from 127.0.0.1:1812 to 127.0.0.1:51373 length 64
(1)   EAP-Message = 0x010600061920
(1)   Message-Authenticator = 0x00000000000000000000000000000000
(1)   State = 0xd41cd916d51ac0ea6933cbebcf9f5f76
(1) Finished request
Waking up in 4.9 seconds.
(2) Received Access-Request Id 2 from 127.0.0.1:51373 to 127.0.0.1:1812 length 476
(2)   User-Name = "anonymous"
(2)   NAS-IP-Address = 127.0.0.1
(2)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(2)   NAS-Port-Type = Wireless-802.11
(2)   Service-Type = Framed-User
(2)   NAS-Port = 1
(2)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(2)   Connect-Info = "CONNECT 54Mbps 802.11g"
(2)   Acct-Session-Id = "98A06883BF9F9973"
(2)   Acct-Multi-Session-Id = "2E4AB55ED5E28AB9"
(2)   WLAN-Pairwise-Cipher = 1027076
(2)   WLAN-Group-Cipher = 1027076
(2)   WLAN-AKM-Suite = 1027073
(2)   WLAN-Group-Mgmt-Cipher = 1027078
(2)   Framed-MTU = 1400
(2)   EAP-Message = 0x020600f21980000000e816030300e3010000df030300000002ecdc5d4f4210b28c949c16776aaef325e14562150267fac43ae3138b000076c02cc030c0adc024c028c00ac014c0afc05dc061c049c04dc02bc02fc0acc023c027c009c013c0aec05cc060c048c04c009dc09d003d0035c032c02ac00fc02ec026c005c0a1c05fc063c051c04bc04fc03d009cc09c003c002fc031c029c00ec02dc025c004c0a0c05ec062c050c04ac04ec03c00ff01000040000a0010000e001d001700180019001a001b001c000d001600140603050306010501040303030401030102030201000b00020100001600000017000000230000
(2)   State = 0xd41cd916d51ac0ea6933cbebcf9f5f76
(2)   Message-Authenticator = 0xec3920ac73e649584e02730b45ee5714
(2) Restoring &session-state
(2)   &session-state:Framed-MTU = 994
(2) # Executing section authorize from file Freeradius/Conf/E_wpa2//sites-enabled/default
(2)   authorize {
(2)     policy filter_username {
(2)       if (&User-Name) {
(2)       if (&User-Name)  -> TRUE
(2)       if (&User-Name)  {
(2)         if (&User-Name =~ / /) {
(2)         if (&User-Name =~ / /)  -> FALSE
(2)         if (&User-Name =~ /@[^@]*@/ ) {
(2)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(2)         if (&User-Name =~ /\.\./ ) {
(2)         if (&User-Name =~ /\.\./ )  -> FALSE
(2)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(2)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(2)         if (&User-Name =~ /\.$/)  {
(2)         if (&User-Name =~ /\.$/)   -> FALSE
(2)         if (&User-Name =~ /@\./)  {
(2)         if (&User-Name =~ /@\./)   -> FALSE
(2)       } # if (&User-Name)  = notfound
(2)     } # policy filter_username = notfound
(2)     [preprocess] = ok
(2)     [chap] = noop
(2)     [mschap] = noop
(2)     [digest] = noop
(2) suffix: Checking for suffix after "@"
(2) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(2) suffix: No such realm "NULL"
(2)     [suffix] = noop
(2) eap: Peer sent EAP Response (code 2) ID 6 length 242
(2) eap: Continuing tunnel setup
(2)     [eap] = ok
(2)   } # authorize = ok
(2) Found Auth-Type = eap
(2) # Executing group from file Freeradius/Conf/E_wpa2//sites-enabled/default
(2)   authenticate {
(2) eap: Expiring EAP session with state 0xd41cd916d51ac0ea
(2) eap: Finished EAP session with state 0xd41cd916d51ac0ea
(2) eap: Previous EAP request found for state 0xd41cd916d51ac0ea, released from the list
(2) eap: Peer sent packet with method EAP PEAP (25)
(2) eap: Calling submodule eap_peap to process data
(2) eap_peap: (TLS) EAP Peer says that the final record size will be 232 bytes
(2) eap_peap: (TLS) EAP Got all data (232 bytes)
(2) eap_peap: (TLS) Handshake state - before SSL initialization
(2) eap_peap: (TLS) Handshake state - Server before SSL initialization
(2) eap_peap: (TLS) Handshake state - Server before SSL initialization
(2) eap_peap: (TLS) recv TLS 1.3 Handshake, ClientHello
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read client hello
(2) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHello
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server hello
(2) eap_peap: (TLS) send TLS 1.2 Handshake, Certificate
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write certificate
(2) eap_peap: (TLS) send TLS 1.2 Handshake, ServerKeyExchange
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write key exchange
(2) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHelloDone
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server done
(2) eap_peap: (TLS) Server : Need to read more data: SSLv3/TLS write server done
(2) eap_peap: (TLS) In Handshake Phase
(2) eap: Sending EAP Request (code 1) ID 7 length 1004
(2) eap: EAP session adding &reply:State = 0xd41cd916d61bc0ea
(2)     [eap] = handled
(2)   } # authenticate = handled
(2) Using Post-Auth-Type Challenge
(2) # Executing group from file Freeradius/Conf/E_wpa2//sites-enabled/default
(2)   Challenge { ... } # empty sub-section is ignored
(2) session-state: Saving cached attributes
(2)   Framed-MTU = 994
(2)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(2)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(2)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(2)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(2)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(2) Sent Access-Challenge Id 2 from 127.0.0.1:1812 to 127.0.0.1:51373 length 1068
(2)   EAP-Message = 0x010703ec19c000000aac160303003d020000390303a3cca34d8400e50bfd06d3ae29aef67eb6ca3ef4909463d1cdbfdc330d79c2eb00c030000011ff01000100000b00040300010200170000160303092b0b0009270009240004203082041c30820304a003020102020101300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232303134323933385a170d3234303231383134323933385a307c310b3009060355040613024652310f300d06035504080c0652616469757331153013060355040a0c0c4578616d706c6520496e632e3123302106035504030c1a4578616d70
(2)   Message-Authenticator = 0x00000000000000000000000000000000
(2)   State = 0xd41cd916d61bc0ea6933cbebcf9f5f76
(2) Finished request
Waking up in 4.9 seconds.
(3) Received Access-Request Id 3 from 127.0.0.1:51373 to 127.0.0.1:1812 length 240
(3)   User-Name = "anonymous"
(3)   NAS-IP-Address = 127.0.0.1
(3)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(3)   NAS-Port-Type = Wireless-802.11
(3)   Service-Type = Framed-User
(3)   NAS-Port = 1
(3)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(3)   Connect-Info = "CONNECT 54Mbps 802.11g"
(3)   Acct-Session-Id = "98A06883BF9F9973"
(3)   Acct-Multi-Session-Id = "2E4AB55ED5E28AB9"
(3)   WLAN-Pairwise-Cipher = 1027076
(3)   WLAN-Group-Cipher = 1027076
(3)   WLAN-AKM-Suite = 1027073
(3)   WLAN-Group-Mgmt-Cipher = 1027078
(3)   Framed-MTU = 1400
(3)   EAP-Message = 0x020700061900
(3)   State = 0xd41cd916d61bc0ea6933cbebcf9f5f76
(3)   Message-Authenticator = 0x5cc2e19c2c486bd72a102c86ba0a8908
(3) Restoring &session-state
(3)   &session-state:Framed-MTU = 994
(3)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(3)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(3)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(3)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(3)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(3) # Executing section authorize from file Freeradius/Conf/E_wpa2//sites-enabled/default
(3)   authorize {
(3)     policy filter_username {
(3)       if (&User-Name) {
(3)       if (&User-Name)  -> TRUE
(3)       if (&User-Name)  {
(3)         if (&User-Name =~ / /) {
(3)         if (&User-Name =~ / /)  -> FALSE
(3)         if (&User-Name =~ /@[^@]*@/ ) {
(3)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(3)         if (&User-Name =~ /\.\./ ) {
(3)         if (&User-Name =~ /\.\./ )  -> FALSE
(3)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(3)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(3)         if (&User-Name =~ /\.$/)  {
(3)         if (&User-Name =~ /\.$/)   -> FALSE
(3)         if (&User-Name =~ /@\./)  {
(3)         if (&User-Name =~ /@\./)   -> FALSE
(3)       } # if (&User-Name)  = notfound
(3)     } # policy filter_username = notfound
(3)     [preprocess] = ok
(3)     [chap] = noop
(3)     [mschap] = noop
(3)     [digest] = noop
(3) suffix: Checking for suffix after "@"
(3) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(3) suffix: No such realm "NULL"
(3)     [suffix] = noop
(3) eap: Peer sent EAP Response (code 2) ID 7 length 6
(3) eap: Continuing tunnel setup
(3)     [eap] = ok
(3)   } # authorize = ok
(3) Found Auth-Type = eap
(3) # Executing group from file Freeradius/Conf/E_wpa2//sites-enabled/default
(3)   authenticate {
(3) eap: Expiring EAP session with state 0xd41cd916d61bc0ea
(3) eap: Finished EAP session with state 0xd41cd916d61bc0ea
(3) eap: Previous EAP request found for state 0xd41cd916d61bc0ea, released from the list
(3) eap: Peer sent packet with method EAP PEAP (25)
(3) eap: Calling submodule eap_peap to process data
(3) eap_peap: (TLS) Peer ACKed our handshake fragment
(3) eap: Sending EAP Request (code 1) ID 8 length 1000
(3) eap: EAP session adding &reply:State = 0xd41cd916d714c0ea
(3)     [eap] = handled
(3)   } # authenticate = handled
(3) Using Post-Auth-Type Challenge
(3) # Executing group from file Freeradius/Conf/E_wpa2//sites-enabled/default
(3)   Challenge { ... } # empty sub-section is ignored
(3) session-state: Saving cached attributes
(3)   Framed-MTU = 994
(3)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(3)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(3)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(3)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(3)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(3) Sent Access-Challenge Id 3 from 127.0.0.1:1812 to 127.0.0.1:51373 length 1064
(3)   EAP-Message = 0x010803e81940913833b443f17f8eb51b1830cd4af89799060330d420545419478127696df2da82cd7b9125c49675038f4cb60c47941dc0f5153fd87448f0374dde094880cfbc946d6b3dea8212d61307b398635f56a4a148449d31f5d153c0ec3cff4a558f63abdfc2851153ca51191af3e00f81ecadd7bdfb92106b8f86a51bad2fa680f19319c1ee5ca8835e244842d27fd749b40004fe308204fa308203e2a0030201020214281bc263084bef55e3bf048bdc422fa2cfde27aa300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232303134323933315a170d32343032
(3)   Message-Authenticator = 0x00000000000000000000000000000000
(3)   State = 0xd41cd916d714c0ea6933cbebcf9f5f76
(3) Finished request
Waking up in 4.4 seconds.
(4) Received Access-Request Id 4 from 127.0.0.1:51373 to 127.0.0.1:1812 length 240
(4)   User-Name = "anonymous"
(4)   NAS-IP-Address = 127.0.0.1
(4)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(4)   NAS-Port-Type = Wireless-802.11
(4)   Service-Type = Framed-User
(4)   NAS-Port = 1
(4)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(4)   Connect-Info = "CONNECT 54Mbps 802.11g"
(4)   Acct-Session-Id = "98A06883BF9F9973"
(4)   Acct-Multi-Session-Id = "2E4AB55ED5E28AB9"
(4)   WLAN-Pairwise-Cipher = 1027076
(4)   WLAN-Group-Cipher = 1027076
(4)   WLAN-AKM-Suite = 1027073
(4)   WLAN-Group-Mgmt-Cipher = 1027078
(4)   Framed-MTU = 1400
(4)   EAP-Message = 0x020800061900
(4)   State = 0xd41cd916d714c0ea6933cbebcf9f5f76
(4)   Message-Authenticator = 0xcd27e33fd039ec9070fc53ec260df368
(4) Restoring &session-state
(4)   &session-state:Framed-MTU = 994
(4)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(4) # Executing section authorize from file Freeradius/Conf/E_wpa2//sites-enabled/default
(4)   authorize {
(4)     policy filter_username {
(4)       if (&User-Name) {
(4)       if (&User-Name)  -> TRUE
(4)       if (&User-Name)  {
(4)         if (&User-Name =~ / /) {
(4)         if (&User-Name =~ / /)  -> FALSE
(4)         if (&User-Name =~ /@[^@]*@/ ) {
(4)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(4)         if (&User-Name =~ /\.\./ ) {
(4)         if (&User-Name =~ /\.\./ )  -> FALSE
(4)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(4)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(4)         if (&User-Name =~ /\.$/)  {
(4)         if (&User-Name =~ /\.$/)   -> FALSE
(4)         if (&User-Name =~ /@\./)  {
(4)         if (&User-Name =~ /@\./)   -> FALSE
(4)       } # if (&User-Name)  = notfound
(4)     } # policy filter_username = notfound
(4)     [preprocess] = ok
(4)     [chap] = noop
(4)     [mschap] = noop
(4)     [digest] = noop
(4) suffix: Checking for suffix after "@"
(4) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(4) suffix: No such realm "NULL"
(4)     [suffix] = noop
(4) eap: Peer sent EAP Response (code 2) ID 8 length 6
(4) eap: Continuing tunnel setup
(4)     [eap] = ok
(4)   } # authorize = ok
(4) Found Auth-Type = eap
(4) # Executing group from file Freeradius/Conf/E_wpa2//sites-enabled/default
(4)   authenticate {
(4) eap: Expiring EAP session with state 0xd41cd916d714c0ea
(4) eap: Finished EAP session with state 0xd41cd916d714c0ea
(4) eap: Previous EAP request found for state 0xd41cd916d714c0ea, released from the list
(4) eap: Peer sent packet with method EAP PEAP (25)
(4) eap: Calling submodule eap_peap to process data
(4) eap_peap: (TLS) Peer ACKed our handshake fragment
(4) eap: Sending EAP Request (code 1) ID 9 length 750
(4) eap: EAP session adding &reply:State = 0xd41cd916d015c0ea
(4)     [eap] = handled
(4)   } # authenticate = handled
(4) Using Post-Auth-Type Challenge
(4) # Executing group from file Freeradius/Conf/E_wpa2//sites-enabled/default
(4)   Challenge { ... } # empty sub-section is ignored
(4) session-state: Saving cached attributes
(4)   Framed-MTU = 994
(4)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(4)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(4)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(4)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(4)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(4) Sent Access-Challenge Id 4 from 127.0.0.1:1812 to 127.0.0.1:51373 length 812
(4)   EAP-Message = 0x010902ee1900161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f726974798214281bc263084bef55e3bf048bdc422fa2cfde27aa300f0603551d130101ff040530030101ff30360603551d1f042f302d302ba029a0278625687474703a2f2f7777772e6578616d706c652e6f72672f6578616d706c655f63612e63726c300d06092a864886f70d01010b05000382010100747b534692263eb34b830d3b29c86ca7000c7d61e341b99093fda2b26480553138316b06b5cb9def1ab6116791a97b785529008677afbf6aedc3f37b9387a646bd7fd4d019a287fdea5745d91441b3ca219febbfb1da0dbc9a83293a6e9cb3f3cd80544580baee20a408d77e3640822d2821b95c93fa6f564ea303f204dd43edbb89497f3595bd7271b577b4469f75e3e9f4058fb32cfcf475f0f5abe4584787b1c1aa14d07ac2775c6cb5d5212e1cee4902c2b8c7d2e82628f70ca062ae6cc483803d
(4)   Message-Authenticator = 0x00000000000000000000000000000000
(4)   State = 0xd41cd916d015c0ea6933cbebcf9f5f76
(4) Finished request
Waking up in 4.0 seconds.
(5) Received Access-Request Id 5 from 127.0.0.1:51373 to 127.0.0.1:1812 length 337
(5)   User-Name = "anonymous"
(5)   NAS-IP-Address = 127.0.0.1
(5)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(5)   NAS-Port-Type = Wireless-802.11
(5)   Service-Type = Framed-User
(5)   NAS-Port = 1
(5)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(5)   Connect-Info = "CONNECT 54Mbps 802.11g"
(5)   Acct-Session-Id = "98A06883BF9F9973"
(5)   Acct-Multi-Session-Id = "2E4AB55ED5E28AB9"
(5)   WLAN-Pairwise-Cipher = 1027076
(5)   WLAN-Group-Cipher = 1027076
(5)   WLAN-AKM-Suite = 1027073
(5)   WLAN-Group-Mgmt-Cipher = 1027078
(5)   Framed-MTU = 1400
(5)   EAP-Message = 0x0209006719800000005d16030300251000002120bfb5c095aa564df02eb17b5e930619cf63bbbe72a652b15de7bda2274672292b14030300010116030300280000000000000000e98edfecf891dfe00064a61fb9455ea5a3347bb6a02ace7e597d01985b590b36
(5)   State = 0xd41cd916d015c0ea6933cbebcf9f5f76
(5)   Message-Authenticator = 0xda61a7bccaecca0f4499fb2ad9fbcd13
(5) Restoring &session-state
(5)   &session-state:Framed-MTU = 994
(5)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(5) # Executing section authorize from file Freeradius/Conf/E_wpa2//sites-enabled/default
(5)   authorize {
(5)     policy filter_username {
(5)       if (&User-Name) {
(5)       if (&User-Name)  -> TRUE
(5)       if (&User-Name)  {
(5)         if (&User-Name =~ / /) {
(5)         if (&User-Name =~ / /)  -> FALSE
(5)         if (&User-Name =~ /@[^@]*@/ ) {
(5)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(5)         if (&User-Name =~ /\.\./ ) {
(5)         if (&User-Name =~ /\.\./ )  -> FALSE
(5)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(5)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(5)         if (&User-Name =~ /\.$/)  {
(5)         if (&User-Name =~ /\.$/)   -> FALSE
(5)         if (&User-Name =~ /@\./)  {
(5)         if (&User-Name =~ /@\./)   -> FALSE
(5)       } # if (&User-Name)  = notfound
(5)     } # policy filter_username = notfound
(5)     [preprocess] = ok
(5)     [chap] = noop
(5)     [mschap] = noop
(5)     [digest] = noop
(5) suffix: Checking for suffix after "@"
(5) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(5) suffix: No such realm "NULL"
(5)     [suffix] = noop
(5) eap: Peer sent EAP Response (code 2) ID 9 length 103
(5) eap: Continuing tunnel setup
(5)     [eap] = ok
(5)   } # authorize = ok
(5) Found Auth-Type = eap
(5) # Executing group from file Freeradius/Conf/E_wpa2//sites-enabled/default
(5)   authenticate {
(5) eap: Expiring EAP session with state 0xd41cd916d015c0ea
(5) eap: Finished EAP session with state 0xd41cd916d015c0ea
(5) eap: Previous EAP request found for state 0xd41cd916d015c0ea, released from the list
(5) eap: Peer sent packet with method EAP PEAP (25)
(5) eap: Calling submodule eap_peap to process data
(5) eap_peap: (TLS) EAP Peer says that the final record size will be 93 bytes
(5) eap_peap: (TLS) EAP Got all data (93 bytes)
(5) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server done
(5) eap_peap: (TLS) recv TLS 1.2 Handshake, ClientKeyExchange
(5) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read client key exchange
(5) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read change cipher spec
(5) eap_peap: (TLS) recv TLS 1.2 Handshake, Finished
(5) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read finished
(5) eap_peap: (TLS) send TLS 1.2 ChangeCipherSpec
(5) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write change cipher spec
(5) eap_peap: (TLS) send TLS 1.2 Handshake, Finished
(5) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write finished
(5) eap_peap: (TLS) Handshake state - SSL negotiation finished successfully
(5) eap_peap: (TLS) Connection Established
(5) eap_peap:   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(5) eap_peap:   TLS-Session-Version = "TLS 1.2"
(5) eap: Sending EAP Request (code 1) ID 10 length 57
(5) eap: EAP session adding &reply:State = 0xd41cd916d116c0ea
(5)     [eap] = handled
(5)   } # authenticate = handled
(5) Using Post-Auth-Type Challenge
(5) # Executing group from file Freeradius/Conf/E_wpa2//sites-enabled/default
(5)   Challenge { ... } # empty sub-section is ignored
(5) session-state: Saving cached attributes
(5)   Framed-MTU = 994
(5)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(5)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(5)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(5)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(5)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(5)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(5)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(5)   TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(5)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(5)   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(5)   TLS-Session-Version = "TLS 1.2"
(5) Sent Access-Challenge Id 5 from 127.0.0.1:1812 to 127.0.0.1:51373 length 115
(5)   EAP-Message = 0x010a003919001403030001011603030028375c8922ea3f0a2b461cb57fdff2d08f2fd65a02c74088ee4783ff64e847f5b70bec494f7dd593f4
(5)   Message-Authenticator = 0x00000000000000000000000000000000
(5)   State = 0xd41cd916d116c0ea6933cbebcf9f5f76
(5) Finished request
Waking up in 3.3 seconds.
(6) Received Access-Request Id 6 from 127.0.0.1:51373 to 127.0.0.1:1812 length 240
(6)   User-Name = "anonymous"
(6)   NAS-IP-Address = 127.0.0.1
(6)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(6)   NAS-Port-Type = Wireless-802.11
(6)   Service-Type = Framed-User
(6)   NAS-Port = 1
(6)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(6)   Connect-Info = "CONNECT 54Mbps 802.11g"
(6)   Acct-Session-Id = "98A06883BF9F9973"
(6)   Acct-Multi-Session-Id = "2E4AB55ED5E28AB9"
(6)   WLAN-Pairwise-Cipher = 1027076
(6)   WLAN-Group-Cipher = 1027076
(6)   WLAN-AKM-Suite = 1027073
(6)   WLAN-Group-Mgmt-Cipher = 1027078
(6)   Framed-MTU = 1400
(6)   EAP-Message = 0x020a00061900
(6)   State = 0xd41cd916d116c0ea6933cbebcf9f5f76
(6)   Message-Authenticator = 0xbb1fe3511dfc91eb99cb7dfd4c006e1e
(6) Restoring &session-state
(6)   &session-state:Framed-MTU = 994
(6)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(6)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(6)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(6)   &session-state:TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(6)   &session-state:TLS-Session-Version = "TLS 1.2"
(6) # Executing section authorize from file Freeradius/Conf/E_wpa2//sites-enabled/default
(6)   authorize {
(6)     policy filter_username {
(6)       if (&User-Name) {
(6)       if (&User-Name)  -> TRUE
(6)       if (&User-Name)  {
(6)         if (&User-Name =~ / /) {
(6)         if (&User-Name =~ / /)  -> FALSE
(6)         if (&User-Name =~ /@[^@]*@/ ) {
(6)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(6)         if (&User-Name =~ /\.\./ ) {
(6)         if (&User-Name =~ /\.\./ )  -> FALSE
(6)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(6)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(6)         if (&User-Name =~ /\.$/)  {
(6)         if (&User-Name =~ /\.$/)   -> FALSE
(6)         if (&User-Name =~ /@\./)  {
(6)         if (&User-Name =~ /@\./)   -> FALSE
(6)       } # if (&User-Name)  = notfound
(6)     } # policy filter_username = notfound
(6)     [preprocess] = ok
(6)     [chap] = noop
(6)     [mschap] = noop
(6)     [digest] = noop
(6) suffix: Checking for suffix after "@"
(6) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(6) suffix: No such realm "NULL"
(6)     [suffix] = noop
(6) eap: Peer sent EAP Response (code 2) ID 10 length 6
(6) eap: Continuing tunnel setup
(6)     [eap] = ok
(6)   } # authorize = ok
(6) Found Auth-Type = eap
(6) # Executing group from file Freeradius/Conf/E_wpa2//sites-enabled/default
(6)   authenticate {
(6) eap: Expiring EAP session with state 0xd41cd916d116c0ea
(6) eap: Finished EAP session with state 0xd41cd916d116c0ea
(6) eap: Previous EAP request found for state 0xd41cd916d116c0ea, released from the list
(6) eap: Peer sent packet with method EAP PEAP (25)
(6) eap: Calling submodule eap_peap to process data
(6) eap_peap: (TLS) Peer ACKed our handshake fragment.  handshake is finished
(6) eap_peap: Session established.  Decoding tunneled attributes
(6) eap_peap: PEAP state TUNNEL ESTABLISHED
(6) eap: Sending EAP Request (code 1) ID 11 length 40
(6) eap: EAP session adding &reply:State = 0xd41cd916d217c0ea
(6)     [eap] = handled
(6)   } # authenticate = handled
(6) Using Post-Auth-Type Challenge
(6) # Executing group from file Freeradius/Conf/E_wpa2//sites-enabled/default
(6)   Challenge { ... } # empty sub-section is ignored
(6) session-state: Saving cached attributes
(6)   Framed-MTU = 994
(6)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(6)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(6)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(6)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(6)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(6)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(6)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(6)   TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(6)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(6)   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(6)   TLS-Session-Version = "TLS 1.2"
(6) Sent Access-Challenge Id 6 from 127.0.0.1:1812 to 127.0.0.1:51373 length 98
(6)   EAP-Message = 0x010b00281900170303001d375c8922ea3f0a2ccde70e17aebf84ba5c270ed803225bafc125520185
(6)   Message-Authenticator = 0x00000000000000000000000000000000
(6)   State = 0xd41cd916d217c0ea6933cbebcf9f5f76
(6) Finished request
Waking up in 3.0 seconds.
(7) Received Access-Request Id 7 from 127.0.0.1:51373 to 127.0.0.1:1812 length 285
(7)   User-Name = "anonymous"
(7)   NAS-IP-Address = 127.0.0.1
(7)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(7)   NAS-Port-Type = Wireless-802.11
(7)   Service-Type = Framed-User
(7)   NAS-Port = 1
(7)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(7)   Connect-Info = "CONNECT 54Mbps 802.11g"
(7)   Acct-Session-Id = "98A06883BF9F9973"
(7)   Acct-Multi-Session-Id = "2E4AB55ED5E28AB9"
(7)   WLAN-Pairwise-Cipher = 1027076
(7)   WLAN-Group-Cipher = 1027076
(7)   WLAN-AKM-Suite = 1027073
(7)   WLAN-Group-Mgmt-Cipher = 1027078
(7)   Framed-MTU = 1400
(7)   EAP-Message = 0x020b00331900170303002800000000000000010c140e669862eebf4094c647d571708a69bee3e7daa1ef4d7e3791305e750a27
(7)   State = 0xd41cd916d217c0ea6933cbebcf9f5f76
(7)   Message-Authenticator = 0x64af3013f2eec96b574ca7c5ff8b2aa3
(7) Restoring &session-state
(7)   &session-state:Framed-MTU = 994
(7)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(7)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(7)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(7)   &session-state:TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(7)   &session-state:TLS-Session-Version = "TLS 1.2"
(7) # Executing section authorize from file Freeradius/Conf/E_wpa2//sites-enabled/default
(7)   authorize {
(7)     policy filter_username {
(7)       if (&User-Name) {
(7)       if (&User-Name)  -> TRUE
(7)       if (&User-Name)  {
(7)         if (&User-Name =~ / /) {
(7)         if (&User-Name =~ / /)  -> FALSE
(7)         if (&User-Name =~ /@[^@]*@/ ) {
(7)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(7)         if (&User-Name =~ /\.\./ ) {
(7)         if (&User-Name =~ /\.\./ )  -> FALSE
(7)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(7)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(7)         if (&User-Name =~ /\.$/)  {
(7)         if (&User-Name =~ /\.$/)   -> FALSE
(7)         if (&User-Name =~ /@\./)  {
(7)         if (&User-Name =~ /@\./)   -> FALSE
(7)       } # if (&User-Name)  = notfound
(7)     } # policy filter_username = notfound
(7)     [preprocess] = ok
(7)     [chap] = noop
(7)     [mschap] = noop
(7)     [digest] = noop
(7) suffix: Checking for suffix after "@"
(7) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(7) suffix: No such realm "NULL"
(7)     [suffix] = noop
(7) eap: Peer sent EAP Response (code 2) ID 11 length 51
(7) eap: Continuing tunnel setup
(7)     [eap] = ok
(7)   } # authorize = ok
(7) Found Auth-Type = eap
(7) # Executing group from file Freeradius/Conf/E_wpa2//sites-enabled/default
(7)   authenticate {
(7) eap: Expiring EAP session with state 0xd41cd916d217c0ea
(7) eap: Finished EAP session with state 0xd41cd916d217c0ea
(7) eap: Previous EAP request found for state 0xd41cd916d217c0ea, released from the list
(7) eap: Peer sent packet with method EAP PEAP (25)
(7) eap: Calling submodule eap_peap to process data
(7) eap_peap: (TLS) EAP Done initial handshake
(7) eap_peap: Session established.  Decoding tunneled attributes
(7) eap_peap: PEAP state WAITING FOR INNER IDENTITY
(7) eap_peap: Identity - bob@example.org
(7) eap_peap: Got inner identity 'bob@example.org'
(7) eap_peap: Setting default EAP type for tunneled EAP session
(7) eap_peap: Got tunneled request
(7) eap_peap:   EAP-Message = 0x020b001401626f62406578616d706c652e6f7267
(7) eap_peap: Setting User-Name to bob@example.org
(7) eap_peap: Sending tunneled request to inner-tunnel
(7) eap_peap:   EAP-Message = 0x020b001401626f62406578616d706c652e6f7267
(7) eap_peap:   FreeRADIUS-Proxied-To = 127.0.0.1
(7) eap_peap:   User-Name = "bob@example.org"
(7) Virtual server inner-tunnel received request
(7)   EAP-Message = 0x020b001401626f62406578616d706c652e6f7267
(7)   FreeRADIUS-Proxied-To = 127.0.0.1
(7)   User-Name = "bob@example.org"
(7) server inner-tunnel {
(7)   # Executing section authorize from file Freeradius/Conf/E_wpa2//sites-enabled/inner-tunnel
(7)     authorize {
(7)       policy filter_username {
(7)         if (&User-Name) {
(7)         if (&User-Name)  -> TRUE
(7)         if (&User-Name)  {
(7)           if (&User-Name =~ / /) {
(7)           if (&User-Name =~ / /)  -> FALSE
(7)           if (&User-Name =~ /@[^@]*@/ ) {
(7)           if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(7)           if (&User-Name =~ /\.\./ ) {
(7)           if (&User-Name =~ /\.\./ )  -> FALSE
(7)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(7)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(7)           if (&User-Name =~ /\.$/)  {
(7)           if (&User-Name =~ /\.$/)   -> FALSE
(7)           if (&User-Name =~ /@\./)  {
(7)           if (&User-Name =~ /@\./)   -> FALSE
(7)         } # if (&User-Name)  = notfound
(7)       } # policy filter_username = notfound
(7)       [chap] = noop
(7)       [mschap] = noop
(7) suffix: Checking for suffix after "@"
(7) suffix: Looking up realm "example.org" for User-Name = "bob@example.org"
(7) suffix: No such realm "example.org"
(7)       [suffix] = noop
(7)       update control {
(7)         &Proxy-To-Realm := LOCAL
(7)       } # update control = noop
(7) eap: Peer sent EAP Response (code 2) ID 11 length 20
(7) eap: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
(7)       [eap] = ok
(7)     } # authorize = ok
(7)   Found Auth-Type = eap
(7)   # Executing group from file Freeradius/Conf/E_wpa2//sites-enabled/inner-tunnel
(7)     authenticate {
(7) eap: Peer sent packet with method EAP Identity (1)
(7) eap: Calling submodule eap_mschapv2 to process data
(7) eap_mschapv2: Issuing Challenge
(7) eap: Sending EAP Request (code 1) ID 12 length 43
(7) eap: EAP session adding &reply:State = 0x15c0413515cc5b8a
(7)       [eap] = handled
(7)     } # authenticate = handled
(7) } # server inner-tunnel
(7) Virtual server sending reply
(7)   EAP-Message = 0x010c002b1a010c00261064fa0d85cd30844cad6e6f86768301b8667265657261646975732d332e302e3236
(7)   Message-Authenticator = 0x00000000000000000000000000000000
(7)   State = 0x15c0413515cc5b8ae4535537575a6ec0
(7) eap_peap: Got tunneled reply code 11
(7) eap_peap:   EAP-Message = 0x010c002b1a010c00261064fa0d85cd30844cad6e6f86768301b8667265657261646975732d332e302e3236
(7) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(7) eap_peap:   State = 0x15c0413515cc5b8ae4535537575a6ec0
(7) eap_peap: Got tunneled reply RADIUS code 11
(7) eap_peap:   EAP-Message = 0x010c002b1a010c00261064fa0d85cd30844cad6e6f86768301b8667265657261646975732d332e302e3236
(7) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(7) eap_peap:   State = 0x15c0413515cc5b8ae4535537575a6ec0
(7) eap_peap: Got tunneled Access-Challenge
(7) eap: Sending EAP Request (code 1) ID 12 length 74
(7) eap: EAP session adding &reply:State = 0xd41cd916d310c0ea
(7)     [eap] = handled
(7)   } # authenticate = handled
(7) Using Post-Auth-Type Challenge
(7) # Executing group from file Freeradius/Conf/E_wpa2//sites-enabled/default
(7)   Challenge { ... } # empty sub-section is ignored
(7) session-state: Saving cached attributes
(7)   Framed-MTU = 994
(7)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(7)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(7)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(7)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(7)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(7)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(7)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(7)   TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(7)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(7)   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(7)   TLS-Session-Version = "TLS 1.2"
(7) Sent Access-Challenge Id 7 from 127.0.0.1:1812 to 127.0.0.1:51373 length 132
(7)   EAP-Message = 0x010c004a1900170303003f375c8922ea3f0a2df3efb4e9997f028d5913ac33babeb88ac27072621fc89a7093cb97fc311330ab7d03403890998c3934809d09a07c235333c5779410b078
(7)   Message-Authenticator = 0x00000000000000000000000000000000
(7)   State = 0xd41cd916d310c0ea6933cbebcf9f5f76
(7) Finished request
Waking up in 3.0 seconds.
(8) Received Access-Request Id 8 from 127.0.0.1:51373 to 127.0.0.1:1812 length 339
(8)   User-Name = "anonymous"
(8)   NAS-IP-Address = 127.0.0.1
(8)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(8)   NAS-Port-Type = Wireless-802.11
(8)   Service-Type = Framed-User
(8)   NAS-Port = 1
(8)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(8)   Connect-Info = "CONNECT 54Mbps 802.11g"
(8)   Acct-Session-Id = "98A06883BF9F9973"
(8)   Acct-Multi-Session-Id = "2E4AB55ED5E28AB9"
(8)   WLAN-Pairwise-Cipher = 1027076
(8)   WLAN-Group-Cipher = 1027076
(8)   WLAN-AKM-Suite = 1027073
(8)   WLAN-Group-Mgmt-Cipher = 1027078
(8)   Framed-MTU = 1400
(8)   EAP-Message = 0x020c00691900170303005e0000000000000002c8c7f0b74320e5d8fb7d081b593aa935009b25b4ba5b8dca5af238806d0f832c146f7d379712d531e5533929b89372880ecf0609d8899d5ac7d33e8876a1040b39e794d22af97786bd4e6b88270392f703ac693337d1
(8)   State = 0xd41cd916d310c0ea6933cbebcf9f5f76
(8)   Message-Authenticator = 0x791199fa7cac18aba6b92121f2dd3891
(8) Restoring &session-state
(8)   &session-state:Framed-MTU = 994
(8)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(8)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(8)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(8)   &session-state:TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(8)   &session-state:TLS-Session-Version = "TLS 1.2"
(8) # Executing section authorize from file Freeradius/Conf/E_wpa2//sites-enabled/default
(8)   authorize {
(8)     policy filter_username {
(8)       if (&User-Name) {
(8)       if (&User-Name)  -> TRUE
(8)       if (&User-Name)  {
(8)         if (&User-Name =~ / /) {
(8)         if (&User-Name =~ / /)  -> FALSE
(8)         if (&User-Name =~ /@[^@]*@/ ) {
(8)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(8)         if (&User-Name =~ /\.\./ ) {
(8)         if (&User-Name =~ /\.\./ )  -> FALSE
(8)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(8)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(8)         if (&User-Name =~ /\.$/)  {
(8)         if (&User-Name =~ /\.$/)   -> FALSE
(8)         if (&User-Name =~ /@\./)  {
(8)         if (&User-Name =~ /@\./)   -> FALSE
(8)       } # if (&User-Name)  = notfound
(8)     } # policy filter_username = notfound
(8)     [preprocess] = ok
(8)     [chap] = noop
(8)     [mschap] = noop
(8)     [digest] = noop
(8) suffix: Checking for suffix after "@"
(8) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(8) suffix: No such realm "NULL"
(8)     [suffix] = noop
(8) eap: Peer sent EAP Response (code 2) ID 12 length 105
(8) eap: Continuing tunnel setup
(8)     [eap] = ok
(8)   } # authorize = ok
(8) Found Auth-Type = eap
(8) # Executing group from file Freeradius/Conf/E_wpa2//sites-enabled/default
(8)   authenticate {
(8) eap: Expiring EAP session with state 0x15c0413515cc5b8a
(8) eap: Finished EAP session with state 0xd41cd916d310c0ea
(8) eap: Previous EAP request found for state 0xd41cd916d310c0ea, released from the list
(8) eap: Peer sent packet with method EAP PEAP (25)
(8) eap: Calling submodule eap_peap to process data
(8) eap_peap: (TLS) EAP Done initial handshake
(8) eap_peap: Session established.  Decoding tunneled attributes
(8) eap_peap: PEAP state phase2
(8) eap_peap: EAP method MSCHAPv2 (26)
(8) eap_peap: Got tunneled request
(8) eap_peap:   EAP-Message = 0x020c004a1a020c004531bc5de7aebb7e7b114a12d03a2e1f343d000000000000000019d7ce15dea353d20529e4cfacda03c6faa32913414ba9c300626f62406578616d706c652e6f7267
(8) eap_peap: Setting User-Name to bob@example.org
(8) eap_peap: Sending tunneled request to inner-tunnel
(8) eap_peap:   EAP-Message = 0x020c004a1a020c004531bc5de7aebb7e7b114a12d03a2e1f343d000000000000000019d7ce15dea353d20529e4cfacda03c6faa32913414ba9c300626f62406578616d706c652e6f7267
(8) eap_peap:   FreeRADIUS-Proxied-To = 127.0.0.1
(8) eap_peap:   User-Name = "bob@example.org"
(8) eap_peap:   State = 0x15c0413515cc5b8ae4535537575a6ec0
(8) Virtual server inner-tunnel received request
(8)   EAP-Message = 0x020c004a1a020c004531bc5de7aebb7e7b114a12d03a2e1f343d000000000000000019d7ce15dea353d20529e4cfacda03c6faa32913414ba9c300626f62406578616d706c652e6f7267
(8)   FreeRADIUS-Proxied-To = 127.0.0.1
(8)   User-Name = "bob@example.org"
(8)   State = 0x15c0413515cc5b8ae4535537575a6ec0
(8) server inner-tunnel {
(8)   session-state: No cached attributes
(8)   # Executing section authorize from file Freeradius/Conf/E_wpa2//sites-enabled/inner-tunnel
(8)     authorize {
(8)       policy filter_username {
(8)         if (&User-Name) {
(8)         if (&User-Name)  -> TRUE
(8)         if (&User-Name)  {
(8)           if (&User-Name =~ / /) {
(8)           if (&User-Name =~ / /)  -> FALSE
(8)           if (&User-Name =~ /@[^@]*@/ ) {
(8)           if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(8)           if (&User-Name =~ /\.\./ ) {
(8)           if (&User-Name =~ /\.\./ )  -> FALSE
(8)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(8)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(8)           if (&User-Name =~ /\.$/)  {
(8)           if (&User-Name =~ /\.$/)   -> FALSE
(8)           if (&User-Name =~ /@\./)  {
(8)           if (&User-Name =~ /@\./)   -> FALSE
(8)         } # if (&User-Name)  = notfound
(8)       } # policy filter_username = notfound
(8)       [chap] = noop
(8)       [mschap] = noop
(8) suffix: Checking for suffix after "@"
(8) suffix: Looking up realm "example.org" for User-Name = "bob@example.org"
(8) suffix: No such realm "example.org"
(8)       [suffix] = noop
(8)       update control {
(8)         &Proxy-To-Realm := LOCAL
(8)       } # update control = noop
(8) eap: Peer sent EAP Response (code 2) ID 12 length 74
(8) eap: No EAP Start, assuming it's an on-going EAP conversation
(8)       [eap] = updated
(8) files: users: Matched entry bob@example.org at line 1
(8) files: EXPAND Hello, %{User-Name}
(8) files:    --> Hello, bob@example.org
(8)       [files] = ok
(8)       [expiration] = noop
(8)       [logintime] = noop
(8) pap: WARNING: Auth-Type already set.  Not setting to PAP
(8)       [pap] = noop
(8)     } # authorize = updated
(8)   Found Auth-Type = eap
(8)   # Executing group from file Freeradius/Conf/E_wpa2//sites-enabled/inner-tunnel
(8)     authenticate {
(8) eap: Expiring EAP session with state 0x15c0413515cc5b8a
(8) eap: Finished EAP session with state 0x15c0413515cc5b8a
(8) eap: Previous EAP request found for state 0x15c0413515cc5b8a, released from the list
(8) eap: Peer sent packet with method EAP MSCHAPv2 (26)
(8) eap: Calling submodule eap_mschapv2 to process data
(8) eap_mschapv2: # Executing group from file Freeradius/Conf/E_wpa2//sites-enabled/inner-tunnel
(8) eap_mschapv2:   authenticate {
(8) mschap: Found Cleartext-Password, hashing to create NT-Password
(8) mschap: Creating challenge hash with username: bob@example.org
(8) mschap: Client is using MS-CHAPv2
(8) mschap: Adding MS-CHAPv2 MPPE keys
(8) eap_mschapv2:     [mschap] = ok
(8) eap_mschapv2:   } # authenticate = ok
(8) eap_mschapv2: MSCHAP Success
(8) eap: Sending EAP Request (code 1) ID 13 length 51
(8) eap: EAP session adding &reply:State = 0x15c0413514cd5b8a
(8)       [eap] = handled
(8)     } # authenticate = handled
(8) } # server inner-tunnel
(8) Virtual server sending reply
(8)   Reply-Message = "Hello, bob@example.org"
(8)   EAP-Message = 0x010d00331a030c002e533d33424645364332323243424343353630353546463932393541384138334430343245384243443939
(8)   Message-Authenticator = 0x00000000000000000000000000000000
(8)   State = 0x15c0413514cd5b8ae4535537575a6ec0
(8) eap_peap: Got tunneled reply code 11
(8) eap_peap:   Reply-Message = "Hello, bob@example.org"
(8) eap_peap:   EAP-Message = 0x010d00331a030c002e533d33424645364332323243424343353630353546463932393541384138334430343245384243443939
(8) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(8) eap_peap:   State = 0x15c0413514cd5b8ae4535537575a6ec0
(8) eap_peap: Got tunneled reply RADIUS code 11
(8) eap_peap:   Reply-Message = "Hello, bob@example.org"
(8) eap_peap:   EAP-Message = 0x010d00331a030c002e533d33424645364332323243424343353630353546463932393541384138334430343245384243443939
(8) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(8) eap_peap:   State = 0x15c0413514cd5b8ae4535537575a6ec0
(8) eap_peap: Got tunneled Access-Challenge
(8) eap: Sending EAP Request (code 1) ID 13 length 82
(8) eap: EAP session adding &reply:State = 0xd41cd916dc11c0ea
(8)     [eap] = handled
(8)   } # authenticate = handled
(8) Using Post-Auth-Type Challenge
(8) # Executing group from file Freeradius/Conf/E_wpa2//sites-enabled/default
(8)   Challenge { ... } # empty sub-section is ignored
(8) session-state: Saving cached attributes
(8)   Framed-MTU = 994
(8)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(8)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(8)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(8)   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(8)   TLS-Session-Version = "TLS 1.2"
(8) Sent Access-Challenge Id 8 from 127.0.0.1:1812 to 127.0.0.1:51373 length 140
(8)   EAP-Message = 0x010d005219001703030047375c8922ea3f0a2ecb2bf344ddd7ac02661b5206cb338dc8893ea4335c1ce6b696ac10aa4af0a826d962a1279e9a0317b1cf5b604fe6d119ea7bd4bed0bff3fb9198f96c10c12b
(8)   Message-Authenticator = 0x00000000000000000000000000000000
(8)   State = 0xd41cd916dc11c0ea6933cbebcf9f5f76
(8) Finished request
Waking up in 2.7 seconds.
(9) Received Access-Request Id 9 from 127.0.0.1:51373 to 127.0.0.1:1812 length 271
(9)   User-Name = "anonymous"
(9)   NAS-IP-Address = 127.0.0.1
(9)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(9)   NAS-Port-Type = Wireless-802.11
(9)   Service-Type = Framed-User
(9)   NAS-Port = 1
(9)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(9)   Connect-Info = "CONNECT 54Mbps 802.11g"
(9)   Acct-Session-Id = "98A06883BF9F9973"
(9)   Acct-Multi-Session-Id = "2E4AB55ED5E28AB9"
(9)   WLAN-Pairwise-Cipher = 1027076
(9)   WLAN-Group-Cipher = 1027076
(9)   WLAN-AKM-Suite = 1027073
(9)   WLAN-Group-Mgmt-Cipher = 1027078
(9)   Framed-MTU = 1400
(9)   EAP-Message = 0x020d00251900170303001a000000000000000381f24f5b2f5dbf3cda946af9357c4f09e462
(9)   State = 0xd41cd916dc11c0ea6933cbebcf9f5f76
(9)   Message-Authenticator = 0xa4272966452540f9d880a95434b4aa13
(9) Restoring &session-state
(9)   &session-state:Framed-MTU = 994
(9)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(9)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(9)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(9)   &session-state:TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(9)   &session-state:TLS-Session-Version = "TLS 1.2"
(9) # Executing section authorize from file Freeradius/Conf/E_wpa2//sites-enabled/default
(9)   authorize {
(9)     policy filter_username {
(9)       if (&User-Name) {
(9)       if (&User-Name)  -> TRUE
(9)       if (&User-Name)  {
(9)         if (&User-Name =~ / /) {
(9)         if (&User-Name =~ / /)  -> FALSE
(9)         if (&User-Name =~ /@[^@]*@/ ) {
(9)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(9)         if (&User-Name =~ /\.\./ ) {
(9)         if (&User-Name =~ /\.\./ )  -> FALSE
(9)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(9)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(9)         if (&User-Name =~ /\.$/)  {
(9)         if (&User-Name =~ /\.$/)   -> FALSE
(9)         if (&User-Name =~ /@\./)  {
(9)         if (&User-Name =~ /@\./)   -> FALSE
(9)       } # if (&User-Name)  = notfound
(9)     } # policy filter_username = notfound
(9)     [preprocess] = ok
(9)     [chap] = noop
(9)     [mschap] = noop
(9)     [digest] = noop
(9) suffix: Checking for suffix after "@"
(9) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(9) suffix: No such realm "NULL"
(9)     [suffix] = noop
(9) eap: Peer sent EAP Response (code 2) ID 13 length 37
(9) eap: Continuing tunnel setup
(9)     [eap] = ok
(9)   } # authorize = ok
(9) Found Auth-Type = eap
(9) # Executing group from file Freeradius/Conf/E_wpa2//sites-enabled/default
(9)   authenticate {
(9) eap: Expiring EAP session with state 0x15c0413514cd5b8a
(9) eap: Finished EAP session with state 0xd41cd916dc11c0ea
(9) eap: Previous EAP request found for state 0xd41cd916dc11c0ea, released from the list
(9) eap: Peer sent packet with method EAP PEAP (25)
(9) eap: Calling submodule eap_peap to process data
(9) eap_peap: (TLS) EAP Done initial handshake
(9) eap_peap: Session established.  Decoding tunneled attributes
(9) eap_peap: PEAP state phase2
(9) eap_peap: EAP method MSCHAPv2 (26)
(9) eap_peap: Got tunneled request
(9) eap_peap:   EAP-Message = 0x020d00061a03
(9) eap_peap: Setting User-Name to bob@example.org
(9) eap_peap: Sending tunneled request to inner-tunnel
(9) eap_peap:   EAP-Message = 0x020d00061a03
(9) eap_peap:   FreeRADIUS-Proxied-To = 127.0.0.1
(9) eap_peap:   User-Name = "bob@example.org"
(9) eap_peap:   State = 0x15c0413514cd5b8ae4535537575a6ec0
(9) Virtual server inner-tunnel received request
(9)   EAP-Message = 0x020d00061a03
(9)   FreeRADIUS-Proxied-To = 127.0.0.1
(9)   User-Name = "bob@example.org"
(9)   State = 0x15c0413514cd5b8ae4535537575a6ec0
(9) server inner-tunnel {
(9)   session-state: No cached attributes
(9)   # Executing section authorize from file Freeradius/Conf/E_wpa2//sites-enabled/inner-tunnel
(9)     authorize {
(9)       policy filter_username {
(9)         if (&User-Name) {
(9)         if (&User-Name)  -> TRUE
(9)         if (&User-Name)  {
(9)           if (&User-Name =~ / /) {
(9)           if (&User-Name =~ / /)  -> FALSE
(9)           if (&User-Name =~ /@[^@]*@/ ) {
(9)           if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(9)           if (&User-Name =~ /\.\./ ) {
(9)           if (&User-Name =~ /\.\./ )  -> FALSE
(9)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(9)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(9)           if (&User-Name =~ /\.$/)  {
(9)           if (&User-Name =~ /\.$/)   -> FALSE
(9)           if (&User-Name =~ /@\./)  {
(9)           if (&User-Name =~ /@\./)   -> FALSE
(9)         } # if (&User-Name)  = notfound
(9)       } # policy filter_username = notfound
(9)       [chap] = noop
(9)       [mschap] = noop
(9) suffix: Checking for suffix after "@"
(9) suffix: Looking up realm "example.org" for User-Name = "bob@example.org"
(9) suffix: No such realm "example.org"
(9)       [suffix] = noop
(9)       update control {
(9)         &Proxy-To-Realm := LOCAL
(9)       } # update control = noop
(9) eap: Peer sent EAP Response (code 2) ID 13 length 6
(9) eap: No EAP Start, assuming it's an on-going EAP conversation
(9)       [eap] = updated
(9) files: users: Matched entry bob@example.org at line 1
(9) files: EXPAND Hello, %{User-Name}
(9) files:    --> Hello, bob@example.org
(9)       [files] = ok
(9)       [expiration] = noop
(9)       [logintime] = noop
(9) pap: WARNING: Auth-Type already set.  Not setting to PAP
(9)       [pap] = noop
(9)     } # authorize = updated
(9)   Found Auth-Type = eap
(9)   # Executing group from file Freeradius/Conf/E_wpa2//sites-enabled/inner-tunnel
(9)     authenticate {
(9) eap: Expiring EAP session with state 0x15c0413514cd5b8a
(9) eap: Finished EAP session with state 0x15c0413514cd5b8a
(9) eap: Previous EAP request found for state 0x15c0413514cd5b8a, released from the list
(9) eap: Peer sent packet with method EAP MSCHAPv2 (26)
(9) eap: Calling submodule eap_mschapv2 to process data
(9) eap: Sending EAP Success (code 3) ID 13 length 4
(9) eap: Freeing handler
(9)       [eap] = ok
(9)     } # authenticate = ok
(9)   # Executing section post-auth from file Freeradius/Conf/E_wpa2//sites-enabled/inner-tunnel
(9)     post-auth {
(9)       if (0) {
(9)       if (0)  -> FALSE
(9)     } # post-auth = noop
(9) } # server inner-tunnel
(9) Virtual server sending reply
(9)   Reply-Message = "Hello, bob@example.org"
(9)   MS-MPPE-Encryption-Policy = Encryption-Allowed
(9)   MS-MPPE-Encryption-Types = RC4-40or128-bit-Allowed
(9)   MS-MPPE-Send-Key = 0x8da076ce6984f03ac7998c4c3948de8f
(9)   MS-MPPE-Recv-Key = 0x7ac8429a0d1d067c9f9370fe343f8439
(9)   EAP-Message = 0x030d0004
(9)   Message-Authenticator = 0x00000000000000000000000000000000
(9)   User-Name = "bob@example.org"
(9) eap_peap: Got tunneled reply code 2
(9) eap_peap:   Reply-Message = "Hello, bob@example.org"
(9) eap_peap:   MS-MPPE-Encryption-Policy = Encryption-Allowed
(9) eap_peap:   MS-MPPE-Encryption-Types = RC4-40or128-bit-Allowed
(9) eap_peap:   MS-MPPE-Send-Key = 0x8da076ce6984f03ac7998c4c3948de8f
(9) eap_peap:   MS-MPPE-Recv-Key = 0x7ac8429a0d1d067c9f9370fe343f8439
(9) eap_peap:   EAP-Message = 0x030d0004
(9) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(9) eap_peap:   User-Name = "bob@example.org"
(9) eap_peap: Got tunneled reply RADIUS code 2
(9) eap_peap:   Reply-Message = "Hello, bob@example.org"
(9) eap_peap:   MS-MPPE-Encryption-Policy = Encryption-Allowed
(9) eap_peap:   MS-MPPE-Encryption-Types = RC4-40or128-bit-Allowed
(9) eap_peap:   MS-MPPE-Send-Key = 0x8da076ce6984f03ac7998c4c3948de8f
(9) eap_peap:   MS-MPPE-Recv-Key = 0x7ac8429a0d1d067c9f9370fe343f8439
(9) eap_peap:   EAP-Message = 0x030d0004
(9) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(9) eap_peap:   User-Name = "bob@example.org"
(9) eap_peap: Tunneled authentication was successful
(9) eap_peap: SUCCESS
(9) eap: Sending EAP Request (code 1) ID 14 length 46
(9) eap: EAP session adding &reply:State = 0xd41cd916dd12c0ea
(9)     [eap] = handled
(9)   } # authenticate = handled
(9) Using Post-Auth-Type Challenge
(9) # Executing group from file Freeradius/Conf/E_wpa2//sites-enabled/default
(9)   Challenge { ... } # empty sub-section is ignored
(9) session-state: Saving cached attributes
(9)   Framed-MTU = 994
(9)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(9)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(9)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(9)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(9)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(9)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(9)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(9)   TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(9)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(9)   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(9)   TLS-Session-Version = "TLS 1.2"
(9) Sent Access-Challenge Id 9 from 127.0.0.1:1812 to 127.0.0.1:51373 length 104
(9)   EAP-Message = 0x010e002e19001703030023375c8922ea3f0a2fd9f9121924a02b015a41130e3dc375788adf742a3fd23046254d0b
(9)   Message-Authenticator = 0x00000000000000000000000000000000
(9)   State = 0xd41cd916dd12c0ea6933cbebcf9f5f76
(9) Finished request
Waking up in 2.5 seconds.
(10) Received Access-Request Id 10 from 127.0.0.1:51373 to 127.0.0.1:1812 length 280
(10)   User-Name = "anonymous"
(10)   NAS-IP-Address = 127.0.0.1
(10)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(10)   NAS-Port-Type = Wireless-802.11
(10)   Service-Type = Framed-User
(10)   NAS-Port = 1
(10)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(10)   Connect-Info = "CONNECT 54Mbps 802.11g"
(10)   Acct-Session-Id = "98A06883BF9F9973"
(10)   Acct-Multi-Session-Id = "2E4AB55ED5E28AB9"
(10)   WLAN-Pairwise-Cipher = 1027076
(10)   WLAN-Group-Cipher = 1027076
(10)   WLAN-AKM-Suite = 1027073
(10)   WLAN-Group-Mgmt-Cipher = 1027078
(10)   Framed-MTU = 1400
(10)   EAP-Message = 0x020e002e1900170303002300000000000000042106e9ddf7e80b85b0a2559d6dfd7d7cd886dede398ca2921c11db
(10)   State = 0xd41cd916dd12c0ea6933cbebcf9f5f76
(10)   Message-Authenticator = 0xb51384710f0bd3bc84b1fa456b6d5442
(10) Restoring &session-state
(10)   &session-state:Framed-MTU = 994
(10)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(10)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(10)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(10)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(10)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(10)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(10)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(10)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(10)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(10)   &session-state:TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(10)   &session-state:TLS-Session-Version = "TLS 1.2"
(10) # Executing section authorize from file Freeradius/Conf/E_wpa2//sites-enabled/default
(10)   authorize {
(10)     policy filter_username {
(10)       if (&User-Name) {
(10)       if (&User-Name)  -> TRUE
(10)       if (&User-Name)  {
(10)         if (&User-Name =~ / /) {
(10)         if (&User-Name =~ / /)  -> FALSE
(10)         if (&User-Name =~ /@[^@]*@/ ) {
(10)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(10)         if (&User-Name =~ /\.\./ ) {
(10)         if (&User-Name =~ /\.\./ )  -> FALSE
(10)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(10)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(10)         if (&User-Name =~ /\.$/)  {
(10)         if (&User-Name =~ /\.$/)   -> FALSE
(10)         if (&User-Name =~ /@\./)  {
(10)         if (&User-Name =~ /@\./)   -> FALSE
(10)       } # if (&User-Name)  = notfound
(10)     } # policy filter_username = notfound
(10)     [preprocess] = ok
(10)     [chap] = noop
(10)     [mschap] = noop
(10)     [digest] = noop
(10) suffix: Checking for suffix after "@"
(10) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(10) suffix: No such realm "NULL"
(10)     [suffix] = noop
(10) eap: Peer sent EAP Response (code 2) ID 14 length 46
(10) eap: Continuing tunnel setup
(10)     [eap] = ok
(10)   } # authorize = ok
(10) Found Auth-Type = eap
(10) # Executing group from file Freeradius/Conf/E_wpa2//sites-enabled/default
(10)   authenticate {
(10) eap: Expiring EAP session with state 0xd41cd916dd12c0ea
(10) eap: Finished EAP session with state 0xd41cd916dd12c0ea
(10) eap: Previous EAP request found for state 0xd41cd916dd12c0ea, released from the list
(10) eap: Peer sent packet with method EAP PEAP (25)
(10) eap: Calling submodule eap_peap to process data
(10) eap_peap: (TLS) EAP Done initial handshake
(10) eap_peap: Session established.  Decoding tunneled attributes
(10) eap_peap: PEAP state send tlv success
(10) eap_peap: Received EAP-TLV response
(10) eap_peap: Success
(10) eap: Sending EAP Success (code 3) ID 14 length 4
(10) eap: Freeing handler
(10)     [eap] = ok
(10)   } # authenticate = ok
(10) # Executing section post-auth from file Freeradius/Conf/E_wpa2//sites-enabled/default
(10)   post-auth {
(10)     if (session-state:User-Name && reply:User-Name && request:User-Name && (reply:User-Name == request:User-Name)) {
(10)     if (session-state:User-Name && reply:User-Name && request:User-Name && (reply:User-Name == request:User-Name))  -> FALSE
(10)     update {
(10)       &reply::Framed-MTU += &session-state:Framed-MTU[*] -> 994
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) recv TLS 1.3 Handshake, ClientHello'
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, ServerHello'
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, Certificate'
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, ServerKeyExchange'
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, ServerHelloDone'
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) recv TLS 1.2 Handshake, ClientKeyExchange'
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) recv TLS 1.2 Handshake, Finished'
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 ChangeCipherSpec'
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, Finished'
(10)       &reply::TLS-Session-Cipher-Suite += &session-state:TLS-Session-Cipher-Suite[*] -> 'ECDHE-RSA-AES256-GCM-SHA384'
(10)       &reply::TLS-Session-Version += &session-state:TLS-Session-Version[*] -> 'TLS 1.2'
(10)     } # update = noop
(10)     [exec] = noop
(10)     policy remove_reply_message_if_eap {
(10)       if (&reply:EAP-Message && &reply:Reply-Message) {
(10)       if (&reply:EAP-Message && &reply:Reply-Message)  -> FALSE
(10)       else {
(10)         [noop] = noop
(10)       } # else = noop
(10)     } # policy remove_reply_message_if_eap = noop
(10)     if (EAP-Key-Name && &reply:EAP-Session-Id) {
(10)     if (EAP-Key-Name && &reply:EAP-Session-Id)  -> FALSE
(10)   } # post-auth = noop
(10) Sent Access-Accept Id 10 from 127.0.0.1:1812 to 127.0.0.1:51373 length 177
(10)   MS-MPPE-Recv-Key = 0xd32e56910aaa722491108f314ea4e8f5fe1a6bd518e8d911706646795468534d
(10)   MS-MPPE-Send-Key = 0x2640e565d824727abd46a1227f04296af0ef6bee122a2edf3615cd2addf36d3e
(10)   EAP-Message = 0x030e0004
(10)   Message-Authenticator = 0x00000000000000000000000000000000
(10)   User-Name = "anonymous"
(10)   Framed-MTU += 994
(10) Finished request
Waking up in 2.4 seconds.
(0) Cleaning up request packet ID 0 with timestamp +7 due to cleanup_delay was reached
(1) Cleaning up request packet ID 1 with timestamp +8 due to cleanup_delay was reached
(2) Cleaning up request packet ID 2 with timestamp +8 due to cleanup_delay was reached
Waking up in 0.4 seconds.
(3) Cleaning up request packet ID 3 with timestamp +8 due to cleanup_delay was reached
Waking up in 0.4 seconds.
(4) Cleaning up request packet ID 4 with timestamp +8 due to cleanup_delay was reached
Waking up in 0.7 seconds.
(5) Cleaning up request packet ID 5 with timestamp +9 due to cleanup_delay was reached
Waking up in 0.2 seconds.
(6) Cleaning up request packet ID 6 with timestamp +9 due to cleanup_delay was reached
(7) Cleaning up request packet ID 7 with timestamp +9 due to cleanup_delay was reached
Waking up in 0.2 seconds.
(8) Cleaning up request packet ID 8 with timestamp +10 due to cleanup_delay was reached
Waking up in 0.1 seconds.
(9) Cleaning up request packet ID 9 with timestamp +10 due to cleanup_delay was reached
Waking up in 0.1 seconds.
(10) Cleaning up request packet ID 10 with timestamp +10 due to cleanup_delay was reached
Ready to process requests
Ready to process requests
Signalled to terminate
Exiting normally

[0;36mFreeRADIUS is stopped.[0m


[18:48:58.517] Beginning saving session of stdout and stderr Test/Tmp/Log/ESP32/e_rogue_wpa2...
[0;32mSuccess.[0m

[18:48:58.518] Fetching configuration directory associated to e_rogue_wpa2...
[0;32mSuccess.[0m

[18:48:58.534] Looking for Freeradius/Conf/E_rogue_wpa2/...
[0;32mSuccess.[0m

[0;36mRunning FreeRADIUS. Press Ctrl-C to stop.[0m

FreeRADIUS Version 3.0.26
Copyright (C) 1999-2021 The FreeRADIUS server project and contributors
There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE
You may redistribute copies of FreeRADIUS under the terms of the
GNU General Public License
For more information about these matters, see the file named COPYRIGHT
Starting - reading configuration files ...
including dictionary file /usr/share/freeradius/dictionary
including dictionary file /usr/share/freeradius/dictionary.dhcp
including dictionary file /usr/share/freeradius/dictionary.vqp
including dictionary file Freeradius/Conf/E_rogue_wpa2//dictionary
including configuration file Freeradius/Conf/E_rogue_wpa2//radiusd.conf
including configuration file Freeradius/Conf/E_rogue_wpa2//proxy.conf
including configuration file Freeradius/Conf/E_rogue_wpa2//clients.conf
including files in directory Freeradius/Conf/E_rogue_wpa2//mods-enabled/
including configuration file Freeradius/Conf/E_rogue_wpa2//mods-enabled/files
including configuration file Freeradius/Conf/E_rogue_wpa2//mods-enabled/passwd
including configuration file Freeradius/Conf/E_rogue_wpa2//mods-enabled/expr
including configuration file Freeradius/Conf/E_rogue_wpa2//mods-enabled/soh
including configuration file Freeradius/Conf/E_rogue_wpa2//mods-enabled/digest
including configuration file Freeradius/Conf/E_rogue_wpa2//mods-enabled/dynamic_clients
including configuration file Freeradius/Conf/E_rogue_wpa2//mods-enabled/unix
including configuration file Freeradius/Conf/E_rogue_wpa2//mods-enabled/echo
including configuration file Freeradius/Conf/E_rogue_wpa2//mods-enabled/preprocess
including configuration file Freeradius/Conf/E_rogue_wpa2//mods-enabled/replicate
including configuration file Freeradius/Conf/E_rogue_wpa2//mods-enabled/pap
including configuration file Freeradius/Conf/E_rogue_wpa2//mods-enabled/always
including configuration file Freeradius/Conf/E_rogue_wpa2//mods-enabled/detail
including configuration file Freeradius/Conf/E_rogue_wpa2//mods-enabled/cache_eap
including configuration file Freeradius/Conf/E_rogue_wpa2//mods-enabled/mschap
including configuration file Freeradius/Conf/E_rogue_wpa2//mods-enabled/eap
including configuration file Freeradius/Conf/E_rogue_wpa2//mods-enabled/logintime
including configuration file Freeradius/Conf/E_rogue_wpa2//mods-enabled/utf8
including configuration file Freeradius/Conf/E_rogue_wpa2//mods-enabled/unpack
including configuration file Freeradius/Conf/E_rogue_wpa2//mods-enabled/radutmp
including configuration file Freeradius/Conf/E_rogue_wpa2//mods-enabled/expiration
including configuration file Freeradius/Conf/E_rogue_wpa2//mods-enabled/chap
including configuration file Freeradius/Conf/E_rogue_wpa2//mods-enabled/realm
including configuration file Freeradius/Conf/E_rogue_wpa2//mods-enabled/sradutmp
including configuration file Freeradius/Conf/E_rogue_wpa2//mods-enabled/attr_filter
including configuration file Freeradius/Conf/E_rogue_wpa2//mods-enabled/ntlm_auth
including configuration file Freeradius/Conf/E_rogue_wpa2//mods-enabled/detail.log
including configuration file Freeradius/Conf/E_rogue_wpa2//mods-enabled/exec
including configuration file Freeradius/Conf/E_rogue_wpa2//mods-enabled/linelog
including files in directory Freeradius/Conf/E_rogue_wpa2//policy.d/
including configuration file Freeradius/Conf/E_rogue_wpa2//policy.d/operator-name
including configuration file Freeradius/Conf/E_rogue_wpa2//policy.d/dhcp
including configuration file Freeradius/Conf/E_rogue_wpa2//policy.d/rfc7542
including configuration file Freeradius/Conf/E_rogue_wpa2//policy.d/accounting
including configuration file Freeradius/Conf/E_rogue_wpa2//policy.d/filter
including configuration file Freeradius/Conf/E_rogue_wpa2//policy.d/cui
including configuration file Freeradius/Conf/E_rogue_wpa2//policy.d/moonshot-targeted-ids
including configuration file Freeradius/Conf/E_rogue_wpa2//policy.d/canonicalization
including configuration file Freeradius/Conf/E_rogue_wpa2//policy.d/eap
including configuration file Freeradius/Conf/E_rogue_wpa2//policy.d/control
including configuration file Freeradius/Conf/E_rogue_wpa2//policy.d/abfab-tr
including configuration file Freeradius/Conf/E_rogue_wpa2//policy.d/debug
including files in directory Freeradius/Conf/E_rogue_wpa2//sites-enabled/
including configuration file Freeradius/Conf/E_rogue_wpa2//sites-enabled/inner-tunnel
including configuration file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
main {
 security {
 	user = "freerad"
 	group = "freerad"
 	allow_core_dumps = no
 }
	name = "freeradius"
	prefix = "/usr"
	localstatedir = "/var"
	logdir = "/var/log/freeradius"
	run_dir = "/var/run/freeradius"
}
main {
	name = "freeradius"
	prefix = "/usr"
	localstatedir = "/var"
	sbindir = "/usr/sbin"
	logdir = "/var/log/freeradius"
	run_dir = "/var/run/freeradius"
	libdir = "/usr/lib/freeradius"
	radacctdir = "/var/log/freeradius/radacct"
	hostname_lookups = no
	max_request_time = 30
	cleanup_delay = 5
	max_requests = 16384
	postauth_client_lost = no
	pidfile = "/var/run/freeradius/freeradius.pid"
	checkrad = "/usr/sbin/checkrad"
	debug_level = 0
	proxy_requests = yes
 log {
 	stripped_names = no
 	auth = no
 	auth_badpass = no
 	auth_goodpass = no
 	colourise = yes
 	msg_denied = "You are already logged in - access denied"
 }
 resources {
 }
 security {
 	max_attributes = 200
 	reject_delay = 1.000000
 	status_server = yes
 }
}
radiusd: #### Loading Realms and Home Servers ####
 proxy server {
 	retry_delay = 5
 	retry_count = 3
 	default_fallback = no
 	dead_time = 120
 	wake_all_if_all_dead = no
 }
 home_server localhost {
 	ipaddr = 127.0.0.1
 	port = 1812
 	type = "auth"
 	secret = <<< secret >>>
 	response_window = 20.000000
 	response_timeouts = 1
 	max_outstanding = 65536
 	zombie_period = 40
 	status_check = "status-server"
 	ping_interval = 30
 	check_interval = 30
 	check_timeout = 4
 	num_answers_to_alive = 3
 	revive_interval = 120
  limit {
  	max_connections = 16
  	max_requests = 0
  	lifetime = 0
  	idle_timeout = 0
  }
  coa {
  	irt = 2
  	mrt = 16
  	mrc = 5
  	mrd = 30
  }
 }
 home_server_pool my_auth_failover {
	type = fail-over
	home_server = localhost
 }
 realm example.com {
	auth_pool = my_auth_failover
 }
 realm LOCAL {
 }
radiusd: #### Loading Clients ####
 client localhost {
 	ipaddr = 127.0.0.1
 	require_message_authenticator = no
 	secret = <<< secret >>>
 	nas_type = "other"
 	proto = "*"
  limit {
  	max_connections = 16
  	lifetime = 0
  	idle_timeout = 30
  }
 }
 client localhost_ipv6 {
 	ipv6addr = ::1
 	require_message_authenticator = no
 	secret = <<< secret >>>
  limit {
  	max_connections = 16
  	lifetime = 0
  	idle_timeout = 30
  }
 }
Debugger not attached
systemd watchdog is disabled
 # Creating Auth-Type = mschap
 # Creating Auth-Type = eap
 # Creating Auth-Type = PAP
 # Creating Auth-Type = CHAP
 # Creating Auth-Type = MS-CHAP
 # Creating Auth-Type = digest
 # Creating Autz-Type = New-TLS-Connection
radiusd: #### Instantiating modules ####
 modules {
  # Loaded module rlm_files
  # Loading module "files" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/files
  files {
  	filename = "Freeradius/Conf/E_rogue_wpa2//mods-config/files/authorize"
  	acctusersfile = "Freeradius/Conf/E_rogue_wpa2//mods-config/files/accounting"
  	preproxy_usersfile = "Freeradius/Conf/E_rogue_wpa2//mods-config/files/pre-proxy"
  }
  # Loaded module rlm_passwd
  # Loading module "etc_passwd" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/passwd
  passwd etc_passwd {
  	filename = "/etc/passwd"
  	format = "*User-Name:Crypt-Password:"
  	delimiter = ":"
  	ignore_nislike = no
  	ignore_empty = yes
  	allow_multiple_keys = no
  	hash_size = 100
  }
  # Loaded module rlm_expr
  # Loading module "expr" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/expr
  expr {
  	safe_characters = "@abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789.-_: /√§√©√∂√º√†√¢√¶√ß√®√©√™√´√Æ√Ø√¥≈ì√π√ª√ºa√ø√Ñ√â√ñ√ú√ü√Ä√Ç√Ü√á√à√â√ä√ã√é√è√î≈í√ô√õ√ú≈∏"
  }
  # Loaded module rlm_soh
  # Loading module "soh" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/soh
  soh {
  	dhcp = yes
  }
  # Loaded module rlm_digest
  # Loading module "digest" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/digest
  # Loaded module rlm_dynamic_clients
  # Loading module "dynamic_clients" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/dynamic_clients
  # Loaded module rlm_unix
  # Loading module "unix" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/unix
  unix {
  	radwtmp = "/var/log/freeradius/radwtmp"
  }
Creating attribute Unix-Group
  # Loaded module rlm_exec
  # Loading module "echo" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/echo
  exec echo {
  	wait = yes
  	program = "/bin/echo %{User-Name}"
  	input_pairs = "request"
  	output_pairs = "reply"
  	shell_escape = yes
  }
  # Loaded module rlm_preprocess
  # Loading module "preprocess" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/preprocess
  preprocess {
  	huntgroups = "Freeradius/Conf/E_rogue_wpa2//mods-config/preprocess/huntgroups"
  	hints = "Freeradius/Conf/E_rogue_wpa2//mods-config/preprocess/hints"
  	with_ascend_hack = no
  	ascend_channels_per_line = 23
  	with_ntdomain_hack = no
  	with_specialix_jetstream_hack = no
  	with_cisco_vsa_hack = no
  	with_alvarion_vsa_hack = no
  }
  # Loaded module rlm_replicate
  # Loading module "replicate" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/replicate
  # Loaded module rlm_pap
  # Loading module "pap" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/pap
  pap {
  	normalise = yes
  }
  # Loaded module rlm_always
  # Loading module "reject" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/always
  always reject {
  	rcode = "reject"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "fail" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/always
  always fail {
  	rcode = "fail"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "ok" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/always
  always ok {
  	rcode = "ok"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "handled" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/always
  always handled {
  	rcode = "handled"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "invalid" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/always
  always invalid {
  	rcode = "invalid"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "userlock" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/always
  always userlock {
  	rcode = "userlock"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "notfound" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/always
  always notfound {
  	rcode = "notfound"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "noop" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/always
  always noop {
  	rcode = "noop"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "updated" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/always
  always updated {
  	rcode = "updated"
  	simulcount = 0
  	mpp = no
  }
  # Loaded module rlm_detail
  # Loading module "detail" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/detail
  detail {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loaded module rlm_cache
  # Loading module "cache_eap" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/cache_eap
  cache cache_eap {
  	driver = "rlm_cache_rbtree"
  	key = "%{%{control:State}:-%{%{reply:State}:-%{State}}}"
  	ttl = 15
  	max_entries = 0
  	epoch = 0
  	add_stats = no
  }
  # Loaded module rlm_mschap
  # Loading module "mschap" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/mschap
  mschap {
  	use_mppe = yes
  	require_encryption = no
  	require_strong = no
  	with_ntdomain_hack = yes
   passchange {
   }
  	allow_retry = yes
  	winbind_retry_with_normalised_username = no
  }
  # Loaded module rlm_eap
  # Loading module "eap" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/eap
  eap {
  	default_eap_type = "md5"
  	timer_expire = 60
  	ignore_unknown_eap_types = no
  	cisco_accounting_username_bug = no
  	max_sessions = 16384
  }
  # Loaded module rlm_logintime
  # Loading module "logintime" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/logintime
  logintime {
  	minimum_timeout = 60
  }
  # Loaded module rlm_utf8
  # Loading module "utf8" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/utf8
  # Loaded module rlm_unpack
  # Loading module "unpack" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/unpack
  # Loaded module rlm_radutmp
  # Loading module "radutmp" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/radutmp
  radutmp {
  	filename = "/var/log/freeradius/radutmp"
  	username = "%{User-Name}"
  	case_sensitive = yes
  	check_with_nas = yes
  	permissions = 384
  	caller_id = yes
  }
  # Loaded module rlm_expiration
  # Loading module "expiration" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/expiration
  # Loaded module rlm_chap
  # Loading module "chap" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/chap
  # Loaded module rlm_realm
  # Loading module "IPASS" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/realm
  realm IPASS {
  	format = "prefix"
  	delimiter = "/"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "suffix" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/realm
  realm suffix {
  	format = "suffix"
  	delimiter = "@"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "bangpath" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/realm
  realm bangpath {
  	format = "prefix"
  	delimiter = "!"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "realmpercent" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/realm
  realm realmpercent {
  	format = "suffix"
  	delimiter = "%"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "ntdomain" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/realm
  realm ntdomain {
  	format = "prefix"
  	delimiter = "\\"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "sradutmp" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/sradutmp
  radutmp sradutmp {
  	filename = "/var/log/freeradius/sradutmp"
  	username = "%{User-Name}"
  	case_sensitive = yes
  	check_with_nas = yes
  	permissions = 420
  	caller_id = no
  }
  # Loaded module rlm_attr_filter
  # Loading module "attr_filter.post-proxy" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/attr_filter
  attr_filter attr_filter.post-proxy {
  	filename = "Freeradius/Conf/E_rogue_wpa2//mods-config/attr_filter/post-proxy"
  	key = "%{Realm}"
  	relaxed = no
  }
  # Loading module "attr_filter.pre-proxy" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/attr_filter
  attr_filter attr_filter.pre-proxy {
  	filename = "Freeradius/Conf/E_rogue_wpa2//mods-config/attr_filter/pre-proxy"
  	key = "%{Realm}"
  	relaxed = no
  }
  # Loading module "attr_filter.access_reject" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/attr_filter
  attr_filter attr_filter.access_reject {
  	filename = "Freeradius/Conf/E_rogue_wpa2//mods-config/attr_filter/access_reject"
  	key = "%{User-Name}"
  	relaxed = no
  }
  # Loading module "attr_filter.access_challenge" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/attr_filter
  attr_filter attr_filter.access_challenge {
  	filename = "Freeradius/Conf/E_rogue_wpa2//mods-config/attr_filter/access_challenge"
  	key = "%{User-Name}"
  	relaxed = no
  }
  # Loading module "attr_filter.accounting_response" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/attr_filter
  attr_filter attr_filter.accounting_response {
  	filename = "Freeradius/Conf/E_rogue_wpa2//mods-config/attr_filter/accounting_response"
  	key = "%{User-Name}"
  	relaxed = no
  }
  # Loading module "attr_filter.coa" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/attr_filter
  attr_filter attr_filter.coa {
  	filename = "Freeradius/Conf/E_rogue_wpa2//mods-config/attr_filter/coa"
  	key = "%{User-Name}"
  	relaxed = no
  }
  # Loading module "ntlm_auth" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/ntlm_auth
  exec ntlm_auth {
  	wait = yes
  	program = "/path/to/ntlm_auth --request-nt-key --domain=MYDOMAIN --username=%{mschap:User-Name} --password=%{User-Password}"
  	shell_escape = yes
  }
  # Loading module "auth_log" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/detail.log
  detail auth_log {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/auth-detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loading module "reply_log" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/detail.log
  detail reply_log {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/reply-detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loading module "pre_proxy_log" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/detail.log
  detail pre_proxy_log {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/pre-proxy-detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loading module "post_proxy_log" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/detail.log
  detail post_proxy_log {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/post-proxy-detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loading module "exec" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/exec
  exec {
  	wait = no
  	input_pairs = "request"
  	shell_escape = yes
  	timeout = 10
  }
  # Loaded module rlm_linelog
  # Loading module "linelog" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/linelog
  linelog {
  	filename = "/var/log/freeradius/linelog"
  	escape_filenames = no
  	syslog_severity = "info"
  	permissions = 384
  	format = "This is a log message for %{User-Name}"
  	reference = "messages.%{%{reply:Packet-Type}:-default}"
  }
  # Loading module "log_accounting" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/linelog
  linelog log_accounting {
  	filename = "/var/log/freeradius/linelog-accounting"
  	escape_filenames = no
  	syslog_severity = "info"
  	permissions = 384
  	format = ""
  	reference = "Accounting-Request.%{%{Acct-Status-Type}:-unknown}"
  }
  instantiate {
  }
  # Instantiating module "files" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/files
reading pairlist file Freeradius/Conf/E_rogue_wpa2//mods-config/files/authorize
reading pairlist file Freeradius/Conf/E_rogue_wpa2//mods-config/files/accounting
reading pairlist file Freeradius/Conf/E_rogue_wpa2//mods-config/files/pre-proxy
  # Instantiating module "etc_passwd" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/passwd
rlm_passwd: nfields: 3 keyfield 0(User-Name) listable: no
  # Instantiating module "preprocess" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/preprocess
reading pairlist file Freeradius/Conf/E_rogue_wpa2//mods-config/preprocess/huntgroups
reading pairlist file Freeradius/Conf/E_rogue_wpa2//mods-config/preprocess/hints
  # Instantiating module "pap" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/pap
  # Instantiating module "reject" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/always
  # Instantiating module "fail" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/always
  # Instantiating module "ok" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/always
  # Instantiating module "handled" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/always
  # Instantiating module "invalid" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/always
  # Instantiating module "userlock" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/always
  # Instantiating module "notfound" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/always
  # Instantiating module "noop" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/always
  # Instantiating module "updated" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/always
  # Instantiating module "detail" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/detail
  # Instantiating module "cache_eap" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/cache_eap
rlm_cache (cache_eap): Driver rlm_cache_rbtree (module rlm_cache_rbtree) loaded and linked
  # Instantiating module "mschap" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/mschap
rlm_mschap (mschap): using internal authentication
  # Instantiating module "eap" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/eap
   # Linked to sub-module rlm_eap_md5
   # Linked to sub-module rlm_eap_gtc
   gtc {
   	challenge = "Password: "
   	auth_type = "PAP"
   }
   # Linked to sub-module rlm_eap_tls
   tls {
   	tls = "tls-common"
   }
   tls-config tls-common {
   	verify_depth = 0
   	ca_path = "Freeradius/Conf/E_rogue_wpa2//certs"
   	pem_file_type = yes
   	private_key_file = "Freeradius/Conf/E_rogue_wpa2//certs/server.key"
   	certificate_file = "Freeradius/Conf/E_rogue_wpa2//certs/server.crt"
   	ca_file = "Freeradius/Conf/E_rogue_wpa2//certs/ca.pem"
   	private_key_password = <<< secret >>>
   	fragment_size = 1024
   	include_length = yes
   	auto_chain = yes
   	check_crl = no
   	check_all_crl = no
   	ca_path_reload_interval = 0
   	cipher_list = "DEFAULT"
   	cipher_server_preference = no
   	reject_unknown_intermediate_ca = no
   	ecdh_curve = ""
   	tls_max_version = "1.2"
   	tls_min_version = "1.2"
    cache {
    	enable = no
    	lifetime = 24
    	max_entries = 255
    }
    verify {
    	skip_if_ocsp_ok = no
    }
    ocsp {
    	enable = no
    	override_cert_url = yes
    	url = "http://127.0.0.1/ocsp/"
    	use_nonce = yes
    	timeout = 0
    	softfail = no
    }
   }
   # Linked to sub-module rlm_eap_ttls
   ttls {
   	tls = "tls-common"
   	default_eap_type = "md5"
   	copy_request_to_tunnel = no
   	use_tunneled_reply = no
   	virtual_server = "inner-tunnel"
   	include_length = yes
   	require_client_cert = no
   }
tls: Using cached TLS configuration from previous invocation
   # Linked to sub-module rlm_eap_peap
   peap {
   	tls = "tls-common"
   	default_eap_type = "mschapv2"
   	copy_request_to_tunnel = no
   	use_tunneled_reply = no
   	proxy_tunneled_request_as_eap = yes
   	virtual_server = "inner-tunnel"
   	soh = no
   	require_client_cert = no
   }
tls: Using cached TLS configuration from previous invocation
   # Linked to sub-module rlm_eap_mschapv2
   mschapv2 {
   	with_ntdomain_hack = no
   	send_error = no
   }
  # Instantiating module "logintime" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/logintime
  # Instantiating module "expiration" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/expiration
  # Instantiating module "IPASS" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/realm
  # Instantiating module "suffix" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/realm
  # Instantiating module "bangpath" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/realm
  # Instantiating module "realmpercent" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/realm
  # Instantiating module "ntdomain" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/realm
  # Instantiating module "attr_filter.post-proxy" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/attr_filter
reading pairlist file Freeradius/Conf/E_rogue_wpa2//mods-config/attr_filter/post-proxy
  # Instantiating module "attr_filter.pre-proxy" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/attr_filter
reading pairlist file Freeradius/Conf/E_rogue_wpa2//mods-config/attr_filter/pre-proxy
  # Instantiating module "attr_filter.access_reject" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/attr_filter
reading pairlist file Freeradius/Conf/E_rogue_wpa2//mods-config/attr_filter/access_reject
  # Instantiating module "attr_filter.access_challenge" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/attr_filter
reading pairlist file Freeradius/Conf/E_rogue_wpa2//mods-config/attr_filter/access_challenge
  # Instantiating module "attr_filter.accounting_response" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/attr_filter
reading pairlist file Freeradius/Conf/E_rogue_wpa2//mods-config/attr_filter/accounting_response
  # Instantiating module "attr_filter.coa" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/attr_filter
reading pairlist file Freeradius/Conf/E_rogue_wpa2//mods-config/attr_filter/coa
  # Instantiating module "auth_log" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/detail.log
rlm_detail (auth_log): 'User-Password' suppressed, will not appear in detail output
  # Instantiating module "reply_log" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/detail.log
  # Instantiating module "pre_proxy_log" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/detail.log
  # Instantiating module "post_proxy_log" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/detail.log
  # Instantiating module "linelog" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/linelog
  # Instantiating module "log_accounting" from file Freeradius/Conf/E_rogue_wpa2//mods-enabled/linelog
 } # modules
radiusd: #### Loading Virtual Servers ####
server { # from file Freeradius/Conf/E_rogue_wpa2//radiusd.conf
} # server
server inner-tunnel { # from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/inner-tunnel
 # Loading authenticate {...}
Compiling Auth-Type PAP for attr Auth-Type
Compiling Auth-Type CHAP for attr Auth-Type
Compiling Auth-Type MS-CHAP for attr Auth-Type
 # Loading authorize {...}
Ignoring "sql" (see raddb/mods-available/README.rst)
Ignoring "ldap" (see raddb/mods-available/README.rst)
 # Loading session {...}
 # Loading post-proxy {...}
 # Loading post-auth {...}
 # Skipping contents of 'if' as it is always 'false' -- Freeradius/Conf/E_rogue_wpa2//sites-enabled/inner-tunnel:336
Compiling Post-Auth-Type REJECT for attr Post-Auth-Type
} # server inner-tunnel
server default { # from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
 # Loading authenticate {...}
Compiling Auth-Type PAP for attr Auth-Type
Compiling Auth-Type CHAP for attr Auth-Type
Compiling Auth-Type MS-CHAP for attr Auth-Type
 # Loading authorize {...}
Compiling Autz-Type New-TLS-Connection for attr Autz-Type
 # Loading preacct {...}
 # Loading accounting {...}
 # Loading post-proxy {...}
 # Loading post-auth {...}
Compiling Post-Auth-Type REJECT for attr Post-Auth-Type
Compiling Post-Auth-Type Challenge for attr Post-Auth-Type
Compiling Post-Auth-Type Client-Lost for attr Post-Auth-Type
} # server default
radiusd: #### Opening IP addresses and Ports ####
listen {
  	type = "auth"
  	ipaddr = 127.0.0.1
  	port = 18120
}
listen {
  	type = "auth"
  	ipaddr = *
  	port = 0
   limit {
   	max_connections = 16
   	lifetime = 0
   	idle_timeout = 30
   }
}
listen {
  	type = "acct"
  	ipaddr = *
  	port = 0
   limit {
   	max_connections = 16
   	lifetime = 0
   	idle_timeout = 30
   }
}
listen {
  	type = "auth"
  	ipv6addr = ::
  	port = 0
   limit {
   	max_connections = 16
   	lifetime = 0
   	idle_timeout = 30
   }
}
listen {
  	type = "acct"
  	ipv6addr = ::
  	port = 0
   limit {
   	max_connections = 16
   	lifetime = 0
   	idle_timeout = 30
   }
}
Listening on auth address 127.0.0.1 port 18120 bound to server inner-tunnel
Listening on auth address * port 1812 bound to server default
Listening on acct address * port 1813 bound to server default
Listening on auth address :: port 1812 bound to server default
Listening on acct address :: port 1813 bound to server default
Listening on proxy address * port 33988
Listening on proxy address :: port 39144
Ready to process requests
(0) Received Access-Request Id 0 from 127.0.0.1:33891 to 127.0.0.1:1812 length 230
(0)   User-Name = "anonymous"
(0)   NAS-IP-Address = 127.0.0.1
(0)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(0)   NAS-Port-Type = Wireless-802.11
(0)   Service-Type = Framed-User
(0)   NAS-Port = 1
(0)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(0)   Connect-Info = "CONNECT 54Mbps 802.11g"
(0)   Acct-Session-Id = "CF9BFBD35CAE8770"
(0)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(0)   WLAN-Pairwise-Cipher = 1027076
(0)   WLAN-Group-Cipher = 1027076
(0)   WLAN-AKM-Suite = 1027073
(0)   WLAN-Group-Mgmt-Cipher = 1027078
(0)   Framed-MTU = 1400
(0)   EAP-Message = 0x02cb000e01616e6f6e796d6f7573
(0)   Message-Authenticator = 0x5c384997f55c755436ba3c1f275a0bb6
(0) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(0)   authorize {
(0)     policy filter_username {
(0)       if (&User-Name) {
(0)       if (&User-Name)  -> TRUE
(0)       if (&User-Name)  {
(0)         if (&User-Name =~ / /) {
(0)         if (&User-Name =~ / /)  -> FALSE
(0)         if (&User-Name =~ /@[^@]*@/ ) {
(0)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(0)         if (&User-Name =~ /\.\./ ) {
(0)         if (&User-Name =~ /\.\./ )  -> FALSE
(0)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(0)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(0)         if (&User-Name =~ /\.$/)  {
(0)         if (&User-Name =~ /\.$/)   -> FALSE
(0)         if (&User-Name =~ /@\./)  {
(0)         if (&User-Name =~ /@\./)   -> FALSE
(0)       } # if (&User-Name)  = notfound
(0)     } # policy filter_username = notfound
(0)     [preprocess] = ok
(0)     [chap] = noop
(0)     [mschap] = noop
(0)     [digest] = noop
(0) suffix: Checking for suffix after "@"
(0) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(0) suffix: No such realm "NULL"
(0)     [suffix] = noop
(0) eap: Peer sent EAP Response (code 2) ID 203 length 14
(0) eap: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
(0)     [eap] = ok
(0)   } # authorize = ok
(0) Found Auth-Type = eap
(0) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(0)   authenticate {
(0) eap: Peer sent packet with method EAP Identity (1)
(0) eap: Calling submodule eap_md5 to process data
(0) eap_md5: Issuing MD5 Challenge
(0) eap: Sending EAP Request (code 1) ID 204 length 22
(0) eap: EAP session adding &reply:State = 0x519ae0555156e44f
(0)     [eap] = handled
(0)   } # authenticate = handled
(0) Using Post-Auth-Type Challenge
(0) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(0)   Challenge { ... } # empty sub-section is ignored
(0) Sent Access-Challenge Id 0 from 127.0.0.1:1812 to 127.0.0.1:33891 length 80
(0)   EAP-Message = 0x01cc0016041043e8406141437efc9c884213b29c6bc3
(0)   Message-Authenticator = 0x00000000000000000000000000000000
(0)   State = 0x519ae0555156e44f5ebc1383f68c204d
(0) Finished request
Waking up in 4.9 seconds.
(1) Received Access-Request Id 1 from 127.0.0.1:33891 to 127.0.0.1:1812 length 241
(1)   User-Name = "anonymous"
(1)   NAS-IP-Address = 127.0.0.1
(1)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(1)   NAS-Port-Type = Wireless-802.11
(1)   Service-Type = Framed-User
(1)   NAS-Port = 1
(1)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(1)   Connect-Info = "CONNECT 54Mbps 802.11g"
(1)   Acct-Session-Id = "CF9BFBD35CAE8770"
(1)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(1)   WLAN-Pairwise-Cipher = 1027076
(1)   WLAN-Group-Cipher = 1027076
(1)   WLAN-AKM-Suite = 1027073
(1)   WLAN-Group-Mgmt-Cipher = 1027078
(1)   Framed-MTU = 1400
(1)   EAP-Message = 0x02cc0007031915
(1)   State = 0x519ae0555156e44f5ebc1383f68c204d
(1)   Message-Authenticator = 0x71c36cbbfe70755cf24573ffb3638e6a
(1) session-state: No cached attributes
(1) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(1)   authorize {
(1)     policy filter_username {
(1)       if (&User-Name) {
(1)       if (&User-Name)  -> TRUE
(1)       if (&User-Name)  {
(1)         if (&User-Name =~ / /) {
(1)         if (&User-Name =~ / /)  -> FALSE
(1)         if (&User-Name =~ /@[^@]*@/ ) {
(1)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(1)         if (&User-Name =~ /\.\./ ) {
(1)         if (&User-Name =~ /\.\./ )  -> FALSE
(1)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(1)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(1)         if (&User-Name =~ /\.$/)  {
(1)         if (&User-Name =~ /\.$/)   -> FALSE
(1)         if (&User-Name =~ /@\./)  {
(1)         if (&User-Name =~ /@\./)   -> FALSE
(1)       } # if (&User-Name)  = notfound
(1)     } # policy filter_username = notfound
(1)     [preprocess] = ok
(1)     [chap] = noop
(1)     [mschap] = noop
(1)     [digest] = noop
(1) suffix: Checking for suffix after "@"
(1) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(1) suffix: No such realm "NULL"
(1)     [suffix] = noop
(1) eap: Peer sent EAP Response (code 2) ID 204 length 7
(1) eap: No EAP Start, assuming it's an on-going EAP conversation
(1)     [eap] = updated
(1)     [files] = noop
(1)     [expiration] = noop
(1)     [logintime] = noop
Not doing PAP as Auth-Type is already set.
(1)     [pap] = noop
(1)   } # authorize = updated
(1) Found Auth-Type = eap
(1) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(1)   authenticate {
(1) eap: Expiring EAP session with state 0x519ae0555156e44f
(1) eap: Finished EAP session with state 0x519ae0555156e44f
(1) eap: Previous EAP request found for state 0x519ae0555156e44f, released from the list
(1) eap: Peer sent packet with method EAP NAK (3)
(1) eap: Found mutually acceptable type PEAP (25)
(1) eap: Calling submodule eap_peap to process data
(1) eap_peap: (TLS) Initiating new session
(1) eap: Sending EAP Request (code 1) ID 205 length 6
(1) eap: EAP session adding &reply:State = 0x519ae0555057f94f
(1)     [eap] = handled
(1)   } # authenticate = handled
(1) Using Post-Auth-Type Challenge
(1) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(1)   Challenge { ... } # empty sub-section is ignored
(1) session-state: Saving cached attributes
(1)   Framed-MTU = 994
(1) Sent Access-Challenge Id 1 from 127.0.0.1:1812 to 127.0.0.1:33891 length 64
(1)   EAP-Message = 0x01cd00061920
(1)   Message-Authenticator = 0x00000000000000000000000000000000
(1)   State = 0x519ae0555057f94f5ebc1383f68c204d
(1) Finished request
Waking up in 4.9 seconds.
(2) Received Access-Request Id 2 from 127.0.0.1:33891 to 127.0.0.1:1812 length 476
(2)   User-Name = "anonymous"
(2)   NAS-IP-Address = 127.0.0.1
(2)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(2)   NAS-Port-Type = Wireless-802.11
(2)   Service-Type = Framed-User
(2)   NAS-Port = 1
(2)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(2)   Connect-Info = "CONNECT 54Mbps 802.11g"
(2)   Acct-Session-Id = "CF9BFBD35CAE8770"
(2)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(2)   WLAN-Pairwise-Cipher = 1027076
(2)   WLAN-Group-Cipher = 1027076
(2)   WLAN-AKM-Suite = 1027073
(2)   WLAN-Group-Mgmt-Cipher = 1027078
(2)   Framed-MTU = 1400
(2)   EAP-Message = 0x02cd00f21980000000e816030300e3010000df0303000000401e7559765ed0fe50e26b0bb3e849f4a76697021f706c86550685ac23000076c02cc030c0adc024c028c00ac014c0afc05dc061c049c04dc02bc02fc0acc023c027c009c013c0aec05cc060c048c04c009dc09d003d0035c032c02ac00fc02ec026c005c0a1c05fc063c051c04bc04fc03d009cc09c003c002fc031c029c00ec02dc025c004c0a0c05ec062c050c04ac04ec03c00ff01000040000a0010000e001d001700180019001a001b001c000d001600140603050306010501040303030401030102030201000b00020100001600000017000000230000
(2)   State = 0x519ae0555057f94f5ebc1383f68c204d
(2)   Message-Authenticator = 0x85cdd0b0e5d5b7af36d6c8d7bce5e072
(2) Restoring &session-state
(2)   &session-state:Framed-MTU = 994
(2) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(2)   authorize {
(2)     policy filter_username {
(2)       if (&User-Name) {
(2)       if (&User-Name)  -> TRUE
(2)       if (&User-Name)  {
(2)         if (&User-Name =~ / /) {
(2)         if (&User-Name =~ / /)  -> FALSE
(2)         if (&User-Name =~ /@[^@]*@/ ) {
(2)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(2)         if (&User-Name =~ /\.\./ ) {
(2)         if (&User-Name =~ /\.\./ )  -> FALSE
(2)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(2)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(2)         if (&User-Name =~ /\.$/)  {
(2)         if (&User-Name =~ /\.$/)   -> FALSE
(2)         if (&User-Name =~ /@\./)  {
(2)         if (&User-Name =~ /@\./)   -> FALSE
(2)       } # if (&User-Name)  = notfound
(2)     } # policy filter_username = notfound
(2)     [preprocess] = ok
(2)     [chap] = noop
(2)     [mschap] = noop
(2)     [digest] = noop
(2) suffix: Checking for suffix after "@"
(2) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(2) suffix: No such realm "NULL"
(2)     [suffix] = noop
(2) eap: Peer sent EAP Response (code 2) ID 205 length 242
(2) eap: Continuing tunnel setup
(2)     [eap] = ok
(2)   } # authorize = ok
(2) Found Auth-Type = eap
(2) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(2)   authenticate {
(2) eap: Expiring EAP session with state 0x519ae0555057f94f
(2) eap: Finished EAP session with state 0x519ae0555057f94f
(2) eap: Previous EAP request found for state 0x519ae0555057f94f, released from the list
(2) eap: Peer sent packet with method EAP PEAP (25)
(2) eap: Calling submodule eap_peap to process data
(2) eap_peap: (TLS) EAP Peer says that the final record size will be 232 bytes
(2) eap_peap: (TLS) EAP Got all data (232 bytes)
(2) eap_peap: (TLS) Handshake state - before SSL initialization
(2) eap_peap: (TLS) Handshake state - Server before SSL initialization
(2) eap_peap: (TLS) Handshake state - Server before SSL initialization
(2) eap_peap: (TLS) recv TLS 1.3 Handshake, ClientHello
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read client hello
(2) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHello
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server hello
(2) eap_peap: (TLS) send TLS 1.2 Handshake, Certificate
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write certificate
(2) eap_peap: (TLS) send TLS 1.2 Handshake, ServerKeyExchange
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write key exchange
(2) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHelloDone
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server done
(2) eap_peap: (TLS) Server : Need to read more data: SSLv3/TLS write server done
(2) eap_peap: (TLS) In Handshake Phase
(2) eap: Sending EAP Request (code 1) ID 206 length 1004
(2) eap: EAP session adding &reply:State = 0x519ae0555354f94f
(2)     [eap] = handled
(2)   } # authenticate = handled
(2) Using Post-Auth-Type Challenge
(2) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(2)   Challenge { ... } # empty sub-section is ignored
(2) session-state: Saving cached attributes
(2)   Framed-MTU = 994
(2)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(2)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(2)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(2)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(2)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(2) Sent Access-Challenge Id 2 from 127.0.0.1:1812 to 127.0.0.1:33891 length 1068
(2)   EAP-Message = 0x01ce03ec19c000000aac160303003d020000390303cb71bbc4860c50b276743fe9665261fa0b21876a58fa9428f4b036255600b8f300c030000011ff01000100000b00040300010200170000160303092b0b0009270009240004203082041c30820304a003020102020101300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232303134333732315a170d3234303231383134333732315a307c310b3009060355040613024652310f300d06035504080c0652616469757331153013060355040a0c0c4578616d706c6520496e632e3123302106035504030c1a4578616d70
(2)   Message-Authenticator = 0x00000000000000000000000000000000
(2)   State = 0x519ae0555354f94f5ebc1383f68c204d
(2) Finished request
Waking up in 4.9 seconds.
(3) Received Access-Request Id 3 from 127.0.0.1:33891 to 127.0.0.1:1812 length 240
(3)   User-Name = "anonymous"
(3)   NAS-IP-Address = 127.0.0.1
(3)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(3)   NAS-Port-Type = Wireless-802.11
(3)   Service-Type = Framed-User
(3)   NAS-Port = 1
(3)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(3)   Connect-Info = "CONNECT 54Mbps 802.11g"
(3)   Acct-Session-Id = "CF9BFBD35CAE8770"
(3)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(3)   WLAN-Pairwise-Cipher = 1027076
(3)   WLAN-Group-Cipher = 1027076
(3)   WLAN-AKM-Suite = 1027073
(3)   WLAN-Group-Mgmt-Cipher = 1027078
(3)   Framed-MTU = 1400
(3)   EAP-Message = 0x02ce00061900
(3)   State = 0x519ae0555354f94f5ebc1383f68c204d
(3)   Message-Authenticator = 0x035af02d66cd10e8a2147425a3650b35
(3) Restoring &session-state
(3)   &session-state:Framed-MTU = 994
(3)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(3)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(3)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(3)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(3)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(3) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(3)   authorize {
(3)     policy filter_username {
(3)       if (&User-Name) {
(3)       if (&User-Name)  -> TRUE
(3)       if (&User-Name)  {
(3)         if (&User-Name =~ / /) {
(3)         if (&User-Name =~ / /)  -> FALSE
(3)         if (&User-Name =~ /@[^@]*@/ ) {
(3)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(3)         if (&User-Name =~ /\.\./ ) {
(3)         if (&User-Name =~ /\.\./ )  -> FALSE
(3)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(3)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(3)         if (&User-Name =~ /\.$/)  {
(3)         if (&User-Name =~ /\.$/)   -> FALSE
(3)         if (&User-Name =~ /@\./)  {
(3)         if (&User-Name =~ /@\./)   -> FALSE
(3)       } # if (&User-Name)  = notfound
(3)     } # policy filter_username = notfound
(3)     [preprocess] = ok
(3)     [chap] = noop
(3)     [mschap] = noop
(3)     [digest] = noop
(3) suffix: Checking for suffix after "@"
(3) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(3) suffix: No such realm "NULL"
(3)     [suffix] = noop
(3) eap: Peer sent EAP Response (code 2) ID 206 length 6
(3) eap: Continuing tunnel setup
(3)     [eap] = ok
(3)   } # authorize = ok
(3) Found Auth-Type = eap
(3) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(3)   authenticate {
(3) eap: Expiring EAP session with state 0x519ae0555354f94f
(3) eap: Finished EAP session with state 0x519ae0555354f94f
(3) eap: Previous EAP request found for state 0x519ae0555354f94f, released from the list
(3) eap: Peer sent packet with method EAP PEAP (25)
(3) eap: Calling submodule eap_peap to process data
(3) eap_peap: (TLS) Peer ACKed our handshake fragment
(3) eap: Sending EAP Request (code 1) ID 207 length 1000
(3) eap: EAP session adding &reply:State = 0x519ae0555255f94f
(3)     [eap] = handled
(3)   } # authenticate = handled
(3) Using Post-Auth-Type Challenge
(3) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(3)   Challenge { ... } # empty sub-section is ignored
(3) session-state: Saving cached attributes
(3)   Framed-MTU = 994
(3)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(3)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(3)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(3)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(3)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(3) Sent Access-Challenge Id 3 from 127.0.0.1:1812 to 127.0.0.1:33891 length 1064
(3)   EAP-Message = 0x01cf03e81940b365595edec634be72466f496c8cad448e057893222e9d9b96fa51c2d84df387dace2b8dd56e85ea1e27ed302547bc22a35b0349ae7075502f1be4a933467c7ec41b12f969f65caf80e82b77b04c1d46756210be2684f027b347debb97d3bca395775660fe2168969187b5d46b43284bb130757803bdfe082cbf44b37353c4f853131bace8ca9c30290a88b1bf0a680004fe308204fa308203e2a003020102021457604ee8762089eef125d540c0bbf0b5a118a4af300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232303134333731355a170d32343032
(3)   Message-Authenticator = 0x00000000000000000000000000000000
(3)   State = 0x519ae0555255f94f5ebc1383f68c204d
(3) Finished request
Waking up in 4.4 seconds.
(4) Received Access-Request Id 4 from 127.0.0.1:33891 to 127.0.0.1:1812 length 240
(4)   User-Name = "anonymous"
(4)   NAS-IP-Address = 127.0.0.1
(4)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(4)   NAS-Port-Type = Wireless-802.11
(4)   Service-Type = Framed-User
(4)   NAS-Port = 1
(4)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(4)   Connect-Info = "CONNECT 54Mbps 802.11g"
(4)   Acct-Session-Id = "CF9BFBD35CAE8770"
(4)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(4)   WLAN-Pairwise-Cipher = 1027076
(4)   WLAN-Group-Cipher = 1027076
(4)   WLAN-AKM-Suite = 1027073
(4)   WLAN-Group-Mgmt-Cipher = 1027078
(4)   Framed-MTU = 1400
(4)   EAP-Message = 0x02cf00061900
(4)   State = 0x519ae0555255f94f5ebc1383f68c204d
(4)   Message-Authenticator = 0x974f1cca17a2104104fa35ed1606d9c9
(4) Restoring &session-state
(4)   &session-state:Framed-MTU = 994
(4)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(4) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(4)   authorize {
(4)     policy filter_username {
(4)       if (&User-Name) {
(4)       if (&User-Name)  -> TRUE
(4)       if (&User-Name)  {
(4)         if (&User-Name =~ / /) {
(4)         if (&User-Name =~ / /)  -> FALSE
(4)         if (&User-Name =~ /@[^@]*@/ ) {
(4)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(4)         if (&User-Name =~ /\.\./ ) {
(4)         if (&User-Name =~ /\.\./ )  -> FALSE
(4)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(4)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(4)         if (&User-Name =~ /\.$/)  {
(4)         if (&User-Name =~ /\.$/)   -> FALSE
(4)         if (&User-Name =~ /@\./)  {
(4)         if (&User-Name =~ /@\./)   -> FALSE
(4)       } # if (&User-Name)  = notfound
(4)     } # policy filter_username = notfound
(4)     [preprocess] = ok
(4)     [chap] = noop
(4)     [mschap] = noop
(4)     [digest] = noop
(4) suffix: Checking for suffix after "@"
(4) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(4) suffix: No such realm "NULL"
(4)     [suffix] = noop
(4) eap: Peer sent EAP Response (code 2) ID 207 length 6
(4) eap: Continuing tunnel setup
(4)     [eap] = ok
(4)   } # authorize = ok
(4) Found Auth-Type = eap
(4) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(4)   authenticate {
(4) eap: Expiring EAP session with state 0x519ae0555255f94f
(4) eap: Finished EAP session with state 0x519ae0555255f94f
(4) eap: Previous EAP request found for state 0x519ae0555255f94f, released from the list
(4) eap: Peer sent packet with method EAP PEAP (25)
(4) eap: Calling submodule eap_peap to process data
(4) eap_peap: (TLS) Peer ACKed our handshake fragment
(4) eap: Sending EAP Request (code 1) ID 208 length 750
(4) eap: EAP session adding &reply:State = 0x519ae055554af94f
(4)     [eap] = handled
(4)   } # authenticate = handled
(4) Using Post-Auth-Type Challenge
(4) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(4)   Challenge { ... } # empty sub-section is ignored
(4) session-state: Saving cached attributes
(4)   Framed-MTU = 994
(4)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(4)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(4)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(4)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(4)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(4) Sent Access-Challenge Id 4 from 127.0.0.1:1812 to 127.0.0.1:33891 length 812
(4)   EAP-Message = 0x01d002ee1900161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479821457604ee8762089eef125d540c0bbf0b5a118a4af300f0603551d130101ff040530030101ff30360603551d1f042f302d302ba029a0278625687474703a2f2f7777772e6578616d706c652e6f72672f6578616d706c655f63612e63726c300d06092a864886f70d01010b05000382010100a38f6633d2e2daf953e93089c5b4a66c9abe99620e270f6120051d2195bb6972966c6b98bc7cb21016f89ec601899088e642d40ac9f4ac816aecd5c65482432b5385e04b9bdf7129b175bb275e6021db0725fccea1f8daeb4488f004dfe73aee302570804c93d471bdfc1175c9cd6b7e16a895981dd2e189f5e3d482de9e2ed67b800e000fc33fc1d505bef9840b6037ebb7e9d090a4dbf93ef5dc3a9c956c4f17bc65b21468466551d3e57e331cdcc6dfb1f7279eda22b92b9d6875ae09efa1738980
(4)   Message-Authenticator = 0x00000000000000000000000000000000
(4)   State = 0x519ae055554af94f5ebc1383f68c204d
(4) Finished request
Waking up in 4.0 seconds.
(5) Received Access-Request Id 5 from 127.0.0.1:33891 to 127.0.0.1:1812 length 251
(5)   User-Name = "anonymous"
(5)   NAS-IP-Address = 127.0.0.1
(5)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(5)   NAS-Port-Type = Wireless-802.11
(5)   Service-Type = Framed-User
(5)   NAS-Port = 1
(5)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(5)   Connect-Info = "CONNECT 54Mbps 802.11g"
(5)   Acct-Session-Id = "CF9BFBD35CAE8770"
(5)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(5)   WLAN-Pairwise-Cipher = 1027076
(5)   WLAN-Group-Cipher = 1027076
(5)   WLAN-AKM-Suite = 1027073
(5)   WLAN-Group-Mgmt-Cipher = 1027078
(5)   Framed-MTU = 1400
(5)   EAP-Message = 0x02d0001119800000000715030300020230
(5)   State = 0x519ae055554af94f5ebc1383f68c204d
(5)   Message-Authenticator = 0x5016f5965c7afcfa575cc7e50e343e97
(5) Restoring &session-state
(5)   &session-state:Framed-MTU = 994
(5)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(5) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(5)   authorize {
(5)     policy filter_username {
(5)       if (&User-Name) {
(5)       if (&User-Name)  -> TRUE
(5)       if (&User-Name)  {
(5)         if (&User-Name =~ / /) {
(5)         if (&User-Name =~ / /)  -> FALSE
(5)         if (&User-Name =~ /@[^@]*@/ ) {
(5)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(5)         if (&User-Name =~ /\.\./ ) {
(5)         if (&User-Name =~ /\.\./ )  -> FALSE
(5)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(5)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(5)         if (&User-Name =~ /\.$/)  {
(5)         if (&User-Name =~ /\.$/)   -> FALSE
(5)         if (&User-Name =~ /@\./)  {
(5)         if (&User-Name =~ /@\./)   -> FALSE
(5)       } # if (&User-Name)  = notfound
(5)     } # policy filter_username = notfound
(5)     [preprocess] = ok
(5)     [chap] = noop
(5)     [mschap] = noop
(5)     [digest] = noop
(5) suffix: Checking for suffix after "@"
(5) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(5) suffix: No such realm "NULL"
(5)     [suffix] = noop
(5) eap: Peer sent EAP Response (code 2) ID 208 length 17
(5) eap: Continuing tunnel setup
(5)     [eap] = ok
(5)   } # authorize = ok
(5) Found Auth-Type = eap
(5) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(5)   authenticate {
(5) eap: Expiring EAP session with state 0x519ae055554af94f
(5) eap: Finished EAP session with state 0x519ae055554af94f
(5) eap: Previous EAP request found for state 0x519ae055554af94f, released from the list
(5) eap: Peer sent packet with method EAP PEAP (25)
(5) eap: Calling submodule eap_peap to process data
(5) eap_peap: (TLS) EAP Peer says that the final record size will be 7 bytes
(5) eap_peap: (TLS) EAP Got all data (7 bytes)
(5) eap_peap: (TLS) recv TLS 1.2 Alert, fatal unknown_ca
(5) eap_peap: (TLS) The client is informing us that it does not recognize the CA used to issue the server certificate.  Please update the client so that it knows about the CA.
(5) eap_peap: ERROR: (TLS) Alert read:fatal:unknown CA
(5) eap_peap: (TLS) Server : Need to read more data: error
(5) eap_peap: ERROR: (TLS) Failed reading from OpenSSL: error:0A000418:SSL routines::tlsv1 alert unknown ca
(5) eap_peap: (TLS) In Handshake Phase
(5) eap_peap: (TLS) Application data.
(5) eap_peap: ERROR: (TLS) Cannot continue, as the peer is misbehaving.
(5) eap_peap: ERROR: [eaptls process] = fail
(5) eap: ERROR: Failed continuing EAP PEAP (25) session.  EAP sub-module failed
(5) eap: Sending EAP Failure (code 4) ID 208 length 4
(5) eap: Failed in EAP select
(5)     [eap] = invalid
(5)   } # authenticate = invalid
(5) Failed to authenticate the user
(5) Using Post-Auth-Type Reject
(5) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(5)   Post-Auth-Type REJECT {
(5) attr_filter.access_reject: EXPAND %{User-Name}
(5) attr_filter.access_reject:    --> anonymous
(5) attr_filter.access_reject: Matched entry DEFAULT at line 11
(5)     [attr_filter.access_reject] = updated
(5)     [eap] = noop
(5)     policy remove_reply_message_if_eap {
(5)       if (&reply:EAP-Message && &reply:Reply-Message) {
(5)       if (&reply:EAP-Message && &reply:Reply-Message)  -> FALSE
(5)       else {
(5)         [noop] = noop
(5)       } # else = noop
(5)     } # policy remove_reply_message_if_eap = noop
(5)   } # Post-Auth-Type REJECT = updated
(5) Delaying response for 1.000000 seconds
Waking up in 0.3 seconds.
Waking up in 0.6 seconds.
(5) Sending delayed response
(5) Sent Access-Reject Id 5 from 127.0.0.1:1812 to 127.0.0.1:33891 length 44
(5)   EAP-Message = 0x04d00004
(5)   Message-Authenticator = 0x00000000000000000000000000000000
Waking up in 2.7 seconds.
(0) Cleaning up request packet ID 0 with timestamp +5 due to cleanup_delay was reached
(1) Cleaning up request packet ID 1 with timestamp +5 due to cleanup_delay was reached
(2) Cleaning up request packet ID 2 with timestamp +6 due to cleanup_delay was reached
Waking up in 0.4 seconds.
(3) Cleaning up request packet ID 3 with timestamp +6 due to cleanup_delay was reached
Waking up in 0.4 seconds.
(6) Received Access-Request Id 6 from 127.0.0.1:33891 to 127.0.0.1:1812 length 230
(6)   User-Name = "anonymous"
(6)   NAS-IP-Address = 127.0.0.1
(6)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(6)   NAS-Port-Type = Wireless-802.11
(6)   Service-Type = Framed-User
(6)   NAS-Port = 1
(6)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(6)   Connect-Info = "CONNECT 54Mbps 802.11g"
(6)   Acct-Session-Id = "CF9BFBD35CAE8770"
(6)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(6)   WLAN-Pairwise-Cipher = 1027076
(6)   WLAN-Group-Cipher = 1027076
(6)   WLAN-AKM-Suite = 1027073
(6)   WLAN-Group-Mgmt-Cipher = 1027078
(6)   Framed-MTU = 1400
(6)   EAP-Message = 0x02c5000e01616e6f6e796d6f7573
(6)   Message-Authenticator = 0x55d9d4b8dca7fa91992cb56530fa65f9
(6) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(6)   authorize {
(6)     policy filter_username {
(6)       if (&User-Name) {
(6)       if (&User-Name)  -> TRUE
(6)       if (&User-Name)  {
(6)         if (&User-Name =~ / /) {
(6)         if (&User-Name =~ / /)  -> FALSE
(6)         if (&User-Name =~ /@[^@]*@/ ) {
(6)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(6)         if (&User-Name =~ /\.\./ ) {
(6)         if (&User-Name =~ /\.\./ )  -> FALSE
(6)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(6)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(6)         if (&User-Name =~ /\.$/)  {
(6)         if (&User-Name =~ /\.$/)   -> FALSE
(6)         if (&User-Name =~ /@\./)  {
(6)         if (&User-Name =~ /@\./)   -> FALSE
(6)       } # if (&User-Name)  = notfound
(6)     } # policy filter_username = notfound
(6)     [preprocess] = ok
(6)     [chap] = noop
(6)     [mschap] = noop
(6)     [digest] = noop
(6) suffix: Checking for suffix after "@"
(6) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(6) suffix: No such realm "NULL"
(6)     [suffix] = noop
(6) eap: Peer sent EAP Response (code 2) ID 197 length 14
(6) eap: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
(6)     [eap] = ok
(6)   } # authorize = ok
(6) Found Auth-Type = eap
(6) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(6)   authenticate {
(6) eap: Peer sent packet with method EAP Identity (1)
(6) eap: Calling submodule eap_md5 to process data
(6) eap_md5: Issuing MD5 Challenge
(6) eap: Sending EAP Request (code 1) ID 198 length 22
(6) eap: EAP session adding &reply:State = 0x6b52f3c36b94f7d5
(6)     [eap] = handled
(6)   } # authenticate = handled
(6) Using Post-Auth-Type Challenge
(6) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(6)   Challenge { ... } # empty sub-section is ignored
(6) Sent Access-Challenge Id 6 from 127.0.0.1:1812 to 127.0.0.1:33891 length 80
(6)   EAP-Message = 0x01c6001604104c6a7284d79f054fa5c3cf7faf2b5a1f
(6)   Message-Authenticator = 0x00000000000000000000000000000000
(6)   State = 0x6b52f3c36b94f7d575c418d1e5455e32
(6) Finished request
Waking up in 0.1 seconds.
(7) Received Access-Request Id 7 from 127.0.0.1:33891 to 127.0.0.1:1812 length 241
(7)   User-Name = "anonymous"
(7)   NAS-IP-Address = 127.0.0.1
(7)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(7)   NAS-Port-Type = Wireless-802.11
(7)   Service-Type = Framed-User
(7)   NAS-Port = 1
(7)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(7)   Connect-Info = "CONNECT 54Mbps 802.11g"
(7)   Acct-Session-Id = "CF9BFBD35CAE8770"
(7)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(7)   WLAN-Pairwise-Cipher = 1027076
(7)   WLAN-Group-Cipher = 1027076
(7)   WLAN-AKM-Suite = 1027073
(7)   WLAN-Group-Mgmt-Cipher = 1027078
(7)   Framed-MTU = 1400
(7)   EAP-Message = 0x02c60007031915
(7)   State = 0x6b52f3c36b94f7d575c418d1e5455e32
(7)   Message-Authenticator = 0xdee534ca58200310c6eaa04102831924
(7) session-state: No cached attributes
(7) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(7)   authorize {
(7)     policy filter_username {
(7)       if (&User-Name) {
(7)       if (&User-Name)  -> TRUE
(7)       if (&User-Name)  {
(7)         if (&User-Name =~ / /) {
(7)         if (&User-Name =~ / /)  -> FALSE
(7)         if (&User-Name =~ /@[^@]*@/ ) {
(7)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(7)         if (&User-Name =~ /\.\./ ) {
(7)         if (&User-Name =~ /\.\./ )  -> FALSE
(7)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(7)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(7)         if (&User-Name =~ /\.$/)  {
(7)         if (&User-Name =~ /\.$/)   -> FALSE
(7)         if (&User-Name =~ /@\./)  {
(7)         if (&User-Name =~ /@\./)   -> FALSE
(7)       } # if (&User-Name)  = notfound
(7)     } # policy filter_username = notfound
(7)     [preprocess] = ok
(7)     [chap] = noop
(7)     [mschap] = noop
(7)     [digest] = noop
(7) suffix: Checking for suffix after "@"
(7) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(7) suffix: No such realm "NULL"
(7)     [suffix] = noop
(7) eap: Peer sent EAP Response (code 2) ID 198 length 7
(7) eap: No EAP Start, assuming it's an on-going EAP conversation
(7)     [eap] = updated
(7)     [files] = noop
(7)     [expiration] = noop
(7)     [logintime] = noop
Not doing PAP as Auth-Type is already set.
(7)     [pap] = noop
(7)   } # authorize = updated
(7) Found Auth-Type = eap
(7) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(7)   authenticate {
(7) eap: Expiring EAP session with state 0x6b52f3c36b94f7d5
(7) eap: Finished EAP session with state 0x6b52f3c36b94f7d5
(7) eap: Previous EAP request found for state 0x6b52f3c36b94f7d5, released from the list
(7) eap: Peer sent packet with method EAP NAK (3)
(7) eap: Found mutually acceptable type PEAP (25)
(7) eap: Calling submodule eap_peap to process data
(7) eap_peap: (TLS) Initiating new session
(7) eap: Sending EAP Request (code 1) ID 199 length 6
(7) eap: EAP session adding &reply:State = 0x6b52f3c36a95ead5
(7)     [eap] = handled
(7)   } # authenticate = handled
(7) Using Post-Auth-Type Challenge
(7) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(7)   Challenge { ... } # empty sub-section is ignored
(7) session-state: Saving cached attributes
(7)   Framed-MTU = 994
(7) Sent Access-Challenge Id 7 from 127.0.0.1:1812 to 127.0.0.1:33891 length 64
(7)   EAP-Message = 0x01c700061920
(7)   Message-Authenticator = 0x00000000000000000000000000000000
(7)   State = 0x6b52f3c36a95ead575c418d1e5455e32
(7) Finished request
(8) Received Access-Request Id 8 from 127.0.0.1:33891 to 127.0.0.1:1812 length 476
(8)   User-Name = "anonymous"
(8)   NAS-IP-Address = 127.0.0.1
(8)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(8)   NAS-Port-Type = Wireless-802.11
(8)   Service-Type = Framed-User
(8)   NAS-Port = 1
(8)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(8)   Connect-Info = "CONNECT 54Mbps 802.11g"
(8)   Acct-Session-Id = "CF9BFBD35CAE8770"
(8)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(8)   WLAN-Pairwise-Cipher = 1027076
(8)   WLAN-Group-Cipher = 1027076
(8)   WLAN-AKM-Suite = 1027073
(8)   WLAN-Group-Mgmt-Cipher = 1027078
(8)   Framed-MTU = 1400
(8)   EAP-Message = 0x02c700f21980000000e816030300e3010000df030300000046c04ab8972c8337818f20d0e54715c338a22a126af0b6a5394609f239000076c02cc030c0adc024c028c00ac014c0afc05dc061c049c04dc02bc02fc0acc023c027c009c013c0aec05cc060c048c04c009dc09d003d0035c032c02ac00fc02ec026c005c0a1c05fc063c051c04bc04fc03d009cc09c003c002fc031c029c00ec02dc025c004c0a0c05ec062c050c04ac04ec03c00ff01000040000a0010000e001d001700180019001a001b001c000d001600140603050306010501040303030401030102030201000b00020100001600000017000000230000
(8)   State = 0x6b52f3c36a95ead575c418d1e5455e32
(8)   Message-Authenticator = 0x98bf486e6c919d3c8c145ee690a15cc9
(8) Restoring &session-state
(8)   &session-state:Framed-MTU = 994
(8) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(8)   authorize {
(8)     policy filter_username {
(8)       if (&User-Name) {
(8)       if (&User-Name)  -> TRUE
(8)       if (&User-Name)  {
(8)         if (&User-Name =~ / /) {
(8)         if (&User-Name =~ / /)  -> FALSE
(8)         if (&User-Name =~ /@[^@]*@/ ) {
(8)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(8)         if (&User-Name =~ /\.\./ ) {
(8)         if (&User-Name =~ /\.\./ )  -> FALSE
(8)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(8)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(8)         if (&User-Name =~ /\.$/)  {
(8)         if (&User-Name =~ /\.$/)   -> FALSE
(8)         if (&User-Name =~ /@\./)  {
(8)         if (&User-Name =~ /@\./)   -> FALSE
(8)       } # if (&User-Name)  = notfound
(8)     } # policy filter_username = notfound
(8)     [preprocess] = ok
(8)     [chap] = noop
(8)     [mschap] = noop
(8)     [digest] = noop
(8) suffix: Checking for suffix after "@"
(8) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(8) suffix: No such realm "NULL"
(8)     [suffix] = noop
(8) eap: Peer sent EAP Response (code 2) ID 199 length 242
(8) eap: Continuing tunnel setup
(8)     [eap] = ok
(8)   } # authorize = ok
(8) Found Auth-Type = eap
(8) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(8)   authenticate {
(8) eap: Expiring EAP session with state 0x6b52f3c36a95ead5
(8) eap: Finished EAP session with state 0x6b52f3c36a95ead5
(8) eap: Previous EAP request found for state 0x6b52f3c36a95ead5, released from the list
(8) eap: Peer sent packet with method EAP PEAP (25)
(8) eap: Calling submodule eap_peap to process data
(8) eap_peap: (TLS) EAP Peer says that the final record size will be 232 bytes
(8) eap_peap: (TLS) EAP Got all data (232 bytes)
(8) eap_peap: (TLS) Handshake state - before SSL initialization
(8) eap_peap: (TLS) Handshake state - Server before SSL initialization
(8) eap_peap: (TLS) Handshake state - Server before SSL initialization
(8) eap_peap: (TLS) recv TLS 1.3 Handshake, ClientHello
(8) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read client hello
(8) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHello
(8) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server hello
(8) eap_peap: (TLS) send TLS 1.2 Handshake, Certificate
(8) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write certificate
(8) eap_peap: (TLS) send TLS 1.2 Handshake, ServerKeyExchange
(8) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write key exchange
(8) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHelloDone
(8) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server done
(8) eap_peap: (TLS) Server : Need to read more data: SSLv3/TLS write server done
(8) eap_peap: (TLS) In Handshake Phase
(8) eap: Sending EAP Request (code 1) ID 200 length 1004
(8) eap: EAP session adding &reply:State = 0x6b52f3c3699aead5
(8)     [eap] = handled
(8)   } # authenticate = handled
(8) Using Post-Auth-Type Challenge
(8) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(8)   Challenge { ... } # empty sub-section is ignored
(8) session-state: Saving cached attributes
(8)   Framed-MTU = 994
(8)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(8) Sent Access-Challenge Id 8 from 127.0.0.1:1812 to 127.0.0.1:33891 length 1068
(8)   EAP-Message = 0x01c803ec19c000000aac160303003d0200003903031e7c44aeeee8d9b8f5157e82e8c00b558e98fe99ffaff514cadaabf01654e0cd00c030000011ff01000100000b00040300010200170000160303092b0b0009270009240004203082041c30820304a003020102020101300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232303134333732315a170d3234303231383134333732315a307c310b3009060355040613024652310f300d06035504080c0652616469757331153013060355040a0c0c4578616d706c6520496e632e3123302106035504030c1a4578616d70
(8)   Message-Authenticator = 0x00000000000000000000000000000000
(8)   State = 0x6b52f3c3699aead575c418d1e5455e32
(8) Finished request
(4) Cleaning up request packet ID 4 with timestamp +6 due to cleanup_delay was reached
Waking up in 0.3 seconds.
(5) Cleaning up request packet ID 5 with timestamp +7 due to cleanup_delay was reached
Waking up in 4.4 seconds.
(9) Received Access-Request Id 9 from 127.0.0.1:33891 to 127.0.0.1:1812 length 240
(9)   User-Name = "anonymous"
(9)   NAS-IP-Address = 127.0.0.1
(9)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(9)   NAS-Port-Type = Wireless-802.11
(9)   Service-Type = Framed-User
(9)   NAS-Port = 1
(9)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(9)   Connect-Info = "CONNECT 54Mbps 802.11g"
(9)   Acct-Session-Id = "CF9BFBD35CAE8770"
(9)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(9)   WLAN-Pairwise-Cipher = 1027076
(9)   WLAN-Group-Cipher = 1027076
(9)   WLAN-AKM-Suite = 1027073
(9)   WLAN-Group-Mgmt-Cipher = 1027078
(9)   Framed-MTU = 1400
(9)   EAP-Message = 0x02c800061900
(9)   State = 0x6b52f3c3699aead575c418d1e5455e32
(9)   Message-Authenticator = 0x2669d48eb72f6f6dc36e466c09617f89
(9) Restoring &session-state
(9)   &session-state:Framed-MTU = 994
(9)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(9) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(9)   authorize {
(9)     policy filter_username {
(9)       if (&User-Name) {
(9)       if (&User-Name)  -> TRUE
(9)       if (&User-Name)  {
(9)         if (&User-Name =~ / /) {
(9)         if (&User-Name =~ / /)  -> FALSE
(9)         if (&User-Name =~ /@[^@]*@/ ) {
(9)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(9)         if (&User-Name =~ /\.\./ ) {
(9)         if (&User-Name =~ /\.\./ )  -> FALSE
(9)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(9)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(9)         if (&User-Name =~ /\.$/)  {
(9)         if (&User-Name =~ /\.$/)   -> FALSE
(9)         if (&User-Name =~ /@\./)  {
(9)         if (&User-Name =~ /@\./)   -> FALSE
(9)       } # if (&User-Name)  = notfound
(9)     } # policy filter_username = notfound
(9)     [preprocess] = ok
(9)     [chap] = noop
(9)     [mschap] = noop
(9)     [digest] = noop
(9) suffix: Checking for suffix after "@"
(9) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(9) suffix: No such realm "NULL"
(9)     [suffix] = noop
(9) eap: Peer sent EAP Response (code 2) ID 200 length 6
(9) eap: Continuing tunnel setup
(9)     [eap] = ok
(9)   } # authorize = ok
(9) Found Auth-Type = eap
(9) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(9)   authenticate {
(9) eap: Expiring EAP session with state 0x6b52f3c3699aead5
(9) eap: Finished EAP session with state 0x6b52f3c3699aead5
(9) eap: Previous EAP request found for state 0x6b52f3c3699aead5, released from the list
(9) eap: Peer sent packet with method EAP PEAP (25)
(9) eap: Calling submodule eap_peap to process data
(9) eap_peap: (TLS) Peer ACKed our handshake fragment
(9) eap: Sending EAP Request (code 1) ID 201 length 1000
(9) eap: EAP session adding &reply:State = 0x6b52f3c3689bead5
(9)     [eap] = handled
(9)   } # authenticate = handled
(9) Using Post-Auth-Type Challenge
(9) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(9)   Challenge { ... } # empty sub-section is ignored
(9) session-state: Saving cached attributes
(9)   Framed-MTU = 994
(9)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(9)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(9)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(9)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(9)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(9) Sent Access-Challenge Id 9 from 127.0.0.1:1812 to 127.0.0.1:33891 length 1064
(9)   EAP-Message = 0x01c903e81940b365595edec634be72466f496c8cad448e057893222e9d9b96fa51c2d84df387dace2b8dd56e85ea1e27ed302547bc22a35b0349ae7075502f1be4a933467c7ec41b12f969f65caf80e82b77b04c1d46756210be2684f027b347debb97d3bca395775660fe2168969187b5d46b43284bb130757803bdfe082cbf44b37353c4f853131bace8ca9c30290a88b1bf0a680004fe308204fa308203e2a003020102021457604ee8762089eef125d540c0bbf0b5a118a4af300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232303134333731355a170d32343032
(9)   Message-Authenticator = 0x00000000000000000000000000000000
(9)   State = 0x6b52f3c3689bead575c418d1e5455e32
(9) Finished request
Waking up in 4.4 seconds.
(10) Received Access-Request Id 10 from 127.0.0.1:33891 to 127.0.0.1:1812 length 240
(10)   User-Name = "anonymous"
(10)   NAS-IP-Address = 127.0.0.1
(10)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(10)   NAS-Port-Type = Wireless-802.11
(10)   Service-Type = Framed-User
(10)   NAS-Port = 1
(10)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(10)   Connect-Info = "CONNECT 54Mbps 802.11g"
(10)   Acct-Session-Id = "CF9BFBD35CAE8770"
(10)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(10)   WLAN-Pairwise-Cipher = 1027076
(10)   WLAN-Group-Cipher = 1027076
(10)   WLAN-AKM-Suite = 1027073
(10)   WLAN-Group-Mgmt-Cipher = 1027078
(10)   Framed-MTU = 1400
(10)   EAP-Message = 0x02c900061900
(10)   State = 0x6b52f3c3689bead575c418d1e5455e32
(10)   Message-Authenticator = 0x2b211c7f4529617734a2a6580e5aa468
(10) Restoring &session-state
(10)   &session-state:Framed-MTU = 994
(10)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(10)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(10)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(10)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(10)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(10) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(10)   authorize {
(10)     policy filter_username {
(10)       if (&User-Name) {
(10)       if (&User-Name)  -> TRUE
(10)       if (&User-Name)  {
(10)         if (&User-Name =~ / /) {
(10)         if (&User-Name =~ / /)  -> FALSE
(10)         if (&User-Name =~ /@[^@]*@/ ) {
(10)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(10)         if (&User-Name =~ /\.\./ ) {
(10)         if (&User-Name =~ /\.\./ )  -> FALSE
(10)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(10)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(10)         if (&User-Name =~ /\.$/)  {
(10)         if (&User-Name =~ /\.$/)   -> FALSE
(10)         if (&User-Name =~ /@\./)  {
(10)         if (&User-Name =~ /@\./)   -> FALSE
(10)       } # if (&User-Name)  = notfound
(10)     } # policy filter_username = notfound
(10)     [preprocess] = ok
(10)     [chap] = noop
(10)     [mschap] = noop
(10)     [digest] = noop
(10) suffix: Checking for suffix after "@"
(10) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(10) suffix: No such realm "NULL"
(10)     [suffix] = noop
(10) eap: Peer sent EAP Response (code 2) ID 201 length 6
(10) eap: Continuing tunnel setup
(10)     [eap] = ok
(10)   } # authorize = ok
(10) Found Auth-Type = eap
(10) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(10)   authenticate {
(10) eap: Expiring EAP session with state 0x6b52f3c3689bead5
(10) eap: Finished EAP session with state 0x6b52f3c3689bead5
(10) eap: Previous EAP request found for state 0x6b52f3c3689bead5, released from the list
(10) eap: Peer sent packet with method EAP PEAP (25)
(10) eap: Calling submodule eap_peap to process data
(10) eap_peap: (TLS) Peer ACKed our handshake fragment
(10) eap: Sending EAP Request (code 1) ID 202 length 750
(10) eap: EAP session adding &reply:State = 0x6b52f3c36f98ead5
(10)     [eap] = handled
(10)   } # authenticate = handled
(10) Using Post-Auth-Type Challenge
(10) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(10)   Challenge { ... } # empty sub-section is ignored
(10) session-state: Saving cached attributes
(10)   Framed-MTU = 994
(10)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(10)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(10)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(10)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(10)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(10) Sent Access-Challenge Id 10 from 127.0.0.1:1812 to 127.0.0.1:33891 length 812
(10)   EAP-Message = 0x01ca02ee1900161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479821457604ee8762089eef125d540c0bbf0b5a118a4af300f0603551d130101ff040530030101ff30360603551d1f042f302d302ba029a0278625687474703a2f2f7777772e6578616d706c652e6f72672f6578616d706c655f63612e63726c300d06092a864886f70d01010b05000382010100a38f6633d2e2daf953e93089c5b4a66c9abe99620e270f6120051d2195bb6972966c6b98bc7cb21016f89ec601899088e642d40ac9f4ac816aecd5c65482432b5385e04b9bdf7129b175bb275e6021db0725fccea1f8daeb4488f004dfe73aee302570804c93d471bdfc1175c9cd6b7e16a895981dd2e189f5e3d482de9e2ed67b800e000fc33fc1d505bef9840b6037ebb7e9d090a4dbf93ef5dc3a9c956c4f17bc65b21468466551d3e57e331cdcc6dfb1f7279eda22b92b9d6875ae09efa1738980
(10)   Message-Authenticator = 0x00000000000000000000000000000000
(10)   State = 0x6b52f3c36f98ead575c418d1e5455e32
(10) Finished request
Waking up in 4.0 seconds.
(11) Received Access-Request Id 11 from 127.0.0.1:33891 to 127.0.0.1:1812 length 251
(11)   User-Name = "anonymous"
(11)   NAS-IP-Address = 127.0.0.1
(11)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(11)   NAS-Port-Type = Wireless-802.11
(11)   Service-Type = Framed-User
(11)   NAS-Port = 1
(11)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(11)   Connect-Info = "CONNECT 54Mbps 802.11g"
(11)   Acct-Session-Id = "CF9BFBD35CAE8770"
(11)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(11)   WLAN-Pairwise-Cipher = 1027076
(11)   WLAN-Group-Cipher = 1027076
(11)   WLAN-AKM-Suite = 1027073
(11)   WLAN-Group-Mgmt-Cipher = 1027078
(11)   Framed-MTU = 1400
(11)   EAP-Message = 0x02ca001119800000000715030300020230
(11)   State = 0x6b52f3c36f98ead575c418d1e5455e32
(11)   Message-Authenticator = 0x25df7b741843126f50f23f5a5e5d8857
(11) Restoring &session-state
(11)   &session-state:Framed-MTU = 994
(11)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(11)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(11)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(11)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(11)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(11) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(11)   authorize {
(11)     policy filter_username {
(11)       if (&User-Name) {
(11)       if (&User-Name)  -> TRUE
(11)       if (&User-Name)  {
(11)         if (&User-Name =~ / /) {
(11)         if (&User-Name =~ / /)  -> FALSE
(11)         if (&User-Name =~ /@[^@]*@/ ) {
(11)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(11)         if (&User-Name =~ /\.\./ ) {
(11)         if (&User-Name =~ /\.\./ )  -> FALSE
(11)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(11)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(11)         if (&User-Name =~ /\.$/)  {
(11)         if (&User-Name =~ /\.$/)   -> FALSE
(11)         if (&User-Name =~ /@\./)  {
(11)         if (&User-Name =~ /@\./)   -> FALSE
(11)       } # if (&User-Name)  = notfound
(11)     } # policy filter_username = notfound
(11)     [preprocess] = ok
(11)     [chap] = noop
(11)     [mschap] = noop
(11)     [digest] = noop
(11) suffix: Checking for suffix after "@"
(11) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(11) suffix: No such realm "NULL"
(11)     [suffix] = noop
(11) eap: Peer sent EAP Response (code 2) ID 202 length 17
(11) eap: Continuing tunnel setup
(11)     [eap] = ok
(11)   } # authorize = ok
(11) Found Auth-Type = eap
(11) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(11)   authenticate {
(11) eap: Expiring EAP session with state 0x6b52f3c36f98ead5
(11) eap: Finished EAP session with state 0x6b52f3c36f98ead5
(11) eap: Previous EAP request found for state 0x6b52f3c36f98ead5, released from the list
(11) eap: Peer sent packet with method EAP PEAP (25)
(11) eap: Calling submodule eap_peap to process data
(11) eap_peap: (TLS) EAP Peer says that the final record size will be 7 bytes
(11) eap_peap: (TLS) EAP Got all data (7 bytes)
(11) eap_peap: (TLS) recv TLS 1.2 Alert, fatal unknown_ca
(11) eap_peap: (TLS) The client is informing us that it does not recognize the CA used to issue the server certificate.  Please update the client so that it knows about the CA.
(11) eap_peap: ERROR: (TLS) Alert read:fatal:unknown CA
(11) eap_peap: (TLS) Server : Need to read more data: error
(11) eap_peap: ERROR: (TLS) Failed reading from OpenSSL: error:0A000418:SSL routines::tlsv1 alert unknown ca
(11) eap_peap: (TLS) In Handshake Phase
(11) eap_peap: (TLS) Application data.
(11) eap_peap: ERROR: (TLS) Cannot continue, as the peer is misbehaving.
(11) eap_peap: ERROR: [eaptls process] = fail
(11) eap: ERROR: Failed continuing EAP PEAP (25) session.  EAP sub-module failed
(11) eap: Sending EAP Failure (code 4) ID 202 length 4
(11) eap: Failed in EAP select
(11)     [eap] = invalid
(11)   } # authenticate = invalid
(11) Failed to authenticate the user
(11) Using Post-Auth-Type Reject
(11) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(11)   Post-Auth-Type REJECT {
(11) attr_filter.access_reject: EXPAND %{User-Name}
(11) attr_filter.access_reject:    --> anonymous
(11) attr_filter.access_reject: Matched entry DEFAULT at line 11
(11)     [attr_filter.access_reject] = updated
(11)     [eap] = noop
(11)     policy remove_reply_message_if_eap {
(11)       if (&reply:EAP-Message && &reply:Reply-Message) {
(11)       if (&reply:EAP-Message && &reply:Reply-Message)  -> FALSE
(11)       else {
(11)         [noop] = noop
(11)       } # else = noop
(11)     } # policy remove_reply_message_if_eap = noop
(11)   } # Post-Auth-Type REJECT = updated
(11) Delaying response for 1.000000 seconds
Waking up in 0.3 seconds.
Waking up in 0.6 seconds.
(11) Sending delayed response
(11) Sent Access-Reject Id 11 from 127.0.0.1:1812 to 127.0.0.1:33891 length 44
(11)   EAP-Message = 0x04ca0004
(11)   Message-Authenticator = 0x00000000000000000000000000000000
Waking up in 2.6 seconds.
(6) Cleaning up request packet ID 6 with timestamp +11 due to cleanup_delay was reached
(7) Cleaning up request packet ID 7 with timestamp +11 due to cleanup_delay was reached
(8) Cleaning up request packet ID 8 with timestamp +11 due to cleanup_delay was reached
Waking up in 0.4 seconds.
(9) Cleaning up request packet ID 9 with timestamp +12 due to cleanup_delay was reached
Waking up in 0.4 seconds.
(12) Received Access-Request Id 12 from 127.0.0.1:33891 to 127.0.0.1:1812 length 230
(12)   User-Name = "anonymous"
(12)   NAS-IP-Address = 127.0.0.1
(12)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(12)   NAS-Port-Type = Wireless-802.11
(12)   Service-Type = Framed-User
(12)   NAS-Port = 1
(12)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(12)   Connect-Info = "CONNECT 54Mbps 802.11g"
(12)   Acct-Session-Id = "CF9BFBD35CAE8770"
(12)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(12)   WLAN-Pairwise-Cipher = 1027076
(12)   WLAN-Group-Cipher = 1027076
(12)   WLAN-AKM-Suite = 1027073
(12)   WLAN-Group-Mgmt-Cipher = 1027078
(12)   Framed-MTU = 1400
(12)   EAP-Message = 0x022a000e01616e6f6e796d6f7573
(12)   Message-Authenticator = 0x327df0522b5035ae14943b22c3d97617
(12) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(12)   authorize {
(12)     policy filter_username {
(12)       if (&User-Name) {
(12)       if (&User-Name)  -> TRUE
(12)       if (&User-Name)  {
(12)         if (&User-Name =~ / /) {
(12)         if (&User-Name =~ / /)  -> FALSE
(12)         if (&User-Name =~ /@[^@]*@/ ) {
(12)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(12)         if (&User-Name =~ /\.\./ ) {
(12)         if (&User-Name =~ /\.\./ )  -> FALSE
(12)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(12)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(12)         if (&User-Name =~ /\.$/)  {
(12)         if (&User-Name =~ /\.$/)   -> FALSE
(12)         if (&User-Name =~ /@\./)  {
(12)         if (&User-Name =~ /@\./)   -> FALSE
(12)       } # if (&User-Name)  = notfound
(12)     } # policy filter_username = notfound
(12)     [preprocess] = ok
(12)     [chap] = noop
(12)     [mschap] = noop
(12)     [digest] = noop
(12) suffix: Checking for suffix after "@"
(12) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(12) suffix: No such realm "NULL"
(12)     [suffix] = noop
(12) eap: Peer sent EAP Response (code 2) ID 42 length 14
(12) eap: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
(12)     [eap] = ok
(12)   } # authorize = ok
(12) Found Auth-Type = eap
(12) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(12)   authenticate {
(12) eap: Peer sent packet with method EAP Identity (1)
(12) eap: Calling submodule eap_md5 to process data
(12) eap_md5: Issuing MD5 Challenge
(12) eap: Sending EAP Request (code 1) ID 43 length 22
(12) eap: EAP session adding &reply:State = 0xee105cecee3b58f2
(12)     [eap] = handled
(12)   } # authenticate = handled
(12) Using Post-Auth-Type Challenge
(12) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(12)   Challenge { ... } # empty sub-section is ignored
(12) Sent Access-Challenge Id 12 from 127.0.0.1:1812 to 127.0.0.1:33891 length 80
(12)   EAP-Message = 0x012b001604101a07e13e33f9e4fcefc8c2c718ea764f
(12)   Message-Authenticator = 0x00000000000000000000000000000000
(12)   State = 0xee105cecee3b58f263a401c34af4a668
(12) Finished request
Waking up in 0.1 seconds.
(13) Received Access-Request Id 13 from 127.0.0.1:33891 to 127.0.0.1:1812 length 241
(13)   User-Name = "anonymous"
(13)   NAS-IP-Address = 127.0.0.1
(13)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(13)   NAS-Port-Type = Wireless-802.11
(13)   Service-Type = Framed-User
(13)   NAS-Port = 1
(13)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(13)   Connect-Info = "CONNECT 54Mbps 802.11g"
(13)   Acct-Session-Id = "CF9BFBD35CAE8770"
(13)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(13)   WLAN-Pairwise-Cipher = 1027076
(13)   WLAN-Group-Cipher = 1027076
(13)   WLAN-AKM-Suite = 1027073
(13)   WLAN-Group-Mgmt-Cipher = 1027078
(13)   Framed-MTU = 1400
(13)   EAP-Message = 0x022b0007031915
(13)   State = 0xee105cecee3b58f263a401c34af4a668
(13)   Message-Authenticator = 0xb7336eeab5a6ed74a3543b0ebded6989
(13) session-state: No cached attributes
(13) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(13)   authorize {
(13)     policy filter_username {
(13)       if (&User-Name) {
(13)       if (&User-Name)  -> TRUE
(13)       if (&User-Name)  {
(13)         if (&User-Name =~ / /) {
(13)         if (&User-Name =~ / /)  -> FALSE
(13)         if (&User-Name =~ /@[^@]*@/ ) {
(13)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(13)         if (&User-Name =~ /\.\./ ) {
(13)         if (&User-Name =~ /\.\./ )  -> FALSE
(13)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(13)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(13)         if (&User-Name =~ /\.$/)  {
(13)         if (&User-Name =~ /\.$/)   -> FALSE
(13)         if (&User-Name =~ /@\./)  {
(13)         if (&User-Name =~ /@\./)   -> FALSE
(13)       } # if (&User-Name)  = notfound
(13)     } # policy filter_username = notfound
(13)     [preprocess] = ok
(13)     [chap] = noop
(13)     [mschap] = noop
(13)     [digest] = noop
(13) suffix: Checking for suffix after "@"
(13) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(13) suffix: No such realm "NULL"
(13)     [suffix] = noop
(13) eap: Peer sent EAP Response (code 2) ID 43 length 7
(13) eap: No EAP Start, assuming it's an on-going EAP conversation
(13)     [eap] = updated
(13)     [files] = noop
(13)     [expiration] = noop
(13)     [logintime] = noop
Not doing PAP as Auth-Type is already set.
(13)     [pap] = noop
(13)   } # authorize = updated
(13) Found Auth-Type = eap
(13) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(13)   authenticate {
(13) eap: Expiring EAP session with state 0xee105cecee3b58f2
(13) eap: Finished EAP session with state 0xee105cecee3b58f2
(13) eap: Previous EAP request found for state 0xee105cecee3b58f2, released from the list
(13) eap: Peer sent packet with method EAP NAK (3)
(13) eap: Found mutually acceptable type PEAP (25)
(13) eap: Calling submodule eap_peap to process data
(13) eap_peap: (TLS) Initiating new session
(13) eap: Sending EAP Request (code 1) ID 44 length 6
(13) eap: EAP session adding &reply:State = 0xee105cecef3c45f2
(13)     [eap] = handled
(13)   } # authenticate = handled
(13) Using Post-Auth-Type Challenge
(13) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(13)   Challenge { ... } # empty sub-section is ignored
(13) session-state: Saving cached attributes
(13)   Framed-MTU = 994
(13) Sent Access-Challenge Id 13 from 127.0.0.1:1812 to 127.0.0.1:33891 length 64
(13)   EAP-Message = 0x012c00061920
(13)   Message-Authenticator = 0x00000000000000000000000000000000
(13)   State = 0xee105cecef3c45f263a401c34af4a668
(13) Finished request
Waking up in 0.1 seconds.
(14) Received Access-Request Id 14 from 127.0.0.1:33891 to 127.0.0.1:1812 length 476
(14)   User-Name = "anonymous"
(14)   NAS-IP-Address = 127.0.0.1
(14)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(14)   NAS-Port-Type = Wireless-802.11
(14)   Service-Type = Framed-User
(14)   NAS-Port = 1
(14)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(14)   Connect-Info = "CONNECT 54Mbps 802.11g"
(14)   Acct-Session-Id = "CF9BFBD35CAE8770"
(14)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(14)   WLAN-Pairwise-Cipher = 1027076
(14)   WLAN-Group-Cipher = 1027076
(14)   WLAN-AKM-Suite = 1027073
(14)   WLAN-Group-Mgmt-Cipher = 1027078
(14)   Framed-MTU = 1400
(14)   EAP-Message = 0x022c00f21980000000e816030300e3010000df03030000004c4a536ff88f0c81480230e960f57b286c90c080db5155152407f2bcdf000076c02cc030c0adc024c028c00ac014c0afc05dc061c049c04dc02bc02fc0acc023c027c009c013c0aec05cc060c048c04c009dc09d003d0035c032c02ac00fc02ec026c005c0a1c05fc063c051c04bc04fc03d009cc09c003c002fc031c029c00ec02dc025c004c0a0c05ec062c050c04ac04ec03c00ff01000040000a0010000e001d001700180019001a001b001c000d001600140603050306010501040303030401030102030201000b00020100001600000017000000230000
(14)   State = 0xee105cecef3c45f263a401c34af4a668
(14)   Message-Authenticator = 0xf56bdf3012e9465ef54a13feac2a2d92
(14) Restoring &session-state
(14)   &session-state:Framed-MTU = 994
(14) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(14)   authorize {
(14)     policy filter_username {
(14)       if (&User-Name) {
(14)       if (&User-Name)  -> TRUE
(14)       if (&User-Name)  {
(14)         if (&User-Name =~ / /) {
(14)         if (&User-Name =~ / /)  -> FALSE
(14)         if (&User-Name =~ /@[^@]*@/ ) {
(14)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(14)         if (&User-Name =~ /\.\./ ) {
(14)         if (&User-Name =~ /\.\./ )  -> FALSE
(14)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(14)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(14)         if (&User-Name =~ /\.$/)  {
(14)         if (&User-Name =~ /\.$/)   -> FALSE
(14)         if (&User-Name =~ /@\./)  {
(14)         if (&User-Name =~ /@\./)   -> FALSE
(14)       } # if (&User-Name)  = notfound
(14)     } # policy filter_username = notfound
(14)     [preprocess] = ok
(14)     [chap] = noop
(14)     [mschap] = noop
(14)     [digest] = noop
(14) suffix: Checking for suffix after "@"
(14) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(14) suffix: No such realm "NULL"
(14)     [suffix] = noop
(14) eap: Peer sent EAP Response (code 2) ID 44 length 242
(14) eap: Continuing tunnel setup
(14)     [eap] = ok
(14)   } # authorize = ok
(14) Found Auth-Type = eap
(14) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(14)   authenticate {
(14) eap: Expiring EAP session with state 0xee105cecef3c45f2
(14) eap: Finished EAP session with state 0xee105cecef3c45f2
(14) eap: Previous EAP request found for state 0xee105cecef3c45f2, released from the list
(14) eap: Peer sent packet with method EAP PEAP (25)
(14) eap: Calling submodule eap_peap to process data
(14) eap_peap: (TLS) EAP Peer says that the final record size will be 232 bytes
(14) eap_peap: (TLS) EAP Got all data (232 bytes)
(14) eap_peap: (TLS) Handshake state - before SSL initialization
(14) eap_peap: (TLS) Handshake state - Server before SSL initialization
(14) eap_peap: (TLS) Handshake state - Server before SSL initialization
(14) eap_peap: (TLS) recv TLS 1.3 Handshake, ClientHello
(14) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read client hello
(14) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHello
(14) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server hello
(14) eap_peap: (TLS) send TLS 1.2 Handshake, Certificate
(14) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write certificate
(14) eap_peap: (TLS) send TLS 1.2 Handshake, ServerKeyExchange
(14) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write key exchange
(14) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHelloDone
(14) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server done
(14) eap_peap: (TLS) Server : Need to read more data: SSLv3/TLS write server done
(14) eap_peap: (TLS) In Handshake Phase
(14) eap: Sending EAP Request (code 1) ID 45 length 1004
(14) eap: EAP session adding &reply:State = 0xee105cecec3d45f2
(14)     [eap] = handled
(14)   } # authenticate = handled
(14) Using Post-Auth-Type Challenge
(14) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(14)   Challenge { ... } # empty sub-section is ignored
(14) session-state: Saving cached attributes
(14)   Framed-MTU = 994
(14)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(14)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(14)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(14)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(14)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(14) Sent Access-Challenge Id 14 from 127.0.0.1:1812 to 127.0.0.1:33891 length 1068
(14)   EAP-Message = 0x012d03ec19c000000aac160303003d0200003903037b419d3febd75ec784a76b36323f2399a3560441ffa55b20b024dd7b72b4d6ed00c030000011ff01000100000b00040300010200170000160303092b0b0009270009240004203082041c30820304a003020102020101300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232303134333732315a170d3234303231383134333732315a307c310b3009060355040613024652310f300d06035504080c0652616469757331153013060355040a0c0c4578616d706c6520496e632e3123302106035504030c1a4578616d70
(14)   Message-Authenticator = 0x00000000000000000000000000000000
(14)   State = 0xee105cecec3d45f263a401c34af4a668
(14) Finished request
(10) Cleaning up request packet ID 10 with timestamp +12 due to cleanup_delay was reached
Waking up in 0.3 seconds.
(11) Cleaning up request packet ID 11 with timestamp +13 due to cleanup_delay was reached
Waking up in 4.4 seconds.
(15) Received Access-Request Id 15 from 127.0.0.1:33891 to 127.0.0.1:1812 length 240
(15)   User-Name = "anonymous"
(15)   NAS-IP-Address = 127.0.0.1
(15)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(15)   NAS-Port-Type = Wireless-802.11
(15)   Service-Type = Framed-User
(15)   NAS-Port = 1
(15)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(15)   Connect-Info = "CONNECT 54Mbps 802.11g"
(15)   Acct-Session-Id = "CF9BFBD35CAE8770"
(15)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(15)   WLAN-Pairwise-Cipher = 1027076
(15)   WLAN-Group-Cipher = 1027076
(15)   WLAN-AKM-Suite = 1027073
(15)   WLAN-Group-Mgmt-Cipher = 1027078
(15)   Framed-MTU = 1400
(15)   EAP-Message = 0x022d00061900
(15)   State = 0xee105cecec3d45f263a401c34af4a668
(15)   Message-Authenticator = 0xd6cd546a603274030ce11e5a65187d20
(15) Restoring &session-state
(15)   &session-state:Framed-MTU = 994
(15)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(15)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(15)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(15)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(15)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(15) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(15)   authorize {
(15)     policy filter_username {
(15)       if (&User-Name) {
(15)       if (&User-Name)  -> TRUE
(15)       if (&User-Name)  {
(15)         if (&User-Name =~ / /) {
(15)         if (&User-Name =~ / /)  -> FALSE
(15)         if (&User-Name =~ /@[^@]*@/ ) {
(15)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(15)         if (&User-Name =~ /\.\./ ) {
(15)         if (&User-Name =~ /\.\./ )  -> FALSE
(15)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(15)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(15)         if (&User-Name =~ /\.$/)  {
(15)         if (&User-Name =~ /\.$/)   -> FALSE
(15)         if (&User-Name =~ /@\./)  {
(15)         if (&User-Name =~ /@\./)   -> FALSE
(15)       } # if (&User-Name)  = notfound
(15)     } # policy filter_username = notfound
(15)     [preprocess] = ok
(15)     [chap] = noop
(15)     [mschap] = noop
(15)     [digest] = noop
(15) suffix: Checking for suffix after "@"
(15) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(15) suffix: No such realm "NULL"
(15)     [suffix] = noop
(15) eap: Peer sent EAP Response (code 2) ID 45 length 6
(15) eap: Continuing tunnel setup
(15)     [eap] = ok
(15)   } # authorize = ok
(15) Found Auth-Type = eap
(15) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(15)   authenticate {
(15) eap: Expiring EAP session with state 0xee105cecec3d45f2
(15) eap: Finished EAP session with state 0xee105cecec3d45f2
(15) eap: Previous EAP request found for state 0xee105cecec3d45f2, released from the list
(15) eap: Peer sent packet with method EAP PEAP (25)
(15) eap: Calling submodule eap_peap to process data
(15) eap_peap: (TLS) Peer ACKed our handshake fragment
(15) eap: Sending EAP Request (code 1) ID 46 length 1000
(15) eap: EAP session adding &reply:State = 0xee105ceced3e45f2
(15)     [eap] = handled
(15)   } # authenticate = handled
(15) Using Post-Auth-Type Challenge
(15) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(15)   Challenge { ... } # empty sub-section is ignored
(15) session-state: Saving cached attributes
(15)   Framed-MTU = 994
(15)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(15)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(15)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(15)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(15)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(15) Sent Access-Challenge Id 15 from 127.0.0.1:1812 to 127.0.0.1:33891 length 1064
(15)   EAP-Message = 0x012e03e81940b365595edec634be72466f496c8cad448e057893222e9d9b96fa51c2d84df387dace2b8dd56e85ea1e27ed302547bc22a35b0349ae7075502f1be4a933467c7ec41b12f969f65caf80e82b77b04c1d46756210be2684f027b347debb97d3bca395775660fe2168969187b5d46b43284bb130757803bdfe082cbf44b37353c4f853131bace8ca9c30290a88b1bf0a680004fe308204fa308203e2a003020102021457604ee8762089eef125d540c0bbf0b5a118a4af300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232303134333731355a170d32343032
(15)   Message-Authenticator = 0x00000000000000000000000000000000
(15)   State = 0xee105ceced3e45f263a401c34af4a668
(15) Finished request
Waking up in 4.4 seconds.
(16) Received Access-Request Id 16 from 127.0.0.1:33891 to 127.0.0.1:1812 length 240
(16)   User-Name = "anonymous"
(16)   NAS-IP-Address = 127.0.0.1
(16)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(16)   NAS-Port-Type = Wireless-802.11
(16)   Service-Type = Framed-User
(16)   NAS-Port = 1
(16)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(16)   Connect-Info = "CONNECT 54Mbps 802.11g"
(16)   Acct-Session-Id = "CF9BFBD35CAE8770"
(16)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(16)   WLAN-Pairwise-Cipher = 1027076
(16)   WLAN-Group-Cipher = 1027076
(16)   WLAN-AKM-Suite = 1027073
(16)   WLAN-Group-Mgmt-Cipher = 1027078
(16)   Framed-MTU = 1400
(16)   EAP-Message = 0x022e00061900
(16)   State = 0xee105ceced3e45f263a401c34af4a668
(16)   Message-Authenticator = 0x931e66a59aa77c35ecaf61833ffeb7d6
(16) Restoring &session-state
(16)   &session-state:Framed-MTU = 994
(16)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(16)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(16)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(16)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(16)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(16) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(16)   authorize {
(16)     policy filter_username {
(16)       if (&User-Name) {
(16)       if (&User-Name)  -> TRUE
(16)       if (&User-Name)  {
(16)         if (&User-Name =~ / /) {
(16)         if (&User-Name =~ / /)  -> FALSE
(16)         if (&User-Name =~ /@[^@]*@/ ) {
(16)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(16)         if (&User-Name =~ /\.\./ ) {
(16)         if (&User-Name =~ /\.\./ )  -> FALSE
(16)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(16)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(16)         if (&User-Name =~ /\.$/)  {
(16)         if (&User-Name =~ /\.$/)   -> FALSE
(16)         if (&User-Name =~ /@\./)  {
(16)         if (&User-Name =~ /@\./)   -> FALSE
(16)       } # if (&User-Name)  = notfound
(16)     } # policy filter_username = notfound
(16)     [preprocess] = ok
(16)     [chap] = noop
(16)     [mschap] = noop
(16)     [digest] = noop
(16) suffix: Checking for suffix after "@"
(16) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(16) suffix: No such realm "NULL"
(16)     [suffix] = noop
(16) eap: Peer sent EAP Response (code 2) ID 46 length 6
(16) eap: Continuing tunnel setup
(16)     [eap] = ok
(16)   } # authorize = ok
(16) Found Auth-Type = eap
(16) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(16)   authenticate {
(16) eap: Expiring EAP session with state 0xee105ceced3e45f2
(16) eap: Finished EAP session with state 0xee105ceced3e45f2
(16) eap: Previous EAP request found for state 0xee105ceced3e45f2, released from the list
(16) eap: Peer sent packet with method EAP PEAP (25)
(16) eap: Calling submodule eap_peap to process data
(16) eap_peap: (TLS) Peer ACKed our handshake fragment
(16) eap: Sending EAP Request (code 1) ID 47 length 750
(16) eap: EAP session adding &reply:State = 0xee105cecea3f45f2
(16)     [eap] = handled
(16)   } # authenticate = handled
(16) Using Post-Auth-Type Challenge
(16) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(16)   Challenge { ... } # empty sub-section is ignored
(16) session-state: Saving cached attributes
(16)   Framed-MTU = 994
(16)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(16)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(16)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(16)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(16)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(16) Sent Access-Challenge Id 16 from 127.0.0.1:1812 to 127.0.0.1:33891 length 812
(16)   EAP-Message = 0x012f02ee1900161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479821457604ee8762089eef125d540c0bbf0b5a118a4af300f0603551d130101ff040530030101ff30360603551d1f042f302d302ba029a0278625687474703a2f2f7777772e6578616d706c652e6f72672f6578616d706c655f63612e63726c300d06092a864886f70d01010b05000382010100a38f6633d2e2daf953e93089c5b4a66c9abe99620e270f6120051d2195bb6972966c6b98bc7cb21016f89ec601899088e642d40ac9f4ac816aecd5c65482432b5385e04b9bdf7129b175bb275e6021db0725fccea1f8daeb4488f004dfe73aee302570804c93d471bdfc1175c9cd6b7e16a895981dd2e189f5e3d482de9e2ed67b800e000fc33fc1d505bef9840b6037ebb7e9d090a4dbf93ef5dc3a9c956c4f17bc65b21468466551d3e57e331cdcc6dfb1f7279eda22b92b9d6875ae09efa1738980
(16)   Message-Authenticator = 0x00000000000000000000000000000000
(16)   State = 0xee105cecea3f45f263a401c34af4a668
(16) Finished request
Waking up in 4.0 seconds.
(17) Received Access-Request Id 17 from 127.0.0.1:33891 to 127.0.0.1:1812 length 251
(17)   User-Name = "anonymous"
(17)   NAS-IP-Address = 127.0.0.1
(17)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(17)   NAS-Port-Type = Wireless-802.11
(17)   Service-Type = Framed-User
(17)   NAS-Port = 1
(17)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(17)   Connect-Info = "CONNECT 54Mbps 802.11g"
(17)   Acct-Session-Id = "CF9BFBD35CAE8770"
(17)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(17)   WLAN-Pairwise-Cipher = 1027076
(17)   WLAN-Group-Cipher = 1027076
(17)   WLAN-AKM-Suite = 1027073
(17)   WLAN-Group-Mgmt-Cipher = 1027078
(17)   Framed-MTU = 1400
(17)   EAP-Message = 0x022f001119800000000715030300020230
(17)   State = 0xee105cecea3f45f263a401c34af4a668
(17)   Message-Authenticator = 0xce7325510972424222e0277e15caacbb
(17) Restoring &session-state
(17)   &session-state:Framed-MTU = 994
(17)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(17)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(17)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(17)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(17)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(17) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(17)   authorize {
(17)     policy filter_username {
(17)       if (&User-Name) {
(17)       if (&User-Name)  -> TRUE
(17)       if (&User-Name)  {
(17)         if (&User-Name =~ / /) {
(17)         if (&User-Name =~ / /)  -> FALSE
(17)         if (&User-Name =~ /@[^@]*@/ ) {
(17)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(17)         if (&User-Name =~ /\.\./ ) {
(17)         if (&User-Name =~ /\.\./ )  -> FALSE
(17)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(17)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(17)         if (&User-Name =~ /\.$/)  {
(17)         if (&User-Name =~ /\.$/)   -> FALSE
(17)         if (&User-Name =~ /@\./)  {
(17)         if (&User-Name =~ /@\./)   -> FALSE
(17)       } # if (&User-Name)  = notfound
(17)     } # policy filter_username = notfound
(17)     [preprocess] = ok
(17)     [chap] = noop
(17)     [mschap] = noop
(17)     [digest] = noop
(17) suffix: Checking for suffix after "@"
(17) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(17) suffix: No such realm "NULL"
(17)     [suffix] = noop
(17) eap: Peer sent EAP Response (code 2) ID 47 length 17
(17) eap: Continuing tunnel setup
(17)     [eap] = ok
(17)   } # authorize = ok
(17) Found Auth-Type = eap
(17) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(17)   authenticate {
(17) eap: Expiring EAP session with state 0xee105cecea3f45f2
(17) eap: Finished EAP session with state 0xee105cecea3f45f2
(17) eap: Previous EAP request found for state 0xee105cecea3f45f2, released from the list
(17) eap: Peer sent packet with method EAP PEAP (25)
(17) eap: Calling submodule eap_peap to process data
(17) eap_peap: (TLS) EAP Peer says that the final record size will be 7 bytes
(17) eap_peap: (TLS) EAP Got all data (7 bytes)
(17) eap_peap: (TLS) recv TLS 1.2 Alert, fatal unknown_ca
(17) eap_peap: (TLS) The client is informing us that it does not recognize the CA used to issue the server certificate.  Please update the client so that it knows about the CA.
(17) eap_peap: ERROR: (TLS) Alert read:fatal:unknown CA
(17) eap_peap: (TLS) Server : Need to read more data: error
(17) eap_peap: ERROR: (TLS) Failed reading from OpenSSL: error:0A000418:SSL routines::tlsv1 alert unknown ca
(17) eap_peap: (TLS) In Handshake Phase
(17) eap_peap: (TLS) Application data.
(17) eap_peap: ERROR: (TLS) Cannot continue, as the peer is misbehaving.
(17) eap_peap: ERROR: [eaptls process] = fail
(17) eap: ERROR: Failed continuing EAP PEAP (25) session.  EAP sub-module failed
(17) eap: Sending EAP Failure (code 4) ID 47 length 4
(17) eap: Failed in EAP select
(17)     [eap] = invalid
(17)   } # authenticate = invalid
(17) Failed to authenticate the user
(17) Using Post-Auth-Type Reject
(17) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(17)   Post-Auth-Type REJECT {
(17) attr_filter.access_reject: EXPAND %{User-Name}
(17) attr_filter.access_reject:    --> anonymous
(17) attr_filter.access_reject: Matched entry DEFAULT at line 11
(17)     [attr_filter.access_reject] = updated
(17)     [eap] = noop
(17)     policy remove_reply_message_if_eap {
(17)       if (&reply:EAP-Message && &reply:Reply-Message) {
(17)       if (&reply:EAP-Message && &reply:Reply-Message)  -> FALSE
(17)       else {
(17)         [noop] = noop
(17)       } # else = noop
(17)     } # policy remove_reply_message_if_eap = noop
(17)   } # Post-Auth-Type REJECT = updated
(17) Delaying response for 1.000000 seconds
Waking up in 0.3 seconds.
Waking up in 0.6 seconds.
(17) Sending delayed response
(17) Sent Access-Reject Id 17 from 127.0.0.1:1812 to 127.0.0.1:33891 length 44
(17)   EAP-Message = 0x042f0004
(17)   Message-Authenticator = 0x00000000000000000000000000000000
Waking up in 2.6 seconds.
(12) Cleaning up request packet ID 12 with timestamp +17 due to cleanup_delay was reached
(13) Cleaning up request packet ID 13 with timestamp +17 due to cleanup_delay was reached
(14) Cleaning up request packet ID 14 with timestamp +17 due to cleanup_delay was reached
Waking up in 0.4 seconds.
(15) Cleaning up request packet ID 15 with timestamp +18 due to cleanup_delay was reached
Waking up in 0.4 seconds.
(18) Received Access-Request Id 18 from 127.0.0.1:33891 to 127.0.0.1:1812 length 230
(18)   User-Name = "anonymous"
(18)   NAS-IP-Address = 127.0.0.1
(18)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(18)   NAS-Port-Type = Wireless-802.11
(18)   Service-Type = Framed-User
(18)   NAS-Port = 1
(18)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(18)   Connect-Info = "CONNECT 54Mbps 802.11g"
(18)   Acct-Session-Id = "CF9BFBD35CAE8770"
(18)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(18)   WLAN-Pairwise-Cipher = 1027076
(18)   WLAN-Group-Cipher = 1027076
(18)   WLAN-AKM-Suite = 1027073
(18)   WLAN-Group-Mgmt-Cipher = 1027078
(18)   Framed-MTU = 1400
(18)   EAP-Message = 0x0246000e01616e6f6e796d6f7573
(18)   Message-Authenticator = 0x1b6a4fcc6dfd26e57762d1d80315aa47
(18) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(18)   authorize {
(18)     policy filter_username {
(18)       if (&User-Name) {
(18)       if (&User-Name)  -> TRUE
(18)       if (&User-Name)  {
(18)         if (&User-Name =~ / /) {
(18)         if (&User-Name =~ / /)  -> FALSE
(18)         if (&User-Name =~ /@[^@]*@/ ) {
(18)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(18)         if (&User-Name =~ /\.\./ ) {
(18)         if (&User-Name =~ /\.\./ )  -> FALSE
(18)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(18)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(18)         if (&User-Name =~ /\.$/)  {
(18)         if (&User-Name =~ /\.$/)   -> FALSE
(18)         if (&User-Name =~ /@\./)  {
(18)         if (&User-Name =~ /@\./)   -> FALSE
(18)       } # if (&User-Name)  = notfound
(18)     } # policy filter_username = notfound
(18)     [preprocess] = ok
(18)     [chap] = noop
(18)     [mschap] = noop
(18)     [digest] = noop
(18) suffix: Checking for suffix after "@"
(18) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(18) suffix: No such realm "NULL"
(18)     [suffix] = noop
(18) eap: Peer sent EAP Response (code 2) ID 70 length 14
(18) eap: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
(18)     [eap] = ok
(18)   } # authorize = ok
(18) Found Auth-Type = eap
(18) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(18)   authenticate {
(18) eap: Peer sent packet with method EAP Identity (1)
(18) eap: Calling submodule eap_md5 to process data
(18) eap_md5: Issuing MD5 Challenge
(18) eap: Sending EAP Request (code 1) ID 71 length 22
(18) eap: EAP session adding &reply:State = 0x046f53090428576d
(18)     [eap] = handled
(18)   } # authenticate = handled
(18) Using Post-Auth-Type Challenge
(18) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(18)   Challenge { ... } # empty sub-section is ignored
(18) Sent Access-Challenge Id 18 from 127.0.0.1:1812 to 127.0.0.1:33891 length 80
(18)   EAP-Message = 0x0147001604107ed2698153d5913c4868884bb6e9838f
(18)   Message-Authenticator = 0x00000000000000000000000000000000
(18)   State = 0x046f53090428576d070f48fe45265737
(18) Finished request
Waking up in 0.1 seconds.
(19) Received Access-Request Id 19 from 127.0.0.1:33891 to 127.0.0.1:1812 length 241
(19)   User-Name = "anonymous"
(19)   NAS-IP-Address = 127.0.0.1
(19)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(19)   NAS-Port-Type = Wireless-802.11
(19)   Service-Type = Framed-User
(19)   NAS-Port = 1
(19)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(19)   Connect-Info = "CONNECT 54Mbps 802.11g"
(19)   Acct-Session-Id = "CF9BFBD35CAE8770"
(19)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(19)   WLAN-Pairwise-Cipher = 1027076
(19)   WLAN-Group-Cipher = 1027076
(19)   WLAN-AKM-Suite = 1027073
(19)   WLAN-Group-Mgmt-Cipher = 1027078
(19)   Framed-MTU = 1400
(19)   EAP-Message = 0x02470007031915
(19)   State = 0x046f53090428576d070f48fe45265737
(19)   Message-Authenticator = 0xee021d69e1e08943008446e14ebaf9cb
(19) session-state: No cached attributes
(19) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(19)   authorize {
(19)     policy filter_username {
(19)       if (&User-Name) {
(19)       if (&User-Name)  -> TRUE
(19)       if (&User-Name)  {
(19)         if (&User-Name =~ / /) {
(19)         if (&User-Name =~ / /)  -> FALSE
(19)         if (&User-Name =~ /@[^@]*@/ ) {
(19)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(19)         if (&User-Name =~ /\.\./ ) {
(19)         if (&User-Name =~ /\.\./ )  -> FALSE
(19)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(19)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(19)         if (&User-Name =~ /\.$/)  {
(19)         if (&User-Name =~ /\.$/)   -> FALSE
(19)         if (&User-Name =~ /@\./)  {
(19)         if (&User-Name =~ /@\./)   -> FALSE
(19)       } # if (&User-Name)  = notfound
(19)     } # policy filter_username = notfound
(19)     [preprocess] = ok
(19)     [chap] = noop
(19)     [mschap] = noop
(19)     [digest] = noop
(19) suffix: Checking for suffix after "@"
(19) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(19) suffix: No such realm "NULL"
(19)     [suffix] = noop
(19) eap: Peer sent EAP Response (code 2) ID 71 length 7
(19) eap: No EAP Start, assuming it's an on-going EAP conversation
(19)     [eap] = updated
(19)     [files] = noop
(19)     [expiration] = noop
(19)     [logintime] = noop
Not doing PAP as Auth-Type is already set.
(19)     [pap] = noop
(19)   } # authorize = updated
(19) Found Auth-Type = eap
(19) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(19)   authenticate {
(19) eap: Expiring EAP session with state 0x046f53090428576d
(19) eap: Finished EAP session with state 0x046f53090428576d
(19) eap: Previous EAP request found for state 0x046f53090428576d, released from the list
(19) eap: Peer sent packet with method EAP NAK (3)
(19) eap: Found mutually acceptable type PEAP (25)
(19) eap: Calling submodule eap_peap to process data
(19) eap_peap: (TLS) Initiating new session
(19) eap: Sending EAP Request (code 1) ID 72 length 6
(19) eap: EAP session adding &reply:State = 0x046f530905274a6d
(19)     [eap] = handled
(19)   } # authenticate = handled
(19) Using Post-Auth-Type Challenge
(19) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(19)   Challenge { ... } # empty sub-section is ignored
(19) session-state: Saving cached attributes
(19)   Framed-MTU = 994
(19) Sent Access-Challenge Id 19 from 127.0.0.1:1812 to 127.0.0.1:33891 length 64
(19)   EAP-Message = 0x014800061920
(19)   Message-Authenticator = 0x00000000000000000000000000000000
(19)   State = 0x046f530905274a6d070f48fe45265737
(19) Finished request
(20) Received Access-Request Id 20 from 127.0.0.1:33891 to 127.0.0.1:1812 length 476
(20)   User-Name = "anonymous"
(20)   NAS-IP-Address = 127.0.0.1
(20)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(20)   NAS-Port-Type = Wireless-802.11
(20)   Service-Type = Framed-User
(20)   NAS-Port = 1
(20)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(20)   Connect-Info = "CONNECT 54Mbps 802.11g"
(20)   Acct-Session-Id = "CF9BFBD35CAE8770"
(20)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(20)   WLAN-Pairwise-Cipher = 1027076
(20)   WLAN-Group-Cipher = 1027076
(20)   WLAN-AKM-Suite = 1027073
(20)   WLAN-Group-Mgmt-Cipher = 1027078
(20)   Framed-MTU = 1400
(20)   EAP-Message = 0x024800f21980000000e816030300e3010000df03030000005132050293381eb846eaafb550ccbe11572ce523f9a22d082efdae6235000076c02cc030c0adc024c028c00ac014c0afc05dc061c049c04dc02bc02fc0acc023c027c009c013c0aec05cc060c048c04c009dc09d003d0035c032c02ac00fc02ec026c005c0a1c05fc063c051c04bc04fc03d009cc09c003c002fc031c029c00ec02dc025c004c0a0c05ec062c050c04ac04ec03c00ff01000040000a0010000e001d001700180019001a001b001c000d001600140603050306010501040303030401030102030201000b00020100001600000017000000230000
(20)   State = 0x046f530905274a6d070f48fe45265737
(20)   Message-Authenticator = 0xb8e129b5180f511b78e75ca2e53070c6
(20) Restoring &session-state
(20)   &session-state:Framed-MTU = 994
(20) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(20)   authorize {
(20)     policy filter_username {
(20)       if (&User-Name) {
(20)       if (&User-Name)  -> TRUE
(20)       if (&User-Name)  {
(20)         if (&User-Name =~ / /) {
(20)         if (&User-Name =~ / /)  -> FALSE
(20)         if (&User-Name =~ /@[^@]*@/ ) {
(20)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(20)         if (&User-Name =~ /\.\./ ) {
(20)         if (&User-Name =~ /\.\./ )  -> FALSE
(20)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(20)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(20)         if (&User-Name =~ /\.$/)  {
(20)         if (&User-Name =~ /\.$/)   -> FALSE
(20)         if (&User-Name =~ /@\./)  {
(20)         if (&User-Name =~ /@\./)   -> FALSE
(20)       } # if (&User-Name)  = notfound
(20)     } # policy filter_username = notfound
(20)     [preprocess] = ok
(20)     [chap] = noop
(20)     [mschap] = noop
(20)     [digest] = noop
(20) suffix: Checking for suffix after "@"
(20) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(20) suffix: No such realm "NULL"
(20)     [suffix] = noop
(20) eap: Peer sent EAP Response (code 2) ID 72 length 242
(20) eap: Continuing tunnel setup
(20)     [eap] = ok
(20)   } # authorize = ok
(20) Found Auth-Type = eap
(20) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(20)   authenticate {
(20) eap: Expiring EAP session with state 0x046f530905274a6d
(20) eap: Finished EAP session with state 0x046f530905274a6d
(20) eap: Previous EAP request found for state 0x046f530905274a6d, released from the list
(20) eap: Peer sent packet with method EAP PEAP (25)
(20) eap: Calling submodule eap_peap to process data
(20) eap_peap: (TLS) EAP Peer says that the final record size will be 232 bytes
(20) eap_peap: (TLS) EAP Got all data (232 bytes)
(20) eap_peap: (TLS) Handshake state - before SSL initialization
(20) eap_peap: (TLS) Handshake state - Server before SSL initialization
(20) eap_peap: (TLS) Handshake state - Server before SSL initialization
(20) eap_peap: (TLS) recv TLS 1.3 Handshake, ClientHello
(20) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read client hello
(20) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHello
(20) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server hello
(20) eap_peap: (TLS) send TLS 1.2 Handshake, Certificate
(20) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write certificate
(20) eap_peap: (TLS) send TLS 1.2 Handshake, ServerKeyExchange
(20) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write key exchange
(20) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHelloDone
(20) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server done
(20) eap_peap: (TLS) Server : Need to read more data: SSLv3/TLS write server done
(20) eap_peap: (TLS) In Handshake Phase
(20) eap: Sending EAP Request (code 1) ID 73 length 1004
(20) eap: EAP session adding &reply:State = 0x046f530906264a6d
(20)     [eap] = handled
(20)   } # authenticate = handled
(20) Using Post-Auth-Type Challenge
(20) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(20)   Challenge { ... } # empty sub-section is ignored
(20) session-state: Saving cached attributes
(20)   Framed-MTU = 994
(20)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(20)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(20)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(20)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(20)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(20) Sent Access-Challenge Id 20 from 127.0.0.1:1812 to 127.0.0.1:33891 length 1068
(20)   EAP-Message = 0x014903ec19c000000aac160303003d02000039030317672318627b45e6cbd3565bedfd17ad0dbb9de18c20faa343b689bf1aa77bc900c030000011ff01000100000b00040300010200170000160303092b0b0009270009240004203082041c30820304a003020102020101300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232303134333732315a170d3234303231383134333732315a307c310b3009060355040613024652310f300d06035504080c0652616469757331153013060355040a0c0c4578616d706c6520496e632e3123302106035504030c1a4578616d70
(20)   Message-Authenticator = 0x00000000000000000000000000000000
(20)   State = 0x046f530906264a6d070f48fe45265737
(20) Finished request
(16) Cleaning up request packet ID 16 with timestamp +18 due to cleanup_delay was reached
Waking up in 0.3 seconds.
(17) Cleaning up request packet ID 17 with timestamp +18 due to cleanup_delay was reached
Waking up in 4.5 seconds.
(21) Received Access-Request Id 21 from 127.0.0.1:33891 to 127.0.0.1:1812 length 240
(21)   User-Name = "anonymous"
(21)   NAS-IP-Address = 127.0.0.1
(21)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(21)   NAS-Port-Type = Wireless-802.11
(21)   Service-Type = Framed-User
(21)   NAS-Port = 1
(21)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(21)   Connect-Info = "CONNECT 54Mbps 802.11g"
(21)   Acct-Session-Id = "CF9BFBD35CAE8770"
(21)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(21)   WLAN-Pairwise-Cipher = 1027076
(21)   WLAN-Group-Cipher = 1027076
(21)   WLAN-AKM-Suite = 1027073
(21)   WLAN-Group-Mgmt-Cipher = 1027078
(21)   Framed-MTU = 1400
(21)   EAP-Message = 0x024900061900
(21)   State = 0x046f530906264a6d070f48fe45265737
(21)   Message-Authenticator = 0x73c9a8103359be144f5b24d95a30855c
(21) Restoring &session-state
(21)   &session-state:Framed-MTU = 994
(21)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(21)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(21)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(21)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(21)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(21) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(21)   authorize {
(21)     policy filter_username {
(21)       if (&User-Name) {
(21)       if (&User-Name)  -> TRUE
(21)       if (&User-Name)  {
(21)         if (&User-Name =~ / /) {
(21)         if (&User-Name =~ / /)  -> FALSE
(21)         if (&User-Name =~ /@[^@]*@/ ) {
(21)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(21)         if (&User-Name =~ /\.\./ ) {
(21)         if (&User-Name =~ /\.\./ )  -> FALSE
(21)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(21)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(21)         if (&User-Name =~ /\.$/)  {
(21)         if (&User-Name =~ /\.$/)   -> FALSE
(21)         if (&User-Name =~ /@\./)  {
(21)         if (&User-Name =~ /@\./)   -> FALSE
(21)       } # if (&User-Name)  = notfound
(21)     } # policy filter_username = notfound
(21)     [preprocess] = ok
(21)     [chap] = noop
(21)     [mschap] = noop
(21)     [digest] = noop
(21) suffix: Checking for suffix after "@"
(21) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(21) suffix: No such realm "NULL"
(21)     [suffix] = noop
(21) eap: Peer sent EAP Response (code 2) ID 73 length 6
(21) eap: Continuing tunnel setup
(21)     [eap] = ok
(21)   } # authorize = ok
(21) Found Auth-Type = eap
(21) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(21)   authenticate {
(21) eap: Expiring EAP session with state 0x046f530906264a6d
(21) eap: Finished EAP session with state 0x046f530906264a6d
(21) eap: Previous EAP request found for state 0x046f530906264a6d, released from the list
(21) eap: Peer sent packet with method EAP PEAP (25)
(21) eap: Calling submodule eap_peap to process data
(21) eap_peap: (TLS) Peer ACKed our handshake fragment
(21) eap: Sending EAP Request (code 1) ID 74 length 1000
(21) eap: EAP session adding &reply:State = 0x046f530907254a6d
(21)     [eap] = handled
(21)   } # authenticate = handled
(21) Using Post-Auth-Type Challenge
(21) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(21)   Challenge { ... } # empty sub-section is ignored
(21) session-state: Saving cached attributes
(21)   Framed-MTU = 994
(21)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(21)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(21)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(21)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(21)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(21) Sent Access-Challenge Id 21 from 127.0.0.1:1812 to 127.0.0.1:33891 length 1064
(21)   EAP-Message = 0x014a03e81940b365595edec634be72466f496c8cad448e057893222e9d9b96fa51c2d84df387dace2b8dd56e85ea1e27ed302547bc22a35b0349ae7075502f1be4a933467c7ec41b12f969f65caf80e82b77b04c1d46756210be2684f027b347debb97d3bca395775660fe2168969187b5d46b43284bb130757803bdfe082cbf44b37353c4f853131bace8ca9c30290a88b1bf0a680004fe308204fa308203e2a003020102021457604ee8762089eef125d540c0bbf0b5a118a4af300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232303134333731355a170d32343032
(21)   Message-Authenticator = 0x00000000000000000000000000000000
(21)   State = 0x046f530907254a6d070f48fe45265737
(21) Finished request
Waking up in 4.4 seconds.
(22) Received Access-Request Id 22 from 127.0.0.1:33891 to 127.0.0.1:1812 length 240
(22)   User-Name = "anonymous"
(22)   NAS-IP-Address = 127.0.0.1
(22)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(22)   NAS-Port-Type = Wireless-802.11
(22)   Service-Type = Framed-User
(22)   NAS-Port = 1
(22)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(22)   Connect-Info = "CONNECT 54Mbps 802.11g"
(22)   Acct-Session-Id = "CF9BFBD35CAE8770"
(22)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(22)   WLAN-Pairwise-Cipher = 1027076
(22)   WLAN-Group-Cipher = 1027076
(22)   WLAN-AKM-Suite = 1027073
(22)   WLAN-Group-Mgmt-Cipher = 1027078
(22)   Framed-MTU = 1400
(22)   EAP-Message = 0x024a00061900
(22)   State = 0x046f530907254a6d070f48fe45265737
(22)   Message-Authenticator = 0xa216978b53066bcdfff62d749aceb097
(22) Restoring &session-state
(22)   &session-state:Framed-MTU = 994
(22)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(22)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(22)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(22)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(22)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(22) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(22)   authorize {
(22)     policy filter_username {
(22)       if (&User-Name) {
(22)       if (&User-Name)  -> TRUE
(22)       if (&User-Name)  {
(22)         if (&User-Name =~ / /) {
(22)         if (&User-Name =~ / /)  -> FALSE
(22)         if (&User-Name =~ /@[^@]*@/ ) {
(22)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(22)         if (&User-Name =~ /\.\./ ) {
(22)         if (&User-Name =~ /\.\./ )  -> FALSE
(22)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(22)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(22)         if (&User-Name =~ /\.$/)  {
(22)         if (&User-Name =~ /\.$/)   -> FALSE
(22)         if (&User-Name =~ /@\./)  {
(22)         if (&User-Name =~ /@\./)   -> FALSE
(22)       } # if (&User-Name)  = notfound
(22)     } # policy filter_username = notfound
(22)     [preprocess] = ok
(22)     [chap] = noop
(22)     [mschap] = noop
(22)     [digest] = noop
(22) suffix: Checking for suffix after "@"
(22) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(22) suffix: No such realm "NULL"
(22)     [suffix] = noop
(22) eap: Peer sent EAP Response (code 2) ID 74 length 6
(22) eap: Continuing tunnel setup
(22)     [eap] = ok
(22)   } # authorize = ok
(22) Found Auth-Type = eap
(22) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(22)   authenticate {
(22) eap: Expiring EAP session with state 0x046f530907254a6d
(22) eap: Finished EAP session with state 0x046f530907254a6d
(22) eap: Previous EAP request found for state 0x046f530907254a6d, released from the list
(22) eap: Peer sent packet with method EAP PEAP (25)
(22) eap: Calling submodule eap_peap to process data
(22) eap_peap: (TLS) Peer ACKed our handshake fragment
(22) eap: Sending EAP Request (code 1) ID 75 length 750
(22) eap: EAP session adding &reply:State = 0x046f530900244a6d
(22)     [eap] = handled
(22)   } # authenticate = handled
(22) Using Post-Auth-Type Challenge
(22) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(22)   Challenge { ... } # empty sub-section is ignored
(22) session-state: Saving cached attributes
(22)   Framed-MTU = 994
(22)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(22)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(22)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(22)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(22)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(22) Sent Access-Challenge Id 22 from 127.0.0.1:1812 to 127.0.0.1:33891 length 812
(22)   EAP-Message = 0x014b02ee1900161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479821457604ee8762089eef125d540c0bbf0b5a118a4af300f0603551d130101ff040530030101ff30360603551d1f042f302d302ba029a0278625687474703a2f2f7777772e6578616d706c652e6f72672f6578616d706c655f63612e63726c300d06092a864886f70d01010b05000382010100a38f6633d2e2daf953e93089c5b4a66c9abe99620e270f6120051d2195bb6972966c6b98bc7cb21016f89ec601899088e642d40ac9f4ac816aecd5c65482432b5385e04b9bdf7129b175bb275e6021db0725fccea1f8daeb4488f004dfe73aee302570804c93d471bdfc1175c9cd6b7e16a895981dd2e189f5e3d482de9e2ed67b800e000fc33fc1d505bef9840b6037ebb7e9d090a4dbf93ef5dc3a9c956c4f17bc65b21468466551d3e57e331cdcc6dfb1f7279eda22b92b9d6875ae09efa1738980
(22)   Message-Authenticator = 0x00000000000000000000000000000000
(22)   State = 0x046f530900244a6d070f48fe45265737
(22) Finished request
Waking up in 4.0 seconds.
(23) Received Access-Request Id 23 from 127.0.0.1:33891 to 127.0.0.1:1812 length 251
(23)   User-Name = "anonymous"
(23)   NAS-IP-Address = 127.0.0.1
(23)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(23)   NAS-Port-Type = Wireless-802.11
(23)   Service-Type = Framed-User
(23)   NAS-Port = 1
(23)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(23)   Connect-Info = "CONNECT 54Mbps 802.11g"
(23)   Acct-Session-Id = "CF9BFBD35CAE8770"
(23)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(23)   WLAN-Pairwise-Cipher = 1027076
(23)   WLAN-Group-Cipher = 1027076
(23)   WLAN-AKM-Suite = 1027073
(23)   WLAN-Group-Mgmt-Cipher = 1027078
(23)   Framed-MTU = 1400
(23)   EAP-Message = 0x024b001119800000000715030300020230
(23)   State = 0x046f530900244a6d070f48fe45265737
(23)   Message-Authenticator = 0x3a5f9da1c6291ad01e90fb0daa3a2c63
(23) Restoring &session-state
(23)   &session-state:Framed-MTU = 994
(23)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(23)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(23)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(23)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(23)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(23) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(23)   authorize {
(23)     policy filter_username {
(23)       if (&User-Name) {
(23)       if (&User-Name)  -> TRUE
(23)       if (&User-Name)  {
(23)         if (&User-Name =~ / /) {
(23)         if (&User-Name =~ / /)  -> FALSE
(23)         if (&User-Name =~ /@[^@]*@/ ) {
(23)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(23)         if (&User-Name =~ /\.\./ ) {
(23)         if (&User-Name =~ /\.\./ )  -> FALSE
(23)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(23)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(23)         if (&User-Name =~ /\.$/)  {
(23)         if (&User-Name =~ /\.$/)   -> FALSE
(23)         if (&User-Name =~ /@\./)  {
(23)         if (&User-Name =~ /@\./)   -> FALSE
(23)       } # if (&User-Name)  = notfound
(23)     } # policy filter_username = notfound
(23)     [preprocess] = ok
(23)     [chap] = noop
(23)     [mschap] = noop
(23)     [digest] = noop
(23) suffix: Checking for suffix after "@"
(23) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(23) suffix: No such realm "NULL"
(23)     [suffix] = noop
(23) eap: Peer sent EAP Response (code 2) ID 75 length 17
(23) eap: Continuing tunnel setup
(23)     [eap] = ok
(23)   } # authorize = ok
(23) Found Auth-Type = eap
(23) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(23)   authenticate {
(23) eap: Expiring EAP session with state 0x046f530900244a6d
(23) eap: Finished EAP session with state 0x046f530900244a6d
(23) eap: Previous EAP request found for state 0x046f530900244a6d, released from the list
(23) eap: Peer sent packet with method EAP PEAP (25)
(23) eap: Calling submodule eap_peap to process data
(23) eap_peap: (TLS) EAP Peer says that the final record size will be 7 bytes
(23) eap_peap: (TLS) EAP Got all data (7 bytes)
(23) eap_peap: (TLS) recv TLS 1.2 Alert, fatal unknown_ca
(23) eap_peap: (TLS) The client is informing us that it does not recognize the CA used to issue the server certificate.  Please update the client so that it knows about the CA.
(23) eap_peap: ERROR: (TLS) Alert read:fatal:unknown CA
(23) eap_peap: (TLS) Server : Need to read more data: error
(23) eap_peap: ERROR: (TLS) Failed reading from OpenSSL: error:0A000418:SSL routines::tlsv1 alert unknown ca
(23) eap_peap: (TLS) In Handshake Phase
(23) eap_peap: (TLS) Application data.
(23) eap_peap: ERROR: (TLS) Cannot continue, as the peer is misbehaving.
(23) eap_peap: ERROR: [eaptls process] = fail
(23) eap: ERROR: Failed continuing EAP PEAP (25) session.  EAP sub-module failed
(23) eap: Sending EAP Failure (code 4) ID 75 length 4
(23) eap: Failed in EAP select
(23)     [eap] = invalid
(23)   } # authenticate = invalid
(23) Failed to authenticate the user
(23) Using Post-Auth-Type Reject
(23) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(23)   Post-Auth-Type REJECT {
(23) attr_filter.access_reject: EXPAND %{User-Name}
(23) attr_filter.access_reject:    --> anonymous
(23) attr_filter.access_reject: Matched entry DEFAULT at line 11
(23)     [attr_filter.access_reject] = updated
(23)     [eap] = noop
(23)     policy remove_reply_message_if_eap {
(23)       if (&reply:EAP-Message && &reply:Reply-Message) {
(23)       if (&reply:EAP-Message && &reply:Reply-Message)  -> FALSE
(23)       else {
(23)         [noop] = noop
(23)       } # else = noop
(23)     } # policy remove_reply_message_if_eap = noop
(23)   } # Post-Auth-Type REJECT = updated
(23) Delaying response for 1.000000 seconds
Waking up in 0.3 seconds.
Waking up in 0.6 seconds.
(23) Sending delayed response
(23) Sent Access-Reject Id 23 from 127.0.0.1:1812 to 127.0.0.1:33891 length 44
(23)   EAP-Message = 0x044b0004
(23)   Message-Authenticator = 0x00000000000000000000000000000000
Waking up in 2.6 seconds.
(18) Cleaning up request packet ID 18 with timestamp +23 due to cleanup_delay was reached
(19) Cleaning up request packet ID 19 with timestamp +23 due to cleanup_delay was reached
(20) Cleaning up request packet ID 20 with timestamp +23 due to cleanup_delay was reached
Waking up in 0.4 seconds.
(21) Cleaning up request packet ID 21 with timestamp +23 due to cleanup_delay was reached
Waking up in 0.4 seconds.
(24) Received Access-Request Id 24 from 127.0.0.1:33891 to 127.0.0.1:1812 length 230
(24)   User-Name = "anonymous"
(24)   NAS-IP-Address = 127.0.0.1
(24)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(24)   NAS-Port-Type = Wireless-802.11
(24)   Service-Type = Framed-User
(24)   NAS-Port = 1
(24)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(24)   Connect-Info = "CONNECT 54Mbps 802.11g"
(24)   Acct-Session-Id = "CF9BFBD35CAE8770"
(24)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(24)   WLAN-Pairwise-Cipher = 1027076
(24)   WLAN-Group-Cipher = 1027076
(24)   WLAN-AKM-Suite = 1027073
(24)   WLAN-Group-Mgmt-Cipher = 1027078
(24)   Framed-MTU = 1400
(24)   EAP-Message = 0x02a2000e01616e6f6e796d6f7573
(24)   Message-Authenticator = 0x73169ad4a853e4430fd07fe5522d5d79
(24) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(24)   authorize {
(24)     policy filter_username {
(24)       if (&User-Name) {
(24)       if (&User-Name)  -> TRUE
(24)       if (&User-Name)  {
(24)         if (&User-Name =~ / /) {
(24)         if (&User-Name =~ / /)  -> FALSE
(24)         if (&User-Name =~ /@[^@]*@/ ) {
(24)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(24)         if (&User-Name =~ /\.\./ ) {
(24)         if (&User-Name =~ /\.\./ )  -> FALSE
(24)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(24)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(24)         if (&User-Name =~ /\.$/)  {
(24)         if (&User-Name =~ /\.$/)   -> FALSE
(24)         if (&User-Name =~ /@\./)  {
(24)         if (&User-Name =~ /@\./)   -> FALSE
(24)       } # if (&User-Name)  = notfound
(24)     } # policy filter_username = notfound
(24)     [preprocess] = ok
(24)     [chap] = noop
(24)     [mschap] = noop
(24)     [digest] = noop
(24) suffix: Checking for suffix after "@"
(24) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(24) suffix: No such realm "NULL"
(24)     [suffix] = noop
(24) eap: Peer sent EAP Response (code 2) ID 162 length 14
(24) eap: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
(24)     [eap] = ok
(24)   } # authorize = ok
(24) Found Auth-Type = eap
(24) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(24)   authenticate {
(24) eap: Peer sent packet with method EAP Identity (1)
(24) eap: Calling submodule eap_md5 to process data
(24) eap_md5: Issuing MD5 Challenge
(24) eap: Sending EAP Request (code 1) ID 163 length 22
(24) eap: EAP session adding &reply:State = 0x682d3a9b688e3ee3
(24)     [eap] = handled
(24)   } # authenticate = handled
(24) Using Post-Auth-Type Challenge
(24) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(24)   Challenge { ... } # empty sub-section is ignored
(24) Sent Access-Challenge Id 24 from 127.0.0.1:1812 to 127.0.0.1:33891 length 80
(24)   EAP-Message = 0x01a3001604103176c797cfca4a46d4c360cf0561b77c
(24)   Message-Authenticator = 0x00000000000000000000000000000000
(24)   State = 0x682d3a9b688e3ee3814855172c7c01a0
(24) Finished request
Waking up in 0.1 seconds.
(25) Received Access-Request Id 25 from 127.0.0.1:33891 to 127.0.0.1:1812 length 241
(25)   User-Name = "anonymous"
(25)   NAS-IP-Address = 127.0.0.1
(25)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(25)   NAS-Port-Type = Wireless-802.11
(25)   Service-Type = Framed-User
(25)   NAS-Port = 1
(25)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(25)   Connect-Info = "CONNECT 54Mbps 802.11g"
(25)   Acct-Session-Id = "CF9BFBD35CAE8770"
(25)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(25)   WLAN-Pairwise-Cipher = 1027076
(25)   WLAN-Group-Cipher = 1027076
(25)   WLAN-AKM-Suite = 1027073
(25)   WLAN-Group-Mgmt-Cipher = 1027078
(25)   Framed-MTU = 1400
(25)   EAP-Message = 0x02a30007031915
(25)   State = 0x682d3a9b688e3ee3814855172c7c01a0
(25)   Message-Authenticator = 0x92f35cf272c5b2d77713188ecb836ffc
(25) session-state: No cached attributes
(25) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(25)   authorize {
(25)     policy filter_username {
(25)       if (&User-Name) {
(25)       if (&User-Name)  -> TRUE
(25)       if (&User-Name)  {
(25)         if (&User-Name =~ / /) {
(25)         if (&User-Name =~ / /)  -> FALSE
(25)         if (&User-Name =~ /@[^@]*@/ ) {
(25)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(25)         if (&User-Name =~ /\.\./ ) {
(25)         if (&User-Name =~ /\.\./ )  -> FALSE
(25)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(25)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(25)         if (&User-Name =~ /\.$/)  {
(25)         if (&User-Name =~ /\.$/)   -> FALSE
(25)         if (&User-Name =~ /@\./)  {
(25)         if (&User-Name =~ /@\./)   -> FALSE
(25)       } # if (&User-Name)  = notfound
(25)     } # policy filter_username = notfound
(25)     [preprocess] = ok
(25)     [chap] = noop
(25)     [mschap] = noop
(25)     [digest] = noop
(25) suffix: Checking for suffix after "@"
(25) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(25) suffix: No such realm "NULL"
(25)     [suffix] = noop
(25) eap: Peer sent EAP Response (code 2) ID 163 length 7
(25) eap: No EAP Start, assuming it's an on-going EAP conversation
(25)     [eap] = updated
(25)     [files] = noop
(25)     [expiration] = noop
(25)     [logintime] = noop
Not doing PAP as Auth-Type is already set.
(25)     [pap] = noop
(25)   } # authorize = updated
(25) Found Auth-Type = eap
(25) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(25)   authenticate {
(25) eap: Expiring EAP session with state 0x682d3a9b688e3ee3
(25) eap: Finished EAP session with state 0x682d3a9b688e3ee3
(25) eap: Previous EAP request found for state 0x682d3a9b688e3ee3, released from the list
(25) eap: Peer sent packet with method EAP NAK (3)
(25) eap: Found mutually acceptable type PEAP (25)
(25) eap: Calling submodule eap_peap to process data
(25) eap_peap: (TLS) Initiating new session
(25) eap: Sending EAP Request (code 1) ID 164 length 6
(25) eap: EAP session adding &reply:State = 0x682d3a9b698923e3
(25)     [eap] = handled
(25)   } # authenticate = handled
(25) Using Post-Auth-Type Challenge
(25) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(25)   Challenge { ... } # empty sub-section is ignored
(25) session-state: Saving cached attributes
(25)   Framed-MTU = 994
(25) Sent Access-Challenge Id 25 from 127.0.0.1:1812 to 127.0.0.1:33891 length 64
(25)   EAP-Message = 0x01a400061920
(25)   Message-Authenticator = 0x00000000000000000000000000000000
(25)   State = 0x682d3a9b698923e3814855172c7c01a0
(25) Finished request
Waking up in 0.1 seconds.
(26) Received Access-Request Id 26 from 127.0.0.1:33891 to 127.0.0.1:1812 length 476
(26)   User-Name = "anonymous"
(26)   NAS-IP-Address = 127.0.0.1
(26)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(26)   NAS-Port-Type = Wireless-802.11
(26)   Service-Type = Framed-User
(26)   NAS-Port = 1
(26)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(26)   Connect-Info = "CONNECT 54Mbps 802.11g"
(26)   Acct-Session-Id = "CF9BFBD35CAE8770"
(26)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(26)   WLAN-Pairwise-Cipher = 1027076
(26)   WLAN-Group-Cipher = 1027076
(26)   WLAN-AKM-Suite = 1027073
(26)   WLAN-Group-Mgmt-Cipher = 1027078
(26)   Framed-MTU = 1400
(26)   EAP-Message = 0x02a400f21980000000e816030300e3010000df0303000000571d5ee7ee4487ee7ab245d8cfa0377d3f93b5f70a25759a95b8fba914000076c02cc030c0adc024c028c00ac014c0afc05dc061c049c04dc02bc02fc0acc023c027c009c013c0aec05cc060c048c04c009dc09d003d0035c032c02ac00fc02ec026c005c0a1c05fc063c051c04bc04fc03d009cc09c003c002fc031c029c00ec02dc025c004c0a0c05ec062c050c04ac04ec03c00ff01000040000a0010000e001d001700180019001a001b001c000d001600140603050306010501040303030401030102030201000b00020100001600000017000000230000
(26)   State = 0x682d3a9b698923e3814855172c7c01a0
(26)   Message-Authenticator = 0xbcf6d2642f8d27800d7e79f619bde8da
(26) Restoring &session-state
(26)   &session-state:Framed-MTU = 994
(26) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(26)   authorize {
(26)     policy filter_username {
(26)       if (&User-Name) {
(26)       if (&User-Name)  -> TRUE
(26)       if (&User-Name)  {
(26)         if (&User-Name =~ / /) {
(26)         if (&User-Name =~ / /)  -> FALSE
(26)         if (&User-Name =~ /@[^@]*@/ ) {
(26)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(26)         if (&User-Name =~ /\.\./ ) {
(26)         if (&User-Name =~ /\.\./ )  -> FALSE
(26)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(26)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(26)         if (&User-Name =~ /\.$/)  {
(26)         if (&User-Name =~ /\.$/)   -> FALSE
(26)         if (&User-Name =~ /@\./)  {
(26)         if (&User-Name =~ /@\./)   -> FALSE
(26)       } # if (&User-Name)  = notfound
(26)     } # policy filter_username = notfound
(26)     [preprocess] = ok
(26)     [chap] = noop
(26)     [mschap] = noop
(26)     [digest] = noop
(26) suffix: Checking for suffix after "@"
(26) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(26) suffix: No such realm "NULL"
(26)     [suffix] = noop
(26) eap: Peer sent EAP Response (code 2) ID 164 length 242
(26) eap: Continuing tunnel setup
(26)     [eap] = ok
(26)   } # authorize = ok
(26) Found Auth-Type = eap
(26) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(26)   authenticate {
(26) eap: Expiring EAP session with state 0x682d3a9b698923e3
(26) eap: Finished EAP session with state 0x682d3a9b698923e3
(26) eap: Previous EAP request found for state 0x682d3a9b698923e3, released from the list
(26) eap: Peer sent packet with method EAP PEAP (25)
(26) eap: Calling submodule eap_peap to process data
(26) eap_peap: (TLS) EAP Peer says that the final record size will be 232 bytes
(26) eap_peap: (TLS) EAP Got all data (232 bytes)
(26) eap_peap: (TLS) Handshake state - before SSL initialization
(26) eap_peap: (TLS) Handshake state - Server before SSL initialization
(26) eap_peap: (TLS) Handshake state - Server before SSL initialization
(26) eap_peap: (TLS) recv TLS 1.3 Handshake, ClientHello
(26) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read client hello
(26) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHello
(26) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server hello
(26) eap_peap: (TLS) send TLS 1.2 Handshake, Certificate
(26) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write certificate
(26) eap_peap: (TLS) send TLS 1.2 Handshake, ServerKeyExchange
(26) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write key exchange
(26) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHelloDone
(26) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server done
(26) eap_peap: (TLS) Server : Need to read more data: SSLv3/TLS write server done
(26) eap_peap: (TLS) In Handshake Phase
(26) eap: Sending EAP Request (code 1) ID 165 length 1004
(26) eap: EAP session adding &reply:State = 0x682d3a9b6a8823e3
(26)     [eap] = handled
(26)   } # authenticate = handled
(26) Using Post-Auth-Type Challenge
(26) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(26)   Challenge { ... } # empty sub-section is ignored
(26) session-state: Saving cached attributes
(26)   Framed-MTU = 994
(26)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(26)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(26)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(26)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(26)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(26) Sent Access-Challenge Id 26 from 127.0.0.1:1812 to 127.0.0.1:33891 length 1068
(26)   EAP-Message = 0x01a503ec19c000000aac160303003d0200003903034a6897df88b4a83d7456b16cafb8f306b8690bd5aa40f05e0d608ccb7560fec800c030000011ff01000100000b00040300010200170000160303092b0b0009270009240004203082041c30820304a003020102020101300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232303134333732315a170d3234303231383134333732315a307c310b3009060355040613024652310f300d06035504080c0652616469757331153013060355040a0c0c4578616d706c6520496e632e3123302106035504030c1a4578616d70
(26)   Message-Authenticator = 0x00000000000000000000000000000000
(26)   State = 0x682d3a9b6a8823e3814855172c7c01a0
(26) Finished request
(22) Cleaning up request packet ID 22 with timestamp +24 due to cleanup_delay was reached
Waking up in 0.3 seconds.
(23) Cleaning up request packet ID 23 with timestamp +24 due to cleanup_delay was reached
Waking up in 4.4 seconds.
(27) Received Access-Request Id 27 from 127.0.0.1:33891 to 127.0.0.1:1812 length 240
(27)   User-Name = "anonymous"
(27)   NAS-IP-Address = 127.0.0.1
(27)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(27)   NAS-Port-Type = Wireless-802.11
(27)   Service-Type = Framed-User
(27)   NAS-Port = 1
(27)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(27)   Connect-Info = "CONNECT 54Mbps 802.11g"
(27)   Acct-Session-Id = "CF9BFBD35CAE8770"
(27)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(27)   WLAN-Pairwise-Cipher = 1027076
(27)   WLAN-Group-Cipher = 1027076
(27)   WLAN-AKM-Suite = 1027073
(27)   WLAN-Group-Mgmt-Cipher = 1027078
(27)   Framed-MTU = 1400
(27)   EAP-Message = 0x02a500061900
(27)   State = 0x682d3a9b6a8823e3814855172c7c01a0
(27)   Message-Authenticator = 0x53232974db8c63f54ee29d21a3f09f0f
(27) Restoring &session-state
(27)   &session-state:Framed-MTU = 994
(27)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(27)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(27)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(27)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(27)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(27) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(27)   authorize {
(27)     policy filter_username {
(27)       if (&User-Name) {
(27)       if (&User-Name)  -> TRUE
(27)       if (&User-Name)  {
(27)         if (&User-Name =~ / /) {
(27)         if (&User-Name =~ / /)  -> FALSE
(27)         if (&User-Name =~ /@[^@]*@/ ) {
(27)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(27)         if (&User-Name =~ /\.\./ ) {
(27)         if (&User-Name =~ /\.\./ )  -> FALSE
(27)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(27)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(27)         if (&User-Name =~ /\.$/)  {
(27)         if (&User-Name =~ /\.$/)   -> FALSE
(27)         if (&User-Name =~ /@\./)  {
(27)         if (&User-Name =~ /@\./)   -> FALSE
(27)       } # if (&User-Name)  = notfound
(27)     } # policy filter_username = notfound
(27)     [preprocess] = ok
(27)     [chap] = noop
(27)     [mschap] = noop
(27)     [digest] = noop
(27) suffix: Checking for suffix after "@"
(27) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(27) suffix: No such realm "NULL"
(27)     [suffix] = noop
(27) eap: Peer sent EAP Response (code 2) ID 165 length 6
(27) eap: Continuing tunnel setup
(27)     [eap] = ok
(27)   } # authorize = ok
(27) Found Auth-Type = eap
(27) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(27)   authenticate {
(27) eap: Expiring EAP session with state 0x682d3a9b6a8823e3
(27) eap: Finished EAP session with state 0x682d3a9b6a8823e3
(27) eap: Previous EAP request found for state 0x682d3a9b6a8823e3, released from the list
(27) eap: Peer sent packet with method EAP PEAP (25)
(27) eap: Calling submodule eap_peap to process data
(27) eap_peap: (TLS) Peer ACKed our handshake fragment
(27) eap: Sending EAP Request (code 1) ID 166 length 1000
(27) eap: EAP session adding &reply:State = 0x682d3a9b6b8b23e3
(27)     [eap] = handled
(27)   } # authenticate = handled
(27) Using Post-Auth-Type Challenge
(27) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(27)   Challenge { ... } # empty sub-section is ignored
(27) session-state: Saving cached attributes
(27)   Framed-MTU = 994
(27)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(27)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(27)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(27)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(27)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(27) Sent Access-Challenge Id 27 from 127.0.0.1:1812 to 127.0.0.1:33891 length 1064
(27)   EAP-Message = 0x01a603e81940b365595edec634be72466f496c8cad448e057893222e9d9b96fa51c2d84df387dace2b8dd56e85ea1e27ed302547bc22a35b0349ae7075502f1be4a933467c7ec41b12f969f65caf80e82b77b04c1d46756210be2684f027b347debb97d3bca395775660fe2168969187b5d46b43284bb130757803bdfe082cbf44b37353c4f853131bace8ca9c30290a88b1bf0a680004fe308204fa308203e2a003020102021457604ee8762089eef125d540c0bbf0b5a118a4af300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232303134333731355a170d32343032
(27)   Message-Authenticator = 0x00000000000000000000000000000000
(27)   State = 0x682d3a9b6b8b23e3814855172c7c01a0
(27) Finished request
Waking up in 4.4 seconds.
(28) Received Access-Request Id 28 from 127.0.0.1:33891 to 127.0.0.1:1812 length 240
(28)   User-Name = "anonymous"
(28)   NAS-IP-Address = 127.0.0.1
(28)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(28)   NAS-Port-Type = Wireless-802.11
(28)   Service-Type = Framed-User
(28)   NAS-Port = 1
(28)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(28)   Connect-Info = "CONNECT 54Mbps 802.11g"
(28)   Acct-Session-Id = "CF9BFBD35CAE8770"
(28)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(28)   WLAN-Pairwise-Cipher = 1027076
(28)   WLAN-Group-Cipher = 1027076
(28)   WLAN-AKM-Suite = 1027073
(28)   WLAN-Group-Mgmt-Cipher = 1027078
(28)   Framed-MTU = 1400
(28)   EAP-Message = 0x02a600061900
(28)   State = 0x682d3a9b6b8b23e3814855172c7c01a0
(28)   Message-Authenticator = 0xaedc88136c9c8f07cdea7c749c01c6b8
(28) Restoring &session-state
(28)   &session-state:Framed-MTU = 994
(28)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(28)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(28)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(28)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(28)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(28) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(28)   authorize {
(28)     policy filter_username {
(28)       if (&User-Name) {
(28)       if (&User-Name)  -> TRUE
(28)       if (&User-Name)  {
(28)         if (&User-Name =~ / /) {
(28)         if (&User-Name =~ / /)  -> FALSE
(28)         if (&User-Name =~ /@[^@]*@/ ) {
(28)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(28)         if (&User-Name =~ /\.\./ ) {
(28)         if (&User-Name =~ /\.\./ )  -> FALSE
(28)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(28)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(28)         if (&User-Name =~ /\.$/)  {
(28)         if (&User-Name =~ /\.$/)   -> FALSE
(28)         if (&User-Name =~ /@\./)  {
(28)         if (&User-Name =~ /@\./)   -> FALSE
(28)       } # if (&User-Name)  = notfound
(28)     } # policy filter_username = notfound
(28)     [preprocess] = ok
(28)     [chap] = noop
(28)     [mschap] = noop
(28)     [digest] = noop
(28) suffix: Checking for suffix after "@"
(28) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(28) suffix: No such realm "NULL"
(28)     [suffix] = noop
(28) eap: Peer sent EAP Response (code 2) ID 166 length 6
(28) eap: Continuing tunnel setup
(28)     [eap] = ok
(28)   } # authorize = ok
(28) Found Auth-Type = eap
(28) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(28)   authenticate {
(28) eap: Expiring EAP session with state 0x682d3a9b6b8b23e3
(28) eap: Finished EAP session with state 0x682d3a9b6b8b23e3
(28) eap: Previous EAP request found for state 0x682d3a9b6b8b23e3, released from the list
(28) eap: Peer sent packet with method EAP PEAP (25)
(28) eap: Calling submodule eap_peap to process data
(28) eap_peap: (TLS) Peer ACKed our handshake fragment
(28) eap: Sending EAP Request (code 1) ID 167 length 750
(28) eap: EAP session adding &reply:State = 0x682d3a9b6c8a23e3
(28)     [eap] = handled
(28)   } # authenticate = handled
(28) Using Post-Auth-Type Challenge
(28) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(28)   Challenge { ... } # empty sub-section is ignored
(28) session-state: Saving cached attributes
(28)   Framed-MTU = 994
(28)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(28)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(28)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(28)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(28)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(28) Sent Access-Challenge Id 28 from 127.0.0.1:1812 to 127.0.0.1:33891 length 812
(28)   EAP-Message = 0x01a702ee1900161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479821457604ee8762089eef125d540c0bbf0b5a118a4af300f0603551d130101ff040530030101ff30360603551d1f042f302d302ba029a0278625687474703a2f2f7777772e6578616d706c652e6f72672f6578616d706c655f63612e63726c300d06092a864886f70d01010b05000382010100a38f6633d2e2daf953e93089c5b4a66c9abe99620e270f6120051d2195bb6972966c6b98bc7cb21016f89ec601899088e642d40ac9f4ac816aecd5c65482432b5385e04b9bdf7129b175bb275e6021db0725fccea1f8daeb4488f004dfe73aee302570804c93d471bdfc1175c9cd6b7e16a895981dd2e189f5e3d482de9e2ed67b800e000fc33fc1d505bef9840b6037ebb7e9d090a4dbf93ef5dc3a9c956c4f17bc65b21468466551d3e57e331cdcc6dfb1f7279eda22b92b9d6875ae09efa1738980
(28)   Message-Authenticator = 0x00000000000000000000000000000000
(28)   State = 0x682d3a9b6c8a23e3814855172c7c01a0
(28) Finished request
Waking up in 4.0 seconds.
(29) Received Access-Request Id 29 from 127.0.0.1:33891 to 127.0.0.1:1812 length 251
(29)   User-Name = "anonymous"
(29)   NAS-IP-Address = 127.0.0.1
(29)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(29)   NAS-Port-Type = Wireless-802.11
(29)   Service-Type = Framed-User
(29)   NAS-Port = 1
(29)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(29)   Connect-Info = "CONNECT 54Mbps 802.11g"
(29)   Acct-Session-Id = "CF9BFBD35CAE8770"
(29)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(29)   WLAN-Pairwise-Cipher = 1027076
(29)   WLAN-Group-Cipher = 1027076
(29)   WLAN-AKM-Suite = 1027073
(29)   WLAN-Group-Mgmt-Cipher = 1027078
(29)   Framed-MTU = 1400
(29)   EAP-Message = 0x02a7001119800000000715030300020230
(29)   State = 0x682d3a9b6c8a23e3814855172c7c01a0
(29)   Message-Authenticator = 0x861ea643cae2c67f210c2d6b8cc485fd
(29) Restoring &session-state
(29)   &session-state:Framed-MTU = 994
(29)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(29)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(29)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(29)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(29)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(29) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(29)   authorize {
(29)     policy filter_username {
(29)       if (&User-Name) {
(29)       if (&User-Name)  -> TRUE
(29)       if (&User-Name)  {
(29)         if (&User-Name =~ / /) {
(29)         if (&User-Name =~ / /)  -> FALSE
(29)         if (&User-Name =~ /@[^@]*@/ ) {
(29)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(29)         if (&User-Name =~ /\.\./ ) {
(29)         if (&User-Name =~ /\.\./ )  -> FALSE
(29)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(29)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(29)         if (&User-Name =~ /\.$/)  {
(29)         if (&User-Name =~ /\.$/)   -> FALSE
(29)         if (&User-Name =~ /@\./)  {
(29)         if (&User-Name =~ /@\./)   -> FALSE
(29)       } # if (&User-Name)  = notfound
(29)     } # policy filter_username = notfound
(29)     [preprocess] = ok
(29)     [chap] = noop
(29)     [mschap] = noop
(29)     [digest] = noop
(29) suffix: Checking for suffix after "@"
(29) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(29) suffix: No such realm "NULL"
(29)     [suffix] = noop
(29) eap: Peer sent EAP Response (code 2) ID 167 length 17
(29) eap: Continuing tunnel setup
(29)     [eap] = ok
(29)   } # authorize = ok
(29) Found Auth-Type = eap
(29) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(29)   authenticate {
(29) eap: Expiring EAP session with state 0x682d3a9b6c8a23e3
(29) eap: Finished EAP session with state 0x682d3a9b6c8a23e3
(29) eap: Previous EAP request found for state 0x682d3a9b6c8a23e3, released from the list
(29) eap: Peer sent packet with method EAP PEAP (25)
(29) eap: Calling submodule eap_peap to process data
(29) eap_peap: (TLS) EAP Peer says that the final record size will be 7 bytes
(29) eap_peap: (TLS) EAP Got all data (7 bytes)
(29) eap_peap: (TLS) recv TLS 1.2 Alert, fatal unknown_ca
(29) eap_peap: (TLS) The client is informing us that it does not recognize the CA used to issue the server certificate.  Please update the client so that it knows about the CA.
(29) eap_peap: ERROR: (TLS) Alert read:fatal:unknown CA
(29) eap_peap: (TLS) Server : Need to read more data: error
(29) eap_peap: ERROR: (TLS) Failed reading from OpenSSL: error:0A000418:SSL routines::tlsv1 alert unknown ca
(29) eap_peap: (TLS) In Handshake Phase
(29) eap_peap: (TLS) Application data.
(29) eap_peap: ERROR: (TLS) Cannot continue, as the peer is misbehaving.
(29) eap_peap: ERROR: [eaptls process] = fail
(29) eap: ERROR: Failed continuing EAP PEAP (25) session.  EAP sub-module failed
(29) eap: Sending EAP Failure (code 4) ID 167 length 4
(29) eap: Failed in EAP select
(29)     [eap] = invalid
(29)   } # authenticate = invalid
(29) Failed to authenticate the user
(29) Using Post-Auth-Type Reject
(29) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(29)   Post-Auth-Type REJECT {
(29) attr_filter.access_reject: EXPAND %{User-Name}
(29) attr_filter.access_reject:    --> anonymous
(29) attr_filter.access_reject: Matched entry DEFAULT at line 11
(29)     [attr_filter.access_reject] = updated
(29)     [eap] = noop
(29)     policy remove_reply_message_if_eap {
(29)       if (&reply:EAP-Message && &reply:Reply-Message) {
(29)       if (&reply:EAP-Message && &reply:Reply-Message)  -> FALSE
(29)       else {
(29)         [noop] = noop
(29)       } # else = noop
(29)     } # policy remove_reply_message_if_eap = noop
(29)   } # Post-Auth-Type REJECT = updated
(29) Delaying response for 1.000000 seconds
Waking up in 0.3 seconds.
Waking up in 0.6 seconds.
(29) Sending delayed response
(29) Sent Access-Reject Id 29 from 127.0.0.1:1812 to 127.0.0.1:33891 length 44
(29)   EAP-Message = 0x04a70004
(29)   Message-Authenticator = 0x00000000000000000000000000000000
Waking up in 2.6 seconds.
(24) Cleaning up request packet ID 24 with timestamp +29 due to cleanup_delay was reached
(25) Cleaning up request packet ID 25 with timestamp +29 due to cleanup_delay was reached
(26) Cleaning up request packet ID 26 with timestamp +29 due to cleanup_delay was reached
Waking up in 0.4 seconds.
(27) Cleaning up request packet ID 27 with timestamp +29 due to cleanup_delay was reached
Waking up in 0.4 seconds.
(30) Received Access-Request Id 30 from 127.0.0.1:33891 to 127.0.0.1:1812 length 230
(30)   User-Name = "anonymous"
(30)   NAS-IP-Address = 127.0.0.1
(30)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(30)   NAS-Port-Type = Wireless-802.11
(30)   Service-Type = Framed-User
(30)   NAS-Port = 1
(30)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(30)   Connect-Info = "CONNECT 54Mbps 802.11g"
(30)   Acct-Session-Id = "CF9BFBD35CAE8770"
(30)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(30)   WLAN-Pairwise-Cipher = 1027076
(30)   WLAN-Group-Cipher = 1027076
(30)   WLAN-AKM-Suite = 1027073
(30)   WLAN-Group-Mgmt-Cipher = 1027078
(30)   Framed-MTU = 1400
(30)   EAP-Message = 0x02ed000e01616e6f6e796d6f7573
(30)   Message-Authenticator = 0x9be34831febccbfa4373230ac32a6d21
(30) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(30)   authorize {
(30)     policy filter_username {
(30)       if (&User-Name) {
(30)       if (&User-Name)  -> TRUE
(30)       if (&User-Name)  {
(30)         if (&User-Name =~ / /) {
(30)         if (&User-Name =~ / /)  -> FALSE
(30)         if (&User-Name =~ /@[^@]*@/ ) {
(30)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(30)         if (&User-Name =~ /\.\./ ) {
(30)         if (&User-Name =~ /\.\./ )  -> FALSE
(30)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(30)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(30)         if (&User-Name =~ /\.$/)  {
(30)         if (&User-Name =~ /\.$/)   -> FALSE
(30)         if (&User-Name =~ /@\./)  {
(30)         if (&User-Name =~ /@\./)   -> FALSE
(30)       } # if (&User-Name)  = notfound
(30)     } # policy filter_username = notfound
(30)     [preprocess] = ok
(30)     [chap] = noop
(30)     [mschap] = noop
(30)     [digest] = noop
(30) suffix: Checking for suffix after "@"
(30) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(30) suffix: No such realm "NULL"
(30)     [suffix] = noop
(30) eap: Peer sent EAP Response (code 2) ID 237 length 14
(30) eap: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
(30)     [eap] = ok
(30)   } # authorize = ok
(30) Found Auth-Type = eap
(30) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(30)   authenticate {
(30) eap: Peer sent packet with method EAP Identity (1)
(30) eap: Calling submodule eap_md5 to process data
(30) eap_md5: Issuing MD5 Challenge
(30) eap: Sending EAP Request (code 1) ID 238 length 22
(30) eap: EAP session adding &reply:State = 0x037a00dd039404d6
(30)     [eap] = handled
(30)   } # authenticate = handled
(30) Using Post-Auth-Type Challenge
(30) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(30)   Challenge { ... } # empty sub-section is ignored
(30) Sent Access-Challenge Id 30 from 127.0.0.1:1812 to 127.0.0.1:33891 length 80
(30)   EAP-Message = 0x01ee00160410cea0e296614a9b445504e6a88234dcc2
(30)   Message-Authenticator = 0x00000000000000000000000000000000
(30)   State = 0x037a00dd039404d6cf3f51d8161649a0
(30) Finished request
Waking up in 0.1 seconds.
(31) Received Access-Request Id 31 from 127.0.0.1:33891 to 127.0.0.1:1812 length 241
(31)   User-Name = "anonymous"
(31)   NAS-IP-Address = 127.0.0.1
(31)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(31)   NAS-Port-Type = Wireless-802.11
(31)   Service-Type = Framed-User
(31)   NAS-Port = 1
(31)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(31)   Connect-Info = "CONNECT 54Mbps 802.11g"
(31)   Acct-Session-Id = "CF9BFBD35CAE8770"
(31)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(31)   WLAN-Pairwise-Cipher = 1027076
(31)   WLAN-Group-Cipher = 1027076
(31)   WLAN-AKM-Suite = 1027073
(31)   WLAN-Group-Mgmt-Cipher = 1027078
(31)   Framed-MTU = 1400
(31)   EAP-Message = 0x02ee0007031915
(31)   State = 0x037a00dd039404d6cf3f51d8161649a0
(31)   Message-Authenticator = 0xa8242803482adc3297dd85ec0adcee7a
(31) session-state: No cached attributes
(31) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(31)   authorize {
(31)     policy filter_username {
(31)       if (&User-Name) {
(31)       if (&User-Name)  -> TRUE
(31)       if (&User-Name)  {
(31)         if (&User-Name =~ / /) {
(31)         if (&User-Name =~ / /)  -> FALSE
(31)         if (&User-Name =~ /@[^@]*@/ ) {
(31)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(31)         if (&User-Name =~ /\.\./ ) {
(31)         if (&User-Name =~ /\.\./ )  -> FALSE
(31)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(31)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(31)         if (&User-Name =~ /\.$/)  {
(31)         if (&User-Name =~ /\.$/)   -> FALSE
(31)         if (&User-Name =~ /@\./)  {
(31)         if (&User-Name =~ /@\./)   -> FALSE
(31)       } # if (&User-Name)  = notfound
(31)     } # policy filter_username = notfound
(31)     [preprocess] = ok
(31)     [chap] = noop
(31)     [mschap] = noop
(31)     [digest] = noop
(31) suffix: Checking for suffix after "@"
(31) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(31) suffix: No such realm "NULL"
(31)     [suffix] = noop
(31) eap: Peer sent EAP Response (code 2) ID 238 length 7
(31) eap: No EAP Start, assuming it's an on-going EAP conversation
(31)     [eap] = updated
(31)     [files] = noop
(31)     [expiration] = noop
(31)     [logintime] = noop
Not doing PAP as Auth-Type is already set.
(31)     [pap] = noop
(31)   } # authorize = updated
(31) Found Auth-Type = eap
(31) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(31)   authenticate {
(31) eap: Expiring EAP session with state 0x037a00dd039404d6
(31) eap: Finished EAP session with state 0x037a00dd039404d6
(31) eap: Previous EAP request found for state 0x037a00dd039404d6, released from the list
(31) eap: Peer sent packet with method EAP NAK (3)
(31) eap: Found mutually acceptable type PEAP (25)
(31) eap: Calling submodule eap_peap to process data
(31) eap_peap: (TLS) Initiating new session
(31) eap: Sending EAP Request (code 1) ID 239 length 6
(31) eap: EAP session adding &reply:State = 0x037a00dd029519d6
(31)     [eap] = handled
(31)   } # authenticate = handled
(31) Using Post-Auth-Type Challenge
(31) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(31)   Challenge { ... } # empty sub-section is ignored
(31) session-state: Saving cached attributes
(31)   Framed-MTU = 994
(31) Sent Access-Challenge Id 31 from 127.0.0.1:1812 to 127.0.0.1:33891 length 64
(31)   EAP-Message = 0x01ef00061920
(31)   Message-Authenticator = 0x00000000000000000000000000000000
(31)   State = 0x037a00dd029519d6cf3f51d8161649a0
(31) Finished request
Waking up in 0.1 seconds.
(32) Received Access-Request Id 32 from 127.0.0.1:33891 to 127.0.0.1:1812 length 476
(32)   User-Name = "anonymous"
(32)   NAS-IP-Address = 127.0.0.1
(32)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(32)   NAS-Port-Type = Wireless-802.11
(32)   Service-Type = Framed-User
(32)   NAS-Port = 1
(32)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(32)   Connect-Info = "CONNECT 54Mbps 802.11g"
(32)   Acct-Session-Id = "CF9BFBD35CAE8770"
(32)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(32)   WLAN-Pairwise-Cipher = 1027076
(32)   WLAN-Group-Cipher = 1027076
(32)   WLAN-AKM-Suite = 1027073
(32)   WLAN-Group-Mgmt-Cipher = 1027078
(32)   Framed-MTU = 1400
(32)   EAP-Message = 0x02ef00f21980000000e816030300e3010000df03030000005d7a25c17165bd9548eb06d34dc650dab146db09e1a1c9c4608ef0fc6f000076c02cc030c0adc024c028c00ac014c0afc05dc061c049c04dc02bc02fc0acc023c027c009c013c0aec05cc060c048c04c009dc09d003d0035c032c02ac00fc02ec026c005c0a1c05fc063c051c04bc04fc03d009cc09c003c002fc031c029c00ec02dc025c004c0a0c05ec062c050c04ac04ec03c00ff01000040000a0010000e001d001700180019001a001b001c000d001600140603050306010501040303030401030102030201000b00020100001600000017000000230000
(32)   State = 0x037a00dd029519d6cf3f51d8161649a0
(32)   Message-Authenticator = 0x8248fbc42e3ac2889bbed07788fdd043
(32) Restoring &session-state
(32)   &session-state:Framed-MTU = 994
(32) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(32)   authorize {
(32)     policy filter_username {
(32)       if (&User-Name) {
(32)       if (&User-Name)  -> TRUE
(32)       if (&User-Name)  {
(32)         if (&User-Name =~ / /) {
(32)         if (&User-Name =~ / /)  -> FALSE
(32)         if (&User-Name =~ /@[^@]*@/ ) {
(32)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(32)         if (&User-Name =~ /\.\./ ) {
(32)         if (&User-Name =~ /\.\./ )  -> FALSE
(32)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(32)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(32)         if (&User-Name =~ /\.$/)  {
(32)         if (&User-Name =~ /\.$/)   -> FALSE
(32)         if (&User-Name =~ /@\./)  {
(32)         if (&User-Name =~ /@\./)   -> FALSE
(32)       } # if (&User-Name)  = notfound
(32)     } # policy filter_username = notfound
(32)     [preprocess] = ok
(32)     [chap] = noop
(32)     [mschap] = noop
(32)     [digest] = noop
(32) suffix: Checking for suffix after "@"
(32) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(32) suffix: No such realm "NULL"
(32)     [suffix] = noop
(32) eap: Peer sent EAP Response (code 2) ID 239 length 242
(32) eap: Continuing tunnel setup
(32)     [eap] = ok
(32)   } # authorize = ok
(32) Found Auth-Type = eap
(32) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(32)   authenticate {
(32) eap: Expiring EAP session with state 0x037a00dd029519d6
(32) eap: Finished EAP session with state 0x037a00dd029519d6
(32) eap: Previous EAP request found for state 0x037a00dd029519d6, released from the list
(32) eap: Peer sent packet with method EAP PEAP (25)
(32) eap: Calling submodule eap_peap to process data
(32) eap_peap: (TLS) EAP Peer says that the final record size will be 232 bytes
(32) eap_peap: (TLS) EAP Got all data (232 bytes)
(32) eap_peap: (TLS) Handshake state - before SSL initialization
(32) eap_peap: (TLS) Handshake state - Server before SSL initialization
(32) eap_peap: (TLS) Handshake state - Server before SSL initialization
(32) eap_peap: (TLS) recv TLS 1.3 Handshake, ClientHello
(32) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read client hello
(32) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHello
(32) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server hello
(32) eap_peap: (TLS) send TLS 1.2 Handshake, Certificate
(32) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write certificate
(32) eap_peap: (TLS) send TLS 1.2 Handshake, ServerKeyExchange
(32) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write key exchange
(32) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHelloDone
(32) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server done
(32) eap_peap: (TLS) Server : Need to read more data: SSLv3/TLS write server done
(32) eap_peap: (TLS) In Handshake Phase
(32) eap: Sending EAP Request (code 1) ID 240 length 1004
(32) eap: EAP session adding &reply:State = 0x037a00dd018a19d6
(32)     [eap] = handled
(32)   } # authenticate = handled
(32) Using Post-Auth-Type Challenge
(32) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(32)   Challenge { ... } # empty sub-section is ignored
(32) session-state: Saving cached attributes
(32)   Framed-MTU = 994
(32)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(32)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(32)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(32)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(32)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(32) Sent Access-Challenge Id 32 from 127.0.0.1:1812 to 127.0.0.1:33891 length 1068
(32)   EAP-Message = 0x01f003ec19c000000aac160303003d020000390303b1e7fc56151a9f83cfdb0db8d4942124f3c52a0ec59e810a034b8d49200f3d2d00c030000011ff01000100000b00040300010200170000160303092b0b0009270009240004203082041c30820304a003020102020101300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232303134333732315a170d3234303231383134333732315a307c310b3009060355040613024652310f300d06035504080c0652616469757331153013060355040a0c0c4578616d706c6520496e632e3123302106035504030c1a4578616d70
(32)   Message-Authenticator = 0x00000000000000000000000000000000
(32)   State = 0x037a00dd018a19d6cf3f51d8161649a0
(32) Finished request
(28) Cleaning up request packet ID 28 with timestamp +30 due to cleanup_delay was reached
Waking up in 0.3 seconds.
(29) Cleaning up request packet ID 29 with timestamp +30 due to cleanup_delay was reached
Waking up in 4.4 seconds.
(33) Received Access-Request Id 33 from 127.0.0.1:33891 to 127.0.0.1:1812 length 240
(33)   User-Name = "anonymous"
(33)   NAS-IP-Address = 127.0.0.1
(33)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(33)   NAS-Port-Type = Wireless-802.11
(33)   Service-Type = Framed-User
(33)   NAS-Port = 1
(33)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(33)   Connect-Info = "CONNECT 54Mbps 802.11g"
(33)   Acct-Session-Id = "CF9BFBD35CAE8770"
(33)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(33)   WLAN-Pairwise-Cipher = 1027076
(33)   WLAN-Group-Cipher = 1027076
(33)   WLAN-AKM-Suite = 1027073
(33)   WLAN-Group-Mgmt-Cipher = 1027078
(33)   Framed-MTU = 1400
(33)   EAP-Message = 0x02f000061900
(33)   State = 0x037a00dd018a19d6cf3f51d8161649a0
(33)   Message-Authenticator = 0x58e3b1b6260a090d902ebba71100cba0
(33) Restoring &session-state
(33)   &session-state:Framed-MTU = 994
(33)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(33)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(33)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(33)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(33)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(33) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(33)   authorize {
(33)     policy filter_username {
(33)       if (&User-Name) {
(33)       if (&User-Name)  -> TRUE
(33)       if (&User-Name)  {
(33)         if (&User-Name =~ / /) {
(33)         if (&User-Name =~ / /)  -> FALSE
(33)         if (&User-Name =~ /@[^@]*@/ ) {
(33)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(33)         if (&User-Name =~ /\.\./ ) {
(33)         if (&User-Name =~ /\.\./ )  -> FALSE
(33)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(33)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(33)         if (&User-Name =~ /\.$/)  {
(33)         if (&User-Name =~ /\.$/)   -> FALSE
(33)         if (&User-Name =~ /@\./)  {
(33)         if (&User-Name =~ /@\./)   -> FALSE
(33)       } # if (&User-Name)  = notfound
(33)     } # policy filter_username = notfound
(33)     [preprocess] = ok
(33)     [chap] = noop
(33)     [mschap] = noop
(33)     [digest] = noop
(33) suffix: Checking for suffix after "@"
(33) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(33) suffix: No such realm "NULL"
(33)     [suffix] = noop
(33) eap: Peer sent EAP Response (code 2) ID 240 length 6
(33) eap: Continuing tunnel setup
(33)     [eap] = ok
(33)   } # authorize = ok
(33) Found Auth-Type = eap
(33) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(33)   authenticate {
(33) eap: Expiring EAP session with state 0x037a00dd018a19d6
(33) eap: Finished EAP session with state 0x037a00dd018a19d6
(33) eap: Previous EAP request found for state 0x037a00dd018a19d6, released from the list
(33) eap: Peer sent packet with method EAP PEAP (25)
(33) eap: Calling submodule eap_peap to process data
(33) eap_peap: (TLS) Peer ACKed our handshake fragment
(33) eap: Sending EAP Request (code 1) ID 241 length 1000
(33) eap: EAP session adding &reply:State = 0x037a00dd008b19d6
(33)     [eap] = handled
(33)   } # authenticate = handled
(33) Using Post-Auth-Type Challenge
(33) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(33)   Challenge { ... } # empty sub-section is ignored
(33) session-state: Saving cached attributes
(33)   Framed-MTU = 994
(33)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(33)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(33)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(33)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(33)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(33) Sent Access-Challenge Id 33 from 127.0.0.1:1812 to 127.0.0.1:33891 length 1064
(33)   EAP-Message = 0x01f103e81940b365595edec634be72466f496c8cad448e057893222e9d9b96fa51c2d84df387dace2b8dd56e85ea1e27ed302547bc22a35b0349ae7075502f1be4a933467c7ec41b12f969f65caf80e82b77b04c1d46756210be2684f027b347debb97d3bca395775660fe2168969187b5d46b43284bb130757803bdfe082cbf44b37353c4f853131bace8ca9c30290a88b1bf0a680004fe308204fa308203e2a003020102021457604ee8762089eef125d540c0bbf0b5a118a4af300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232303134333731355a170d32343032
(33)   Message-Authenticator = 0x00000000000000000000000000000000
(33)   State = 0x037a00dd008b19d6cf3f51d8161649a0
(33) Finished request
Waking up in 4.4 seconds.
(34) Received Access-Request Id 34 from 127.0.0.1:33891 to 127.0.0.1:1812 length 240
(34)   User-Name = "anonymous"
(34)   NAS-IP-Address = 127.0.0.1
(34)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(34)   NAS-Port-Type = Wireless-802.11
(34)   Service-Type = Framed-User
(34)   NAS-Port = 1
(34)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(34)   Connect-Info = "CONNECT 54Mbps 802.11g"
(34)   Acct-Session-Id = "CF9BFBD35CAE8770"
(34)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(34)   WLAN-Pairwise-Cipher = 1027076
(34)   WLAN-Group-Cipher = 1027076
(34)   WLAN-AKM-Suite = 1027073
(34)   WLAN-Group-Mgmt-Cipher = 1027078
(34)   Framed-MTU = 1400
(34)   EAP-Message = 0x02f100061900
(34)   State = 0x037a00dd008b19d6cf3f51d8161649a0
(34)   Message-Authenticator = 0xa2993cbc83b6ebb776e788ef2448faa6
(34) Restoring &session-state
(34)   &session-state:Framed-MTU = 994
(34)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(34)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(34)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(34)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(34)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(34) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(34)   authorize {
(34)     policy filter_username {
(34)       if (&User-Name) {
(34)       if (&User-Name)  -> TRUE
(34)       if (&User-Name)  {
(34)         if (&User-Name =~ / /) {
(34)         if (&User-Name =~ / /)  -> FALSE
(34)         if (&User-Name =~ /@[^@]*@/ ) {
(34)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(34)         if (&User-Name =~ /\.\./ ) {
(34)         if (&User-Name =~ /\.\./ )  -> FALSE
(34)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(34)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(34)         if (&User-Name =~ /\.$/)  {
(34)         if (&User-Name =~ /\.$/)   -> FALSE
(34)         if (&User-Name =~ /@\./)  {
(34)         if (&User-Name =~ /@\./)   -> FALSE
(34)       } # if (&User-Name)  = notfound
(34)     } # policy filter_username = notfound
(34)     [preprocess] = ok
(34)     [chap] = noop
(34)     [mschap] = noop
(34)     [digest] = noop
(34) suffix: Checking for suffix after "@"
(34) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(34) suffix: No such realm "NULL"
(34)     [suffix] = noop
(34) eap: Peer sent EAP Response (code 2) ID 241 length 6
(34) eap: Continuing tunnel setup
(34)     [eap] = ok
(34)   } # authorize = ok
(34) Found Auth-Type = eap
(34) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(34)   authenticate {
(34) eap: Expiring EAP session with state 0x037a00dd008b19d6
(34) eap: Finished EAP session with state 0x037a00dd008b19d6
(34) eap: Previous EAP request found for state 0x037a00dd008b19d6, released from the list
(34) eap: Peer sent packet with method EAP PEAP (25)
(34) eap: Calling submodule eap_peap to process data
(34) eap_peap: (TLS) Peer ACKed our handshake fragment
(34) eap: Sending EAP Request (code 1) ID 242 length 750
(34) eap: EAP session adding &reply:State = 0x037a00dd078819d6
(34)     [eap] = handled
(34)   } # authenticate = handled
(34) Using Post-Auth-Type Challenge
(34) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(34)   Challenge { ... } # empty sub-section is ignored
(34) session-state: Saving cached attributes
(34)   Framed-MTU = 994
(34)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(34)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(34)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(34)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(34)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(34) Sent Access-Challenge Id 34 from 127.0.0.1:1812 to 127.0.0.1:33891 length 812
(34)   EAP-Message = 0x01f202ee1900161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479821457604ee8762089eef125d540c0bbf0b5a118a4af300f0603551d130101ff040530030101ff30360603551d1f042f302d302ba029a0278625687474703a2f2f7777772e6578616d706c652e6f72672f6578616d706c655f63612e63726c300d06092a864886f70d01010b05000382010100a38f6633d2e2daf953e93089c5b4a66c9abe99620e270f6120051d2195bb6972966c6b98bc7cb21016f89ec601899088e642d40ac9f4ac816aecd5c65482432b5385e04b9bdf7129b175bb275e6021db0725fccea1f8daeb4488f004dfe73aee302570804c93d471bdfc1175c9cd6b7e16a895981dd2e189f5e3d482de9e2ed67b800e000fc33fc1d505bef9840b6037ebb7e9d090a4dbf93ef5dc3a9c956c4f17bc65b21468466551d3e57e331cdcc6dfb1f7279eda22b92b9d6875ae09efa1738980
(34)   Message-Authenticator = 0x00000000000000000000000000000000
(34)   State = 0x037a00dd078819d6cf3f51d8161649a0
(34) Finished request
Waking up in 4.0 seconds.
(35) Received Access-Request Id 35 from 127.0.0.1:33891 to 127.0.0.1:1812 length 251
(35)   User-Name = "anonymous"
(35)   NAS-IP-Address = 127.0.0.1
(35)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(35)   NAS-Port-Type = Wireless-802.11
(35)   Service-Type = Framed-User
(35)   NAS-Port = 1
(35)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(35)   Connect-Info = "CONNECT 54Mbps 802.11g"
(35)   Acct-Session-Id = "CF9BFBD35CAE8770"
(35)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(35)   WLAN-Pairwise-Cipher = 1027076
(35)   WLAN-Group-Cipher = 1027076
(35)   WLAN-AKM-Suite = 1027073
(35)   WLAN-Group-Mgmt-Cipher = 1027078
(35)   Framed-MTU = 1400
(35)   EAP-Message = 0x02f2001119800000000715030300020230
(35)   State = 0x037a00dd078819d6cf3f51d8161649a0
(35)   Message-Authenticator = 0x286e92491d4d98da4350334f5ec6110f
(35) Restoring &session-state
(35)   &session-state:Framed-MTU = 994
(35)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(35)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(35)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(35)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(35)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(35) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(35)   authorize {
(35)     policy filter_username {
(35)       if (&User-Name) {
(35)       if (&User-Name)  -> TRUE
(35)       if (&User-Name)  {
(35)         if (&User-Name =~ / /) {
(35)         if (&User-Name =~ / /)  -> FALSE
(35)         if (&User-Name =~ /@[^@]*@/ ) {
(35)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(35)         if (&User-Name =~ /\.\./ ) {
(35)         if (&User-Name =~ /\.\./ )  -> FALSE
(35)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(35)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(35)         if (&User-Name =~ /\.$/)  {
(35)         if (&User-Name =~ /\.$/)   -> FALSE
(35)         if (&User-Name =~ /@\./)  {
(35)         if (&User-Name =~ /@\./)   -> FALSE
(35)       } # if (&User-Name)  = notfound
(35)     } # policy filter_username = notfound
(35)     [preprocess] = ok
(35)     [chap] = noop
(35)     [mschap] = noop
(35)     [digest] = noop
(35) suffix: Checking for suffix after "@"
(35) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(35) suffix: No such realm "NULL"
(35)     [suffix] = noop
(35) eap: Peer sent EAP Response (code 2) ID 242 length 17
(35) eap: Continuing tunnel setup
(35)     [eap] = ok
(35)   } # authorize = ok
(35) Found Auth-Type = eap
(35) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(35)   authenticate {
(35) eap: Expiring EAP session with state 0x037a00dd078819d6
(35) eap: Finished EAP session with state 0x037a00dd078819d6
(35) eap: Previous EAP request found for state 0x037a00dd078819d6, released from the list
(35) eap: Peer sent packet with method EAP PEAP (25)
(35) eap: Calling submodule eap_peap to process data
(35) eap_peap: (TLS) EAP Peer says that the final record size will be 7 bytes
(35) eap_peap: (TLS) EAP Got all data (7 bytes)
(35) eap_peap: (TLS) recv TLS 1.2 Alert, fatal unknown_ca
(35) eap_peap: (TLS) The client is informing us that it does not recognize the CA used to issue the server certificate.  Please update the client so that it knows about the CA.
(35) eap_peap: ERROR: (TLS) Alert read:fatal:unknown CA
(35) eap_peap: (TLS) Server : Need to read more data: error
(35) eap_peap: ERROR: (TLS) Failed reading from OpenSSL: error:0A000418:SSL routines::tlsv1 alert unknown ca
(35) eap_peap: (TLS) In Handshake Phase
(35) eap_peap: (TLS) Application data.
(35) eap_peap: ERROR: (TLS) Cannot continue, as the peer is misbehaving.
(35) eap_peap: ERROR: [eaptls process] = fail
(35) eap: ERROR: Failed continuing EAP PEAP (25) session.  EAP sub-module failed
(35) eap: Sending EAP Failure (code 4) ID 242 length 4
(35) eap: Failed in EAP select
(35)     [eap] = invalid
(35)   } # authenticate = invalid
(35) Failed to authenticate the user
(35) Using Post-Auth-Type Reject
(35) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(35)   Post-Auth-Type REJECT {
(35) attr_filter.access_reject: EXPAND %{User-Name}
(35) attr_filter.access_reject:    --> anonymous
(35) attr_filter.access_reject: Matched entry DEFAULT at line 11
(35)     [attr_filter.access_reject] = updated
(35)     [eap] = noop
(35)     policy remove_reply_message_if_eap {
(35)       if (&reply:EAP-Message && &reply:Reply-Message) {
(35)       if (&reply:EAP-Message && &reply:Reply-Message)  -> FALSE
(35)       else {
(35)         [noop] = noop
(35)       } # else = noop
(35)     } # policy remove_reply_message_if_eap = noop
(35)   } # Post-Auth-Type REJECT = updated
(35) Delaying response for 1.000000 seconds
Waking up in 0.3 seconds.
Waking up in 0.6 seconds.
(35) Sending delayed response
(35) Sent Access-Reject Id 35 from 127.0.0.1:1812 to 127.0.0.1:33891 length 44
(35)   EAP-Message = 0x04f20004
(35)   Message-Authenticator = 0x00000000000000000000000000000000
Waking up in 2.6 seconds.
(30) Cleaning up request packet ID 30 with timestamp +35 due to cleanup_delay was reached
(31) Cleaning up request packet ID 31 with timestamp +35 due to cleanup_delay was reached
(32) Cleaning up request packet ID 32 with timestamp +35 due to cleanup_delay was reached
Waking up in 0.4 seconds.
(33) Cleaning up request packet ID 33 with timestamp +35 due to cleanup_delay was reached
Waking up in 0.4 seconds.
(36) Received Access-Request Id 36 from 127.0.0.1:33891 to 127.0.0.1:1812 length 230
(36)   User-Name = "anonymous"
(36)   NAS-IP-Address = 127.0.0.1
(36)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(36)   NAS-Port-Type = Wireless-802.11
(36)   Service-Type = Framed-User
(36)   NAS-Port = 1
(36)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(36)   Connect-Info = "CONNECT 54Mbps 802.11g"
(36)   Acct-Session-Id = "CF9BFBD35CAE8770"
(36)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(36)   WLAN-Pairwise-Cipher = 1027076
(36)   WLAN-Group-Cipher = 1027076
(36)   WLAN-AKM-Suite = 1027073
(36)   WLAN-Group-Mgmt-Cipher = 1027078
(36)   Framed-MTU = 1400
(36)   EAP-Message = 0x0210000e01616e6f6e796d6f7573
(36)   Message-Authenticator = 0x45a08a9aa5f1bf372ef89548e8a91a19
(36) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(36)   authorize {
(36)     policy filter_username {
(36)       if (&User-Name) {
(36)       if (&User-Name)  -> TRUE
(36)       if (&User-Name)  {
(36)         if (&User-Name =~ / /) {
(36)         if (&User-Name =~ / /)  -> FALSE
(36)         if (&User-Name =~ /@[^@]*@/ ) {
(36)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(36)         if (&User-Name =~ /\.\./ ) {
(36)         if (&User-Name =~ /\.\./ )  -> FALSE
(36)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(36)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(36)         if (&User-Name =~ /\.$/)  {
(36)         if (&User-Name =~ /\.$/)   -> FALSE
(36)         if (&User-Name =~ /@\./)  {
(36)         if (&User-Name =~ /@\./)   -> FALSE
(36)       } # if (&User-Name)  = notfound
(36)     } # policy filter_username = notfound
(36)     [preprocess] = ok
(36)     [chap] = noop
(36)     [mschap] = noop
(36)     [digest] = noop
(36) suffix: Checking for suffix after "@"
(36) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(36) suffix: No such realm "NULL"
(36)     [suffix] = noop
(36) eap: Peer sent EAP Response (code 2) ID 16 length 14
(36) eap: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
(36)     [eap] = ok
(36)   } # authorize = ok
(36) Found Auth-Type = eap
(36) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(36)   authenticate {
(36) eap: Peer sent packet with method EAP Identity (1)
(36) eap: Calling submodule eap_md5 to process data
(36) eap_md5: Issuing MD5 Challenge
(36) eap: Sending EAP Request (code 1) ID 17 length 22
(36) eap: EAP session adding &reply:State = 0x81f058fc81e15cd0
(36)     [eap] = handled
(36)   } # authenticate = handled
(36) Using Post-Auth-Type Challenge
(36) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(36)   Challenge { ... } # empty sub-section is ignored
(36) Sent Access-Challenge Id 36 from 127.0.0.1:1812 to 127.0.0.1:33891 length 80
(36)   EAP-Message = 0x011100160410f0c0687aded8f65e3b756d82e6b32b55
(36)   Message-Authenticator = 0x00000000000000000000000000000000
(36)   State = 0x81f058fc81e15cd03cc1d1954ece79f4
(36) Finished request
Waking up in 0.1 seconds.
(37) Received Access-Request Id 37 from 127.0.0.1:33891 to 127.0.0.1:1812 length 241
(37)   User-Name = "anonymous"
(37)   NAS-IP-Address = 127.0.0.1
(37)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(37)   NAS-Port-Type = Wireless-802.11
(37)   Service-Type = Framed-User
(37)   NAS-Port = 1
(37)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(37)   Connect-Info = "CONNECT 54Mbps 802.11g"
(37)   Acct-Session-Id = "CF9BFBD35CAE8770"
(37)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(37)   WLAN-Pairwise-Cipher = 1027076
(37)   WLAN-Group-Cipher = 1027076
(37)   WLAN-AKM-Suite = 1027073
(37)   WLAN-Group-Mgmt-Cipher = 1027078
(37)   Framed-MTU = 1400
(37)   EAP-Message = 0x02110007031915
(37)   State = 0x81f058fc81e15cd03cc1d1954ece79f4
(37)   Message-Authenticator = 0xfa45ec058750918ad88b83aefabc73d7
(37) session-state: No cached attributes
(37) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(37)   authorize {
(37)     policy filter_username {
(37)       if (&User-Name) {
(37)       if (&User-Name)  -> TRUE
(37)       if (&User-Name)  {
(37)         if (&User-Name =~ / /) {
(37)         if (&User-Name =~ / /)  -> FALSE
(37)         if (&User-Name =~ /@[^@]*@/ ) {
(37)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(37)         if (&User-Name =~ /\.\./ ) {
(37)         if (&User-Name =~ /\.\./ )  -> FALSE
(37)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(37)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(37)         if (&User-Name =~ /\.$/)  {
(37)         if (&User-Name =~ /\.$/)   -> FALSE
(37)         if (&User-Name =~ /@\./)  {
(37)         if (&User-Name =~ /@\./)   -> FALSE
(37)       } # if (&User-Name)  = notfound
(37)     } # policy filter_username = notfound
(37)     [preprocess] = ok
(37)     [chap] = noop
(37)     [mschap] = noop
(37)     [digest] = noop
(37) suffix: Checking for suffix after "@"
(37) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(37) suffix: No such realm "NULL"
(37)     [suffix] = noop
(37) eap: Peer sent EAP Response (code 2) ID 17 length 7
(37) eap: No EAP Start, assuming it's an on-going EAP conversation
(37)     [eap] = updated
(37)     [files] = noop
(37)     [expiration] = noop
(37)     [logintime] = noop
Not doing PAP as Auth-Type is already set.
(37)     [pap] = noop
(37)   } # authorize = updated
(37) Found Auth-Type = eap
(37) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(37)   authenticate {
(37) eap: Expiring EAP session with state 0x81f058fc81e15cd0
(37) eap: Finished EAP session with state 0x81f058fc81e15cd0
(37) eap: Previous EAP request found for state 0x81f058fc81e15cd0, released from the list
(37) eap: Peer sent packet with method EAP NAK (3)
(37) eap: Found mutually acceptable type PEAP (25)
(37) eap: Calling submodule eap_peap to process data
(37) eap_peap: (TLS) Initiating new session
(37) eap: Sending EAP Request (code 1) ID 18 length 6
(37) eap: EAP session adding &reply:State = 0x81f058fc80e241d0
(37)     [eap] = handled
(37)   } # authenticate = handled
(37) Using Post-Auth-Type Challenge
(37) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(37)   Challenge { ... } # empty sub-section is ignored
(37) session-state: Saving cached attributes
(37)   Framed-MTU = 994
(37) Sent Access-Challenge Id 37 from 127.0.0.1:1812 to 127.0.0.1:33891 length 64
(37)   EAP-Message = 0x011200061920
(37)   Message-Authenticator = 0x00000000000000000000000000000000
(37)   State = 0x81f058fc80e241d03cc1d1954ece79f4
(37) Finished request
(38) Received Access-Request Id 38 from 127.0.0.1:33891 to 127.0.0.1:1812 length 476
(38)   User-Name = "anonymous"
(38)   NAS-IP-Address = 127.0.0.1
(38)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(38)   NAS-Port-Type = Wireless-802.11
(38)   Service-Type = Framed-User
(38)   NAS-Port = 1
(38)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(38)   Connect-Info = "CONNECT 54Mbps 802.11g"
(38)   Acct-Session-Id = "CF9BFBD35CAE8770"
(38)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(38)   WLAN-Pairwise-Cipher = 1027076
(38)   WLAN-Group-Cipher = 1027076
(38)   WLAN-AKM-Suite = 1027073
(38)   WLAN-Group-Mgmt-Cipher = 1027078
(38)   Framed-MTU = 1400
(38)   EAP-Message = 0x021200f21980000000e816030300e3010000df030300000063590ab8dbccaaa6ad76f0a93c3a7e39f635ef1318e4cf4ddf82a2b361000076c02cc030c0adc024c028c00ac014c0afc05dc061c049c04dc02bc02fc0acc023c027c009c013c0aec05cc060c048c04c009dc09d003d0035c032c02ac00fc02ec026c005c0a1c05fc063c051c04bc04fc03d009cc09c003c002fc031c029c00ec02dc025c004c0a0c05ec062c050c04ac04ec03c00ff01000040000a0010000e001d001700180019001a001b001c000d001600140603050306010501040303030401030102030201000b00020100001600000017000000230000
(38)   State = 0x81f058fc80e241d03cc1d1954ece79f4
(38)   Message-Authenticator = 0xc55104b764906f14271c446b837f50d2
(38) Restoring &session-state
(38)   &session-state:Framed-MTU = 994
(38) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(38)   authorize {
(38)     policy filter_username {
(38)       if (&User-Name) {
(38)       if (&User-Name)  -> TRUE
(38)       if (&User-Name)  {
(38)         if (&User-Name =~ / /) {
(38)         if (&User-Name =~ / /)  -> FALSE
(38)         if (&User-Name =~ /@[^@]*@/ ) {
(38)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(38)         if (&User-Name =~ /\.\./ ) {
(38)         if (&User-Name =~ /\.\./ )  -> FALSE
(38)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(38)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(38)         if (&User-Name =~ /\.$/)  {
(38)         if (&User-Name =~ /\.$/)   -> FALSE
(38)         if (&User-Name =~ /@\./)  {
(38)         if (&User-Name =~ /@\./)   -> FALSE
(38)       } # if (&User-Name)  = notfound
(38)     } # policy filter_username = notfound
(38)     [preprocess] = ok
(38)     [chap] = noop
(38)     [mschap] = noop
(38)     [digest] = noop
(38) suffix: Checking for suffix after "@"
(38) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(38) suffix: No such realm "NULL"
(38)     [suffix] = noop
(38) eap: Peer sent EAP Response (code 2) ID 18 length 242
(38) eap: Continuing tunnel setup
(38)     [eap] = ok
(38)   } # authorize = ok
(38) Found Auth-Type = eap
(38) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(38)   authenticate {
(38) eap: Expiring EAP session with state 0x81f058fc80e241d0
(38) eap: Finished EAP session with state 0x81f058fc80e241d0
(38) eap: Previous EAP request found for state 0x81f058fc80e241d0, released from the list
(38) eap: Peer sent packet with method EAP PEAP (25)
(38) eap: Calling submodule eap_peap to process data
(38) eap_peap: (TLS) EAP Peer says that the final record size will be 232 bytes
(38) eap_peap: (TLS) EAP Got all data (232 bytes)
(38) eap_peap: (TLS) Handshake state - before SSL initialization
(38) eap_peap: (TLS) Handshake state - Server before SSL initialization
(38) eap_peap: (TLS) Handshake state - Server before SSL initialization
(38) eap_peap: (TLS) recv TLS 1.3 Handshake, ClientHello
(38) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read client hello
(38) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHello
(38) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server hello
(38) eap_peap: (TLS) send TLS 1.2 Handshake, Certificate
(38) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write certificate
(38) eap_peap: (TLS) send TLS 1.2 Handshake, ServerKeyExchange
(38) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write key exchange
(38) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHelloDone
(38) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server done
(38) eap_peap: (TLS) Server : Need to read more data: SSLv3/TLS write server done
(38) eap_peap: (TLS) In Handshake Phase
(38) eap: Sending EAP Request (code 1) ID 19 length 1004
(38) eap: EAP session adding &reply:State = 0x81f058fc83e341d0
(38)     [eap] = handled
(38)   } # authenticate = handled
(38) Using Post-Auth-Type Challenge
(38) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(38)   Challenge { ... } # empty sub-section is ignored
(38) session-state: Saving cached attributes
(38)   Framed-MTU = 994
(38)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(38)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(38)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(38)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(38)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(38) Sent Access-Challenge Id 38 from 127.0.0.1:1812 to 127.0.0.1:33891 length 1068
(38)   EAP-Message = 0x011303ec19c000000aac160303003d0200003903036ae015a3d02f5c34f6d2f1d9ae7f7eca8cb3eb5af02840325256d9b91f319a1800c030000011ff01000100000b00040300010200170000160303092b0b0009270009240004203082041c30820304a003020102020101300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232303134333732315a170d3234303231383134333732315a307c310b3009060355040613024652310f300d06035504080c0652616469757331153013060355040a0c0c4578616d706c6520496e632e3123302106035504030c1a4578616d70
(38)   Message-Authenticator = 0x00000000000000000000000000000000
(38)   State = 0x81f058fc83e341d03cc1d1954ece79f4
(38) Finished request
(34) Cleaning up request packet ID 34 with timestamp +35 due to cleanup_delay was reached
Waking up in 0.3 seconds.
(35) Cleaning up request packet ID 35 with timestamp +36 due to cleanup_delay was reached
Waking up in 4.4 seconds.
(39) Received Access-Request Id 39 from 127.0.0.1:33891 to 127.0.0.1:1812 length 240
(39)   User-Name = "anonymous"
(39)   NAS-IP-Address = 127.0.0.1
(39)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(39)   NAS-Port-Type = Wireless-802.11
(39)   Service-Type = Framed-User
(39)   NAS-Port = 1
(39)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(39)   Connect-Info = "CONNECT 54Mbps 802.11g"
(39)   Acct-Session-Id = "CF9BFBD35CAE8770"
(39)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(39)   WLAN-Pairwise-Cipher = 1027076
(39)   WLAN-Group-Cipher = 1027076
(39)   WLAN-AKM-Suite = 1027073
(39)   WLAN-Group-Mgmt-Cipher = 1027078
(39)   Framed-MTU = 1400
(39)   EAP-Message = 0x021300061900
(39)   State = 0x81f058fc83e341d03cc1d1954ece79f4
(39)   Message-Authenticator = 0xee251fd4e1a595730b51326afa4f71ba
(39) Restoring &session-state
(39)   &session-state:Framed-MTU = 994
(39)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(39)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(39)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(39)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(39)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(39) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(39)   authorize {
(39)     policy filter_username {
(39)       if (&User-Name) {
(39)       if (&User-Name)  -> TRUE
(39)       if (&User-Name)  {
(39)         if (&User-Name =~ / /) {
(39)         if (&User-Name =~ / /)  -> FALSE
(39)         if (&User-Name =~ /@[^@]*@/ ) {
(39)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(39)         if (&User-Name =~ /\.\./ ) {
(39)         if (&User-Name =~ /\.\./ )  -> FALSE
(39)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(39)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(39)         if (&User-Name =~ /\.$/)  {
(39)         if (&User-Name =~ /\.$/)   -> FALSE
(39)         if (&User-Name =~ /@\./)  {
(39)         if (&User-Name =~ /@\./)   -> FALSE
(39)       } # if (&User-Name)  = notfound
(39)     } # policy filter_username = notfound
(39)     [preprocess] = ok
(39)     [chap] = noop
(39)     [mschap] = noop
(39)     [digest] = noop
(39) suffix: Checking for suffix after "@"
(39) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(39) suffix: No such realm "NULL"
(39)     [suffix] = noop
(39) eap: Peer sent EAP Response (code 2) ID 19 length 6
(39) eap: Continuing tunnel setup
(39)     [eap] = ok
(39)   } # authorize = ok
(39) Found Auth-Type = eap
(39) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(39)   authenticate {
(39) eap: Expiring EAP session with state 0x81f058fc83e341d0
(39) eap: Finished EAP session with state 0x81f058fc83e341d0
(39) eap: Previous EAP request found for state 0x81f058fc83e341d0, released from the list
(39) eap: Peer sent packet with method EAP PEAP (25)
(39) eap: Calling submodule eap_peap to process data
(39) eap_peap: (TLS) Peer ACKed our handshake fragment
(39) eap: Sending EAP Request (code 1) ID 20 length 1000
(39) eap: EAP session adding &reply:State = 0x81f058fc82e441d0
(39)     [eap] = handled
(39)   } # authenticate = handled
(39) Using Post-Auth-Type Challenge
(39) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(39)   Challenge { ... } # empty sub-section is ignored
(39) session-state: Saving cached attributes
(39)   Framed-MTU = 994
(39)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(39)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(39)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(39)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(39)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(39) Sent Access-Challenge Id 39 from 127.0.0.1:1812 to 127.0.0.1:33891 length 1064
(39)   EAP-Message = 0x011403e81940b365595edec634be72466f496c8cad448e057893222e9d9b96fa51c2d84df387dace2b8dd56e85ea1e27ed302547bc22a35b0349ae7075502f1be4a933467c7ec41b12f969f65caf80e82b77b04c1d46756210be2684f027b347debb97d3bca395775660fe2168969187b5d46b43284bb130757803bdfe082cbf44b37353c4f853131bace8ca9c30290a88b1bf0a680004fe308204fa308203e2a003020102021457604ee8762089eef125d540c0bbf0b5a118a4af300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232303134333731355a170d32343032
(39)   Message-Authenticator = 0x00000000000000000000000000000000
(39)   State = 0x81f058fc82e441d03cc1d1954ece79f4
(39) Finished request
Waking up in 4.4 seconds.
(40) Received Access-Request Id 40 from 127.0.0.1:33891 to 127.0.0.1:1812 length 240
(40)   User-Name = "anonymous"
(40)   NAS-IP-Address = 127.0.0.1
(40)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(40)   NAS-Port-Type = Wireless-802.11
(40)   Service-Type = Framed-User
(40)   NAS-Port = 1
(40)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(40)   Connect-Info = "CONNECT 54Mbps 802.11g"
(40)   Acct-Session-Id = "CF9BFBD35CAE8770"
(40)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(40)   WLAN-Pairwise-Cipher = 1027076
(40)   WLAN-Group-Cipher = 1027076
(40)   WLAN-AKM-Suite = 1027073
(40)   WLAN-Group-Mgmt-Cipher = 1027078
(40)   Framed-MTU = 1400
(40)   EAP-Message = 0x021400061900
(40)   State = 0x81f058fc82e441d03cc1d1954ece79f4
(40)   Message-Authenticator = 0xdc6035d843878400664a3e7c341c71eb
(40) Restoring &session-state
(40)   &session-state:Framed-MTU = 994
(40)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(40)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(40)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(40)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(40)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(40) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(40)   authorize {
(40)     policy filter_username {
(40)       if (&User-Name) {
(40)       if (&User-Name)  -> TRUE
(40)       if (&User-Name)  {
(40)         if (&User-Name =~ / /) {
(40)         if (&User-Name =~ / /)  -> FALSE
(40)         if (&User-Name =~ /@[^@]*@/ ) {
(40)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(40)         if (&User-Name =~ /\.\./ ) {
(40)         if (&User-Name =~ /\.\./ )  -> FALSE
(40)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(40)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(40)         if (&User-Name =~ /\.$/)  {
(40)         if (&User-Name =~ /\.$/)   -> FALSE
(40)         if (&User-Name =~ /@\./)  {
(40)         if (&User-Name =~ /@\./)   -> FALSE
(40)       } # if (&User-Name)  = notfound
(40)     } # policy filter_username = notfound
(40)     [preprocess] = ok
(40)     [chap] = noop
(40)     [mschap] = noop
(40)     [digest] = noop
(40) suffix: Checking for suffix after "@"
(40) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(40) suffix: No such realm "NULL"
(40)     [suffix] = noop
(40) eap: Peer sent EAP Response (code 2) ID 20 length 6
(40) eap: Continuing tunnel setup
(40)     [eap] = ok
(40)   } # authorize = ok
(40) Found Auth-Type = eap
(40) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(40)   authenticate {
(40) eap: Expiring EAP session with state 0x81f058fc82e441d0
(40) eap: Finished EAP session with state 0x81f058fc82e441d0
(40) eap: Previous EAP request found for state 0x81f058fc82e441d0, released from the list
(40) eap: Peer sent packet with method EAP PEAP (25)
(40) eap: Calling submodule eap_peap to process data
(40) eap_peap: (TLS) Peer ACKed our handshake fragment
(40) eap: Sending EAP Request (code 1) ID 21 length 750
(40) eap: EAP session adding &reply:State = 0x81f058fc85e541d0
(40)     [eap] = handled
(40)   } # authenticate = handled
(40) Using Post-Auth-Type Challenge
(40) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(40)   Challenge { ... } # empty sub-section is ignored
(40) session-state: Saving cached attributes
(40)   Framed-MTU = 994
(40)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(40)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(40)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(40)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(40)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(40) Sent Access-Challenge Id 40 from 127.0.0.1:1812 to 127.0.0.1:33891 length 812
(40)   EAP-Message = 0x011502ee1900161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479821457604ee8762089eef125d540c0bbf0b5a118a4af300f0603551d130101ff040530030101ff30360603551d1f042f302d302ba029a0278625687474703a2f2f7777772e6578616d706c652e6f72672f6578616d706c655f63612e63726c300d06092a864886f70d01010b05000382010100a38f6633d2e2daf953e93089c5b4a66c9abe99620e270f6120051d2195bb6972966c6b98bc7cb21016f89ec601899088e642d40ac9f4ac816aecd5c65482432b5385e04b9bdf7129b175bb275e6021db0725fccea1f8daeb4488f004dfe73aee302570804c93d471bdfc1175c9cd6b7e16a895981dd2e189f5e3d482de9e2ed67b800e000fc33fc1d505bef9840b6037ebb7e9d090a4dbf93ef5dc3a9c956c4f17bc65b21468466551d3e57e331cdcc6dfb1f7279eda22b92b9d6875ae09efa1738980
(40)   Message-Authenticator = 0x00000000000000000000000000000000
(40)   State = 0x81f058fc85e541d03cc1d1954ece79f4
(40) Finished request
Waking up in 4.0 seconds.
(41) Received Access-Request Id 41 from 127.0.0.1:33891 to 127.0.0.1:1812 length 251
(41)   User-Name = "anonymous"
(41)   NAS-IP-Address = 127.0.0.1
(41)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(41)   NAS-Port-Type = Wireless-802.11
(41)   Service-Type = Framed-User
(41)   NAS-Port = 1
(41)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(41)   Connect-Info = "CONNECT 54Mbps 802.11g"
(41)   Acct-Session-Id = "CF9BFBD35CAE8770"
(41)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(41)   WLAN-Pairwise-Cipher = 1027076
(41)   WLAN-Group-Cipher = 1027076
(41)   WLAN-AKM-Suite = 1027073
(41)   WLAN-Group-Mgmt-Cipher = 1027078
(41)   Framed-MTU = 1400
(41)   EAP-Message = 0x0215001119800000000715030300020230
(41)   State = 0x81f058fc85e541d03cc1d1954ece79f4
(41)   Message-Authenticator = 0xdc15f80ba59a3f30fc273b0f00c8dae9
(41) Restoring &session-state
(41)   &session-state:Framed-MTU = 994
(41)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(41)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(41)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(41)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(41)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(41) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(41)   authorize {
(41)     policy filter_username {
(41)       if (&User-Name) {
(41)       if (&User-Name)  -> TRUE
(41)       if (&User-Name)  {
(41)         if (&User-Name =~ / /) {
(41)         if (&User-Name =~ / /)  -> FALSE
(41)         if (&User-Name =~ /@[^@]*@/ ) {
(41)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(41)         if (&User-Name =~ /\.\./ ) {
(41)         if (&User-Name =~ /\.\./ )  -> FALSE
(41)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(41)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(41)         if (&User-Name =~ /\.$/)  {
(41)         if (&User-Name =~ /\.$/)   -> FALSE
(41)         if (&User-Name =~ /@\./)  {
(41)         if (&User-Name =~ /@\./)   -> FALSE
(41)       } # if (&User-Name)  = notfound
(41)     } # policy filter_username = notfound
(41)     [preprocess] = ok
(41)     [chap] = noop
(41)     [mschap] = noop
(41)     [digest] = noop
(41) suffix: Checking for suffix after "@"
(41) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(41) suffix: No such realm "NULL"
(41)     [suffix] = noop
(41) eap: Peer sent EAP Response (code 2) ID 21 length 17
(41) eap: Continuing tunnel setup
(41)     [eap] = ok
(41)   } # authorize = ok
(41) Found Auth-Type = eap
(41) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(41)   authenticate {
(41) eap: Expiring EAP session with state 0x81f058fc85e541d0
(41) eap: Finished EAP session with state 0x81f058fc85e541d0
(41) eap: Previous EAP request found for state 0x81f058fc85e541d0, released from the list
(41) eap: Peer sent packet with method EAP PEAP (25)
(41) eap: Calling submodule eap_peap to process data
(41) eap_peap: (TLS) EAP Peer says that the final record size will be 7 bytes
(41) eap_peap: (TLS) EAP Got all data (7 bytes)
(41) eap_peap: (TLS) recv TLS 1.2 Alert, fatal unknown_ca
(41) eap_peap: (TLS) The client is informing us that it does not recognize the CA used to issue the server certificate.  Please update the client so that it knows about the CA.
(41) eap_peap: ERROR: (TLS) Alert read:fatal:unknown CA
(41) eap_peap: (TLS) Server : Need to read more data: error
(41) eap_peap: ERROR: (TLS) Failed reading from OpenSSL: error:0A000418:SSL routines::tlsv1 alert unknown ca
(41) eap_peap: (TLS) In Handshake Phase
(41) eap_peap: (TLS) Application data.
(41) eap_peap: ERROR: (TLS) Cannot continue, as the peer is misbehaving.
(41) eap_peap: ERROR: [eaptls process] = fail
(41) eap: ERROR: Failed continuing EAP PEAP (25) session.  EAP sub-module failed
(41) eap: Sending EAP Failure (code 4) ID 21 length 4
(41) eap: Failed in EAP select
(41)     [eap] = invalid
(41)   } # authenticate = invalid
(41) Failed to authenticate the user
(41) Using Post-Auth-Type Reject
(41) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(41)   Post-Auth-Type REJECT {
(41) attr_filter.access_reject: EXPAND %{User-Name}
(41) attr_filter.access_reject:    --> anonymous
(41) attr_filter.access_reject: Matched entry DEFAULT at line 11
(41)     [attr_filter.access_reject] = updated
(41)     [eap] = noop
(41)     policy remove_reply_message_if_eap {
(41)       if (&reply:EAP-Message && &reply:Reply-Message) {
(41)       if (&reply:EAP-Message && &reply:Reply-Message)  -> FALSE
(41)       else {
(41)         [noop] = noop
(41)       } # else = noop
(41)     } # policy remove_reply_message_if_eap = noop
(41)   } # Post-Auth-Type REJECT = updated
(41) Delaying response for 1.000000 seconds
Waking up in 0.3 seconds.
Waking up in 0.6 seconds.
(41) Sending delayed response
(41) Sent Access-Reject Id 41 from 127.0.0.1:1812 to 127.0.0.1:33891 length 44
(41)   EAP-Message = 0x04150004
(41)   Message-Authenticator = 0x00000000000000000000000000000000
Waking up in 2.6 seconds.
(36) Cleaning up request packet ID 36 with timestamp +40 due to cleanup_delay was reached
(37) Cleaning up request packet ID 37 with timestamp +40 due to cleanup_delay was reached
(38) Cleaning up request packet ID 38 with timestamp +40 due to cleanup_delay was reached
Waking up in 0.4 seconds.
(39) Cleaning up request packet ID 39 with timestamp +41 due to cleanup_delay was reached
Waking up in 0.4 seconds.
(42) Received Access-Request Id 42 from 127.0.0.1:33891 to 127.0.0.1:1812 length 230
(42)   User-Name = "anonymous"
(42)   NAS-IP-Address = 127.0.0.1
(42)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(42)   NAS-Port-Type = Wireless-802.11
(42)   Service-Type = Framed-User
(42)   NAS-Port = 1
(42)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(42)   Connect-Info = "CONNECT 54Mbps 802.11g"
(42)   Acct-Session-Id = "CF9BFBD35CAE8770"
(42)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(42)   WLAN-Pairwise-Cipher = 1027076
(42)   WLAN-Group-Cipher = 1027076
(42)   WLAN-AKM-Suite = 1027073
(42)   WLAN-Group-Mgmt-Cipher = 1027078
(42)   Framed-MTU = 1400
(42)   EAP-Message = 0x02e5000e01616e6f6e796d6f7573
(42)   Message-Authenticator = 0x470973e044f12948d6dc1e917e971e94
(42) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(42)   authorize {
(42)     policy filter_username {
(42)       if (&User-Name) {
(42)       if (&User-Name)  -> TRUE
(42)       if (&User-Name)  {
(42)         if (&User-Name =~ / /) {
(42)         if (&User-Name =~ / /)  -> FALSE
(42)         if (&User-Name =~ /@[^@]*@/ ) {
(42)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(42)         if (&User-Name =~ /\.\./ ) {
(42)         if (&User-Name =~ /\.\./ )  -> FALSE
(42)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(42)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(42)         if (&User-Name =~ /\.$/)  {
(42)         if (&User-Name =~ /\.$/)   -> FALSE
(42)         if (&User-Name =~ /@\./)  {
(42)         if (&User-Name =~ /@\./)   -> FALSE
(42)       } # if (&User-Name)  = notfound
(42)     } # policy filter_username = notfound
(42)     [preprocess] = ok
(42)     [chap] = noop
(42)     [mschap] = noop
(42)     [digest] = noop
(42) suffix: Checking for suffix after "@"
(42) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(42) suffix: No such realm "NULL"
(42)     [suffix] = noop
(42) eap: Peer sent EAP Response (code 2) ID 229 length 14
(42) eap: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
(42)     [eap] = ok
(42)   } # authorize = ok
(42) Found Auth-Type = eap
(42) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(42)   authenticate {
(42) eap: Peer sent packet with method EAP Identity (1)
(42) eap: Calling submodule eap_md5 to process data
(42) eap_md5: Issuing MD5 Challenge
(42) eap: Sending EAP Request (code 1) ID 230 length 22
(42) eap: EAP session adding &reply:State = 0x5edd3c275e3b38f1
(42)     [eap] = handled
(42)   } # authenticate = handled
(42) Using Post-Auth-Type Challenge
(42) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(42)   Challenge { ... } # empty sub-section is ignored
(42) Sent Access-Challenge Id 42 from 127.0.0.1:1812 to 127.0.0.1:33891 length 80
(42)   EAP-Message = 0x01e6001604100cdcedc3f2abdc3528afdd45d08da8e3
(42)   Message-Authenticator = 0x00000000000000000000000000000000
(42)   State = 0x5edd3c275e3b38f1464c492d2a3aec19
(42) Finished request
(43) Received Access-Request Id 43 from 127.0.0.1:33891 to 127.0.0.1:1812 length 241
(43)   User-Name = "anonymous"
(43)   NAS-IP-Address = 127.0.0.1
(43)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(43)   NAS-Port-Type = Wireless-802.11
(43)   Service-Type = Framed-User
(43)   NAS-Port = 1
(43)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(43)   Connect-Info = "CONNECT 54Mbps 802.11g"
(43)   Acct-Session-Id = "CF9BFBD35CAE8770"
(43)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(43)   WLAN-Pairwise-Cipher = 1027076
(43)   WLAN-Group-Cipher = 1027076
(43)   WLAN-AKM-Suite = 1027073
(43)   WLAN-Group-Mgmt-Cipher = 1027078
(43)   Framed-MTU = 1400
(43)   EAP-Message = 0x02e60007031915
(43)   State = 0x5edd3c275e3b38f1464c492d2a3aec19
(43)   Message-Authenticator = 0x8dd5360f3c5471a7ad1b8f5453e5ffbc
(43) session-state: No cached attributes
(43) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(43)   authorize {
(43)     policy filter_username {
(43)       if (&User-Name) {
(43)       if (&User-Name)  -> TRUE
(43)       if (&User-Name)  {
(43)         if (&User-Name =~ / /) {
(43)         if (&User-Name =~ / /)  -> FALSE
(43)         if (&User-Name =~ /@[^@]*@/ ) {
(43)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(43)         if (&User-Name =~ /\.\./ ) {
(43)         if (&User-Name =~ /\.\./ )  -> FALSE
(43)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(43)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(43)         if (&User-Name =~ /\.$/)  {
(43)         if (&User-Name =~ /\.$/)   -> FALSE
(43)         if (&User-Name =~ /@\./)  {
(43)         if (&User-Name =~ /@\./)   -> FALSE
(43)       } # if (&User-Name)  = notfound
(43)     } # policy filter_username = notfound
(43)     [preprocess] = ok
(43)     [chap] = noop
(43)     [mschap] = noop
(43)     [digest] = noop
(43) suffix: Checking for suffix after "@"
(43) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(43) suffix: No such realm "NULL"
(43)     [suffix] = noop
(43) eap: Peer sent EAP Response (code 2) ID 230 length 7
(43) eap: No EAP Start, assuming it's an on-going EAP conversation
(43)     [eap] = updated
(43)     [files] = noop
(43)     [expiration] = noop
(43)     [logintime] = noop
Not doing PAP as Auth-Type is already set.
(43)     [pap] = noop
(43)   } # authorize = updated
(43) Found Auth-Type = eap
(43) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(43)   authenticate {
(43) eap: Expiring EAP session with state 0x5edd3c275e3b38f1
(43) eap: Finished EAP session with state 0x5edd3c275e3b38f1
(43) eap: Previous EAP request found for state 0x5edd3c275e3b38f1, released from the list
(43) eap: Peer sent packet with method EAP NAK (3)
(43) eap: Found mutually acceptable type PEAP (25)
(43) eap: Calling submodule eap_peap to process data
(43) eap_peap: (TLS) Initiating new session
(43) eap: Sending EAP Request (code 1) ID 231 length 6
(43) eap: EAP session adding &reply:State = 0x5edd3c275f3a25f1
(43)     [eap] = handled
(43)   } # authenticate = handled
(43) Using Post-Auth-Type Challenge
(43) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(43)   Challenge { ... } # empty sub-section is ignored
(43) session-state: Saving cached attributes
(43)   Framed-MTU = 994
(43) Sent Access-Challenge Id 43 from 127.0.0.1:1812 to 127.0.0.1:33891 length 64
(43)   EAP-Message = 0x01e700061920
(43)   Message-Authenticator = 0x00000000000000000000000000000000
(43)   State = 0x5edd3c275f3a25f1464c492d2a3aec19
(43) Finished request
(40) Cleaning up request packet ID 40 with timestamp +41 due to cleanup_delay was reached
Waking up in 0.3 seconds.
(44) Received Access-Request Id 44 from 127.0.0.1:33891 to 127.0.0.1:1812 length 476
(44)   User-Name = "anonymous"
(44)   NAS-IP-Address = 127.0.0.1
(44)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(44)   NAS-Port-Type = Wireless-802.11
(44)   Service-Type = Framed-User
(44)   NAS-Port = 1
(44)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(44)   Connect-Info = "CONNECT 54Mbps 802.11g"
(44)   Acct-Session-Id = "CF9BFBD35CAE8770"
(44)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(44)   WLAN-Pairwise-Cipher = 1027076
(44)   WLAN-Group-Cipher = 1027076
(44)   WLAN-AKM-Suite = 1027073
(44)   WLAN-Group-Mgmt-Cipher = 1027078
(44)   Framed-MTU = 1400
(44)   EAP-Message = 0x02e700f21980000000e816030300e3010000df030300000069efda743acdc250049fcd726cdb325f4d12a7c35fe564dd758bbb87b0000076c02cc030c0adc024c028c00ac014c0afc05dc061c049c04dc02bc02fc0acc023c027c009c013c0aec05cc060c048c04c009dc09d003d0035c032c02ac00fc02ec026c005c0a1c05fc063c051c04bc04fc03d009cc09c003c002fc031c029c00ec02dc025c004c0a0c05ec062c050c04ac04ec03c00ff01000040000a0010000e001d001700180019001a001b001c000d001600140603050306010501040303030401030102030201000b00020100001600000017000000230000
(44)   State = 0x5edd3c275f3a25f1464c492d2a3aec19
(44)   Message-Authenticator = 0xea3a81d8c2341600b4ce542b58dcc832
(44) Restoring &session-state
(44)   &session-state:Framed-MTU = 994
(44) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(44)   authorize {
(44)     policy filter_username {
(44)       if (&User-Name) {
(44)       if (&User-Name)  -> TRUE
(44)       if (&User-Name)  {
(44)         if (&User-Name =~ / /) {
(44)         if (&User-Name =~ / /)  -> FALSE
(44)         if (&User-Name =~ /@[^@]*@/ ) {
(44)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(44)         if (&User-Name =~ /\.\./ ) {
(44)         if (&User-Name =~ /\.\./ )  -> FALSE
(44)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(44)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(44)         if (&User-Name =~ /\.$/)  {
(44)         if (&User-Name =~ /\.$/)   -> FALSE
(44)         if (&User-Name =~ /@\./)  {
(44)         if (&User-Name =~ /@\./)   -> FALSE
(44)       } # if (&User-Name)  = notfound
(44)     } # policy filter_username = notfound
(44)     [preprocess] = ok
(44)     [chap] = noop
(44)     [mschap] = noop
(44)     [digest] = noop
(44) suffix: Checking for suffix after "@"
(44) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(44) suffix: No such realm "NULL"
(44)     [suffix] = noop
(44) eap: Peer sent EAP Response (code 2) ID 231 length 242
(44) eap: Continuing tunnel setup
(44)     [eap] = ok
(44)   } # authorize = ok
(44) Found Auth-Type = eap
(44) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(44)   authenticate {
(44) eap: Expiring EAP session with state 0x5edd3c275f3a25f1
(44) eap: Finished EAP session with state 0x5edd3c275f3a25f1
(44) eap: Previous EAP request found for state 0x5edd3c275f3a25f1, released from the list
(44) eap: Peer sent packet with method EAP PEAP (25)
(44) eap: Calling submodule eap_peap to process data
(44) eap_peap: (TLS) EAP Peer says that the final record size will be 232 bytes
(44) eap_peap: (TLS) EAP Got all data (232 bytes)
(44) eap_peap: (TLS) Handshake state - before SSL initialization
(44) eap_peap: (TLS) Handshake state - Server before SSL initialization
(44) eap_peap: (TLS) Handshake state - Server before SSL initialization
(44) eap_peap: (TLS) recv TLS 1.3 Handshake, ClientHello
(44) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read client hello
(44) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHello
(44) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server hello
(44) eap_peap: (TLS) send TLS 1.2 Handshake, Certificate
(44) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write certificate
(44) eap_peap: (TLS) send TLS 1.2 Handshake, ServerKeyExchange
(44) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write key exchange
(44) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHelloDone
(44) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server done
(44) eap_peap: (TLS) Server : Need to read more data: SSLv3/TLS write server done
(44) eap_peap: (TLS) In Handshake Phase
(44) eap: Sending EAP Request (code 1) ID 232 length 1004
(44) eap: EAP session adding &reply:State = 0x5edd3c275c3525f1
(44)     [eap] = handled
(44)   } # authenticate = handled
(44) Using Post-Auth-Type Challenge
(44) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(44)   Challenge { ... } # empty sub-section is ignored
(44) session-state: Saving cached attributes
(44)   Framed-MTU = 994
(44)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(44)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(44)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(44)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(44)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(44) Sent Access-Challenge Id 44 from 127.0.0.1:1812 to 127.0.0.1:33891 length 1068
(44)   EAP-Message = 0x01e803ec19c000000aac160303003d020000390303b38629abec28d2db1bab86186160dcbd07351e0176b2d61926db0039ebe3bd7200c030000011ff01000100000b00040300010200170000160303092b0b0009270009240004203082041c30820304a003020102020101300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232303134333732315a170d3234303231383134333732315a307c310b3009060355040613024652310f300d06035504080c0652616469757331153013060355040a0c0c4578616d706c6520496e632e3123302106035504030c1a4578616d70
(44)   Message-Authenticator = 0x00000000000000000000000000000000
(44)   State = 0x5edd3c275c3525f1464c492d2a3aec19
(44) Finished request
Waking up in 0.3 seconds.
(41) Cleaning up request packet ID 41 with timestamp +42 due to cleanup_delay was reached
Waking up in 4.5 seconds.
(45) Received Access-Request Id 45 from 127.0.0.1:33891 to 127.0.0.1:1812 length 240
(45)   User-Name = "anonymous"
(45)   NAS-IP-Address = 127.0.0.1
(45)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(45)   NAS-Port-Type = Wireless-802.11
(45)   Service-Type = Framed-User
(45)   NAS-Port = 1
(45)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(45)   Connect-Info = "CONNECT 54Mbps 802.11g"
(45)   Acct-Session-Id = "CF9BFBD35CAE8770"
(45)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(45)   WLAN-Pairwise-Cipher = 1027076
(45)   WLAN-Group-Cipher = 1027076
(45)   WLAN-AKM-Suite = 1027073
(45)   WLAN-Group-Mgmt-Cipher = 1027078
(45)   Framed-MTU = 1400
(45)   EAP-Message = 0x02e800061900
(45)   State = 0x5edd3c275c3525f1464c492d2a3aec19
(45)   Message-Authenticator = 0x2df0597fd9b3eb85de0f755b7761673a
(45) Restoring &session-state
(45)   &session-state:Framed-MTU = 994
(45)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(45)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(45)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(45)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(45)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(45) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(45)   authorize {
(45)     policy filter_username {
(45)       if (&User-Name) {
(45)       if (&User-Name)  -> TRUE
(45)       if (&User-Name)  {
(45)         if (&User-Name =~ / /) {
(45)         if (&User-Name =~ / /)  -> FALSE
(45)         if (&User-Name =~ /@[^@]*@/ ) {
(45)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(45)         if (&User-Name =~ /\.\./ ) {
(45)         if (&User-Name =~ /\.\./ )  -> FALSE
(45)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(45)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(45)         if (&User-Name =~ /\.$/)  {
(45)         if (&User-Name =~ /\.$/)   -> FALSE
(45)         if (&User-Name =~ /@\./)  {
(45)         if (&User-Name =~ /@\./)   -> FALSE
(45)       } # if (&User-Name)  = notfound
(45)     } # policy filter_username = notfound
(45)     [preprocess] = ok
(45)     [chap] = noop
(45)     [mschap] = noop
(45)     [digest] = noop
(45) suffix: Checking for suffix after "@"
(45) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(45) suffix: No such realm "NULL"
(45)     [suffix] = noop
(45) eap: Peer sent EAP Response (code 2) ID 232 length 6
(45) eap: Continuing tunnel setup
(45)     [eap] = ok
(45)   } # authorize = ok
(45) Found Auth-Type = eap
(45) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(45)   authenticate {
(45) eap: Expiring EAP session with state 0x5edd3c275c3525f1
(45) eap: Finished EAP session with state 0x5edd3c275c3525f1
(45) eap: Previous EAP request found for state 0x5edd3c275c3525f1, released from the list
(45) eap: Peer sent packet with method EAP PEAP (25)
(45) eap: Calling submodule eap_peap to process data
(45) eap_peap: (TLS) Peer ACKed our handshake fragment
(45) eap: Sending EAP Request (code 1) ID 233 length 1000
(45) eap: EAP session adding &reply:State = 0x5edd3c275d3425f1
(45)     [eap] = handled
(45)   } # authenticate = handled
(45) Using Post-Auth-Type Challenge
(45) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(45)   Challenge { ... } # empty sub-section is ignored
(45) session-state: Saving cached attributes
(45)   Framed-MTU = 994
(45)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(45)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(45)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(45)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(45)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(45) Sent Access-Challenge Id 45 from 127.0.0.1:1812 to 127.0.0.1:33891 length 1064
(45)   EAP-Message = 0x01e903e81940b365595edec634be72466f496c8cad448e057893222e9d9b96fa51c2d84df387dace2b8dd56e85ea1e27ed302547bc22a35b0349ae7075502f1be4a933467c7ec41b12f969f65caf80e82b77b04c1d46756210be2684f027b347debb97d3bca395775660fe2168969187b5d46b43284bb130757803bdfe082cbf44b37353c4f853131bace8ca9c30290a88b1bf0a680004fe308204fa308203e2a003020102021457604ee8762089eef125d540c0bbf0b5a118a4af300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232303134333731355a170d32343032
(45)   Message-Authenticator = 0x00000000000000000000000000000000
(45)   State = 0x5edd3c275d3425f1464c492d2a3aec19
(45) Finished request
Waking up in 4.4 seconds.
(46) Received Access-Request Id 46 from 127.0.0.1:33891 to 127.0.0.1:1812 length 240
(46)   User-Name = "anonymous"
(46)   NAS-IP-Address = 127.0.0.1
(46)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(46)   NAS-Port-Type = Wireless-802.11
(46)   Service-Type = Framed-User
(46)   NAS-Port = 1
(46)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(46)   Connect-Info = "CONNECT 54Mbps 802.11g"
(46)   Acct-Session-Id = "CF9BFBD35CAE8770"
(46)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(46)   WLAN-Pairwise-Cipher = 1027076
(46)   WLAN-Group-Cipher = 1027076
(46)   WLAN-AKM-Suite = 1027073
(46)   WLAN-Group-Mgmt-Cipher = 1027078
(46)   Framed-MTU = 1400
(46)   EAP-Message = 0x02e900061900
(46)   State = 0x5edd3c275d3425f1464c492d2a3aec19
(46)   Message-Authenticator = 0x64973a258f88e0cc6bd443605654a5b3
(46) Restoring &session-state
(46)   &session-state:Framed-MTU = 994
(46)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(46)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(46)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(46)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(46)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(46) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(46)   authorize {
(46)     policy filter_username {
(46)       if (&User-Name) {
(46)       if (&User-Name)  -> TRUE
(46)       if (&User-Name)  {
(46)         if (&User-Name =~ / /) {
(46)         if (&User-Name =~ / /)  -> FALSE
(46)         if (&User-Name =~ /@[^@]*@/ ) {
(46)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(46)         if (&User-Name =~ /\.\./ ) {
(46)         if (&User-Name =~ /\.\./ )  -> FALSE
(46)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(46)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(46)         if (&User-Name =~ /\.$/)  {
(46)         if (&User-Name =~ /\.$/)   -> FALSE
(46)         if (&User-Name =~ /@\./)  {
(46)         if (&User-Name =~ /@\./)   -> FALSE
(46)       } # if (&User-Name)  = notfound
(46)     } # policy filter_username = notfound
(46)     [preprocess] = ok
(46)     [chap] = noop
(46)     [mschap] = noop
(46)     [digest] = noop
(46) suffix: Checking for suffix after "@"
(46) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(46) suffix: No such realm "NULL"
(46)     [suffix] = noop
(46) eap: Peer sent EAP Response (code 2) ID 233 length 6
(46) eap: Continuing tunnel setup
(46)     [eap] = ok
(46)   } # authorize = ok
(46) Found Auth-Type = eap
(46) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(46)   authenticate {
(46) eap: Expiring EAP session with state 0x5edd3c275d3425f1
(46) eap: Finished EAP session with state 0x5edd3c275d3425f1
(46) eap: Previous EAP request found for state 0x5edd3c275d3425f1, released from the list
(46) eap: Peer sent packet with method EAP PEAP (25)
(46) eap: Calling submodule eap_peap to process data
(46) eap_peap: (TLS) Peer ACKed our handshake fragment
(46) eap: Sending EAP Request (code 1) ID 234 length 750
(46) eap: EAP session adding &reply:State = 0x5edd3c275a3725f1
(46)     [eap] = handled
(46)   } # authenticate = handled
(46) Using Post-Auth-Type Challenge
(46) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(46)   Challenge { ... } # empty sub-section is ignored
(46) session-state: Saving cached attributes
(46)   Framed-MTU = 994
(46)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(46)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(46)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(46)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(46)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(46) Sent Access-Challenge Id 46 from 127.0.0.1:1812 to 127.0.0.1:33891 length 812
(46)   EAP-Message = 0x01ea02ee1900161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479821457604ee8762089eef125d540c0bbf0b5a118a4af300f0603551d130101ff040530030101ff30360603551d1f042f302d302ba029a0278625687474703a2f2f7777772e6578616d706c652e6f72672f6578616d706c655f63612e63726c300d06092a864886f70d01010b05000382010100a38f6633d2e2daf953e93089c5b4a66c9abe99620e270f6120051d2195bb6972966c6b98bc7cb21016f89ec601899088e642d40ac9f4ac816aecd5c65482432b5385e04b9bdf7129b175bb275e6021db0725fccea1f8daeb4488f004dfe73aee302570804c93d471bdfc1175c9cd6b7e16a895981dd2e189f5e3d482de9e2ed67b800e000fc33fc1d505bef9840b6037ebb7e9d090a4dbf93ef5dc3a9c956c4f17bc65b21468466551d3e57e331cdcc6dfb1f7279eda22b92b9d6875ae09efa1738980
(46)   Message-Authenticator = 0x00000000000000000000000000000000
(46)   State = 0x5edd3c275a3725f1464c492d2a3aec19
(46) Finished request
Waking up in 4.0 seconds.
(47) Received Access-Request Id 47 from 127.0.0.1:33891 to 127.0.0.1:1812 length 251
(47)   User-Name = "anonymous"
(47)   NAS-IP-Address = 127.0.0.1
(47)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(47)   NAS-Port-Type = Wireless-802.11
(47)   Service-Type = Framed-User
(47)   NAS-Port = 1
(47)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(47)   Connect-Info = "CONNECT 54Mbps 802.11g"
(47)   Acct-Session-Id = "CF9BFBD35CAE8770"
(47)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(47)   WLAN-Pairwise-Cipher = 1027076
(47)   WLAN-Group-Cipher = 1027076
(47)   WLAN-AKM-Suite = 1027073
(47)   WLAN-Group-Mgmt-Cipher = 1027078
(47)   Framed-MTU = 1400
(47)   EAP-Message = 0x02ea001119800000000715030300020230
(47)   State = 0x5edd3c275a3725f1464c492d2a3aec19
(47)   Message-Authenticator = 0xf38b51a49577c65688e386a4f1a55b8d
(47) Restoring &session-state
(47)   &session-state:Framed-MTU = 994
(47)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(47)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(47)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(47)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(47)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(47) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(47)   authorize {
(47)     policy filter_username {
(47)       if (&User-Name) {
(47)       if (&User-Name)  -> TRUE
(47)       if (&User-Name)  {
(47)         if (&User-Name =~ / /) {
(47)         if (&User-Name =~ / /)  -> FALSE
(47)         if (&User-Name =~ /@[^@]*@/ ) {
(47)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(47)         if (&User-Name =~ /\.\./ ) {
(47)         if (&User-Name =~ /\.\./ )  -> FALSE
(47)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(47)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(47)         if (&User-Name =~ /\.$/)  {
(47)         if (&User-Name =~ /\.$/)   -> FALSE
(47)         if (&User-Name =~ /@\./)  {
(47)         if (&User-Name =~ /@\./)   -> FALSE
(47)       } # if (&User-Name)  = notfound
(47)     } # policy filter_username = notfound
(47)     [preprocess] = ok
(47)     [chap] = noop
(47)     [mschap] = noop
(47)     [digest] = noop
(47) suffix: Checking for suffix after "@"
(47) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(47) suffix: No such realm "NULL"
(47)     [suffix] = noop
(47) eap: Peer sent EAP Response (code 2) ID 234 length 17
(47) eap: Continuing tunnel setup
(47)     [eap] = ok
(47)   } # authorize = ok
(47) Found Auth-Type = eap
(47) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(47)   authenticate {
(47) eap: Expiring EAP session with state 0x5edd3c275a3725f1
(47) eap: Finished EAP session with state 0x5edd3c275a3725f1
(47) eap: Previous EAP request found for state 0x5edd3c275a3725f1, released from the list
(47) eap: Peer sent packet with method EAP PEAP (25)
(47) eap: Calling submodule eap_peap to process data
(47) eap_peap: (TLS) EAP Peer says that the final record size will be 7 bytes
(47) eap_peap: (TLS) EAP Got all data (7 bytes)
(47) eap_peap: (TLS) recv TLS 1.2 Alert, fatal unknown_ca
(47) eap_peap: (TLS) The client is informing us that it does not recognize the CA used to issue the server certificate.  Please update the client so that it knows about the CA.
(47) eap_peap: ERROR: (TLS) Alert read:fatal:unknown CA
(47) eap_peap: (TLS) Server : Need to read more data: error
(47) eap_peap: ERROR: (TLS) Failed reading from OpenSSL: error:0A000418:SSL routines::tlsv1 alert unknown ca
(47) eap_peap: (TLS) In Handshake Phase
(47) eap_peap: (TLS) Application data.
(47) eap_peap: ERROR: (TLS) Cannot continue, as the peer is misbehaving.
(47) eap_peap: ERROR: [eaptls process] = fail
(47) eap: ERROR: Failed continuing EAP PEAP (25) session.  EAP sub-module failed
(47) eap: Sending EAP Failure (code 4) ID 234 length 4
(47) eap: Failed in EAP select
(47)     [eap] = invalid
(47)   } # authenticate = invalid
(47) Failed to authenticate the user
(47) Using Post-Auth-Type Reject
(47) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(47)   Post-Auth-Type REJECT {
(47) attr_filter.access_reject: EXPAND %{User-Name}
(47) attr_filter.access_reject:    --> anonymous
(47) attr_filter.access_reject: Matched entry DEFAULT at line 11
(47)     [attr_filter.access_reject] = updated
(47)     [eap] = noop
(47)     policy remove_reply_message_if_eap {
(47)       if (&reply:EAP-Message && &reply:Reply-Message) {
(47)       if (&reply:EAP-Message && &reply:Reply-Message)  -> FALSE
(47)       else {
(47)         [noop] = noop
(47)       } # else = noop
(47)     } # policy remove_reply_message_if_eap = noop
(47)   } # Post-Auth-Type REJECT = updated
(47) Delaying response for 1.000000 seconds
Waking up in 0.3 seconds.
Waking up in 0.6 seconds.
(47) Sending delayed response
(47) Sent Access-Reject Id 47 from 127.0.0.1:1812 to 127.0.0.1:33891 length 44
(47)   EAP-Message = 0x04ea0004
(47)   Message-Authenticator = 0x00000000000000000000000000000000
Waking up in 2.6 seconds.
(42) Cleaning up request packet ID 42 with timestamp +46 due to cleanup_delay was reached
(43) Cleaning up request packet ID 43 with timestamp +46 due to cleanup_delay was reached
(44) Cleaning up request packet ID 44 with timestamp +46 due to cleanup_delay was reached
Waking up in 0.4 seconds.
(45) Cleaning up request packet ID 45 with timestamp +47 due to cleanup_delay was reached
Waking up in 0.4 seconds.
(48) Received Access-Request Id 48 from 127.0.0.1:33891 to 127.0.0.1:1812 length 230
(48)   User-Name = "anonymous"
(48)   NAS-IP-Address = 127.0.0.1
(48)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(48)   NAS-Port-Type = Wireless-802.11
(48)   Service-Type = Framed-User
(48)   NAS-Port = 1
(48)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(48)   Connect-Info = "CONNECT 54Mbps 802.11g"
(48)   Acct-Session-Id = "CF9BFBD35CAE8770"
(48)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(48)   WLAN-Pairwise-Cipher = 1027076
(48)   WLAN-Group-Cipher = 1027076
(48)   WLAN-AKM-Suite = 1027073
(48)   WLAN-Group-Mgmt-Cipher = 1027078
(48)   Framed-MTU = 1400
(48)   EAP-Message = 0x0279000e01616e6f6e796d6f7573
(48)   Message-Authenticator = 0x927fc160ca5eb029fcb17e47044b0efa
(48) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(48)   authorize {
(48)     policy filter_username {
(48)       if (&User-Name) {
(48)       if (&User-Name)  -> TRUE
(48)       if (&User-Name)  {
(48)         if (&User-Name =~ / /) {
(48)         if (&User-Name =~ / /)  -> FALSE
(48)         if (&User-Name =~ /@[^@]*@/ ) {
(48)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(48)         if (&User-Name =~ /\.\./ ) {
(48)         if (&User-Name =~ /\.\./ )  -> FALSE
(48)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(48)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(48)         if (&User-Name =~ /\.$/)  {
(48)         if (&User-Name =~ /\.$/)   -> FALSE
(48)         if (&User-Name =~ /@\./)  {
(48)         if (&User-Name =~ /@\./)   -> FALSE
(48)       } # if (&User-Name)  = notfound
(48)     } # policy filter_username = notfound
(48)     [preprocess] = ok
(48)     [chap] = noop
(48)     [mschap] = noop
(48)     [digest] = noop
(48) suffix: Checking for suffix after "@"
(48) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(48) suffix: No such realm "NULL"
(48)     [suffix] = noop
(48) eap: Peer sent EAP Response (code 2) ID 121 length 14
(48) eap: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
(48)     [eap] = ok
(48)   } # authorize = ok
(48) Found Auth-Type = eap
(48) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(48)   authenticate {
(48) eap: Peer sent packet with method EAP Identity (1)
(48) eap: Calling submodule eap_md5 to process data
(48) eap_md5: Issuing MD5 Challenge
(48) eap: Sending EAP Request (code 1) ID 122 length 22
(48) eap: EAP session adding &reply:State = 0xba4a0f52ba300ba5
(48)     [eap] = handled
(48)   } # authenticate = handled
(48) Using Post-Auth-Type Challenge
(48) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(48)   Challenge { ... } # empty sub-section is ignored
(48) Sent Access-Challenge Id 48 from 127.0.0.1:1812 to 127.0.0.1:33891 length 80
(48)   EAP-Message = 0x017a001604104829b4c16990b59eabbdae3fb7e27e7e
(48)   Message-Authenticator = 0x00000000000000000000000000000000
(48)   State = 0xba4a0f52ba300ba53fa25a02196fa84c
(48) Finished request
(49) Received Access-Request Id 49 from 127.0.0.1:33891 to 127.0.0.1:1812 length 241
(49)   User-Name = "anonymous"
(49)   NAS-IP-Address = 127.0.0.1
(49)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(49)   NAS-Port-Type = Wireless-802.11
(49)   Service-Type = Framed-User
(49)   NAS-Port = 1
(49)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(49)   Connect-Info = "CONNECT 54Mbps 802.11g"
(49)   Acct-Session-Id = "CF9BFBD35CAE8770"
(49)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(49)   WLAN-Pairwise-Cipher = 1027076
(49)   WLAN-Group-Cipher = 1027076
(49)   WLAN-AKM-Suite = 1027073
(49)   WLAN-Group-Mgmt-Cipher = 1027078
(49)   Framed-MTU = 1400
(49)   EAP-Message = 0x027a0007031915
(49)   State = 0xba4a0f52ba300ba53fa25a02196fa84c
(49)   Message-Authenticator = 0x4ba92ae422d51f1c040fde0a9d307d81
(49) session-state: No cached attributes
(49) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(49)   authorize {
(49)     policy filter_username {
(49)       if (&User-Name) {
(49)       if (&User-Name)  -> TRUE
(49)       if (&User-Name)  {
(49)         if (&User-Name =~ / /) {
(49)         if (&User-Name =~ / /)  -> FALSE
(49)         if (&User-Name =~ /@[^@]*@/ ) {
(49)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(49)         if (&User-Name =~ /\.\./ ) {
(49)         if (&User-Name =~ /\.\./ )  -> FALSE
(49)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(49)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(49)         if (&User-Name =~ /\.$/)  {
(49)         if (&User-Name =~ /\.$/)   -> FALSE
(49)         if (&User-Name =~ /@\./)  {
(49)         if (&User-Name =~ /@\./)   -> FALSE
(49)       } # if (&User-Name)  = notfound
(49)     } # policy filter_username = notfound
(49)     [preprocess] = ok
(49)     [chap] = noop
(49)     [mschap] = noop
(49)     [digest] = noop
(49) suffix: Checking for suffix after "@"
(49) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(49) suffix: No such realm "NULL"
(49)     [suffix] = noop
(49) eap: Peer sent EAP Response (code 2) ID 122 length 7
(49) eap: No EAP Start, assuming it's an on-going EAP conversation
(49)     [eap] = updated
(49)     [files] = noop
(49)     [expiration] = noop
(49)     [logintime] = noop
Not doing PAP as Auth-Type is already set.
(49)     [pap] = noop
(49)   } # authorize = updated
(49) Found Auth-Type = eap
(49) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(49)   authenticate {
(49) eap: Expiring EAP session with state 0xba4a0f52ba300ba5
(49) eap: Finished EAP session with state 0xba4a0f52ba300ba5
(49) eap: Previous EAP request found for state 0xba4a0f52ba300ba5, released from the list
(49) eap: Peer sent packet with method EAP NAK (3)
(49) eap: Found mutually acceptable type PEAP (25)
(49) eap: Calling submodule eap_peap to process data
(49) eap_peap: (TLS) Initiating new session
(49) eap: Sending EAP Request (code 1) ID 123 length 6
(49) eap: EAP session adding &reply:State = 0xba4a0f52bb3116a5
(49)     [eap] = handled
(49)   } # authenticate = handled
(49) Using Post-Auth-Type Challenge
(49) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(49)   Challenge { ... } # empty sub-section is ignored
(49) session-state: Saving cached attributes
(49)   Framed-MTU = 994
(49) Sent Access-Challenge Id 49 from 127.0.0.1:1812 to 127.0.0.1:33891 length 64
(49)   EAP-Message = 0x017b00061920
(49)   Message-Authenticator = 0x00000000000000000000000000000000
(49)   State = 0xba4a0f52bb3116a53fa25a02196fa84c
(49) Finished request
(46) Cleaning up request packet ID 46 with timestamp +47 due to cleanup_delay was reached
Waking up in 0.3 seconds.
(50) Received Access-Request Id 50 from 127.0.0.1:33891 to 127.0.0.1:1812 length 476
(50)   User-Name = "anonymous"
(50)   NAS-IP-Address = 127.0.0.1
(50)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(50)   NAS-Port-Type = Wireless-802.11
(50)   Service-Type = Framed-User
(50)   NAS-Port = 1
(50)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(50)   Connect-Info = "CONNECT 54Mbps 802.11g"
(50)   Acct-Session-Id = "CF9BFBD35CAE8770"
(50)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(50)   WLAN-Pairwise-Cipher = 1027076
(50)   WLAN-Group-Cipher = 1027076
(50)   WLAN-AKM-Suite = 1027073
(50)   WLAN-Group-Mgmt-Cipher = 1027078
(50)   Framed-MTU = 1400
(50)   EAP-Message = 0x027b00f21980000000e816030300e3010000df03030000006ff63eed5cebb2c3323ea981701fa3e01a3413b0f6d14e47033cef6124000076c02cc030c0adc024c028c00ac014c0afc05dc061c049c04dc02bc02fc0acc023c027c009c013c0aec05cc060c048c04c009dc09d003d0035c032c02ac00fc02ec026c005c0a1c05fc063c051c04bc04fc03d009cc09c003c002fc031c029c00ec02dc025c004c0a0c05ec062c050c04ac04ec03c00ff01000040000a0010000e001d001700180019001a001b001c000d001600140603050306010501040303030401030102030201000b00020100001600000017000000230000
(50)   State = 0xba4a0f52bb3116a53fa25a02196fa84c
(50)   Message-Authenticator = 0x2ce66e5315b3890be7a55c6dd8da2a89
(50) Restoring &session-state
(50)   &session-state:Framed-MTU = 994
(50) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(50)   authorize {
(50)     policy filter_username {
(50)       if (&User-Name) {
(50)       if (&User-Name)  -> TRUE
(50)       if (&User-Name)  {
(50)         if (&User-Name =~ / /) {
(50)         if (&User-Name =~ / /)  -> FALSE
(50)         if (&User-Name =~ /@[^@]*@/ ) {
(50)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(50)         if (&User-Name =~ /\.\./ ) {
(50)         if (&User-Name =~ /\.\./ )  -> FALSE
(50)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(50)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(50)         if (&User-Name =~ /\.$/)  {
(50)         if (&User-Name =~ /\.$/)   -> FALSE
(50)         if (&User-Name =~ /@\./)  {
(50)         if (&User-Name =~ /@\./)   -> FALSE
(50)       } # if (&User-Name)  = notfound
(50)     } # policy filter_username = notfound
(50)     [preprocess] = ok
(50)     [chap] = noop
(50)     [mschap] = noop
(50)     [digest] = noop
(50) suffix: Checking for suffix after "@"
(50) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(50) suffix: No such realm "NULL"
(50)     [suffix] = noop
(50) eap: Peer sent EAP Response (code 2) ID 123 length 242
(50) eap: Continuing tunnel setup
(50)     [eap] = ok
(50)   } # authorize = ok
(50) Found Auth-Type = eap
(50) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(50)   authenticate {
(50) eap: Expiring EAP session with state 0xba4a0f52bb3116a5
(50) eap: Finished EAP session with state 0xba4a0f52bb3116a5
(50) eap: Previous EAP request found for state 0xba4a0f52bb3116a5, released from the list
(50) eap: Peer sent packet with method EAP PEAP (25)
(50) eap: Calling submodule eap_peap to process data
(50) eap_peap: (TLS) EAP Peer says that the final record size will be 232 bytes
(50) eap_peap: (TLS) EAP Got all data (232 bytes)
(50) eap_peap: (TLS) Handshake state - before SSL initialization
(50) eap_peap: (TLS) Handshake state - Server before SSL initialization
(50) eap_peap: (TLS) Handshake state - Server before SSL initialization
(50) eap_peap: (TLS) recv TLS 1.3 Handshake, ClientHello
(50) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read client hello
(50) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHello
(50) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server hello
(50) eap_peap: (TLS) send TLS 1.2 Handshake, Certificate
(50) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write certificate
(50) eap_peap: (TLS) send TLS 1.2 Handshake, ServerKeyExchange
(50) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write key exchange
(50) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHelloDone
(50) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server done
(50) eap_peap: (TLS) Server : Need to read more data: SSLv3/TLS write server done
(50) eap_peap: (TLS) In Handshake Phase
(50) eap: Sending EAP Request (code 1) ID 124 length 1004
(50) eap: EAP session adding &reply:State = 0xba4a0f52b83616a5
(50)     [eap] = handled
(50)   } # authenticate = handled
(50) Using Post-Auth-Type Challenge
(50) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(50)   Challenge { ... } # empty sub-section is ignored
(50) session-state: Saving cached attributes
(50)   Framed-MTU = 994
(50)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(50)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(50)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(50)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(50)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(50) Sent Access-Challenge Id 50 from 127.0.0.1:1812 to 127.0.0.1:33891 length 1068
(50)   EAP-Message = 0x017c03ec19c000000aac160303003d020000390303a849e32974d4c01441776e3cec036a77df9408ea3b7ef4ce3548edbda15d7f3a00c030000011ff01000100000b00040300010200170000160303092b0b0009270009240004203082041c30820304a003020102020101300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232303134333732315a170d3234303231383134333732315a307c310b3009060355040613024652310f300d06035504080c0652616469757331153013060355040a0c0c4578616d706c6520496e632e3123302106035504030c1a4578616d70
(50)   Message-Authenticator = 0x00000000000000000000000000000000
(50)   State = 0xba4a0f52b83616a53fa25a02196fa84c
(50) Finished request
Waking up in 0.3 seconds.
(47) Cleaning up request packet ID 47 with timestamp +48 due to cleanup_delay was reached
Waking up in 4.5 seconds.
(51) Received Access-Request Id 51 from 127.0.0.1:33891 to 127.0.0.1:1812 length 240
(51)   User-Name = "anonymous"
(51)   NAS-IP-Address = 127.0.0.1
(51)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(51)   NAS-Port-Type = Wireless-802.11
(51)   Service-Type = Framed-User
(51)   NAS-Port = 1
(51)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(51)   Connect-Info = "CONNECT 54Mbps 802.11g"
(51)   Acct-Session-Id = "CF9BFBD35CAE8770"
(51)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(51)   WLAN-Pairwise-Cipher = 1027076
(51)   WLAN-Group-Cipher = 1027076
(51)   WLAN-AKM-Suite = 1027073
(51)   WLAN-Group-Mgmt-Cipher = 1027078
(51)   Framed-MTU = 1400
(51)   EAP-Message = 0x027c00061900
(51)   State = 0xba4a0f52b83616a53fa25a02196fa84c
(51)   Message-Authenticator = 0xc136a3f0cf90ad694a85200e2acc8a4d
(51) Restoring &session-state
(51)   &session-state:Framed-MTU = 994
(51)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(51)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(51)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(51)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(51)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(51) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(51)   authorize {
(51)     policy filter_username {
(51)       if (&User-Name) {
(51)       if (&User-Name)  -> TRUE
(51)       if (&User-Name)  {
(51)         if (&User-Name =~ / /) {
(51)         if (&User-Name =~ / /)  -> FALSE
(51)         if (&User-Name =~ /@[^@]*@/ ) {
(51)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(51)         if (&User-Name =~ /\.\./ ) {
(51)         if (&User-Name =~ /\.\./ )  -> FALSE
(51)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(51)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(51)         if (&User-Name =~ /\.$/)  {
(51)         if (&User-Name =~ /\.$/)   -> FALSE
(51)         if (&User-Name =~ /@\./)  {
(51)         if (&User-Name =~ /@\./)   -> FALSE
(51)       } # if (&User-Name)  = notfound
(51)     } # policy filter_username = notfound
(51)     [preprocess] = ok
(51)     [chap] = noop
(51)     [mschap] = noop
(51)     [digest] = noop
(51) suffix: Checking for suffix after "@"
(51) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(51) suffix: No such realm "NULL"
(51)     [suffix] = noop
(51) eap: Peer sent EAP Response (code 2) ID 124 length 6
(51) eap: Continuing tunnel setup
(51)     [eap] = ok
(51)   } # authorize = ok
(51) Found Auth-Type = eap
(51) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(51)   authenticate {
(51) eap: Expiring EAP session with state 0xba4a0f52b83616a5
(51) eap: Finished EAP session with state 0xba4a0f52b83616a5
(51) eap: Previous EAP request found for state 0xba4a0f52b83616a5, released from the list
(51) eap: Peer sent packet with method EAP PEAP (25)
(51) eap: Calling submodule eap_peap to process data
(51) eap_peap: (TLS) Peer ACKed our handshake fragment
(51) eap: Sending EAP Request (code 1) ID 125 length 1000
(51) eap: EAP session adding &reply:State = 0xba4a0f52b93716a5
(51)     [eap] = handled
(51)   } # authenticate = handled
(51) Using Post-Auth-Type Challenge
(51) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(51)   Challenge { ... } # empty sub-section is ignored
(51) session-state: Saving cached attributes
(51)   Framed-MTU = 994
(51)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(51)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(51)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(51)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(51)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(51) Sent Access-Challenge Id 51 from 127.0.0.1:1812 to 127.0.0.1:33891 length 1064
(51)   EAP-Message = 0x017d03e81940b365595edec634be72466f496c8cad448e057893222e9d9b96fa51c2d84df387dace2b8dd56e85ea1e27ed302547bc22a35b0349ae7075502f1be4a933467c7ec41b12f969f65caf80e82b77b04c1d46756210be2684f027b347debb97d3bca395775660fe2168969187b5d46b43284bb130757803bdfe082cbf44b37353c4f853131bace8ca9c30290a88b1bf0a680004fe308204fa308203e2a003020102021457604ee8762089eef125d540c0bbf0b5a118a4af300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232303134333731355a170d32343032
(51)   Message-Authenticator = 0x00000000000000000000000000000000
(51)   State = 0xba4a0f52b93716a53fa25a02196fa84c
(51) Finished request
Waking up in 4.4 seconds.
(52) Received Access-Request Id 52 from 127.0.0.1:33891 to 127.0.0.1:1812 length 240
(52)   User-Name = "anonymous"
(52)   NAS-IP-Address = 127.0.0.1
(52)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(52)   NAS-Port-Type = Wireless-802.11
(52)   Service-Type = Framed-User
(52)   NAS-Port = 1
(52)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(52)   Connect-Info = "CONNECT 54Mbps 802.11g"
(52)   Acct-Session-Id = "CF9BFBD35CAE8770"
(52)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(52)   WLAN-Pairwise-Cipher = 1027076
(52)   WLAN-Group-Cipher = 1027076
(52)   WLAN-AKM-Suite = 1027073
(52)   WLAN-Group-Mgmt-Cipher = 1027078
(52)   Framed-MTU = 1400
(52)   EAP-Message = 0x027d00061900
(52)   State = 0xba4a0f52b93716a53fa25a02196fa84c
(52)   Message-Authenticator = 0x2d21ba21828bdc6b41168e8aab7407e2
(52) Restoring &session-state
(52)   &session-state:Framed-MTU = 994
(52)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(52)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(52)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(52)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(52)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(52) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(52)   authorize {
(52)     policy filter_username {
(52)       if (&User-Name) {
(52)       if (&User-Name)  -> TRUE
(52)       if (&User-Name)  {
(52)         if (&User-Name =~ / /) {
(52)         if (&User-Name =~ / /)  -> FALSE
(52)         if (&User-Name =~ /@[^@]*@/ ) {
(52)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(52)         if (&User-Name =~ /\.\./ ) {
(52)         if (&User-Name =~ /\.\./ )  -> FALSE
(52)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(52)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(52)         if (&User-Name =~ /\.$/)  {
(52)         if (&User-Name =~ /\.$/)   -> FALSE
(52)         if (&User-Name =~ /@\./)  {
(52)         if (&User-Name =~ /@\./)   -> FALSE
(52)       } # if (&User-Name)  = notfound
(52)     } # policy filter_username = notfound
(52)     [preprocess] = ok
(52)     [chap] = noop
(52)     [mschap] = noop
(52)     [digest] = noop
(52) suffix: Checking for suffix after "@"
(52) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(52) suffix: No such realm "NULL"
(52)     [suffix] = noop
(52) eap: Peer sent EAP Response (code 2) ID 125 length 6
(52) eap: Continuing tunnel setup
(52)     [eap] = ok
(52)   } # authorize = ok
(52) Found Auth-Type = eap
(52) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(52)   authenticate {
(52) eap: Expiring EAP session with state 0xba4a0f52b93716a5
(52) eap: Finished EAP session with state 0xba4a0f52b93716a5
(52) eap: Previous EAP request found for state 0xba4a0f52b93716a5, released from the list
(52) eap: Peer sent packet with method EAP PEAP (25)
(52) eap: Calling submodule eap_peap to process data
(52) eap_peap: (TLS) Peer ACKed our handshake fragment
(52) eap: Sending EAP Request (code 1) ID 126 length 750
(52) eap: EAP session adding &reply:State = 0xba4a0f52be3416a5
(52)     [eap] = handled
(52)   } # authenticate = handled
(52) Using Post-Auth-Type Challenge
(52) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(52)   Challenge { ... } # empty sub-section is ignored
(52) session-state: Saving cached attributes
(52)   Framed-MTU = 994
(52)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(52)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(52)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(52)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(52)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(52) Sent Access-Challenge Id 52 from 127.0.0.1:1812 to 127.0.0.1:33891 length 812
(52)   EAP-Message = 0x017e02ee1900161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479821457604ee8762089eef125d540c0bbf0b5a118a4af300f0603551d130101ff040530030101ff30360603551d1f042f302d302ba029a0278625687474703a2f2f7777772e6578616d706c652e6f72672f6578616d706c655f63612e63726c300d06092a864886f70d01010b05000382010100a38f6633d2e2daf953e93089c5b4a66c9abe99620e270f6120051d2195bb6972966c6b98bc7cb21016f89ec601899088e642d40ac9f4ac816aecd5c65482432b5385e04b9bdf7129b175bb275e6021db0725fccea1f8daeb4488f004dfe73aee302570804c93d471bdfc1175c9cd6b7e16a895981dd2e189f5e3d482de9e2ed67b800e000fc33fc1d505bef9840b6037ebb7e9d090a4dbf93ef5dc3a9c956c4f17bc65b21468466551d3e57e331cdcc6dfb1f7279eda22b92b9d6875ae09efa1738980
(52)   Message-Authenticator = 0x00000000000000000000000000000000
(52)   State = 0xba4a0f52be3416a53fa25a02196fa84c
(52) Finished request
Waking up in 4.0 seconds.
(53) Received Access-Request Id 53 from 127.0.0.1:33891 to 127.0.0.1:1812 length 251
(53)   User-Name = "anonymous"
(53)   NAS-IP-Address = 127.0.0.1
(53)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(53)   NAS-Port-Type = Wireless-802.11
(53)   Service-Type = Framed-User
(53)   NAS-Port = 1
(53)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(53)   Connect-Info = "CONNECT 54Mbps 802.11g"
(53)   Acct-Session-Id = "CF9BFBD35CAE8770"
(53)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(53)   WLAN-Pairwise-Cipher = 1027076
(53)   WLAN-Group-Cipher = 1027076
(53)   WLAN-AKM-Suite = 1027073
(53)   WLAN-Group-Mgmt-Cipher = 1027078
(53)   Framed-MTU = 1400
(53)   EAP-Message = 0x027e001119800000000715030300020230
(53)   State = 0xba4a0f52be3416a53fa25a02196fa84c
(53)   Message-Authenticator = 0xcae4b644daf4ccdcbc4cd641d80eb0fb
(53) Restoring &session-state
(53)   &session-state:Framed-MTU = 994
(53)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(53)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(53)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(53)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(53)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(53) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(53)   authorize {
(53)     policy filter_username {
(53)       if (&User-Name) {
(53)       if (&User-Name)  -> TRUE
(53)       if (&User-Name)  {
(53)         if (&User-Name =~ / /) {
(53)         if (&User-Name =~ / /)  -> FALSE
(53)         if (&User-Name =~ /@[^@]*@/ ) {
(53)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(53)         if (&User-Name =~ /\.\./ ) {
(53)         if (&User-Name =~ /\.\./ )  -> FALSE
(53)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(53)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(53)         if (&User-Name =~ /\.$/)  {
(53)         if (&User-Name =~ /\.$/)   -> FALSE
(53)         if (&User-Name =~ /@\./)  {
(53)         if (&User-Name =~ /@\./)   -> FALSE
(53)       } # if (&User-Name)  = notfound
(53)     } # policy filter_username = notfound
(53)     [preprocess] = ok
(53)     [chap] = noop
(53)     [mschap] = noop
(53)     [digest] = noop
(53) suffix: Checking for suffix after "@"
(53) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(53) suffix: No such realm "NULL"
(53)     [suffix] = noop
(53) eap: Peer sent EAP Response (code 2) ID 126 length 17
(53) eap: Continuing tunnel setup
(53)     [eap] = ok
(53)   } # authorize = ok
(53) Found Auth-Type = eap
(53) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(53)   authenticate {
(53) eap: Expiring EAP session with state 0xba4a0f52be3416a5
(53) eap: Finished EAP session with state 0xba4a0f52be3416a5
(53) eap: Previous EAP request found for state 0xba4a0f52be3416a5, released from the list
(53) eap: Peer sent packet with method EAP PEAP (25)
(53) eap: Calling submodule eap_peap to process data
(53) eap_peap: (TLS) EAP Peer says that the final record size will be 7 bytes
(53) eap_peap: (TLS) EAP Got all data (7 bytes)
(53) eap_peap: (TLS) recv TLS 1.2 Alert, fatal unknown_ca
(53) eap_peap: (TLS) The client is informing us that it does not recognize the CA used to issue the server certificate.  Please update the client so that it knows about the CA.
(53) eap_peap: ERROR: (TLS) Alert read:fatal:unknown CA
(53) eap_peap: (TLS) Server : Need to read more data: error
(53) eap_peap: ERROR: (TLS) Failed reading from OpenSSL: error:0A000418:SSL routines::tlsv1 alert unknown ca
(53) eap_peap: (TLS) In Handshake Phase
(53) eap_peap: (TLS) Application data.
(53) eap_peap: ERROR: (TLS) Cannot continue, as the peer is misbehaving.
(53) eap_peap: ERROR: [eaptls process] = fail
(53) eap: ERROR: Failed continuing EAP PEAP (25) session.  EAP sub-module failed
(53) eap: Sending EAP Failure (code 4) ID 126 length 4
(53) eap: Failed in EAP select
(53)     [eap] = invalid
(53)   } # authenticate = invalid
(53) Failed to authenticate the user
(53) Using Post-Auth-Type Reject
(53) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(53)   Post-Auth-Type REJECT {
(53) attr_filter.access_reject: EXPAND %{User-Name}
(53) attr_filter.access_reject:    --> anonymous
(53) attr_filter.access_reject: Matched entry DEFAULT at line 11
(53)     [attr_filter.access_reject] = updated
(53)     [eap] = noop
(53)     policy remove_reply_message_if_eap {
(53)       if (&reply:EAP-Message && &reply:Reply-Message) {
(53)       if (&reply:EAP-Message && &reply:Reply-Message)  -> FALSE
(53)       else {
(53)         [noop] = noop
(53)       } # else = noop
(53)     } # policy remove_reply_message_if_eap = noop
(53)   } # Post-Auth-Type REJECT = updated
(53) Delaying response for 1.000000 seconds
Waking up in 0.3 seconds.
Waking up in 0.6 seconds.
(53) Sending delayed response
(53) Sent Access-Reject Id 53 from 127.0.0.1:1812 to 127.0.0.1:33891 length 44
(53)   EAP-Message = 0x047e0004
(53)   Message-Authenticator = 0x00000000000000000000000000000000
Waking up in 2.6 seconds.
(48) Cleaning up request packet ID 48 with timestamp +52 due to cleanup_delay was reached
(49) Cleaning up request packet ID 49 with timestamp +52 due to cleanup_delay was reached
(50) Cleaning up request packet ID 50 with timestamp +52 due to cleanup_delay was reached
Waking up in 0.4 seconds.
(51) Cleaning up request packet ID 51 with timestamp +53 due to cleanup_delay was reached
Waking up in 0.4 seconds.
(54) Received Access-Request Id 54 from 127.0.0.1:33891 to 127.0.0.1:1812 length 230
(54)   User-Name = "anonymous"
(54)   NAS-IP-Address = 127.0.0.1
(54)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(54)   NAS-Port-Type = Wireless-802.11
(54)   Service-Type = Framed-User
(54)   NAS-Port = 1
(54)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(54)   Connect-Info = "CONNECT 54Mbps 802.11g"
(54)   Acct-Session-Id = "CF9BFBD35CAE8770"
(54)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(54)   WLAN-Pairwise-Cipher = 1027076
(54)   WLAN-Group-Cipher = 1027076
(54)   WLAN-AKM-Suite = 1027073
(54)   WLAN-Group-Mgmt-Cipher = 1027078
(54)   Framed-MTU = 1400
(54)   EAP-Message = 0x0278000e01616e6f6e796d6f7573
(54)   Message-Authenticator = 0x05bee49790067cd9b9221800504a5378
(54) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(54)   authorize {
(54)     policy filter_username {
(54)       if (&User-Name) {
(54)       if (&User-Name)  -> TRUE
(54)       if (&User-Name)  {
(54)         if (&User-Name =~ / /) {
(54)         if (&User-Name =~ / /)  -> FALSE
(54)         if (&User-Name =~ /@[^@]*@/ ) {
(54)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(54)         if (&User-Name =~ /\.\./ ) {
(54)         if (&User-Name =~ /\.\./ )  -> FALSE
(54)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(54)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(54)         if (&User-Name =~ /\.$/)  {
(54)         if (&User-Name =~ /\.$/)   -> FALSE
(54)         if (&User-Name =~ /@\./)  {
(54)         if (&User-Name =~ /@\./)   -> FALSE
(54)       } # if (&User-Name)  = notfound
(54)     } # policy filter_username = notfound
(54)     [preprocess] = ok
(54)     [chap] = noop
(54)     [mschap] = noop
(54)     [digest] = noop
(54) suffix: Checking for suffix after "@"
(54) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(54) suffix: No such realm "NULL"
(54)     [suffix] = noop
(54) eap: Peer sent EAP Response (code 2) ID 120 length 14
(54) eap: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
(54)     [eap] = ok
(54)   } # authorize = ok
(54) Found Auth-Type = eap
(54) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(54)   authenticate {
(54) eap: Peer sent packet with method EAP Identity (1)
(54) eap: Calling submodule eap_md5 to process data
(54) eap_md5: Issuing MD5 Challenge
(54) eap: Sending EAP Request (code 1) ID 121 length 22
(54) eap: EAP session adding &reply:State = 0x3316e131336fe5ae
(54)     [eap] = handled
(54)   } # authenticate = handled
(54) Using Post-Auth-Type Challenge
(54) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(54)   Challenge { ... } # empty sub-section is ignored
(54) Sent Access-Challenge Id 54 from 127.0.0.1:1812 to 127.0.0.1:33891 length 80
(54)   EAP-Message = 0x017900160410903cc615dd7588b4c9c662d188e07c71
(54)   Message-Authenticator = 0x00000000000000000000000000000000
(54)   State = 0x3316e131336fe5aef6d1a073f722b981
(54) Finished request
(55) Received Access-Request Id 55 from 127.0.0.1:33891 to 127.0.0.1:1812 length 241
(55)   User-Name = "anonymous"
(55)   NAS-IP-Address = 127.0.0.1
(55)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(55)   NAS-Port-Type = Wireless-802.11
(55)   Service-Type = Framed-User
(55)   NAS-Port = 1
(55)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(55)   Connect-Info = "CONNECT 54Mbps 802.11g"
(55)   Acct-Session-Id = "CF9BFBD35CAE8770"
(55)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(55)   WLAN-Pairwise-Cipher = 1027076
(55)   WLAN-Group-Cipher = 1027076
(55)   WLAN-AKM-Suite = 1027073
(55)   WLAN-Group-Mgmt-Cipher = 1027078
(55)   Framed-MTU = 1400
(55)   EAP-Message = 0x02790007031915
(55)   State = 0x3316e131336fe5aef6d1a073f722b981
(55)   Message-Authenticator = 0x983a9fb8b37c92cc4ff2c44518dfcb3f
(55) session-state: No cached attributes
(55) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(55)   authorize {
(55)     policy filter_username {
(55)       if (&User-Name) {
(55)       if (&User-Name)  -> TRUE
(55)       if (&User-Name)  {
(55)         if (&User-Name =~ / /) {
(55)         if (&User-Name =~ / /)  -> FALSE
(55)         if (&User-Name =~ /@[^@]*@/ ) {
(55)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(55)         if (&User-Name =~ /\.\./ ) {
(55)         if (&User-Name =~ /\.\./ )  -> FALSE
(55)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(55)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(55)         if (&User-Name =~ /\.$/)  {
(55)         if (&User-Name =~ /\.$/)   -> FALSE
(55)         if (&User-Name =~ /@\./)  {
(55)         if (&User-Name =~ /@\./)   -> FALSE
(55)       } # if (&User-Name)  = notfound
(55)     } # policy filter_username = notfound
(55)     [preprocess] = ok
(55)     [chap] = noop
(55)     [mschap] = noop
(55)     [digest] = noop
(55) suffix: Checking for suffix after "@"
(55) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(55) suffix: No such realm "NULL"
(55)     [suffix] = noop
(55) eap: Peer sent EAP Response (code 2) ID 121 length 7
(55) eap: No EAP Start, assuming it's an on-going EAP conversation
(55)     [eap] = updated
(55)     [files] = noop
(55)     [expiration] = noop
(55)     [logintime] = noop
Not doing PAP as Auth-Type is already set.
(55)     [pap] = noop
(55)   } # authorize = updated
(55) Found Auth-Type = eap
(55) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(55)   authenticate {
(55) eap: Expiring EAP session with state 0x3316e131336fe5ae
(55) eap: Finished EAP session with state 0x3316e131336fe5ae
(55) eap: Previous EAP request found for state 0x3316e131336fe5ae, released from the list
(55) eap: Peer sent packet with method EAP NAK (3)
(55) eap: Found mutually acceptable type PEAP (25)
(55) eap: Calling submodule eap_peap to process data
(55) eap_peap: (TLS) Initiating new session
(55) eap: Sending EAP Request (code 1) ID 122 length 6
(55) eap: EAP session adding &reply:State = 0x3316e131326cf8ae
(55)     [eap] = handled
(55)   } # authenticate = handled
(55) Using Post-Auth-Type Challenge
(55) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(55)   Challenge { ... } # empty sub-section is ignored
(55) session-state: Saving cached attributes
(55)   Framed-MTU = 994
(55) Sent Access-Challenge Id 55 from 127.0.0.1:1812 to 127.0.0.1:33891 length 64
(55)   EAP-Message = 0x017a00061920
(55)   Message-Authenticator = 0x00000000000000000000000000000000
(55)   State = 0x3316e131326cf8aef6d1a073f722b981
(55) Finished request
(52) Cleaning up request packet ID 52 with timestamp +53 due to cleanup_delay was reached
Waking up in 0.3 seconds.
(56) Received Access-Request Id 56 from 127.0.0.1:33891 to 127.0.0.1:1812 length 476
(56)   User-Name = "anonymous"
(56)   NAS-IP-Address = 127.0.0.1
(56)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(56)   NAS-Port-Type = Wireless-802.11
(56)   Service-Type = Framed-User
(56)   NAS-Port = 1
(56)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(56)   Connect-Info = "CONNECT 54Mbps 802.11g"
(56)   Acct-Session-Id = "CF9BFBD35CAE8770"
(56)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(56)   WLAN-Pairwise-Cipher = 1027076
(56)   WLAN-Group-Cipher = 1027076
(56)   WLAN-AKM-Suite = 1027073
(56)   WLAN-Group-Mgmt-Cipher = 1027078
(56)   Framed-MTU = 1400
(56)   EAP-Message = 0x027a00f21980000000e816030300e3010000df0303000000751071ccbedd912b392ed0deae327921fdb37ec14f92a4bcf0393a47d5000076c02cc030c0adc024c028c00ac014c0afc05dc061c049c04dc02bc02fc0acc023c027c009c013c0aec05cc060c048c04c009dc09d003d0035c032c02ac00fc02ec026c005c0a1c05fc063c051c04bc04fc03d009cc09c003c002fc031c029c00ec02dc025c004c0a0c05ec062c050c04ac04ec03c00ff01000040000a0010000e001d001700180019001a001b001c000d001600140603050306010501040303030401030102030201000b00020100001600000017000000230000
(56)   State = 0x3316e131326cf8aef6d1a073f722b981
(56)   Message-Authenticator = 0xaba6ea226455a941d66585f14eca9b38
(56) Restoring &session-state
(56)   &session-state:Framed-MTU = 994
(56) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(56)   authorize {
(56)     policy filter_username {
(56)       if (&User-Name) {
(56)       if (&User-Name)  -> TRUE
(56)       if (&User-Name)  {
(56)         if (&User-Name =~ / /) {
(56)         if (&User-Name =~ / /)  -> FALSE
(56)         if (&User-Name =~ /@[^@]*@/ ) {
(56)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(56)         if (&User-Name =~ /\.\./ ) {
(56)         if (&User-Name =~ /\.\./ )  -> FALSE
(56)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(56)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(56)         if (&User-Name =~ /\.$/)  {
(56)         if (&User-Name =~ /\.$/)   -> FALSE
(56)         if (&User-Name =~ /@\./)  {
(56)         if (&User-Name =~ /@\./)   -> FALSE
(56)       } # if (&User-Name)  = notfound
(56)     } # policy filter_username = notfound
(56)     [preprocess] = ok
(56)     [chap] = noop
(56)     [mschap] = noop
(56)     [digest] = noop
(56) suffix: Checking for suffix after "@"
(56) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(56) suffix: No such realm "NULL"
(56)     [suffix] = noop
(56) eap: Peer sent EAP Response (code 2) ID 122 length 242
(56) eap: Continuing tunnel setup
(56)     [eap] = ok
(56)   } # authorize = ok
(56) Found Auth-Type = eap
(56) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(56)   authenticate {
(56) eap: Expiring EAP session with state 0x3316e131326cf8ae
(56) eap: Finished EAP session with state 0x3316e131326cf8ae
(56) eap: Previous EAP request found for state 0x3316e131326cf8ae, released from the list
(56) eap: Peer sent packet with method EAP PEAP (25)
(56) eap: Calling submodule eap_peap to process data
(56) eap_peap: (TLS) EAP Peer says that the final record size will be 232 bytes
(56) eap_peap: (TLS) EAP Got all data (232 bytes)
(56) eap_peap: (TLS) Handshake state - before SSL initialization
(56) eap_peap: (TLS) Handshake state - Server before SSL initialization
(56) eap_peap: (TLS) Handshake state - Server before SSL initialization
(56) eap_peap: (TLS) recv TLS 1.3 Handshake, ClientHello
(56) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read client hello
(56) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHello
(56) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server hello
(56) eap_peap: (TLS) send TLS 1.2 Handshake, Certificate
(56) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write certificate
(56) eap_peap: (TLS) send TLS 1.2 Handshake, ServerKeyExchange
(56) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write key exchange
(56) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHelloDone
(56) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server done
(56) eap_peap: (TLS) Server : Need to read more data: SSLv3/TLS write server done
(56) eap_peap: (TLS) In Handshake Phase
(56) eap: Sending EAP Request (code 1) ID 123 length 1004
(56) eap: EAP session adding &reply:State = 0x3316e131316df8ae
(56)     [eap] = handled
(56)   } # authenticate = handled
(56) Using Post-Auth-Type Challenge
(56) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(56)   Challenge { ... } # empty sub-section is ignored
(56) session-state: Saving cached attributes
(56)   Framed-MTU = 994
(56)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(56)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(56)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(56)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(56)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(56) Sent Access-Challenge Id 56 from 127.0.0.1:1812 to 127.0.0.1:33891 length 1068
(56)   EAP-Message = 0x017b03ec19c000000aac160303003d020000390303436b4a94b65a37f1011e665bc85281de8392f989689877f6ec6fd4acdfb004f100c030000011ff01000100000b00040300010200170000160303092b0b0009270009240004203082041c30820304a003020102020101300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232303134333732315a170d3234303231383134333732315a307c310b3009060355040613024652310f300d06035504080c0652616469757331153013060355040a0c0c4578616d706c6520496e632e3123302106035504030c1a4578616d70
(56)   Message-Authenticator = 0x00000000000000000000000000000000
(56)   State = 0x3316e131316df8aef6d1a073f722b981
(56) Finished request
Waking up in 0.3 seconds.
(53) Cleaning up request packet ID 53 with timestamp +53 due to cleanup_delay was reached
Waking up in 4.5 seconds.
(57) Received Access-Request Id 57 from 127.0.0.1:33891 to 127.0.0.1:1812 length 240
(57)   User-Name = "anonymous"
(57)   NAS-IP-Address = 127.0.0.1
(57)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(57)   NAS-Port-Type = Wireless-802.11
(57)   Service-Type = Framed-User
(57)   NAS-Port = 1
(57)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(57)   Connect-Info = "CONNECT 54Mbps 802.11g"
(57)   Acct-Session-Id = "CF9BFBD35CAE8770"
(57)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(57)   WLAN-Pairwise-Cipher = 1027076
(57)   WLAN-Group-Cipher = 1027076
(57)   WLAN-AKM-Suite = 1027073
(57)   WLAN-Group-Mgmt-Cipher = 1027078
(57)   Framed-MTU = 1400
(57)   EAP-Message = 0x027b00061900
(57)   State = 0x3316e131316df8aef6d1a073f722b981
(57)   Message-Authenticator = 0x9e0d8603264d5fac1e3bd7efba59f5f5
(57) Restoring &session-state
(57)   &session-state:Framed-MTU = 994
(57)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(57)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(57)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(57)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(57)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(57) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(57)   authorize {
(57)     policy filter_username {
(57)       if (&User-Name) {
(57)       if (&User-Name)  -> TRUE
(57)       if (&User-Name)  {
(57)         if (&User-Name =~ / /) {
(57)         if (&User-Name =~ / /)  -> FALSE
(57)         if (&User-Name =~ /@[^@]*@/ ) {
(57)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(57)         if (&User-Name =~ /\.\./ ) {
(57)         if (&User-Name =~ /\.\./ )  -> FALSE
(57)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(57)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(57)         if (&User-Name =~ /\.$/)  {
(57)         if (&User-Name =~ /\.$/)   -> FALSE
(57)         if (&User-Name =~ /@\./)  {
(57)         if (&User-Name =~ /@\./)   -> FALSE
(57)       } # if (&User-Name)  = notfound
(57)     } # policy filter_username = notfound
(57)     [preprocess] = ok
(57)     [chap] = noop
(57)     [mschap] = noop
(57)     [digest] = noop
(57) suffix: Checking for suffix after "@"
(57) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(57) suffix: No such realm "NULL"
(57)     [suffix] = noop
(57) eap: Peer sent EAP Response (code 2) ID 123 length 6
(57) eap: Continuing tunnel setup
(57)     [eap] = ok
(57)   } # authorize = ok
(57) Found Auth-Type = eap
(57) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(57)   authenticate {
(57) eap: Expiring EAP session with state 0x3316e131316df8ae
(57) eap: Finished EAP session with state 0x3316e131316df8ae
(57) eap: Previous EAP request found for state 0x3316e131316df8ae, released from the list
(57) eap: Peer sent packet with method EAP PEAP (25)
(57) eap: Calling submodule eap_peap to process data
(57) eap_peap: (TLS) Peer ACKed our handshake fragment
(57) eap: Sending EAP Request (code 1) ID 124 length 1000
(57) eap: EAP session adding &reply:State = 0x3316e131306af8ae
(57)     [eap] = handled
(57)   } # authenticate = handled
(57) Using Post-Auth-Type Challenge
(57) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(57)   Challenge { ... } # empty sub-section is ignored
(57) session-state: Saving cached attributes
(57)   Framed-MTU = 994
(57)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(57)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(57)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(57)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(57)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(57) Sent Access-Challenge Id 57 from 127.0.0.1:1812 to 127.0.0.1:33891 length 1064
(57)   EAP-Message = 0x017c03e81940b365595edec634be72466f496c8cad448e057893222e9d9b96fa51c2d84df387dace2b8dd56e85ea1e27ed302547bc22a35b0349ae7075502f1be4a933467c7ec41b12f969f65caf80e82b77b04c1d46756210be2684f027b347debb97d3bca395775660fe2168969187b5d46b43284bb130757803bdfe082cbf44b37353c4f853131bace8ca9c30290a88b1bf0a680004fe308204fa308203e2a003020102021457604ee8762089eef125d540c0bbf0b5a118a4af300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232303134333731355a170d32343032
(57)   Message-Authenticator = 0x00000000000000000000000000000000
(57)   State = 0x3316e131306af8aef6d1a073f722b981
(57) Finished request
Waking up in 4.4 seconds.
(58) Received Access-Request Id 58 from 127.0.0.1:33891 to 127.0.0.1:1812 length 240
(58)   User-Name = "anonymous"
(58)   NAS-IP-Address = 127.0.0.1
(58)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(58)   NAS-Port-Type = Wireless-802.11
(58)   Service-Type = Framed-User
(58)   NAS-Port = 1
(58)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(58)   Connect-Info = "CONNECT 54Mbps 802.11g"
(58)   Acct-Session-Id = "CF9BFBD35CAE8770"
(58)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(58)   WLAN-Pairwise-Cipher = 1027076
(58)   WLAN-Group-Cipher = 1027076
(58)   WLAN-AKM-Suite = 1027073
(58)   WLAN-Group-Mgmt-Cipher = 1027078
(58)   Framed-MTU = 1400
(58)   EAP-Message = 0x027c00061900
(58)   State = 0x3316e131306af8aef6d1a073f722b981
(58)   Message-Authenticator = 0x5693a4a0850a5c701bc7eecd0494768d
(58) Restoring &session-state
(58)   &session-state:Framed-MTU = 994
(58)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(58)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(58)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(58)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(58)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(58) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(58)   authorize {
(58)     policy filter_username {
(58)       if (&User-Name) {
(58)       if (&User-Name)  -> TRUE
(58)       if (&User-Name)  {
(58)         if (&User-Name =~ / /) {
(58)         if (&User-Name =~ / /)  -> FALSE
(58)         if (&User-Name =~ /@[^@]*@/ ) {
(58)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(58)         if (&User-Name =~ /\.\./ ) {
(58)         if (&User-Name =~ /\.\./ )  -> FALSE
(58)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(58)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(58)         if (&User-Name =~ /\.$/)  {
(58)         if (&User-Name =~ /\.$/)   -> FALSE
(58)         if (&User-Name =~ /@\./)  {
(58)         if (&User-Name =~ /@\./)   -> FALSE
(58)       } # if (&User-Name)  = notfound
(58)     } # policy filter_username = notfound
(58)     [preprocess] = ok
(58)     [chap] = noop
(58)     [mschap] = noop
(58)     [digest] = noop
(58) suffix: Checking for suffix after "@"
(58) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(58) suffix: No such realm "NULL"
(58)     [suffix] = noop
(58) eap: Peer sent EAP Response (code 2) ID 124 length 6
(58) eap: Continuing tunnel setup
(58)     [eap] = ok
(58)   } # authorize = ok
(58) Found Auth-Type = eap
(58) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(58)   authenticate {
(58) eap: Expiring EAP session with state 0x3316e131306af8ae
(58) eap: Finished EAP session with state 0x3316e131306af8ae
(58) eap: Previous EAP request found for state 0x3316e131306af8ae, released from the list
(58) eap: Peer sent packet with method EAP PEAP (25)
(58) eap: Calling submodule eap_peap to process data
(58) eap_peap: (TLS) Peer ACKed our handshake fragment
(58) eap: Sending EAP Request (code 1) ID 125 length 750
(58) eap: EAP session adding &reply:State = 0x3316e131376bf8ae
(58)     [eap] = handled
(58)   } # authenticate = handled
(58) Using Post-Auth-Type Challenge
(58) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(58)   Challenge { ... } # empty sub-section is ignored
(58) session-state: Saving cached attributes
(58)   Framed-MTU = 994
(58)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(58)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(58)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(58)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(58)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(58) Sent Access-Challenge Id 58 from 127.0.0.1:1812 to 127.0.0.1:33891 length 812
(58)   EAP-Message = 0x017d02ee1900161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479821457604ee8762089eef125d540c0bbf0b5a118a4af300f0603551d130101ff040530030101ff30360603551d1f042f302d302ba029a0278625687474703a2f2f7777772e6578616d706c652e6f72672f6578616d706c655f63612e63726c300d06092a864886f70d01010b05000382010100a38f6633d2e2daf953e93089c5b4a66c9abe99620e270f6120051d2195bb6972966c6b98bc7cb21016f89ec601899088e642d40ac9f4ac816aecd5c65482432b5385e04b9bdf7129b175bb275e6021db0725fccea1f8daeb4488f004dfe73aee302570804c93d471bdfc1175c9cd6b7e16a895981dd2e189f5e3d482de9e2ed67b800e000fc33fc1d505bef9840b6037ebb7e9d090a4dbf93ef5dc3a9c956c4f17bc65b21468466551d3e57e331cdcc6dfb1f7279eda22b92b9d6875ae09efa1738980
(58)   Message-Authenticator = 0x00000000000000000000000000000000
(58)   State = 0x3316e131376bf8aef6d1a073f722b981
(58) Finished request
Waking up in 4.0 seconds.
(59) Received Access-Request Id 59 from 127.0.0.1:33891 to 127.0.0.1:1812 length 251
(59)   User-Name = "anonymous"
(59)   NAS-IP-Address = 127.0.0.1
(59)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(59)   NAS-Port-Type = Wireless-802.11
(59)   Service-Type = Framed-User
(59)   NAS-Port = 1
(59)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(59)   Connect-Info = "CONNECT 54Mbps 802.11g"
(59)   Acct-Session-Id = "CF9BFBD35CAE8770"
(59)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(59)   WLAN-Pairwise-Cipher = 1027076
(59)   WLAN-Group-Cipher = 1027076
(59)   WLAN-AKM-Suite = 1027073
(59)   WLAN-Group-Mgmt-Cipher = 1027078
(59)   Framed-MTU = 1400
(59)   EAP-Message = 0x027d001119800000000715030300020230
(59)   State = 0x3316e131376bf8aef6d1a073f722b981
(59)   Message-Authenticator = 0x7d3b1b8e93ba80659fd8521e41b25c8d
(59) Restoring &session-state
(59)   &session-state:Framed-MTU = 994
(59)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(59)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(59)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(59)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(59)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(59) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(59)   authorize {
(59)     policy filter_username {
(59)       if (&User-Name) {
(59)       if (&User-Name)  -> TRUE
(59)       if (&User-Name)  {
(59)         if (&User-Name =~ / /) {
(59)         if (&User-Name =~ / /)  -> FALSE
(59)         if (&User-Name =~ /@[^@]*@/ ) {
(59)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(59)         if (&User-Name =~ /\.\./ ) {
(59)         if (&User-Name =~ /\.\./ )  -> FALSE
(59)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(59)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(59)         if (&User-Name =~ /\.$/)  {
(59)         if (&User-Name =~ /\.$/)   -> FALSE
(59)         if (&User-Name =~ /@\./)  {
(59)         if (&User-Name =~ /@\./)   -> FALSE
(59)       } # if (&User-Name)  = notfound
(59)     } # policy filter_username = notfound
(59)     [preprocess] = ok
(59)     [chap] = noop
(59)     [mschap] = noop
(59)     [digest] = noop
(59) suffix: Checking for suffix after "@"
(59) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(59) suffix: No such realm "NULL"
(59)     [suffix] = noop
(59) eap: Peer sent EAP Response (code 2) ID 125 length 17
(59) eap: Continuing tunnel setup
(59)     [eap] = ok
(59)   } # authorize = ok
(59) Found Auth-Type = eap
(59) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(59)   authenticate {
(59) eap: Expiring EAP session with state 0x3316e131376bf8ae
(59) eap: Finished EAP session with state 0x3316e131376bf8ae
(59) eap: Previous EAP request found for state 0x3316e131376bf8ae, released from the list
(59) eap: Peer sent packet with method EAP PEAP (25)
(59) eap: Calling submodule eap_peap to process data
(59) eap_peap: (TLS) EAP Peer says that the final record size will be 7 bytes
(59) eap_peap: (TLS) EAP Got all data (7 bytes)
(59) eap_peap: (TLS) recv TLS 1.2 Alert, fatal unknown_ca
(59) eap_peap: (TLS) The client is informing us that it does not recognize the CA used to issue the server certificate.  Please update the client so that it knows about the CA.
(59) eap_peap: ERROR: (TLS) Alert read:fatal:unknown CA
(59) eap_peap: (TLS) Server : Need to read more data: error
(59) eap_peap: ERROR: (TLS) Failed reading from OpenSSL: error:0A000418:SSL routines::tlsv1 alert unknown ca
(59) eap_peap: (TLS) In Handshake Phase
(59) eap_peap: (TLS) Application data.
(59) eap_peap: ERROR: (TLS) Cannot continue, as the peer is misbehaving.
(59) eap_peap: ERROR: [eaptls process] = fail
(59) eap: ERROR: Failed continuing EAP PEAP (25) session.  EAP sub-module failed
(59) eap: Sending EAP Failure (code 4) ID 125 length 4
(59) eap: Failed in EAP select
(59)     [eap] = invalid
(59)   } # authenticate = invalid
(59) Failed to authenticate the user
(59) Using Post-Auth-Type Reject
(59) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(59)   Post-Auth-Type REJECT {
(59) attr_filter.access_reject: EXPAND %{User-Name}
(59) attr_filter.access_reject:    --> anonymous
(59) attr_filter.access_reject: Matched entry DEFAULT at line 11
(59)     [attr_filter.access_reject] = updated
(59)     [eap] = noop
(59)     policy remove_reply_message_if_eap {
(59)       if (&reply:EAP-Message && &reply:Reply-Message) {
(59)       if (&reply:EAP-Message && &reply:Reply-Message)  -> FALSE
(59)       else {
(59)         [noop] = noop
(59)       } # else = noop
(59)     } # policy remove_reply_message_if_eap = noop
(59)   } # Post-Auth-Type REJECT = updated
(59) Delaying response for 1.000000 seconds
Waking up in 0.3 seconds.
Waking up in 0.6 seconds.
(59) Sending delayed response
(59) Sent Access-Reject Id 59 from 127.0.0.1:1812 to 127.0.0.1:33891 length 44
(59)   EAP-Message = 0x047d0004
(59)   Message-Authenticator = 0x00000000000000000000000000000000
Waking up in 2.6 seconds.
(54) Cleaning up request packet ID 54 with timestamp +58 due to cleanup_delay was reached
(55) Cleaning up request packet ID 55 with timestamp +58 due to cleanup_delay was reached
(56) Cleaning up request packet ID 56 with timestamp +58 due to cleanup_delay was reached
Waking up in 0.4 seconds.
(57) Cleaning up request packet ID 57 with timestamp +58 due to cleanup_delay was reached
Waking up in 0.4 seconds.
(60) Received Access-Request Id 60 from 127.0.0.1:33891 to 127.0.0.1:1812 length 230
(60)   User-Name = "anonymous"
(60)   NAS-IP-Address = 127.0.0.1
(60)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(60)   NAS-Port-Type = Wireless-802.11
(60)   Service-Type = Framed-User
(60)   NAS-Port = 1
(60)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(60)   Connect-Info = "CONNECT 54Mbps 802.11g"
(60)   Acct-Session-Id = "CF9BFBD35CAE8770"
(60)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(60)   WLAN-Pairwise-Cipher = 1027076
(60)   WLAN-Group-Cipher = 1027076
(60)   WLAN-AKM-Suite = 1027073
(60)   WLAN-Group-Mgmt-Cipher = 1027078
(60)   Framed-MTU = 1400
(60)   EAP-Message = 0x02a5000e01616e6f6e796d6f7573
(60)   Message-Authenticator = 0xafbed3506a81e97c5b1503eac6beb405
(60) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(60)   authorize {
(60)     policy filter_username {
(60)       if (&User-Name) {
(60)       if (&User-Name)  -> TRUE
(60)       if (&User-Name)  {
(60)         if (&User-Name =~ / /) {
(60)         if (&User-Name =~ / /)  -> FALSE
(60)         if (&User-Name =~ /@[^@]*@/ ) {
(60)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(60)         if (&User-Name =~ /\.\./ ) {
(60)         if (&User-Name =~ /\.\./ )  -> FALSE
(60)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(60)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(60)         if (&User-Name =~ /\.$/)  {
(60)         if (&User-Name =~ /\.$/)   -> FALSE
(60)         if (&User-Name =~ /@\./)  {
(60)         if (&User-Name =~ /@\./)   -> FALSE
(60)       } # if (&User-Name)  = notfound
(60)     } # policy filter_username = notfound
(60)     [preprocess] = ok
(60)     [chap] = noop
(60)     [mschap] = noop
(60)     [digest] = noop
(60) suffix: Checking for suffix after "@"
(60) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(60) suffix: No such realm "NULL"
(60)     [suffix] = noop
(60) eap: Peer sent EAP Response (code 2) ID 165 length 14
(60) eap: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
(60)     [eap] = ok
(60)   } # authorize = ok
(60) Found Auth-Type = eap
(60) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(60)   authenticate {
(60) eap: Peer sent packet with method EAP Identity (1)
(60) eap: Calling submodule eap_md5 to process data
(60) eap_md5: Issuing MD5 Challenge
(60) eap: Sending EAP Request (code 1) ID 166 length 22
(60) eap: EAP session adding &reply:State = 0x326e64d132c8602d
(60)     [eap] = handled
(60)   } # authenticate = handled
(60) Using Post-Auth-Type Challenge
(60) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(60)   Challenge { ... } # empty sub-section is ignored
(60) Sent Access-Challenge Id 60 from 127.0.0.1:1812 to 127.0.0.1:33891 length 80
(60)   EAP-Message = 0x01a600160410b65be1c665775846efbab25dd8043a8d
(60)   Message-Authenticator = 0x00000000000000000000000000000000
(60)   State = 0x326e64d132c8602de0e6332c72eef4ed
(60) Finished request
Waking up in 0.1 seconds.
(61) Received Access-Request Id 61 from 127.0.0.1:33891 to 127.0.0.1:1812 length 241
(61)   User-Name = "anonymous"
(61)   NAS-IP-Address = 127.0.0.1
(61)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(61)   NAS-Port-Type = Wireless-802.11
(61)   Service-Type = Framed-User
(61)   NAS-Port = 1
(61)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(61)   Connect-Info = "CONNECT 54Mbps 802.11g"
(61)   Acct-Session-Id = "CF9BFBD35CAE8770"
(61)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(61)   WLAN-Pairwise-Cipher = 1027076
(61)   WLAN-Group-Cipher = 1027076
(61)   WLAN-AKM-Suite = 1027073
(61)   WLAN-Group-Mgmt-Cipher = 1027078
(61)   Framed-MTU = 1400
(61)   EAP-Message = 0x02a60007031915
(61)   State = 0x326e64d132c8602de0e6332c72eef4ed
(61)   Message-Authenticator = 0x680e9833b771e95ebd12da866fd795ff
(61) session-state: No cached attributes
(61) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(61)   authorize {
(61)     policy filter_username {
(61)       if (&User-Name) {
(61)       if (&User-Name)  -> TRUE
(61)       if (&User-Name)  {
(61)         if (&User-Name =~ / /) {
(61)         if (&User-Name =~ / /)  -> FALSE
(61)         if (&User-Name =~ /@[^@]*@/ ) {
(61)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(61)         if (&User-Name =~ /\.\./ ) {
(61)         if (&User-Name =~ /\.\./ )  -> FALSE
(61)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(61)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(61)         if (&User-Name =~ /\.$/)  {
(61)         if (&User-Name =~ /\.$/)   -> FALSE
(61)         if (&User-Name =~ /@\./)  {
(61)         if (&User-Name =~ /@\./)   -> FALSE
(61)       } # if (&User-Name)  = notfound
(61)     } # policy filter_username = notfound
(61)     [preprocess] = ok
(61)     [chap] = noop
(61)     [mschap] = noop
(61)     [digest] = noop
(61) suffix: Checking for suffix after "@"
(61) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(61) suffix: No such realm "NULL"
(61)     [suffix] = noop
(61) eap: Peer sent EAP Response (code 2) ID 166 length 7
(61) eap: No EAP Start, assuming it's an on-going EAP conversation
(61)     [eap] = updated
(61)     [files] = noop
(61)     [expiration] = noop
(61)     [logintime] = noop
Not doing PAP as Auth-Type is already set.
(61)     [pap] = noop
(61)   } # authorize = updated
(61) Found Auth-Type = eap
(61) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(61)   authenticate {
(61) eap: Expiring EAP session with state 0x326e64d132c8602d
(61) eap: Finished EAP session with state 0x326e64d132c8602d
(61) eap: Previous EAP request found for state 0x326e64d132c8602d, released from the list
(61) eap: Peer sent packet with method EAP NAK (3)
(61) eap: Found mutually acceptable type PEAP (25)
(61) eap: Calling submodule eap_peap to process data
(61) eap_peap: (TLS) Initiating new session
(61) eap: Sending EAP Request (code 1) ID 167 length 6
(61) eap: EAP session adding &reply:State = 0x326e64d133c97d2d
(61)     [eap] = handled
(61)   } # authenticate = handled
(61) Using Post-Auth-Type Challenge
(61) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(61)   Challenge { ... } # empty sub-section is ignored
(61) session-state: Saving cached attributes
(61)   Framed-MTU = 994
(61) Sent Access-Challenge Id 61 from 127.0.0.1:1812 to 127.0.0.1:33891 length 64
(61)   EAP-Message = 0x01a700061920
(61)   Message-Authenticator = 0x00000000000000000000000000000000
(61)   State = 0x326e64d133c97d2de0e6332c72eef4ed
(61) Finished request
(62) Received Access-Request Id 62 from 127.0.0.1:33891 to 127.0.0.1:1812 length 476
(62)   User-Name = "anonymous"
(62)   NAS-IP-Address = 127.0.0.1
(62)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(62)   NAS-Port-Type = Wireless-802.11
(62)   Service-Type = Framed-User
(62)   NAS-Port = 1
(62)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(62)   Connect-Info = "CONNECT 54Mbps 802.11g"
(62)   Acct-Session-Id = "CF9BFBD35CAE8770"
(62)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(62)   WLAN-Pairwise-Cipher = 1027076
(62)   WLAN-Group-Cipher = 1027076
(62)   WLAN-AKM-Suite = 1027073
(62)   WLAN-Group-Mgmt-Cipher = 1027078
(62)   Framed-MTU = 1400
(62)   EAP-Message = 0x02a700f21980000000e816030300e3010000df03030000007ab980481f3028ac497e057350330c13a5a063412b291261cc95211f8a000076c02cc030c0adc024c028c00ac014c0afc05dc061c049c04dc02bc02fc0acc023c027c009c013c0aec05cc060c048c04c009dc09d003d0035c032c02ac00fc02ec026c005c0a1c05fc063c051c04bc04fc03d009cc09c003c002fc031c029c00ec02dc025c004c0a0c05ec062c050c04ac04ec03c00ff01000040000a0010000e001d001700180019001a001b001c000d001600140603050306010501040303030401030102030201000b00020100001600000017000000230000
(62)   State = 0x326e64d133c97d2de0e6332c72eef4ed
(62)   Message-Authenticator = 0x72be1c4c49c41c3dde76f8a1f31b4a64
(62) Restoring &session-state
(62)   &session-state:Framed-MTU = 994
(62) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(62)   authorize {
(62)     policy filter_username {
(62)       if (&User-Name) {
(62)       if (&User-Name)  -> TRUE
(62)       if (&User-Name)  {
(62)         if (&User-Name =~ / /) {
(62)         if (&User-Name =~ / /)  -> FALSE
(62)         if (&User-Name =~ /@[^@]*@/ ) {
(62)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(62)         if (&User-Name =~ /\.\./ ) {
(62)         if (&User-Name =~ /\.\./ )  -> FALSE
(62)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(62)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(62)         if (&User-Name =~ /\.$/)  {
(62)         if (&User-Name =~ /\.$/)   -> FALSE
(62)         if (&User-Name =~ /@\./)  {
(62)         if (&User-Name =~ /@\./)   -> FALSE
(62)       } # if (&User-Name)  = notfound
(62)     } # policy filter_username = notfound
(62)     [preprocess] = ok
(62)     [chap] = noop
(62)     [mschap] = noop
(62)     [digest] = noop
(62) suffix: Checking for suffix after "@"
(62) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(62) suffix: No such realm "NULL"
(62)     [suffix] = noop
(62) eap: Peer sent EAP Response (code 2) ID 167 length 242
(62) eap: Continuing tunnel setup
(62)     [eap] = ok
(62)   } # authorize = ok
(62) Found Auth-Type = eap
(62) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(62)   authenticate {
(62) eap: Expiring EAP session with state 0x326e64d133c97d2d
(62) eap: Finished EAP session with state 0x326e64d133c97d2d
(62) eap: Previous EAP request found for state 0x326e64d133c97d2d, released from the list
(62) eap: Peer sent packet with method EAP PEAP (25)
(62) eap: Calling submodule eap_peap to process data
(62) eap_peap: (TLS) EAP Peer says that the final record size will be 232 bytes
(62) eap_peap: (TLS) EAP Got all data (232 bytes)
(62) eap_peap: (TLS) Handshake state - before SSL initialization
(62) eap_peap: (TLS) Handshake state - Server before SSL initialization
(62) eap_peap: (TLS) Handshake state - Server before SSL initialization
(62) eap_peap: (TLS) recv TLS 1.3 Handshake, ClientHello
(62) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read client hello
(62) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHello
(62) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server hello
(62) eap_peap: (TLS) send TLS 1.2 Handshake, Certificate
(62) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write certificate
(62) eap_peap: (TLS) send TLS 1.2 Handshake, ServerKeyExchange
(62) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write key exchange
(62) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHelloDone
(62) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server done
(62) eap_peap: (TLS) Server : Need to read more data: SSLv3/TLS write server done
(62) eap_peap: (TLS) In Handshake Phase
(62) eap: Sending EAP Request (code 1) ID 168 length 1004
(62) eap: EAP session adding &reply:State = 0x326e64d130c67d2d
(62)     [eap] = handled
(62)   } # authenticate = handled
(62) Using Post-Auth-Type Challenge
(62) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(62)   Challenge { ... } # empty sub-section is ignored
(62) session-state: Saving cached attributes
(62)   Framed-MTU = 994
(62)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(62)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(62)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(62)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(62)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(62) Sent Access-Challenge Id 62 from 127.0.0.1:1812 to 127.0.0.1:33891 length 1068
(62)   EAP-Message = 0x01a803ec19c000000aac160303003d02000039030300a2526ac0bb75cf52e48a3b399b6da7d439f9e66c66dd6c29c128d507f6b6f400c030000011ff01000100000b00040300010200170000160303092b0b0009270009240004203082041c30820304a003020102020101300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232303134333732315a170d3234303231383134333732315a307c310b3009060355040613024652310f300d06035504080c0652616469757331153013060355040a0c0c4578616d706c6520496e632e3123302106035504030c1a4578616d70
(62)   Message-Authenticator = 0x00000000000000000000000000000000
(62)   State = 0x326e64d130c67d2de0e6332c72eef4ed
(62) Finished request
(58) Cleaning up request packet ID 58 with timestamp +59 due to cleanup_delay was reached
Waking up in 0.3 seconds.
(59) Cleaning up request packet ID 59 with timestamp +59 due to cleanup_delay was reached
Waking up in 4.5 seconds.
(63) Received Access-Request Id 63 from 127.0.0.1:33891 to 127.0.0.1:1812 length 240
(63)   User-Name = "anonymous"
(63)   NAS-IP-Address = 127.0.0.1
(63)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(63)   NAS-Port-Type = Wireless-802.11
(63)   Service-Type = Framed-User
(63)   NAS-Port = 1
(63)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(63)   Connect-Info = "CONNECT 54Mbps 802.11g"
(63)   Acct-Session-Id = "CF9BFBD35CAE8770"
(63)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(63)   WLAN-Pairwise-Cipher = 1027076
(63)   WLAN-Group-Cipher = 1027076
(63)   WLAN-AKM-Suite = 1027073
(63)   WLAN-Group-Mgmt-Cipher = 1027078
(63)   Framed-MTU = 1400
(63)   EAP-Message = 0x02a800061900
(63)   State = 0x326e64d130c67d2de0e6332c72eef4ed
(63)   Message-Authenticator = 0x0970761f3a913d6dc8d365f10c840aed
(63) Restoring &session-state
(63)   &session-state:Framed-MTU = 994
(63)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(63)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(63)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(63)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(63)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(63) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(63)   authorize {
(63)     policy filter_username {
(63)       if (&User-Name) {
(63)       if (&User-Name)  -> TRUE
(63)       if (&User-Name)  {
(63)         if (&User-Name =~ / /) {
(63)         if (&User-Name =~ / /)  -> FALSE
(63)         if (&User-Name =~ /@[^@]*@/ ) {
(63)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(63)         if (&User-Name =~ /\.\./ ) {
(63)         if (&User-Name =~ /\.\./ )  -> FALSE
(63)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(63)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(63)         if (&User-Name =~ /\.$/)  {
(63)         if (&User-Name =~ /\.$/)   -> FALSE
(63)         if (&User-Name =~ /@\./)  {
(63)         if (&User-Name =~ /@\./)   -> FALSE
(63)       } # if (&User-Name)  = notfound
(63)     } # policy filter_username = notfound
(63)     [preprocess] = ok
(63)     [chap] = noop
(63)     [mschap] = noop
(63)     [digest] = noop
(63) suffix: Checking for suffix after "@"
(63) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(63) suffix: No such realm "NULL"
(63)     [suffix] = noop
(63) eap: Peer sent EAP Response (code 2) ID 168 length 6
(63) eap: Continuing tunnel setup
(63)     [eap] = ok
(63)   } # authorize = ok
(63) Found Auth-Type = eap
(63) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(63)   authenticate {
(63) eap: Expiring EAP session with state 0x326e64d130c67d2d
(63) eap: Finished EAP session with state 0x326e64d130c67d2d
(63) eap: Previous EAP request found for state 0x326e64d130c67d2d, released from the list
(63) eap: Peer sent packet with method EAP PEAP (25)
(63) eap: Calling submodule eap_peap to process data
(63) eap_peap: (TLS) Peer ACKed our handshake fragment
(63) eap: Sending EAP Request (code 1) ID 169 length 1000
(63) eap: EAP session adding &reply:State = 0x326e64d131c77d2d
(63)     [eap] = handled
(63)   } # authenticate = handled
(63) Using Post-Auth-Type Challenge
(63) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(63)   Challenge { ... } # empty sub-section is ignored
(63) session-state: Saving cached attributes
(63)   Framed-MTU = 994
(63)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(63)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(63)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(63)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(63)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(63) Sent Access-Challenge Id 63 from 127.0.0.1:1812 to 127.0.0.1:33891 length 1064
(63)   EAP-Message = 0x01a903e81940b365595edec634be72466f496c8cad448e057893222e9d9b96fa51c2d84df387dace2b8dd56e85ea1e27ed302547bc22a35b0349ae7075502f1be4a933467c7ec41b12f969f65caf80e82b77b04c1d46756210be2684f027b347debb97d3bca395775660fe2168969187b5d46b43284bb130757803bdfe082cbf44b37353c4f853131bace8ca9c30290a88b1bf0a680004fe308204fa308203e2a003020102021457604ee8762089eef125d540c0bbf0b5a118a4af300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232303134333731355a170d32343032
(63)   Message-Authenticator = 0x00000000000000000000000000000000
(63)   State = 0x326e64d131c77d2de0e6332c72eef4ed
(63) Finished request
Waking up in 4.4 seconds.
(64) Received Access-Request Id 64 from 127.0.0.1:33891 to 127.0.0.1:1812 length 240
(64)   User-Name = "anonymous"
(64)   NAS-IP-Address = 127.0.0.1
(64)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(64)   NAS-Port-Type = Wireless-802.11
(64)   Service-Type = Framed-User
(64)   NAS-Port = 1
(64)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(64)   Connect-Info = "CONNECT 54Mbps 802.11g"
(64)   Acct-Session-Id = "CF9BFBD35CAE8770"
(64)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(64)   WLAN-Pairwise-Cipher = 1027076
(64)   WLAN-Group-Cipher = 1027076
(64)   WLAN-AKM-Suite = 1027073
(64)   WLAN-Group-Mgmt-Cipher = 1027078
(64)   Framed-MTU = 1400
(64)   EAP-Message = 0x02a900061900
(64)   State = 0x326e64d131c77d2de0e6332c72eef4ed
(64)   Message-Authenticator = 0xad77601cce46c13c5bf26c60198f1615
(64) Restoring &session-state
(64)   &session-state:Framed-MTU = 994
(64)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(64)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(64)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(64)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(64)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(64) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(64)   authorize {
(64)     policy filter_username {
(64)       if (&User-Name) {
(64)       if (&User-Name)  -> TRUE
(64)       if (&User-Name)  {
(64)         if (&User-Name =~ / /) {
(64)         if (&User-Name =~ / /)  -> FALSE
(64)         if (&User-Name =~ /@[^@]*@/ ) {
(64)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(64)         if (&User-Name =~ /\.\./ ) {
(64)         if (&User-Name =~ /\.\./ )  -> FALSE
(64)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(64)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(64)         if (&User-Name =~ /\.$/)  {
(64)         if (&User-Name =~ /\.$/)   -> FALSE
(64)         if (&User-Name =~ /@\./)  {
(64)         if (&User-Name =~ /@\./)   -> FALSE
(64)       } # if (&User-Name)  = notfound
(64)     } # policy filter_username = notfound
(64)     [preprocess] = ok
(64)     [chap] = noop
(64)     [mschap] = noop
(64)     [digest] = noop
(64) suffix: Checking for suffix after "@"
(64) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(64) suffix: No such realm "NULL"
(64)     [suffix] = noop
(64) eap: Peer sent EAP Response (code 2) ID 169 length 6
(64) eap: Continuing tunnel setup
(64)     [eap] = ok
(64)   } # authorize = ok
(64) Found Auth-Type = eap
(64) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(64)   authenticate {
(64) eap: Expiring EAP session with state 0x326e64d131c77d2d
(64) eap: Finished EAP session with state 0x326e64d131c77d2d
(64) eap: Previous EAP request found for state 0x326e64d131c77d2d, released from the list
(64) eap: Peer sent packet with method EAP PEAP (25)
(64) eap: Calling submodule eap_peap to process data
(64) eap_peap: (TLS) Peer ACKed our handshake fragment
(64) eap: Sending EAP Request (code 1) ID 170 length 750
(64) eap: EAP session adding &reply:State = 0x326e64d136c47d2d
(64)     [eap] = handled
(64)   } # authenticate = handled
(64) Using Post-Auth-Type Challenge
(64) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(64)   Challenge { ... } # empty sub-section is ignored
(64) session-state: Saving cached attributes
(64)   Framed-MTU = 994
(64)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(64)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(64)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(64)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(64)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(64) Sent Access-Challenge Id 64 from 127.0.0.1:1812 to 127.0.0.1:33891 length 812
(64)   EAP-Message = 0x01aa02ee1900161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479821457604ee8762089eef125d540c0bbf0b5a118a4af300f0603551d130101ff040530030101ff30360603551d1f042f302d302ba029a0278625687474703a2f2f7777772e6578616d706c652e6f72672f6578616d706c655f63612e63726c300d06092a864886f70d01010b05000382010100a38f6633d2e2daf953e93089c5b4a66c9abe99620e270f6120051d2195bb6972966c6b98bc7cb21016f89ec601899088e642d40ac9f4ac816aecd5c65482432b5385e04b9bdf7129b175bb275e6021db0725fccea1f8daeb4488f004dfe73aee302570804c93d471bdfc1175c9cd6b7e16a895981dd2e189f5e3d482de9e2ed67b800e000fc33fc1d505bef9840b6037ebb7e9d090a4dbf93ef5dc3a9c956c4f17bc65b21468466551d3e57e331cdcc6dfb1f7279eda22b92b9d6875ae09efa1738980
(64)   Message-Authenticator = 0x00000000000000000000000000000000
(64)   State = 0x326e64d136c47d2de0e6332c72eef4ed
(64) Finished request
Waking up in 4.0 seconds.
(65) Received Access-Request Id 65 from 127.0.0.1:33891 to 127.0.0.1:1812 length 251
(65)   User-Name = "anonymous"
(65)   NAS-IP-Address = 127.0.0.1
(65)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(65)   NAS-Port-Type = Wireless-802.11
(65)   Service-Type = Framed-User
(65)   NAS-Port = 1
(65)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(65)   Connect-Info = "CONNECT 54Mbps 802.11g"
(65)   Acct-Session-Id = "CF9BFBD35CAE8770"
(65)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(65)   WLAN-Pairwise-Cipher = 1027076
(65)   WLAN-Group-Cipher = 1027076
(65)   WLAN-AKM-Suite = 1027073
(65)   WLAN-Group-Mgmt-Cipher = 1027078
(65)   Framed-MTU = 1400
(65)   EAP-Message = 0x02aa001119800000000715030300020230
(65)   State = 0x326e64d136c47d2de0e6332c72eef4ed
(65)   Message-Authenticator = 0xc40937a95cf6da3f210612a64c3bc712
(65) Restoring &session-state
(65)   &session-state:Framed-MTU = 994
(65)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(65)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(65)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(65)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(65)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(65) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(65)   authorize {
(65)     policy filter_username {
(65)       if (&User-Name) {
(65)       if (&User-Name)  -> TRUE
(65)       if (&User-Name)  {
(65)         if (&User-Name =~ / /) {
(65)         if (&User-Name =~ / /)  -> FALSE
(65)         if (&User-Name =~ /@[^@]*@/ ) {
(65)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(65)         if (&User-Name =~ /\.\./ ) {
(65)         if (&User-Name =~ /\.\./ )  -> FALSE
(65)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(65)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(65)         if (&User-Name =~ /\.$/)  {
(65)         if (&User-Name =~ /\.$/)   -> FALSE
(65)         if (&User-Name =~ /@\./)  {
(65)         if (&User-Name =~ /@\./)   -> FALSE
(65)       } # if (&User-Name)  = notfound
(65)     } # policy filter_username = notfound
(65)     [preprocess] = ok
(65)     [chap] = noop
(65)     [mschap] = noop
(65)     [digest] = noop
(65) suffix: Checking for suffix after "@"
(65) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(65) suffix: No such realm "NULL"
(65)     [suffix] = noop
(65) eap: Peer sent EAP Response (code 2) ID 170 length 17
(65) eap: Continuing tunnel setup
(65)     [eap] = ok
(65)   } # authorize = ok
(65) Found Auth-Type = eap
(65) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(65)   authenticate {
(65) eap: Expiring EAP session with state 0x326e64d136c47d2d
(65) eap: Finished EAP session with state 0x326e64d136c47d2d
(65) eap: Previous EAP request found for state 0x326e64d136c47d2d, released from the list
(65) eap: Peer sent packet with method EAP PEAP (25)
(65) eap: Calling submodule eap_peap to process data
(65) eap_peap: (TLS) EAP Peer says that the final record size will be 7 bytes
(65) eap_peap: (TLS) EAP Got all data (7 bytes)
(65) eap_peap: (TLS) recv TLS 1.2 Alert, fatal unknown_ca
(65) eap_peap: (TLS) The client is informing us that it does not recognize the CA used to issue the server certificate.  Please update the client so that it knows about the CA.
(65) eap_peap: ERROR: (TLS) Alert read:fatal:unknown CA
(65) eap_peap: (TLS) Server : Need to read more data: error
(65) eap_peap: ERROR: (TLS) Failed reading from OpenSSL: error:0A000418:SSL routines::tlsv1 alert unknown ca
(65) eap_peap: (TLS) In Handshake Phase
(65) eap_peap: (TLS) Application data.
(65) eap_peap: ERROR: (TLS) Cannot continue, as the peer is misbehaving.
(65) eap_peap: ERROR: [eaptls process] = fail
(65) eap: ERROR: Failed continuing EAP PEAP (25) session.  EAP sub-module failed
(65) eap: Sending EAP Failure (code 4) ID 170 length 4
(65) eap: Failed in EAP select
(65)     [eap] = invalid
(65)   } # authenticate = invalid
(65) Failed to authenticate the user
(65) Using Post-Auth-Type Reject
(65) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(65)   Post-Auth-Type REJECT {
(65) attr_filter.access_reject: EXPAND %{User-Name}
(65) attr_filter.access_reject:    --> anonymous
(65) attr_filter.access_reject: Matched entry DEFAULT at line 11
(65)     [attr_filter.access_reject] = updated
(65)     [eap] = noop
(65)     policy remove_reply_message_if_eap {
(65)       if (&reply:EAP-Message && &reply:Reply-Message) {
(65)       if (&reply:EAP-Message && &reply:Reply-Message)  -> FALSE
(65)       else {
(65)         [noop] = noop
(65)       } # else = noop
(65)     } # policy remove_reply_message_if_eap = noop
(65)   } # Post-Auth-Type REJECT = updated
(65) Delaying response for 1.000000 seconds
Waking up in 0.3 seconds.
Waking up in 0.6 seconds.
(65) Sending delayed response
(65) Sent Access-Reject Id 65 from 127.0.0.1:1812 to 127.0.0.1:33891 length 44
(65)   EAP-Message = 0x04aa0004
(65)   Message-Authenticator = 0x00000000000000000000000000000000
Waking up in 2.6 seconds.
(60) Cleaning up request packet ID 60 with timestamp +64 due to cleanup_delay was reached
(61) Cleaning up request packet ID 61 with timestamp +64 due to cleanup_delay was reached
(62) Cleaning up request packet ID 62 with timestamp +64 due to cleanup_delay was reached
Waking up in 0.4 seconds.
(63) Cleaning up request packet ID 63 with timestamp +64 due to cleanup_delay was reached
Waking up in 0.4 seconds.
(66) Received Access-Request Id 66 from 127.0.0.1:33891 to 127.0.0.1:1812 length 230
(66)   User-Name = "anonymous"
(66)   NAS-IP-Address = 127.0.0.1
(66)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(66)   NAS-Port-Type = Wireless-802.11
(66)   Service-Type = Framed-User
(66)   NAS-Port = 1
(66)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(66)   Connect-Info = "CONNECT 54Mbps 802.11g"
(66)   Acct-Session-Id = "CF9BFBD35CAE8770"
(66)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(66)   WLAN-Pairwise-Cipher = 1027076
(66)   WLAN-Group-Cipher = 1027076
(66)   WLAN-AKM-Suite = 1027073
(66)   WLAN-Group-Mgmt-Cipher = 1027078
(66)   Framed-MTU = 1400
(66)   EAP-Message = 0x02f5000e01616e6f6e796d6f7573
(66)   Message-Authenticator = 0x08f9bdb39ac66d2ee6f0f1ed4c1c101c
(66) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(66)   authorize {
(66)     policy filter_username {
(66)       if (&User-Name) {
(66)       if (&User-Name)  -> TRUE
(66)       if (&User-Name)  {
(66)         if (&User-Name =~ / /) {
(66)         if (&User-Name =~ / /)  -> FALSE
(66)         if (&User-Name =~ /@[^@]*@/ ) {
(66)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(66)         if (&User-Name =~ /\.\./ ) {
(66)         if (&User-Name =~ /\.\./ )  -> FALSE
(66)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(66)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(66)         if (&User-Name =~ /\.$/)  {
(66)         if (&User-Name =~ /\.$/)   -> FALSE
(66)         if (&User-Name =~ /@\./)  {
(66)         if (&User-Name =~ /@\./)   -> FALSE
(66)       } # if (&User-Name)  = notfound
(66)     } # policy filter_username = notfound
(66)     [preprocess] = ok
(66)     [chap] = noop
(66)     [mschap] = noop
(66)     [digest] = noop
(66) suffix: Checking for suffix after "@"
(66) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(66) suffix: No such realm "NULL"
(66)     [suffix] = noop
(66) eap: Peer sent EAP Response (code 2) ID 245 length 14
(66) eap: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
(66)     [eap] = ok
(66)   } # authorize = ok
(66) Found Auth-Type = eap
(66) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(66)   authenticate {
(66) eap: Peer sent packet with method EAP Identity (1)
(66) eap: Calling submodule eap_md5 to process data
(66) eap_md5: Issuing MD5 Challenge
(66) eap: Sending EAP Request (code 1) ID 246 length 22
(66) eap: EAP session adding &reply:State = 0x3caf263f3c59221e
(66)     [eap] = handled
(66)   } # authenticate = handled
(66) Using Post-Auth-Type Challenge
(66) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(66)   Challenge { ... } # empty sub-section is ignored
(66) Sent Access-Challenge Id 66 from 127.0.0.1:1812 to 127.0.0.1:33891 length 80
(66)   EAP-Message = 0x01f600160410d7758e4b27ab85640e16b64599673522
(66)   Message-Authenticator = 0x00000000000000000000000000000000
(66)   State = 0x3caf263f3c59221efb121c9730d32a2c
(66) Finished request
Waking up in 0.1 seconds.
(67) Received Access-Request Id 67 from 127.0.0.1:33891 to 127.0.0.1:1812 length 241
(67)   User-Name = "anonymous"
(67)   NAS-IP-Address = 127.0.0.1
(67)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(67)   NAS-Port-Type = Wireless-802.11
(67)   Service-Type = Framed-User
(67)   NAS-Port = 1
(67)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(67)   Connect-Info = "CONNECT 54Mbps 802.11g"
(67)   Acct-Session-Id = "CF9BFBD35CAE8770"
(67)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(67)   WLAN-Pairwise-Cipher = 1027076
(67)   WLAN-Group-Cipher = 1027076
(67)   WLAN-AKM-Suite = 1027073
(67)   WLAN-Group-Mgmt-Cipher = 1027078
(67)   Framed-MTU = 1400
(67)   EAP-Message = 0x02f60007031915
(67)   State = 0x3caf263f3c59221efb121c9730d32a2c
(67)   Message-Authenticator = 0xb60aaf61818686c864fd4b9e5c990a59
(67) session-state: No cached attributes
(67) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(67)   authorize {
(67)     policy filter_username {
(67)       if (&User-Name) {
(67)       if (&User-Name)  -> TRUE
(67)       if (&User-Name)  {
(67)         if (&User-Name =~ / /) {
(67)         if (&User-Name =~ / /)  -> FALSE
(67)         if (&User-Name =~ /@[^@]*@/ ) {
(67)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(67)         if (&User-Name =~ /\.\./ ) {
(67)         if (&User-Name =~ /\.\./ )  -> FALSE
(67)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(67)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(67)         if (&User-Name =~ /\.$/)  {
(67)         if (&User-Name =~ /\.$/)   -> FALSE
(67)         if (&User-Name =~ /@\./)  {
(67)         if (&User-Name =~ /@\./)   -> FALSE
(67)       } # if (&User-Name)  = notfound
(67)     } # policy filter_username = notfound
(67)     [preprocess] = ok
(67)     [chap] = noop
(67)     [mschap] = noop
(67)     [digest] = noop
(67) suffix: Checking for suffix after "@"
(67) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(67) suffix: No such realm "NULL"
(67)     [suffix] = noop
(67) eap: Peer sent EAP Response (code 2) ID 246 length 7
(67) eap: No EAP Start, assuming it's an on-going EAP conversation
(67)     [eap] = updated
(67)     [files] = noop
(67)     [expiration] = noop
(67)     [logintime] = noop
Not doing PAP as Auth-Type is already set.
(67)     [pap] = noop
(67)   } # authorize = updated
(67) Found Auth-Type = eap
(67) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(67)   authenticate {
(67) eap: Expiring EAP session with state 0x3caf263f3c59221e
(67) eap: Finished EAP session with state 0x3caf263f3c59221e
(67) eap: Previous EAP request found for state 0x3caf263f3c59221e, released from the list
(67) eap: Peer sent packet with method EAP NAK (3)
(67) eap: Found mutually acceptable type PEAP (25)
(67) eap: Calling submodule eap_peap to process data
(67) eap_peap: (TLS) Initiating new session
(67) eap: Sending EAP Request (code 1) ID 247 length 6
(67) eap: EAP session adding &reply:State = 0x3caf263f3d583f1e
(67)     [eap] = handled
(67)   } # authenticate = handled
(67) Using Post-Auth-Type Challenge
(67) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(67)   Challenge { ... } # empty sub-section is ignored
(67) session-state: Saving cached attributes
(67)   Framed-MTU = 994
(67) Sent Access-Challenge Id 67 from 127.0.0.1:1812 to 127.0.0.1:33891 length 64
(67)   EAP-Message = 0x01f700061920
(67)   Message-Authenticator = 0x00000000000000000000000000000000
(67)   State = 0x3caf263f3d583f1efb121c9730d32a2c
(67) Finished request
(68) Received Access-Request Id 68 from 127.0.0.1:33891 to 127.0.0.1:1812 length 476
(68)   User-Name = "anonymous"
(68)   NAS-IP-Address = 127.0.0.1
(68)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(68)   NAS-Port-Type = Wireless-802.11
(68)   Service-Type = Framed-User
(68)   NAS-Port = 1
(68)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(68)   Connect-Info = "CONNECT 54Mbps 802.11g"
(68)   Acct-Session-Id = "CF9BFBD35CAE8770"
(68)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(68)   WLAN-Pairwise-Cipher = 1027076
(68)   WLAN-Group-Cipher = 1027076
(68)   WLAN-AKM-Suite = 1027073
(68)   WLAN-Group-Mgmt-Cipher = 1027078
(68)   Framed-MTU = 1400
(68)   EAP-Message = 0x02f700f21980000000e816030300e3010000df03030000008075da17261b6a2e658df925e1d6a3719fa14012fd69b035a3c0b1d1ba000076c02cc030c0adc024c028c00ac014c0afc05dc061c049c04dc02bc02fc0acc023c027c009c013c0aec05cc060c048c04c009dc09d003d0035c032c02ac00fc02ec026c005c0a1c05fc063c051c04bc04fc03d009cc09c003c002fc031c029c00ec02dc025c004c0a0c05ec062c050c04ac04ec03c00ff01000040000a0010000e001d001700180019001a001b001c000d001600140603050306010501040303030401030102030201000b00020100001600000017000000230000
(68)   State = 0x3caf263f3d583f1efb121c9730d32a2c
(68)   Message-Authenticator = 0x0bbc96861c946d1ec0bdd2ce2ed4bab4
(68) Restoring &session-state
(68)   &session-state:Framed-MTU = 994
(68) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(68)   authorize {
(68)     policy filter_username {
(68)       if (&User-Name) {
(68)       if (&User-Name)  -> TRUE
(68)       if (&User-Name)  {
(68)         if (&User-Name =~ / /) {
(68)         if (&User-Name =~ / /)  -> FALSE
(68)         if (&User-Name =~ /@[^@]*@/ ) {
(68)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(68)         if (&User-Name =~ /\.\./ ) {
(68)         if (&User-Name =~ /\.\./ )  -> FALSE
(68)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(68)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(68)         if (&User-Name =~ /\.$/)  {
(68)         if (&User-Name =~ /\.$/)   -> FALSE
(68)         if (&User-Name =~ /@\./)  {
(68)         if (&User-Name =~ /@\./)   -> FALSE
(68)       } # if (&User-Name)  = notfound
(68)     } # policy filter_username = notfound
(68)     [preprocess] = ok
(68)     [chap] = noop
(68)     [mschap] = noop
(68)     [digest] = noop
(68) suffix: Checking for suffix after "@"
(68) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(68) suffix: No such realm "NULL"
(68)     [suffix] = noop
(68) eap: Peer sent EAP Response (code 2) ID 247 length 242
(68) eap: Continuing tunnel setup
(68)     [eap] = ok
(68)   } # authorize = ok
(68) Found Auth-Type = eap
(68) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(68)   authenticate {
(68) eap: Expiring EAP session with state 0x3caf263f3d583f1e
(68) eap: Finished EAP session with state 0x3caf263f3d583f1e
(68) eap: Previous EAP request found for state 0x3caf263f3d583f1e, released from the list
(68) eap: Peer sent packet with method EAP PEAP (25)
(68) eap: Calling submodule eap_peap to process data
(68) eap_peap: (TLS) EAP Peer says that the final record size will be 232 bytes
(68) eap_peap: (TLS) EAP Got all data (232 bytes)
(68) eap_peap: (TLS) Handshake state - before SSL initialization
(68) eap_peap: (TLS) Handshake state - Server before SSL initialization
(68) eap_peap: (TLS) Handshake state - Server before SSL initialization
(68) eap_peap: (TLS) recv TLS 1.3 Handshake, ClientHello
(68) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read client hello
(68) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHello
(68) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server hello
(68) eap_peap: (TLS) send TLS 1.2 Handshake, Certificate
(68) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write certificate
(68) eap_peap: (TLS) send TLS 1.2 Handshake, ServerKeyExchange
(68) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write key exchange
(68) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHelloDone
(68) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server done
(68) eap_peap: (TLS) Server : Need to read more data: SSLv3/TLS write server done
(68) eap_peap: (TLS) In Handshake Phase
(68) eap: Sending EAP Request (code 1) ID 248 length 1004
(68) eap: EAP session adding &reply:State = 0x3caf263f3e573f1e
(68)     [eap] = handled
(68)   } # authenticate = handled
(68) Using Post-Auth-Type Challenge
(68) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(68)   Challenge { ... } # empty sub-section is ignored
(68) session-state: Saving cached attributes
(68)   Framed-MTU = 994
(68)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(68)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(68)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(68)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(68)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(68) Sent Access-Challenge Id 68 from 127.0.0.1:1812 to 127.0.0.1:33891 length 1068
(68)   EAP-Message = 0x01f803ec19c000000aac160303003d0200003903038d28aea0947ffdc7469103bd9213271b01554fc048e532d7abfd9638bd305f5a00c030000011ff01000100000b00040300010200170000160303092b0b0009270009240004203082041c30820304a003020102020101300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232303134333732315a170d3234303231383134333732315a307c310b3009060355040613024652310f300d06035504080c0652616469757331153013060355040a0c0c4578616d706c6520496e632e3123302106035504030c1a4578616d70
(68)   Message-Authenticator = 0x00000000000000000000000000000000
(68)   State = 0x3caf263f3e573f1efb121c9730d32a2c
(68) Finished request
(64) Cleaning up request packet ID 64 with timestamp +65 due to cleanup_delay was reached
Waking up in 0.3 seconds.
(65) Cleaning up request packet ID 65 with timestamp +65 due to cleanup_delay was reached
Waking up in 4.5 seconds.
(69) Received Access-Request Id 69 from 127.0.0.1:33891 to 127.0.0.1:1812 length 240
(69)   User-Name = "anonymous"
(69)   NAS-IP-Address = 127.0.0.1
(69)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(69)   NAS-Port-Type = Wireless-802.11
(69)   Service-Type = Framed-User
(69)   NAS-Port = 1
(69)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(69)   Connect-Info = "CONNECT 54Mbps 802.11g"
(69)   Acct-Session-Id = "CF9BFBD35CAE8770"
(69)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(69)   WLAN-Pairwise-Cipher = 1027076
(69)   WLAN-Group-Cipher = 1027076
(69)   WLAN-AKM-Suite = 1027073
(69)   WLAN-Group-Mgmt-Cipher = 1027078
(69)   Framed-MTU = 1400
(69)   EAP-Message = 0x02f800061900
(69)   State = 0x3caf263f3e573f1efb121c9730d32a2c
(69)   Message-Authenticator = 0x79ce63e95004300b7b55ad5a4cc38cc2
(69) Restoring &session-state
(69)   &session-state:Framed-MTU = 994
(69)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(69)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(69)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(69)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(69)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(69) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(69)   authorize {
(69)     policy filter_username {
(69)       if (&User-Name) {
(69)       if (&User-Name)  -> TRUE
(69)       if (&User-Name)  {
(69)         if (&User-Name =~ / /) {
(69)         if (&User-Name =~ / /)  -> FALSE
(69)         if (&User-Name =~ /@[^@]*@/ ) {
(69)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(69)         if (&User-Name =~ /\.\./ ) {
(69)         if (&User-Name =~ /\.\./ )  -> FALSE
(69)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(69)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(69)         if (&User-Name =~ /\.$/)  {
(69)         if (&User-Name =~ /\.$/)   -> FALSE
(69)         if (&User-Name =~ /@\./)  {
(69)         if (&User-Name =~ /@\./)   -> FALSE
(69)       } # if (&User-Name)  = notfound
(69)     } # policy filter_username = notfound
(69)     [preprocess] = ok
(69)     [chap] = noop
(69)     [mschap] = noop
(69)     [digest] = noop
(69) suffix: Checking for suffix after "@"
(69) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(69) suffix: No such realm "NULL"
(69)     [suffix] = noop
(69) eap: Peer sent EAP Response (code 2) ID 248 length 6
(69) eap: Continuing tunnel setup
(69)     [eap] = ok
(69)   } # authorize = ok
(69) Found Auth-Type = eap
(69) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(69)   authenticate {
(69) eap: Expiring EAP session with state 0x3caf263f3e573f1e
(69) eap: Finished EAP session with state 0x3caf263f3e573f1e
(69) eap: Previous EAP request found for state 0x3caf263f3e573f1e, released from the list
(69) eap: Peer sent packet with method EAP PEAP (25)
(69) eap: Calling submodule eap_peap to process data
(69) eap_peap: (TLS) Peer ACKed our handshake fragment
(69) eap: Sending EAP Request (code 1) ID 249 length 1000
(69) eap: EAP session adding &reply:State = 0x3caf263f3f563f1e
(69)     [eap] = handled
(69)   } # authenticate = handled
(69) Using Post-Auth-Type Challenge
(69) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(69)   Challenge { ... } # empty sub-section is ignored
(69) session-state: Saving cached attributes
(69)   Framed-MTU = 994
(69)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(69)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(69)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(69)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(69)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(69) Sent Access-Challenge Id 69 from 127.0.0.1:1812 to 127.0.0.1:33891 length 1064
(69)   EAP-Message = 0x01f903e81940b365595edec634be72466f496c8cad448e057893222e9d9b96fa51c2d84df387dace2b8dd56e85ea1e27ed302547bc22a35b0349ae7075502f1be4a933467c7ec41b12f969f65caf80e82b77b04c1d46756210be2684f027b347debb97d3bca395775660fe2168969187b5d46b43284bb130757803bdfe082cbf44b37353c4f853131bace8ca9c30290a88b1bf0a680004fe308204fa308203e2a003020102021457604ee8762089eef125d540c0bbf0b5a118a4af300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232303134333731355a170d32343032
(69)   Message-Authenticator = 0x00000000000000000000000000000000
(69)   State = 0x3caf263f3f563f1efb121c9730d32a2c
(69) Finished request
Waking up in 4.4 seconds.
(70) Received Access-Request Id 70 from 127.0.0.1:33891 to 127.0.0.1:1812 length 240
(70)   User-Name = "anonymous"
(70)   NAS-IP-Address = 127.0.0.1
(70)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(70)   NAS-Port-Type = Wireless-802.11
(70)   Service-Type = Framed-User
(70)   NAS-Port = 1
(70)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(70)   Connect-Info = "CONNECT 54Mbps 802.11g"
(70)   Acct-Session-Id = "CF9BFBD35CAE8770"
(70)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(70)   WLAN-Pairwise-Cipher = 1027076
(70)   WLAN-Group-Cipher = 1027076
(70)   WLAN-AKM-Suite = 1027073
(70)   WLAN-Group-Mgmt-Cipher = 1027078
(70)   Framed-MTU = 1400
(70)   EAP-Message = 0x02f900061900
(70)   State = 0x3caf263f3f563f1efb121c9730d32a2c
(70)   Message-Authenticator = 0xffb47757236eca5d881d0a5d85067e2f
(70) Restoring &session-state
(70)   &session-state:Framed-MTU = 994
(70)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(70)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(70)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(70)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(70)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(70) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(70)   authorize {
(70)     policy filter_username {
(70)       if (&User-Name) {
(70)       if (&User-Name)  -> TRUE
(70)       if (&User-Name)  {
(70)         if (&User-Name =~ / /) {
(70)         if (&User-Name =~ / /)  -> FALSE
(70)         if (&User-Name =~ /@[^@]*@/ ) {
(70)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(70)         if (&User-Name =~ /\.\./ ) {
(70)         if (&User-Name =~ /\.\./ )  -> FALSE
(70)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(70)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(70)         if (&User-Name =~ /\.$/)  {
(70)         if (&User-Name =~ /\.$/)   -> FALSE
(70)         if (&User-Name =~ /@\./)  {
(70)         if (&User-Name =~ /@\./)   -> FALSE
(70)       } # if (&User-Name)  = notfound
(70)     } # policy filter_username = notfound
(70)     [preprocess] = ok
(70)     [chap] = noop
(70)     [mschap] = noop
(70)     [digest] = noop
(70) suffix: Checking for suffix after "@"
(70) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(70) suffix: No such realm "NULL"
(70)     [suffix] = noop
(70) eap: Peer sent EAP Response (code 2) ID 249 length 6
(70) eap: Continuing tunnel setup
(70)     [eap] = ok
(70)   } # authorize = ok
(70) Found Auth-Type = eap
(70) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(70)   authenticate {
(70) eap: Expiring EAP session with state 0x3caf263f3f563f1e
(70) eap: Finished EAP session with state 0x3caf263f3f563f1e
(70) eap: Previous EAP request found for state 0x3caf263f3f563f1e, released from the list
(70) eap: Peer sent packet with method EAP PEAP (25)
(70) eap: Calling submodule eap_peap to process data
(70) eap_peap: (TLS) Peer ACKed our handshake fragment
(70) eap: Sending EAP Request (code 1) ID 250 length 750
(70) eap: EAP session adding &reply:State = 0x3caf263f38553f1e
(70)     [eap] = handled
(70)   } # authenticate = handled
(70) Using Post-Auth-Type Challenge
(70) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(70)   Challenge { ... } # empty sub-section is ignored
(70) session-state: Saving cached attributes
(70)   Framed-MTU = 994
(70)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(70)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(70)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(70)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(70)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(70) Sent Access-Challenge Id 70 from 127.0.0.1:1812 to 127.0.0.1:33891 length 812
(70)   EAP-Message = 0x01fa02ee1900161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479821457604ee8762089eef125d540c0bbf0b5a118a4af300f0603551d130101ff040530030101ff30360603551d1f042f302d302ba029a0278625687474703a2f2f7777772e6578616d706c652e6f72672f6578616d706c655f63612e63726c300d06092a864886f70d01010b05000382010100a38f6633d2e2daf953e93089c5b4a66c9abe99620e270f6120051d2195bb6972966c6b98bc7cb21016f89ec601899088e642d40ac9f4ac816aecd5c65482432b5385e04b9bdf7129b175bb275e6021db0725fccea1f8daeb4488f004dfe73aee302570804c93d471bdfc1175c9cd6b7e16a895981dd2e189f5e3d482de9e2ed67b800e000fc33fc1d505bef9840b6037ebb7e9d090a4dbf93ef5dc3a9c956c4f17bc65b21468466551d3e57e331cdcc6dfb1f7279eda22b92b9d6875ae09efa1738980
(70)   Message-Authenticator = 0x00000000000000000000000000000000
(70)   State = 0x3caf263f38553f1efb121c9730d32a2c
(70) Finished request
Waking up in 4.0 seconds.
(71) Received Access-Request Id 71 from 127.0.0.1:33891 to 127.0.0.1:1812 length 251
(71)   User-Name = "anonymous"
(71)   NAS-IP-Address = 127.0.0.1
(71)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(71)   NAS-Port-Type = Wireless-802.11
(71)   Service-Type = Framed-User
(71)   NAS-Port = 1
(71)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(71)   Connect-Info = "CONNECT 54Mbps 802.11g"
(71)   Acct-Session-Id = "CF9BFBD35CAE8770"
(71)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(71)   WLAN-Pairwise-Cipher = 1027076
(71)   WLAN-Group-Cipher = 1027076
(71)   WLAN-AKM-Suite = 1027073
(71)   WLAN-Group-Mgmt-Cipher = 1027078
(71)   Framed-MTU = 1400
(71)   EAP-Message = 0x02fa001119800000000715030300020230
(71)   State = 0x3caf263f38553f1efb121c9730d32a2c
(71)   Message-Authenticator = 0x5d25647dbfab06e4711205b74d63dc39
(71) Restoring &session-state
(71)   &session-state:Framed-MTU = 994
(71)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(71)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(71)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(71)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(71)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(71) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(71)   authorize {
(71)     policy filter_username {
(71)       if (&User-Name) {
(71)       if (&User-Name)  -> TRUE
(71)       if (&User-Name)  {
(71)         if (&User-Name =~ / /) {
(71)         if (&User-Name =~ / /)  -> FALSE
(71)         if (&User-Name =~ /@[^@]*@/ ) {
(71)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(71)         if (&User-Name =~ /\.\./ ) {
(71)         if (&User-Name =~ /\.\./ )  -> FALSE
(71)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(71)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(71)         if (&User-Name =~ /\.$/)  {
(71)         if (&User-Name =~ /\.$/)   -> FALSE
(71)         if (&User-Name =~ /@\./)  {
(71)         if (&User-Name =~ /@\./)   -> FALSE
(71)       } # if (&User-Name)  = notfound
(71)     } # policy filter_username = notfound
(71)     [preprocess] = ok
(71)     [chap] = noop
(71)     [mschap] = noop
(71)     [digest] = noop
(71) suffix: Checking for suffix after "@"
(71) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(71) suffix: No such realm "NULL"
(71)     [suffix] = noop
(71) eap: Peer sent EAP Response (code 2) ID 250 length 17
(71) eap: Continuing tunnel setup
(71)     [eap] = ok
(71)   } # authorize = ok
(71) Found Auth-Type = eap
(71) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(71)   authenticate {
(71) eap: Expiring EAP session with state 0x3caf263f38553f1e
(71) eap: Finished EAP session with state 0x3caf263f38553f1e
(71) eap: Previous EAP request found for state 0x3caf263f38553f1e, released from the list
(71) eap: Peer sent packet with method EAP PEAP (25)
(71) eap: Calling submodule eap_peap to process data
(71) eap_peap: (TLS) EAP Peer says that the final record size will be 7 bytes
(71) eap_peap: (TLS) EAP Got all data (7 bytes)
(71) eap_peap: (TLS) recv TLS 1.2 Alert, fatal unknown_ca
(71) eap_peap: (TLS) The client is informing us that it does not recognize the CA used to issue the server certificate.  Please update the client so that it knows about the CA.
(71) eap_peap: ERROR: (TLS) Alert read:fatal:unknown CA
(71) eap_peap: (TLS) Server : Need to read more data: error
(71) eap_peap: ERROR: (TLS) Failed reading from OpenSSL: error:0A000418:SSL routines::tlsv1 alert unknown ca
(71) eap_peap: (TLS) In Handshake Phase
(71) eap_peap: (TLS) Application data.
(71) eap_peap: ERROR: (TLS) Cannot continue, as the peer is misbehaving.
(71) eap_peap: ERROR: [eaptls process] = fail
(71) eap: ERROR: Failed continuing EAP PEAP (25) session.  EAP sub-module failed
(71) eap: Sending EAP Failure (code 4) ID 250 length 4
(71) eap: Failed in EAP select
(71)     [eap] = invalid
(71)   } # authenticate = invalid
(71) Failed to authenticate the user
(71) Using Post-Auth-Type Reject
(71) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(71)   Post-Auth-Type REJECT {
(71) attr_filter.access_reject: EXPAND %{User-Name}
(71) attr_filter.access_reject:    --> anonymous
(71) attr_filter.access_reject: Matched entry DEFAULT at line 11
(71)     [attr_filter.access_reject] = updated
(71)     [eap] = noop
(71)     policy remove_reply_message_if_eap {
(71)       if (&reply:EAP-Message && &reply:Reply-Message) {
(71)       if (&reply:EAP-Message && &reply:Reply-Message)  -> FALSE
(71)       else {
(71)         [noop] = noop
(71)       } # else = noop
(71)     } # policy remove_reply_message_if_eap = noop
(71)   } # Post-Auth-Type REJECT = updated
(71) Delaying response for 1.000000 seconds
Waking up in 0.3 seconds.
Waking up in 0.6 seconds.
(71) Sending delayed response
(71) Sent Access-Reject Id 71 from 127.0.0.1:1812 to 127.0.0.1:33891 length 44
(71)   EAP-Message = 0x04fa0004
(71)   Message-Authenticator = 0x00000000000000000000000000000000
Waking up in 2.6 seconds.
(66) Cleaning up request packet ID 66 with timestamp +70 due to cleanup_delay was reached
(67) Cleaning up request packet ID 67 with timestamp +70 due to cleanup_delay was reached
(68) Cleaning up request packet ID 68 with timestamp +70 due to cleanup_delay was reached
Waking up in 0.4 seconds.
(69) Cleaning up request packet ID 69 with timestamp +70 due to cleanup_delay was reached
Waking up in 0.4 seconds.
(72) Received Access-Request Id 72 from 127.0.0.1:33891 to 127.0.0.1:1812 length 230
(72)   User-Name = "anonymous"
(72)   NAS-IP-Address = 127.0.0.1
(72)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(72)   NAS-Port-Type = Wireless-802.11
(72)   Service-Type = Framed-User
(72)   NAS-Port = 1
(72)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(72)   Connect-Info = "CONNECT 54Mbps 802.11g"
(72)   Acct-Session-Id = "CF9BFBD35CAE8770"
(72)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(72)   WLAN-Pairwise-Cipher = 1027076
(72)   WLAN-Group-Cipher = 1027076
(72)   WLAN-AKM-Suite = 1027073
(72)   WLAN-Group-Mgmt-Cipher = 1027078
(72)   Framed-MTU = 1400
(72)   EAP-Message = 0x02de000e01616e6f6e796d6f7573
(72)   Message-Authenticator = 0x659d34c4fe2f4d87568b4081dda308ea
(72) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(72)   authorize {
(72)     policy filter_username {
(72)       if (&User-Name) {
(72)       if (&User-Name)  -> TRUE
(72)       if (&User-Name)  {
(72)         if (&User-Name =~ / /) {
(72)         if (&User-Name =~ / /)  -> FALSE
(72)         if (&User-Name =~ /@[^@]*@/ ) {
(72)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(72)         if (&User-Name =~ /\.\./ ) {
(72)         if (&User-Name =~ /\.\./ )  -> FALSE
(72)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(72)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(72)         if (&User-Name =~ /\.$/)  {
(72)         if (&User-Name =~ /\.$/)   -> FALSE
(72)         if (&User-Name =~ /@\./)  {
(72)         if (&User-Name =~ /@\./)   -> FALSE
(72)       } # if (&User-Name)  = notfound
(72)     } # policy filter_username = notfound
(72)     [preprocess] = ok
(72)     [chap] = noop
(72)     [mschap] = noop
(72)     [digest] = noop
(72) suffix: Checking for suffix after "@"
(72) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(72) suffix: No such realm "NULL"
(72)     [suffix] = noop
(72) eap: Peer sent EAP Response (code 2) ID 222 length 14
(72) eap: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
(72)     [eap] = ok
(72)   } # authorize = ok
(72) Found Auth-Type = eap
(72) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(72)   authenticate {
(72) eap: Peer sent packet with method EAP Identity (1)
(72) eap: Calling submodule eap_md5 to process data
(72) eap_md5: Issuing MD5 Challenge
(72) eap: Sending EAP Request (code 1) ID 223 length 22
(72) eap: EAP session adding &reply:State = 0x44aa85834475816d
(72)     [eap] = handled
(72)   } # authenticate = handled
(72) Using Post-Auth-Type Challenge
(72) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(72)   Challenge { ... } # empty sub-section is ignored
(72) Sent Access-Challenge Id 72 from 127.0.0.1:1812 to 127.0.0.1:33891 length 80
(72)   EAP-Message = 0x01df001604100f5d6bcb1d6d73a207c532e03622e7fb
(72)   Message-Authenticator = 0x00000000000000000000000000000000
(72)   State = 0x44aa85834475816d90f9051593fe3e01
(72) Finished request
(73) Received Access-Request Id 73 from 127.0.0.1:33891 to 127.0.0.1:1812 length 241
(73)   User-Name = "anonymous"
(73)   NAS-IP-Address = 127.0.0.1
(73)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(73)   NAS-Port-Type = Wireless-802.11
(73)   Service-Type = Framed-User
(73)   NAS-Port = 1
(73)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(73)   Connect-Info = "CONNECT 54Mbps 802.11g"
(73)   Acct-Session-Id = "CF9BFBD35CAE8770"
(73)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(73)   WLAN-Pairwise-Cipher = 1027076
(73)   WLAN-Group-Cipher = 1027076
(73)   WLAN-AKM-Suite = 1027073
(73)   WLAN-Group-Mgmt-Cipher = 1027078
(73)   Framed-MTU = 1400
(73)   EAP-Message = 0x02df0007031915
(73)   State = 0x44aa85834475816d90f9051593fe3e01
(73)   Message-Authenticator = 0xe6e83168dfff80aeefb29fb99daa5d51
(73) session-state: No cached attributes
(73) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(73)   authorize {
(73)     policy filter_username {
(73)       if (&User-Name) {
(73)       if (&User-Name)  -> TRUE
(73)       if (&User-Name)  {
(73)         if (&User-Name =~ / /) {
(73)         if (&User-Name =~ / /)  -> FALSE
(73)         if (&User-Name =~ /@[^@]*@/ ) {
(73)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(73)         if (&User-Name =~ /\.\./ ) {
(73)         if (&User-Name =~ /\.\./ )  -> FALSE
(73)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(73)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(73)         if (&User-Name =~ /\.$/)  {
(73)         if (&User-Name =~ /\.$/)   -> FALSE
(73)         if (&User-Name =~ /@\./)  {
(73)         if (&User-Name =~ /@\./)   -> FALSE
(73)       } # if (&User-Name)  = notfound
(73)     } # policy filter_username = notfound
(73)     [preprocess] = ok
(73)     [chap] = noop
(73)     [mschap] = noop
(73)     [digest] = noop
(73) suffix: Checking for suffix after "@"
(73) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(73) suffix: No such realm "NULL"
(73)     [suffix] = noop
(73) eap: Peer sent EAP Response (code 2) ID 223 length 7
(73) eap: No EAP Start, assuming it's an on-going EAP conversation
(73)     [eap] = updated
(73)     [files] = noop
(73)     [expiration] = noop
(73)     [logintime] = noop
Not doing PAP as Auth-Type is already set.
(73)     [pap] = noop
(73)   } # authorize = updated
(73) Found Auth-Type = eap
(73) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(73)   authenticate {
(73) eap: Expiring EAP session with state 0x44aa85834475816d
(73) eap: Finished EAP session with state 0x44aa85834475816d
(73) eap: Previous EAP request found for state 0x44aa85834475816d, released from the list
(73) eap: Peer sent packet with method EAP NAK (3)
(73) eap: Found mutually acceptable type PEAP (25)
(73) eap: Calling submodule eap_peap to process data
(73) eap_peap: (TLS) Initiating new session
(73) eap: Sending EAP Request (code 1) ID 224 length 6
(73) eap: EAP session adding &reply:State = 0x44aa8583454a9c6d
(73)     [eap] = handled
(73)   } # authenticate = handled
(73) Using Post-Auth-Type Challenge
(73) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(73)   Challenge { ... } # empty sub-section is ignored
(73) session-state: Saving cached attributes
(73)   Framed-MTU = 994
(73) Sent Access-Challenge Id 73 from 127.0.0.1:1812 to 127.0.0.1:33891 length 64
(73)   EAP-Message = 0x01e000061920
(73)   Message-Authenticator = 0x00000000000000000000000000000000
(73)   State = 0x44aa8583454a9c6d90f9051593fe3e01
(73) Finished request
(70) Cleaning up request packet ID 70 with timestamp +71 due to cleanup_delay was reached
Waking up in 0.3 seconds.
(74) Received Access-Request Id 74 from 127.0.0.1:33891 to 127.0.0.1:1812 length 476
(74)   User-Name = "anonymous"
(74)   NAS-IP-Address = 127.0.0.1
(74)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(74)   NAS-Port-Type = Wireless-802.11
(74)   Service-Type = Framed-User
(74)   NAS-Port = 1
(74)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(74)   Connect-Info = "CONNECT 54Mbps 802.11g"
(74)   Acct-Session-Id = "CF9BFBD35CAE8770"
(74)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(74)   WLAN-Pairwise-Cipher = 1027076
(74)   WLAN-Group-Cipher = 1027076
(74)   WLAN-AKM-Suite = 1027073
(74)   WLAN-Group-Mgmt-Cipher = 1027078
(74)   Framed-MTU = 1400
(74)   EAP-Message = 0x02e000f21980000000e816030300e3010000df030300000086fac9ab22af078cbfbbda8bc80dfafa0b600fd4df0a92fc2f7252e332000076c02cc030c0adc024c028c00ac014c0afc05dc061c049c04dc02bc02fc0acc023c027c009c013c0aec05cc060c048c04c009dc09d003d0035c032c02ac00fc02ec026c005c0a1c05fc063c051c04bc04fc03d009cc09c003c002fc031c029c00ec02dc025c004c0a0c05ec062c050c04ac04ec03c00ff01000040000a0010000e001d001700180019001a001b001c000d001600140603050306010501040303030401030102030201000b00020100001600000017000000230000
(74)   State = 0x44aa8583454a9c6d90f9051593fe3e01
(74)   Message-Authenticator = 0xabe1a52f6a0e5ea0eae81257a8674273
(74) Restoring &session-state
(74)   &session-state:Framed-MTU = 994
(74) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(74)   authorize {
(74)     policy filter_username {
(74)       if (&User-Name) {
(74)       if (&User-Name)  -> TRUE
(74)       if (&User-Name)  {
(74)         if (&User-Name =~ / /) {
(74)         if (&User-Name =~ / /)  -> FALSE
(74)         if (&User-Name =~ /@[^@]*@/ ) {
(74)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(74)         if (&User-Name =~ /\.\./ ) {
(74)         if (&User-Name =~ /\.\./ )  -> FALSE
(74)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(74)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(74)         if (&User-Name =~ /\.$/)  {
(74)         if (&User-Name =~ /\.$/)   -> FALSE
(74)         if (&User-Name =~ /@\./)  {
(74)         if (&User-Name =~ /@\./)   -> FALSE
(74)       } # if (&User-Name)  = notfound
(74)     } # policy filter_username = notfound
(74)     [preprocess] = ok
(74)     [chap] = noop
(74)     [mschap] = noop
(74)     [digest] = noop
(74) suffix: Checking for suffix after "@"
(74) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(74) suffix: No such realm "NULL"
(74)     [suffix] = noop
(74) eap: Peer sent EAP Response (code 2) ID 224 length 242
(74) eap: Continuing tunnel setup
(74)     [eap] = ok
(74)   } # authorize = ok
(74) Found Auth-Type = eap
(74) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(74)   authenticate {
(74) eap: Expiring EAP session with state 0x44aa8583454a9c6d
(74) eap: Finished EAP session with state 0x44aa8583454a9c6d
(74) eap: Previous EAP request found for state 0x44aa8583454a9c6d, released from the list
(74) eap: Peer sent packet with method EAP PEAP (25)
(74) eap: Calling submodule eap_peap to process data
(74) eap_peap: (TLS) EAP Peer says that the final record size will be 232 bytes
(74) eap_peap: (TLS) EAP Got all data (232 bytes)
(74) eap_peap: (TLS) Handshake state - before SSL initialization
(74) eap_peap: (TLS) Handshake state - Server before SSL initialization
(74) eap_peap: (TLS) Handshake state - Server before SSL initialization
(74) eap_peap: (TLS) recv TLS 1.3 Handshake, ClientHello
(74) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read client hello
(74) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHello
(74) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server hello
(74) eap_peap: (TLS) send TLS 1.2 Handshake, Certificate
(74) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write certificate
(74) eap_peap: (TLS) send TLS 1.2 Handshake, ServerKeyExchange
(74) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write key exchange
(74) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHelloDone
(74) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server done
(74) eap_peap: (TLS) Server : Need to read more data: SSLv3/TLS write server done
(74) eap_peap: (TLS) In Handshake Phase
(74) eap: Sending EAP Request (code 1) ID 225 length 1004
(74) eap: EAP session adding &reply:State = 0x44aa8583464b9c6d
(74)     [eap] = handled
(74)   } # authenticate = handled
(74) Using Post-Auth-Type Challenge
(74) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(74)   Challenge { ... } # empty sub-section is ignored
(74) session-state: Saving cached attributes
(74)   Framed-MTU = 994
(74)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(74)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(74)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(74)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(74)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(74) Sent Access-Challenge Id 74 from 127.0.0.1:1812 to 127.0.0.1:33891 length 1068
(74)   EAP-Message = 0x01e103ec19c000000aac160303003d0200003903030de5bd56fb2b740d5f6dd98920c11ae2004c3bb5d895f0d49786a9846b4a470a00c030000011ff01000100000b00040300010200170000160303092b0b0009270009240004203082041c30820304a003020102020101300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232303134333732315a170d3234303231383134333732315a307c310b3009060355040613024652310f300d06035504080c0652616469757331153013060355040a0c0c4578616d706c6520496e632e3123302106035504030c1a4578616d70
(74)   Message-Authenticator = 0x00000000000000000000000000000000
(74)   State = 0x44aa8583464b9c6d90f9051593fe3e01
(74) Finished request
Waking up in 0.3 seconds.
(71) Cleaning up request packet ID 71 with timestamp +71 due to cleanup_delay was reached
Waking up in 4.5 seconds.
(75) Received Access-Request Id 75 from 127.0.0.1:33891 to 127.0.0.1:1812 length 240
(75)   User-Name = "anonymous"
(75)   NAS-IP-Address = 127.0.0.1
(75)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(75)   NAS-Port-Type = Wireless-802.11
(75)   Service-Type = Framed-User
(75)   NAS-Port = 1
(75)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(75)   Connect-Info = "CONNECT 54Mbps 802.11g"
(75)   Acct-Session-Id = "CF9BFBD35CAE8770"
(75)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(75)   WLAN-Pairwise-Cipher = 1027076
(75)   WLAN-Group-Cipher = 1027076
(75)   WLAN-AKM-Suite = 1027073
(75)   WLAN-Group-Mgmt-Cipher = 1027078
(75)   Framed-MTU = 1400
(75)   EAP-Message = 0x02e100061900
(75)   State = 0x44aa8583464b9c6d90f9051593fe3e01
(75)   Message-Authenticator = 0x0d35c2ff76a54341bdd0c4dcd9efe432
(75) Restoring &session-state
(75)   &session-state:Framed-MTU = 994
(75)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(75)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(75)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(75)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(75)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(75) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(75)   authorize {
(75)     policy filter_username {
(75)       if (&User-Name) {
(75)       if (&User-Name)  -> TRUE
(75)       if (&User-Name)  {
(75)         if (&User-Name =~ / /) {
(75)         if (&User-Name =~ / /)  -> FALSE
(75)         if (&User-Name =~ /@[^@]*@/ ) {
(75)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(75)         if (&User-Name =~ /\.\./ ) {
(75)         if (&User-Name =~ /\.\./ )  -> FALSE
(75)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(75)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(75)         if (&User-Name =~ /\.$/)  {
(75)         if (&User-Name =~ /\.$/)   -> FALSE
(75)         if (&User-Name =~ /@\./)  {
(75)         if (&User-Name =~ /@\./)   -> FALSE
(75)       } # if (&User-Name)  = notfound
(75)     } # policy filter_username = notfound
(75)     [preprocess] = ok
(75)     [chap] = noop
(75)     [mschap] = noop
(75)     [digest] = noop
(75) suffix: Checking for suffix after "@"
(75) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(75) suffix: No such realm "NULL"
(75)     [suffix] = noop
(75) eap: Peer sent EAP Response (code 2) ID 225 length 6
(75) eap: Continuing tunnel setup
(75)     [eap] = ok
(75)   } # authorize = ok
(75) Found Auth-Type = eap
(75) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(75)   authenticate {
(75) eap: Expiring EAP session with state 0x44aa8583464b9c6d
(75) eap: Finished EAP session with state 0x44aa8583464b9c6d
(75) eap: Previous EAP request found for state 0x44aa8583464b9c6d, released from the list
(75) eap: Peer sent packet with method EAP PEAP (25)
(75) eap: Calling submodule eap_peap to process data
(75) eap_peap: (TLS) Peer ACKed our handshake fragment
(75) eap: Sending EAP Request (code 1) ID 226 length 1000
(75) eap: EAP session adding &reply:State = 0x44aa858347489c6d
(75)     [eap] = handled
(75)   } # authenticate = handled
(75) Using Post-Auth-Type Challenge
(75) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(75)   Challenge { ... } # empty sub-section is ignored
(75) session-state: Saving cached attributes
(75)   Framed-MTU = 994
(75)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(75)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(75)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(75)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(75)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(75) Sent Access-Challenge Id 75 from 127.0.0.1:1812 to 127.0.0.1:33891 length 1064
(75)   EAP-Message = 0x01e203e81940b365595edec634be72466f496c8cad448e057893222e9d9b96fa51c2d84df387dace2b8dd56e85ea1e27ed302547bc22a35b0349ae7075502f1be4a933467c7ec41b12f969f65caf80e82b77b04c1d46756210be2684f027b347debb97d3bca395775660fe2168969187b5d46b43284bb130757803bdfe082cbf44b37353c4f853131bace8ca9c30290a88b1bf0a680004fe308204fa308203e2a003020102021457604ee8762089eef125d540c0bbf0b5a118a4af300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232303134333731355a170d32343032
(75)   Message-Authenticator = 0x00000000000000000000000000000000
(75)   State = 0x44aa858347489c6d90f9051593fe3e01
(75) Finished request
Waking up in 4.4 seconds.
(76) Received Access-Request Id 76 from 127.0.0.1:33891 to 127.0.0.1:1812 length 240
(76)   User-Name = "anonymous"
(76)   NAS-IP-Address = 127.0.0.1
(76)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(76)   NAS-Port-Type = Wireless-802.11
(76)   Service-Type = Framed-User
(76)   NAS-Port = 1
(76)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(76)   Connect-Info = "CONNECT 54Mbps 802.11g"
(76)   Acct-Session-Id = "CF9BFBD35CAE8770"
(76)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(76)   WLAN-Pairwise-Cipher = 1027076
(76)   WLAN-Group-Cipher = 1027076
(76)   WLAN-AKM-Suite = 1027073
(76)   WLAN-Group-Mgmt-Cipher = 1027078
(76)   Framed-MTU = 1400
(76)   EAP-Message = 0x02e200061900
(76)   State = 0x44aa858347489c6d90f9051593fe3e01
(76)   Message-Authenticator = 0x22b5ca9dd0372ae63a66e88a0a8e95b9
(76) Restoring &session-state
(76)   &session-state:Framed-MTU = 994
(76)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(76)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(76)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(76)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(76)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(76) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(76)   authorize {
(76)     policy filter_username {
(76)       if (&User-Name) {
(76)       if (&User-Name)  -> TRUE
(76)       if (&User-Name)  {
(76)         if (&User-Name =~ / /) {
(76)         if (&User-Name =~ / /)  -> FALSE
(76)         if (&User-Name =~ /@[^@]*@/ ) {
(76)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(76)         if (&User-Name =~ /\.\./ ) {
(76)         if (&User-Name =~ /\.\./ )  -> FALSE
(76)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(76)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(76)         if (&User-Name =~ /\.$/)  {
(76)         if (&User-Name =~ /\.$/)   -> FALSE
(76)         if (&User-Name =~ /@\./)  {
(76)         if (&User-Name =~ /@\./)   -> FALSE
(76)       } # if (&User-Name)  = notfound
(76)     } # policy filter_username = notfound
(76)     [preprocess] = ok
(76)     [chap] = noop
(76)     [mschap] = noop
(76)     [digest] = noop
(76) suffix: Checking for suffix after "@"
(76) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(76) suffix: No such realm "NULL"
(76)     [suffix] = noop
(76) eap: Peer sent EAP Response (code 2) ID 226 length 6
(76) eap: Continuing tunnel setup
(76)     [eap] = ok
(76)   } # authorize = ok
(76) Found Auth-Type = eap
(76) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(76)   authenticate {
(76) eap: Expiring EAP session with state 0x44aa858347489c6d
(76) eap: Finished EAP session with state 0x44aa858347489c6d
(76) eap: Previous EAP request found for state 0x44aa858347489c6d, released from the list
(76) eap: Peer sent packet with method EAP PEAP (25)
(76) eap: Calling submodule eap_peap to process data
(76) eap_peap: (TLS) Peer ACKed our handshake fragment
(76) eap: Sending EAP Request (code 1) ID 227 length 750
(76) eap: EAP session adding &reply:State = 0x44aa858340499c6d
(76)     [eap] = handled
(76)   } # authenticate = handled
(76) Using Post-Auth-Type Challenge
(76) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(76)   Challenge { ... } # empty sub-section is ignored
(76) session-state: Saving cached attributes
(76)   Framed-MTU = 994
(76)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(76)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(76)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(76)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(76)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(76) Sent Access-Challenge Id 76 from 127.0.0.1:1812 to 127.0.0.1:33891 length 812
(76)   EAP-Message = 0x01e302ee1900161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479821457604ee8762089eef125d540c0bbf0b5a118a4af300f0603551d130101ff040530030101ff30360603551d1f042f302d302ba029a0278625687474703a2f2f7777772e6578616d706c652e6f72672f6578616d706c655f63612e63726c300d06092a864886f70d01010b05000382010100a38f6633d2e2daf953e93089c5b4a66c9abe99620e270f6120051d2195bb6972966c6b98bc7cb21016f89ec601899088e642d40ac9f4ac816aecd5c65482432b5385e04b9bdf7129b175bb275e6021db0725fccea1f8daeb4488f004dfe73aee302570804c93d471bdfc1175c9cd6b7e16a895981dd2e189f5e3d482de9e2ed67b800e000fc33fc1d505bef9840b6037ebb7e9d090a4dbf93ef5dc3a9c956c4f17bc65b21468466551d3e57e331cdcc6dfb1f7279eda22b92b9d6875ae09efa1738980
(76)   Message-Authenticator = 0x00000000000000000000000000000000
(76)   State = 0x44aa858340499c6d90f9051593fe3e01
(76) Finished request
Waking up in 4.0 seconds.
(77) Received Access-Request Id 77 from 127.0.0.1:33891 to 127.0.0.1:1812 length 251
(77)   User-Name = "anonymous"
(77)   NAS-IP-Address = 127.0.0.1
(77)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(77)   NAS-Port-Type = Wireless-802.11
(77)   Service-Type = Framed-User
(77)   NAS-Port = 1
(77)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(77)   Connect-Info = "CONNECT 54Mbps 802.11g"
(77)   Acct-Session-Id = "CF9BFBD35CAE8770"
(77)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(77)   WLAN-Pairwise-Cipher = 1027076
(77)   WLAN-Group-Cipher = 1027076
(77)   WLAN-AKM-Suite = 1027073
(77)   WLAN-Group-Mgmt-Cipher = 1027078
(77)   Framed-MTU = 1400
(77)   EAP-Message = 0x02e3001119800000000715030300020230
(77)   State = 0x44aa858340499c6d90f9051593fe3e01
(77)   Message-Authenticator = 0x7da3c543e4911202f2bf90479f6dd00c
(77) Restoring &session-state
(77)   &session-state:Framed-MTU = 994
(77)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(77)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(77)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(77)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(77)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(77) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(77)   authorize {
(77)     policy filter_username {
(77)       if (&User-Name) {
(77)       if (&User-Name)  -> TRUE
(77)       if (&User-Name)  {
(77)         if (&User-Name =~ / /) {
(77)         if (&User-Name =~ / /)  -> FALSE
(77)         if (&User-Name =~ /@[^@]*@/ ) {
(77)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(77)         if (&User-Name =~ /\.\./ ) {
(77)         if (&User-Name =~ /\.\./ )  -> FALSE
(77)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(77)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(77)         if (&User-Name =~ /\.$/)  {
(77)         if (&User-Name =~ /\.$/)   -> FALSE
(77)         if (&User-Name =~ /@\./)  {
(77)         if (&User-Name =~ /@\./)   -> FALSE
(77)       } # if (&User-Name)  = notfound
(77)     } # policy filter_username = notfound
(77)     [preprocess] = ok
(77)     [chap] = noop
(77)     [mschap] = noop
(77)     [digest] = noop
(77) suffix: Checking for suffix after "@"
(77) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(77) suffix: No such realm "NULL"
(77)     [suffix] = noop
(77) eap: Peer sent EAP Response (code 2) ID 227 length 17
(77) eap: Continuing tunnel setup
(77)     [eap] = ok
(77)   } # authorize = ok
(77) Found Auth-Type = eap
(77) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(77)   authenticate {
(77) eap: Expiring EAP session with state 0x44aa858340499c6d
(77) eap: Finished EAP session with state 0x44aa858340499c6d
(77) eap: Previous EAP request found for state 0x44aa858340499c6d, released from the list
(77) eap: Peer sent packet with method EAP PEAP (25)
(77) eap: Calling submodule eap_peap to process data
(77) eap_peap: (TLS) EAP Peer says that the final record size will be 7 bytes
(77) eap_peap: (TLS) EAP Got all data (7 bytes)
(77) eap_peap: (TLS) recv TLS 1.2 Alert, fatal unknown_ca
(77) eap_peap: (TLS) The client is informing us that it does not recognize the CA used to issue the server certificate.  Please update the client so that it knows about the CA.
(77) eap_peap: ERROR: (TLS) Alert read:fatal:unknown CA
(77) eap_peap: (TLS) Server : Need to read more data: error
(77) eap_peap: ERROR: (TLS) Failed reading from OpenSSL: error:0A000418:SSL routines::tlsv1 alert unknown ca
(77) eap_peap: (TLS) In Handshake Phase
(77) eap_peap: (TLS) Application data.
(77) eap_peap: ERROR: (TLS) Cannot continue, as the peer is misbehaving.
(77) eap_peap: ERROR: [eaptls process] = fail
(77) eap: ERROR: Failed continuing EAP PEAP (25) session.  EAP sub-module failed
(77) eap: Sending EAP Failure (code 4) ID 227 length 4
(77) eap: Failed in EAP select
(77)     [eap] = invalid
(77)   } # authenticate = invalid
(77) Failed to authenticate the user
(77) Using Post-Auth-Type Reject
(77) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(77)   Post-Auth-Type REJECT {
(77) attr_filter.access_reject: EXPAND %{User-Name}
(77) attr_filter.access_reject:    --> anonymous
(77) attr_filter.access_reject: Matched entry DEFAULT at line 11
(77)     [attr_filter.access_reject] = updated
(77)     [eap] = noop
(77)     policy remove_reply_message_if_eap {
(77)       if (&reply:EAP-Message && &reply:Reply-Message) {
(77)       if (&reply:EAP-Message && &reply:Reply-Message)  -> FALSE
(77)       else {
(77)         [noop] = noop
(77)       } # else = noop
(77)     } # policy remove_reply_message_if_eap = noop
(77)   } # Post-Auth-Type REJECT = updated
(77) Delaying response for 1.000000 seconds
Waking up in 0.3 seconds.
Waking up in 0.6 seconds.
(77) Sending delayed response
(77) Sent Access-Reject Id 77 from 127.0.0.1:1812 to 127.0.0.1:33891 length 44
(77)   EAP-Message = 0x04e30004
(77)   Message-Authenticator = 0x00000000000000000000000000000000
Waking up in 2.6 seconds.
(72) Cleaning up request packet ID 72 with timestamp +76 due to cleanup_delay was reached
(73) Cleaning up request packet ID 73 with timestamp +76 due to cleanup_delay was reached
(74) Cleaning up request packet ID 74 with timestamp +76 due to cleanup_delay was reached
Waking up in 0.4 seconds.
(75) Cleaning up request packet ID 75 with timestamp +76 due to cleanup_delay was reached
Waking up in 0.4 seconds.
(78) Received Access-Request Id 78 from 127.0.0.1:33891 to 127.0.0.1:1812 length 230
(78)   User-Name = "anonymous"
(78)   NAS-IP-Address = 127.0.0.1
(78)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(78)   NAS-Port-Type = Wireless-802.11
(78)   Service-Type = Framed-User
(78)   NAS-Port = 1
(78)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(78)   Connect-Info = "CONNECT 54Mbps 802.11g"
(78)   Acct-Session-Id = "CF9BFBD35CAE8770"
(78)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(78)   WLAN-Pairwise-Cipher = 1027076
(78)   WLAN-Group-Cipher = 1027076
(78)   WLAN-AKM-Suite = 1027073
(78)   WLAN-Group-Mgmt-Cipher = 1027078
(78)   Framed-MTU = 1400
(78)   EAP-Message = 0x02ed000e01616e6f6e796d6f7573
(78)   Message-Authenticator = 0xcd0bacb1a872e516fd807909e9ddeacb
(78) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(78)   authorize {
(78)     policy filter_username {
(78)       if (&User-Name) {
(78)       if (&User-Name)  -> TRUE
(78)       if (&User-Name)  {
(78)         if (&User-Name =~ / /) {
(78)         if (&User-Name =~ / /)  -> FALSE
(78)         if (&User-Name =~ /@[^@]*@/ ) {
(78)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(78)         if (&User-Name =~ /\.\./ ) {
(78)         if (&User-Name =~ /\.\./ )  -> FALSE
(78)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(78)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(78)         if (&User-Name =~ /\.$/)  {
(78)         if (&User-Name =~ /\.$/)   -> FALSE
(78)         if (&User-Name =~ /@\./)  {
(78)         if (&User-Name =~ /@\./)   -> FALSE
(78)       } # if (&User-Name)  = notfound
(78)     } # policy filter_username = notfound
(78)     [preprocess] = ok
(78)     [chap] = noop
(78)     [mschap] = noop
(78)     [digest] = noop
(78) suffix: Checking for suffix after "@"
(78) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(78) suffix: No such realm "NULL"
(78)     [suffix] = noop
(78) eap: Peer sent EAP Response (code 2) ID 237 length 14
(78) eap: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
(78)     [eap] = ok
(78)   } # authorize = ok
(78) Found Auth-Type = eap
(78) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(78)   authenticate {
(78) eap: Peer sent packet with method EAP Identity (1)
(78) eap: Calling submodule eap_md5 to process data
(78) eap_md5: Issuing MD5 Challenge
(78) eap: Sending EAP Request (code 1) ID 238 length 22
(78) eap: EAP session adding &reply:State = 0x63dcd0da6332d479
(78)     [eap] = handled
(78)   } # authenticate = handled
(78) Using Post-Auth-Type Challenge
(78) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(78)   Challenge { ... } # empty sub-section is ignored
(78) Sent Access-Challenge Id 78 from 127.0.0.1:1812 to 127.0.0.1:33891 length 80
(78)   EAP-Message = 0x01ee001604105b84f6bf819fa8308321506bca2cd067
(78)   Message-Authenticator = 0x00000000000000000000000000000000
(78)   State = 0x63dcd0da6332d479e1e81830c6aee80b
(78) Finished request
Waking up in 0.1 seconds.
(79) Received Access-Request Id 79 from 127.0.0.1:33891 to 127.0.0.1:1812 length 241
(79)   User-Name = "anonymous"
(79)   NAS-IP-Address = 127.0.0.1
(79)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(79)   NAS-Port-Type = Wireless-802.11
(79)   Service-Type = Framed-User
(79)   NAS-Port = 1
(79)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(79)   Connect-Info = "CONNECT 54Mbps 802.11g"
(79)   Acct-Session-Id = "CF9BFBD35CAE8770"
(79)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(79)   WLAN-Pairwise-Cipher = 1027076
(79)   WLAN-Group-Cipher = 1027076
(79)   WLAN-AKM-Suite = 1027073
(79)   WLAN-Group-Mgmt-Cipher = 1027078
(79)   Framed-MTU = 1400
(79)   EAP-Message = 0x02ee0007031915
(79)   State = 0x63dcd0da6332d479e1e81830c6aee80b
(79)   Message-Authenticator = 0xdc74795603fd81b3dd71a680536213d4
(79) session-state: No cached attributes
(79) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(79)   authorize {
(79)     policy filter_username {
(79)       if (&User-Name) {
(79)       if (&User-Name)  -> TRUE
(79)       if (&User-Name)  {
(79)         if (&User-Name =~ / /) {
(79)         if (&User-Name =~ / /)  -> FALSE
(79)         if (&User-Name =~ /@[^@]*@/ ) {
(79)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(79)         if (&User-Name =~ /\.\./ ) {
(79)         if (&User-Name =~ /\.\./ )  -> FALSE
(79)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(79)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(79)         if (&User-Name =~ /\.$/)  {
(79)         if (&User-Name =~ /\.$/)   -> FALSE
(79)         if (&User-Name =~ /@\./)  {
(79)         if (&User-Name =~ /@\./)   -> FALSE
(79)       } # if (&User-Name)  = notfound
(79)     } # policy filter_username = notfound
(79)     [preprocess] = ok
(79)     [chap] = noop
(79)     [mschap] = noop
(79)     [digest] = noop
(79) suffix: Checking for suffix after "@"
(79) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(79) suffix: No such realm "NULL"
(79)     [suffix] = noop
(79) eap: Peer sent EAP Response (code 2) ID 238 length 7
(79) eap: No EAP Start, assuming it's an on-going EAP conversation
(79)     [eap] = updated
(79)     [files] = noop
(79)     [expiration] = noop
(79)     [logintime] = noop
Not doing PAP as Auth-Type is already set.
(79)     [pap] = noop
(79)   } # authorize = updated
(79) Found Auth-Type = eap
(79) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(79)   authenticate {
(79) eap: Expiring EAP session with state 0x63dcd0da6332d479
(79) eap: Finished EAP session with state 0x63dcd0da6332d479
(79) eap: Previous EAP request found for state 0x63dcd0da6332d479, released from the list
(79) eap: Peer sent packet with method EAP NAK (3)
(79) eap: Found mutually acceptable type PEAP (25)
(79) eap: Calling submodule eap_peap to process data
(79) eap_peap: (TLS) Initiating new session
(79) eap: Sending EAP Request (code 1) ID 239 length 6
(79) eap: EAP session adding &reply:State = 0x63dcd0da6233c979
(79)     [eap] = handled
(79)   } # authenticate = handled
(79) Using Post-Auth-Type Challenge
(79) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(79)   Challenge { ... } # empty sub-section is ignored
(79) session-state: Saving cached attributes
(79)   Framed-MTU = 994
(79) Sent Access-Challenge Id 79 from 127.0.0.1:1812 to 127.0.0.1:33891 length 64
(79)   EAP-Message = 0x01ef00061920
(79)   Message-Authenticator = 0x00000000000000000000000000000000
(79)   State = 0x63dcd0da6233c979e1e81830c6aee80b
(79) Finished request
(80) Received Access-Request Id 80 from 127.0.0.1:33891 to 127.0.0.1:1812 length 476
(80)   User-Name = "anonymous"
(80)   NAS-IP-Address = 127.0.0.1
(80)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(80)   NAS-Port-Type = Wireless-802.11
(80)   Service-Type = Framed-User
(80)   NAS-Port = 1
(80)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(80)   Connect-Info = "CONNECT 54Mbps 802.11g"
(80)   Acct-Session-Id = "CF9BFBD35CAE8770"
(80)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(80)   WLAN-Pairwise-Cipher = 1027076
(80)   WLAN-Group-Cipher = 1027076
(80)   WLAN-AKM-Suite = 1027073
(80)   WLAN-Group-Mgmt-Cipher = 1027078
(80)   Framed-MTU = 1400
(80)   EAP-Message = 0x02ef00f21980000000e816030300e3010000df03030000008cbc052f38cfc836de1cf5c826c501b4fa4fa7711a3a135ee73ba5df1f000076c02cc030c0adc024c028c00ac014c0afc05dc061c049c04dc02bc02fc0acc023c027c009c013c0aec05cc060c048c04c009dc09d003d0035c032c02ac00fc02ec026c005c0a1c05fc063c051c04bc04fc03d009cc09c003c002fc031c029c00ec02dc025c004c0a0c05ec062c050c04ac04ec03c00ff01000040000a0010000e001d001700180019001a001b001c000d001600140603050306010501040303030401030102030201000b00020100001600000017000000230000
(80)   State = 0x63dcd0da6233c979e1e81830c6aee80b
(80)   Message-Authenticator = 0x0617c922fe254e91bc427ae25ca3f277
(80) Restoring &session-state
(80)   &session-state:Framed-MTU = 994
(80) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(80)   authorize {
(80)     policy filter_username {
(80)       if (&User-Name) {
(80)       if (&User-Name)  -> TRUE
(80)       if (&User-Name)  {
(80)         if (&User-Name =~ / /) {
(80)         if (&User-Name =~ / /)  -> FALSE
(80)         if (&User-Name =~ /@[^@]*@/ ) {
(80)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(80)         if (&User-Name =~ /\.\./ ) {
(80)         if (&User-Name =~ /\.\./ )  -> FALSE
(80)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(80)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(80)         if (&User-Name =~ /\.$/)  {
(80)         if (&User-Name =~ /\.$/)   -> FALSE
(80)         if (&User-Name =~ /@\./)  {
(80)         if (&User-Name =~ /@\./)   -> FALSE
(80)       } # if (&User-Name)  = notfound
(80)     } # policy filter_username = notfound
(80)     [preprocess] = ok
(80)     [chap] = noop
(80)     [mschap] = noop
(80)     [digest] = noop
(80) suffix: Checking for suffix after "@"
(80) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(80) suffix: No such realm "NULL"
(80)     [suffix] = noop
(80) eap: Peer sent EAP Response (code 2) ID 239 length 242
(80) eap: Continuing tunnel setup
(80)     [eap] = ok
(80)   } # authorize = ok
(80) Found Auth-Type = eap
(80) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(80)   authenticate {
(80) eap: Expiring EAP session with state 0x63dcd0da6233c979
(80) eap: Finished EAP session with state 0x63dcd0da6233c979
(80) eap: Previous EAP request found for state 0x63dcd0da6233c979, released from the list
(80) eap: Peer sent packet with method EAP PEAP (25)
(80) eap: Calling submodule eap_peap to process data
(80) eap_peap: (TLS) EAP Peer says that the final record size will be 232 bytes
(80) eap_peap: (TLS) EAP Got all data (232 bytes)
(80) eap_peap: (TLS) Handshake state - before SSL initialization
(80) eap_peap: (TLS) Handshake state - Server before SSL initialization
(80) eap_peap: (TLS) Handshake state - Server before SSL initialization
(80) eap_peap: (TLS) recv TLS 1.3 Handshake, ClientHello
(80) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read client hello
(80) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHello
(80) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server hello
(80) eap_peap: (TLS) send TLS 1.2 Handshake, Certificate
(80) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write certificate
(80) eap_peap: (TLS) send TLS 1.2 Handshake, ServerKeyExchange
(80) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write key exchange
(80) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHelloDone
(80) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server done
(80) eap_peap: (TLS) Server : Need to read more data: SSLv3/TLS write server done
(80) eap_peap: (TLS) In Handshake Phase
(80) eap: Sending EAP Request (code 1) ID 240 length 1004
(80) eap: EAP session adding &reply:State = 0x63dcd0da612cc979
(80)     [eap] = handled
(80)   } # authenticate = handled
(80) Using Post-Auth-Type Challenge
(80) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(80)   Challenge { ... } # empty sub-section is ignored
(80) session-state: Saving cached attributes
(80)   Framed-MTU = 994
(80)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(80)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(80)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(80)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(80)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(80) Sent Access-Challenge Id 80 from 127.0.0.1:1812 to 127.0.0.1:33891 length 1068
(80)   EAP-Message = 0x01f003ec19c000000aac160303003d0200003903035c4cdf0497ed6ca5ae260fb302eb62274a9a7a1e4624558865bb770151c874e800c030000011ff01000100000b00040300010200170000160303092b0b0009270009240004203082041c30820304a003020102020101300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232303134333732315a170d3234303231383134333732315a307c310b3009060355040613024652310f300d06035504080c0652616469757331153013060355040a0c0c4578616d706c6520496e632e3123302106035504030c1a4578616d70
(80)   Message-Authenticator = 0x00000000000000000000000000000000
(80)   State = 0x63dcd0da612cc979e1e81830c6aee80b
(80) Finished request
(76) Cleaning up request packet ID 76 with timestamp +77 due to cleanup_delay was reached
Waking up in 0.3 seconds.
(77) Cleaning up request packet ID 77 with timestamp +77 due to cleanup_delay was reached
Waking up in 4.5 seconds.
(81) Received Access-Request Id 81 from 127.0.0.1:33891 to 127.0.0.1:1812 length 240
(81)   User-Name = "anonymous"
(81)   NAS-IP-Address = 127.0.0.1
(81)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(81)   NAS-Port-Type = Wireless-802.11
(81)   Service-Type = Framed-User
(81)   NAS-Port = 1
(81)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(81)   Connect-Info = "CONNECT 54Mbps 802.11g"
(81)   Acct-Session-Id = "CF9BFBD35CAE8770"
(81)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(81)   WLAN-Pairwise-Cipher = 1027076
(81)   WLAN-Group-Cipher = 1027076
(81)   WLAN-AKM-Suite = 1027073
(81)   WLAN-Group-Mgmt-Cipher = 1027078
(81)   Framed-MTU = 1400
(81)   EAP-Message = 0x02f000061900
(81)   State = 0x63dcd0da612cc979e1e81830c6aee80b
(81)   Message-Authenticator = 0xd79ff1e89add3de62d1faba0746bfe45
(81) Restoring &session-state
(81)   &session-state:Framed-MTU = 994
(81)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(81)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(81)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(81)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(81)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(81) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(81)   authorize {
(81)     policy filter_username {
(81)       if (&User-Name) {
(81)       if (&User-Name)  -> TRUE
(81)       if (&User-Name)  {
(81)         if (&User-Name =~ / /) {
(81)         if (&User-Name =~ / /)  -> FALSE
(81)         if (&User-Name =~ /@[^@]*@/ ) {
(81)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(81)         if (&User-Name =~ /\.\./ ) {
(81)         if (&User-Name =~ /\.\./ )  -> FALSE
(81)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(81)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(81)         if (&User-Name =~ /\.$/)  {
(81)         if (&User-Name =~ /\.$/)   -> FALSE
(81)         if (&User-Name =~ /@\./)  {
(81)         if (&User-Name =~ /@\./)   -> FALSE
(81)       } # if (&User-Name)  = notfound
(81)     } # policy filter_username = notfound
(81)     [preprocess] = ok
(81)     [chap] = noop
(81)     [mschap] = noop
(81)     [digest] = noop
(81) suffix: Checking for suffix after "@"
(81) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(81) suffix: No such realm "NULL"
(81)     [suffix] = noop
(81) eap: Peer sent EAP Response (code 2) ID 240 length 6
(81) eap: Continuing tunnel setup
(81)     [eap] = ok
(81)   } # authorize = ok
(81) Found Auth-Type = eap
(81) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(81)   authenticate {
(81) eap: Expiring EAP session with state 0x63dcd0da612cc979
(81) eap: Finished EAP session with state 0x63dcd0da612cc979
(81) eap: Previous EAP request found for state 0x63dcd0da612cc979, released from the list
(81) eap: Peer sent packet with method EAP PEAP (25)
(81) eap: Calling submodule eap_peap to process data
(81) eap_peap: (TLS) Peer ACKed our handshake fragment
(81) eap: Sending EAP Request (code 1) ID 241 length 1000
(81) eap: EAP session adding &reply:State = 0x63dcd0da602dc979
(81)     [eap] = handled
(81)   } # authenticate = handled
(81) Using Post-Auth-Type Challenge
(81) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(81)   Challenge { ... } # empty sub-section is ignored
(81) session-state: Saving cached attributes
(81)   Framed-MTU = 994
(81)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(81)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(81)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(81)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(81)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(81) Sent Access-Challenge Id 81 from 127.0.0.1:1812 to 127.0.0.1:33891 length 1064
(81)   EAP-Message = 0x01f103e81940b365595edec634be72466f496c8cad448e057893222e9d9b96fa51c2d84df387dace2b8dd56e85ea1e27ed302547bc22a35b0349ae7075502f1be4a933467c7ec41b12f969f65caf80e82b77b04c1d46756210be2684f027b347debb97d3bca395775660fe2168969187b5d46b43284bb130757803bdfe082cbf44b37353c4f853131bace8ca9c30290a88b1bf0a680004fe308204fa308203e2a003020102021457604ee8762089eef125d540c0bbf0b5a118a4af300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232303134333731355a170d32343032
(81)   Message-Authenticator = 0x00000000000000000000000000000000
(81)   State = 0x63dcd0da602dc979e1e81830c6aee80b
(81) Finished request
Waking up in 4.4 seconds.
(82) Received Access-Request Id 82 from 127.0.0.1:33891 to 127.0.0.1:1812 length 240
(82)   User-Name = "anonymous"
(82)   NAS-IP-Address = 127.0.0.1
(82)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(82)   NAS-Port-Type = Wireless-802.11
(82)   Service-Type = Framed-User
(82)   NAS-Port = 1
(82)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(82)   Connect-Info = "CONNECT 54Mbps 802.11g"
(82)   Acct-Session-Id = "CF9BFBD35CAE8770"
(82)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(82)   WLAN-Pairwise-Cipher = 1027076
(82)   WLAN-Group-Cipher = 1027076
(82)   WLAN-AKM-Suite = 1027073
(82)   WLAN-Group-Mgmt-Cipher = 1027078
(82)   Framed-MTU = 1400
(82)   EAP-Message = 0x02f100061900
(82)   State = 0x63dcd0da602dc979e1e81830c6aee80b
(82)   Message-Authenticator = 0x8f091675dec78b1217a5e69cfff72e6b
(82) Restoring &session-state
(82)   &session-state:Framed-MTU = 994
(82)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(82)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(82)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(82)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(82)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(82) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(82)   authorize {
(82)     policy filter_username {
(82)       if (&User-Name) {
(82)       if (&User-Name)  -> TRUE
(82)       if (&User-Name)  {
(82)         if (&User-Name =~ / /) {
(82)         if (&User-Name =~ / /)  -> FALSE
(82)         if (&User-Name =~ /@[^@]*@/ ) {
(82)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(82)         if (&User-Name =~ /\.\./ ) {
(82)         if (&User-Name =~ /\.\./ )  -> FALSE
(82)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(82)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(82)         if (&User-Name =~ /\.$/)  {
(82)         if (&User-Name =~ /\.$/)   -> FALSE
(82)         if (&User-Name =~ /@\./)  {
(82)         if (&User-Name =~ /@\./)   -> FALSE
(82)       } # if (&User-Name)  = notfound
(82)     } # policy filter_username = notfound
(82)     [preprocess] = ok
(82)     [chap] = noop
(82)     [mschap] = noop
(82)     [digest] = noop
(82) suffix: Checking for suffix after "@"
(82) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(82) suffix: No such realm "NULL"
(82)     [suffix] = noop
(82) eap: Peer sent EAP Response (code 2) ID 241 length 6
(82) eap: Continuing tunnel setup
(82)     [eap] = ok
(82)   } # authorize = ok
(82) Found Auth-Type = eap
(82) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(82)   authenticate {
(82) eap: Expiring EAP session with state 0x63dcd0da602dc979
(82) eap: Finished EAP session with state 0x63dcd0da602dc979
(82) eap: Previous EAP request found for state 0x63dcd0da602dc979, released from the list
(82) eap: Peer sent packet with method EAP PEAP (25)
(82) eap: Calling submodule eap_peap to process data
(82) eap_peap: (TLS) Peer ACKed our handshake fragment
(82) eap: Sending EAP Request (code 1) ID 242 length 750
(82) eap: EAP session adding &reply:State = 0x63dcd0da672ec979
(82)     [eap] = handled
(82)   } # authenticate = handled
(82) Using Post-Auth-Type Challenge
(82) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(82)   Challenge { ... } # empty sub-section is ignored
(82) session-state: Saving cached attributes
(82)   Framed-MTU = 994
(82)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(82)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(82)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(82)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(82)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(82) Sent Access-Challenge Id 82 from 127.0.0.1:1812 to 127.0.0.1:33891 length 812
(82)   EAP-Message = 0x01f202ee1900161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479821457604ee8762089eef125d540c0bbf0b5a118a4af300f0603551d130101ff040530030101ff30360603551d1f042f302d302ba029a0278625687474703a2f2f7777772e6578616d706c652e6f72672f6578616d706c655f63612e63726c300d06092a864886f70d01010b05000382010100a38f6633d2e2daf953e93089c5b4a66c9abe99620e270f6120051d2195bb6972966c6b98bc7cb21016f89ec601899088e642d40ac9f4ac816aecd5c65482432b5385e04b9bdf7129b175bb275e6021db0725fccea1f8daeb4488f004dfe73aee302570804c93d471bdfc1175c9cd6b7e16a895981dd2e189f5e3d482de9e2ed67b800e000fc33fc1d505bef9840b6037ebb7e9d090a4dbf93ef5dc3a9c956c4f17bc65b21468466551d3e57e331cdcc6dfb1f7279eda22b92b9d6875ae09efa1738980
(82)   Message-Authenticator = 0x00000000000000000000000000000000
(82)   State = 0x63dcd0da672ec979e1e81830c6aee80b
(82) Finished request
Waking up in 4.0 seconds.
(83) Received Access-Request Id 83 from 127.0.0.1:33891 to 127.0.0.1:1812 length 251
(83)   User-Name = "anonymous"
(83)   NAS-IP-Address = 127.0.0.1
(83)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(83)   NAS-Port-Type = Wireless-802.11
(83)   Service-Type = Framed-User
(83)   NAS-Port = 1
(83)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(83)   Connect-Info = "CONNECT 54Mbps 802.11g"
(83)   Acct-Session-Id = "CF9BFBD35CAE8770"
(83)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(83)   WLAN-Pairwise-Cipher = 1027076
(83)   WLAN-Group-Cipher = 1027076
(83)   WLAN-AKM-Suite = 1027073
(83)   WLAN-Group-Mgmt-Cipher = 1027078
(83)   Framed-MTU = 1400
(83)   EAP-Message = 0x02f2001119800000000715030300020230
(83)   State = 0x63dcd0da672ec979e1e81830c6aee80b
(83)   Message-Authenticator = 0x583814879b129d63d698a95a878eabe1
(83) Restoring &session-state
(83)   &session-state:Framed-MTU = 994
(83)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(83)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(83)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(83)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(83)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(83) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(83)   authorize {
(83)     policy filter_username {
(83)       if (&User-Name) {
(83)       if (&User-Name)  -> TRUE
(83)       if (&User-Name)  {
(83)         if (&User-Name =~ / /) {
(83)         if (&User-Name =~ / /)  -> FALSE
(83)         if (&User-Name =~ /@[^@]*@/ ) {
(83)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(83)         if (&User-Name =~ /\.\./ ) {
(83)         if (&User-Name =~ /\.\./ )  -> FALSE
(83)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(83)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(83)         if (&User-Name =~ /\.$/)  {
(83)         if (&User-Name =~ /\.$/)   -> FALSE
(83)         if (&User-Name =~ /@\./)  {
(83)         if (&User-Name =~ /@\./)   -> FALSE
(83)       } # if (&User-Name)  = notfound
(83)     } # policy filter_username = notfound
(83)     [preprocess] = ok
(83)     [chap] = noop
(83)     [mschap] = noop
(83)     [digest] = noop
(83) suffix: Checking for suffix after "@"
(83) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(83) suffix: No such realm "NULL"
(83)     [suffix] = noop
(83) eap: Peer sent EAP Response (code 2) ID 242 length 17
(83) eap: Continuing tunnel setup
(83)     [eap] = ok
(83)   } # authorize = ok
(83) Found Auth-Type = eap
(83) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(83)   authenticate {
(83) eap: Expiring EAP session with state 0x63dcd0da672ec979
(83) eap: Finished EAP session with state 0x63dcd0da672ec979
(83) eap: Previous EAP request found for state 0x63dcd0da672ec979, released from the list
(83) eap: Peer sent packet with method EAP PEAP (25)
(83) eap: Calling submodule eap_peap to process data
(83) eap_peap: (TLS) EAP Peer says that the final record size will be 7 bytes
(83) eap_peap: (TLS) EAP Got all data (7 bytes)
(83) eap_peap: (TLS) recv TLS 1.2 Alert, fatal unknown_ca
(83) eap_peap: (TLS) The client is informing us that it does not recognize the CA used to issue the server certificate.  Please update the client so that it knows about the CA.
(83) eap_peap: ERROR: (TLS) Alert read:fatal:unknown CA
(83) eap_peap: (TLS) Server : Need to read more data: error
(83) eap_peap: ERROR: (TLS) Failed reading from OpenSSL: error:0A000418:SSL routines::tlsv1 alert unknown ca
(83) eap_peap: (TLS) In Handshake Phase
(83) eap_peap: (TLS) Application data.
(83) eap_peap: ERROR: (TLS) Cannot continue, as the peer is misbehaving.
(83) eap_peap: ERROR: [eaptls process] = fail
(83) eap: ERROR: Failed continuing EAP PEAP (25) session.  EAP sub-module failed
(83) eap: Sending EAP Failure (code 4) ID 242 length 4
(83) eap: Failed in EAP select
(83)     [eap] = invalid
(83)   } # authenticate = invalid
(83) Failed to authenticate the user
(83) Using Post-Auth-Type Reject
(83) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(83)   Post-Auth-Type REJECT {
(83) attr_filter.access_reject: EXPAND %{User-Name}
(83) attr_filter.access_reject:    --> anonymous
(83) attr_filter.access_reject: Matched entry DEFAULT at line 11
(83)     [attr_filter.access_reject] = updated
(83)     [eap] = noop
(83)     policy remove_reply_message_if_eap {
(83)       if (&reply:EAP-Message && &reply:Reply-Message) {
(83)       if (&reply:EAP-Message && &reply:Reply-Message)  -> FALSE
(83)       else {
(83)         [noop] = noop
(83)       } # else = noop
(83)     } # policy remove_reply_message_if_eap = noop
(83)   } # Post-Auth-Type REJECT = updated
(83) Delaying response for 1.000000 seconds
Waking up in 0.3 seconds.
Waking up in 0.6 seconds.
(83) Sending delayed response
(83) Sent Access-Reject Id 83 from 127.0.0.1:1812 to 127.0.0.1:33891 length 44
(83)   EAP-Message = 0x04f20004
(83)   Message-Authenticator = 0x00000000000000000000000000000000
Waking up in 2.6 seconds.
(78) Cleaning up request packet ID 78 with timestamp +81 due to cleanup_delay was reached
(79) Cleaning up request packet ID 79 with timestamp +81 due to cleanup_delay was reached
(80) Cleaning up request packet ID 80 with timestamp +81 due to cleanup_delay was reached
Waking up in 0.4 seconds.
(81) Cleaning up request packet ID 81 with timestamp +82 due to cleanup_delay was reached
Waking up in 0.4 seconds.
(84) Received Access-Request Id 84 from 127.0.0.1:33891 to 127.0.0.1:1812 length 230
(84)   User-Name = "anonymous"
(84)   NAS-IP-Address = 127.0.0.1
(84)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(84)   NAS-Port-Type = Wireless-802.11
(84)   Service-Type = Framed-User
(84)   NAS-Port = 1
(84)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(84)   Connect-Info = "CONNECT 54Mbps 802.11g"
(84)   Acct-Session-Id = "CF9BFBD35CAE8770"
(84)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(84)   WLAN-Pairwise-Cipher = 1027076
(84)   WLAN-Group-Cipher = 1027076
(84)   WLAN-AKM-Suite = 1027073
(84)   WLAN-Group-Mgmt-Cipher = 1027078
(84)   Framed-MTU = 1400
(84)   EAP-Message = 0x02f8000e01616e6f6e796d6f7573
(84)   Message-Authenticator = 0xfb08be8ec3b3e0cb88094026e38687bc
(84) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(84)   authorize {
(84)     policy filter_username {
(84)       if (&User-Name) {
(84)       if (&User-Name)  -> TRUE
(84)       if (&User-Name)  {
(84)         if (&User-Name =~ / /) {
(84)         if (&User-Name =~ / /)  -> FALSE
(84)         if (&User-Name =~ /@[^@]*@/ ) {
(84)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(84)         if (&User-Name =~ /\.\./ ) {
(84)         if (&User-Name =~ /\.\./ )  -> FALSE
(84)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(84)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(84)         if (&User-Name =~ /\.$/)  {
(84)         if (&User-Name =~ /\.$/)   -> FALSE
(84)         if (&User-Name =~ /@\./)  {
(84)         if (&User-Name =~ /@\./)   -> FALSE
(84)       } # if (&User-Name)  = notfound
(84)     } # policy filter_username = notfound
(84)     [preprocess] = ok
(84)     [chap] = noop
(84)     [mschap] = noop
(84)     [digest] = noop
(84) suffix: Checking for suffix after "@"
(84) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(84) suffix: No such realm "NULL"
(84)     [suffix] = noop
(84) eap: Peer sent EAP Response (code 2) ID 248 length 14
(84) eap: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
(84)     [eap] = ok
(84)   } # authorize = ok
(84) Found Auth-Type = eap
(84) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(84)   authenticate {
(84) eap: Peer sent packet with method EAP Identity (1)
(84) eap: Calling submodule eap_md5 to process data
(84) eap_md5: Issuing MD5 Challenge
(84) eap: Sending EAP Request (code 1) ID 249 length 22
(84) eap: EAP session adding &reply:State = 0xff771595ff8e1184
(84)     [eap] = handled
(84)   } # authenticate = handled
(84) Using Post-Auth-Type Challenge
(84) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(84)   Challenge { ... } # empty sub-section is ignored
(84) Sent Access-Challenge Id 84 from 127.0.0.1:1812 to 127.0.0.1:33891 length 80
(84)   EAP-Message = 0x01f900160410f53a61d852c0fb3064fc53a608ce61d6
(84)   Message-Authenticator = 0x00000000000000000000000000000000
(84)   State = 0xff771595ff8e118429b810c90373a1db
(84) Finished request
(85) Received Access-Request Id 85 from 127.0.0.1:33891 to 127.0.0.1:1812 length 241
(85)   User-Name = "anonymous"
(85)   NAS-IP-Address = 127.0.0.1
(85)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(85)   NAS-Port-Type = Wireless-802.11
(85)   Service-Type = Framed-User
(85)   NAS-Port = 1
(85)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(85)   Connect-Info = "CONNECT 54Mbps 802.11g"
(85)   Acct-Session-Id = "CF9BFBD35CAE8770"
(85)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(85)   WLAN-Pairwise-Cipher = 1027076
(85)   WLAN-Group-Cipher = 1027076
(85)   WLAN-AKM-Suite = 1027073
(85)   WLAN-Group-Mgmt-Cipher = 1027078
(85)   Framed-MTU = 1400
(85)   EAP-Message = 0x02f90007031915
(85)   State = 0xff771595ff8e118429b810c90373a1db
(85)   Message-Authenticator = 0xd8ab0cb75f7b51ff0d22dc542663c0fc
(85) session-state: No cached attributes
(85) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(85)   authorize {
(85)     policy filter_username {
(85)       if (&User-Name) {
(85)       if (&User-Name)  -> TRUE
(85)       if (&User-Name)  {
(85)         if (&User-Name =~ / /) {
(85)         if (&User-Name =~ / /)  -> FALSE
(85)         if (&User-Name =~ /@[^@]*@/ ) {
(85)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(85)         if (&User-Name =~ /\.\./ ) {
(85)         if (&User-Name =~ /\.\./ )  -> FALSE
(85)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(85)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(85)         if (&User-Name =~ /\.$/)  {
(85)         if (&User-Name =~ /\.$/)   -> FALSE
(85)         if (&User-Name =~ /@\./)  {
(85)         if (&User-Name =~ /@\./)   -> FALSE
(85)       } # if (&User-Name)  = notfound
(85)     } # policy filter_username = notfound
(85)     [preprocess] = ok
(85)     [chap] = noop
(85)     [mschap] = noop
(85)     [digest] = noop
(85) suffix: Checking for suffix after "@"
(85) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(85) suffix: No such realm "NULL"
(85)     [suffix] = noop
(85) eap: Peer sent EAP Response (code 2) ID 249 length 7
(85) eap: No EAP Start, assuming it's an on-going EAP conversation
(85)     [eap] = updated
(85)     [files] = noop
(85)     [expiration] = noop
(85)     [logintime] = noop
Not doing PAP as Auth-Type is already set.
(85)     [pap] = noop
(85)   } # authorize = updated
(85) Found Auth-Type = eap
(85) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(85)   authenticate {
(85) eap: Expiring EAP session with state 0xff771595ff8e1184
(85) eap: Finished EAP session with state 0xff771595ff8e1184
(85) eap: Previous EAP request found for state 0xff771595ff8e1184, released from the list
(85) eap: Peer sent packet with method EAP NAK (3)
(85) eap: Found mutually acceptable type PEAP (25)
(85) eap: Calling submodule eap_peap to process data
(85) eap_peap: (TLS) Initiating new session
(85) eap: Sending EAP Request (code 1) ID 250 length 6
(85) eap: EAP session adding &reply:State = 0xff771595fe8d0c84
(85)     [eap] = handled
(85)   } # authenticate = handled
(85) Using Post-Auth-Type Challenge
(85) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(85)   Challenge { ... } # empty sub-section is ignored
(85) session-state: Saving cached attributes
(85)   Framed-MTU = 994
(85) Sent Access-Challenge Id 85 from 127.0.0.1:1812 to 127.0.0.1:33891 length 64
(85)   EAP-Message = 0x01fa00061920
(85)   Message-Authenticator = 0x00000000000000000000000000000000
(85)   State = 0xff771595fe8d0c8429b810c90373a1db
(85) Finished request
(82) Cleaning up request packet ID 82 with timestamp +82 due to cleanup_delay was reached
Waking up in 0.3 seconds.
(86) Received Access-Request Id 86 from 127.0.0.1:33891 to 127.0.0.1:1812 length 476
(86)   User-Name = "anonymous"
(86)   NAS-IP-Address = 127.0.0.1
(86)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(86)   NAS-Port-Type = Wireless-802.11
(86)   Service-Type = Framed-User
(86)   NAS-Port = 1
(86)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(86)   Connect-Info = "CONNECT 54Mbps 802.11g"
(86)   Acct-Session-Id = "CF9BFBD35CAE8770"
(86)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(86)   WLAN-Pairwise-Cipher = 1027076
(86)   WLAN-Group-Cipher = 1027076
(86)   WLAN-AKM-Suite = 1027073
(86)   WLAN-Group-Mgmt-Cipher = 1027078
(86)   Framed-MTU = 1400
(86)   EAP-Message = 0x02fa00f21980000000e816030300e3010000df030300000092b23d10529564735140b8dd82d66a2f29d25fc475d8d6892e8e9c412f000076c02cc030c0adc024c028c00ac014c0afc05dc061c049c04dc02bc02fc0acc023c027c009c013c0aec05cc060c048c04c009dc09d003d0035c032c02ac00fc02ec026c005c0a1c05fc063c051c04bc04fc03d009cc09c003c002fc031c029c00ec02dc025c004c0a0c05ec062c050c04ac04ec03c00ff01000040000a0010000e001d001700180019001a001b001c000d001600140603050306010501040303030401030102030201000b00020100001600000017000000230000
(86)   State = 0xff771595fe8d0c8429b810c90373a1db
(86)   Message-Authenticator = 0x075af8e4a2ab396cf22f1d2f02dbbb1e
(86) Restoring &session-state
(86)   &session-state:Framed-MTU = 994
(86) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(86)   authorize {
(86)     policy filter_username {
(86)       if (&User-Name) {
(86)       if (&User-Name)  -> TRUE
(86)       if (&User-Name)  {
(86)         if (&User-Name =~ / /) {
(86)         if (&User-Name =~ / /)  -> FALSE
(86)         if (&User-Name =~ /@[^@]*@/ ) {
(86)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(86)         if (&User-Name =~ /\.\./ ) {
(86)         if (&User-Name =~ /\.\./ )  -> FALSE
(86)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(86)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(86)         if (&User-Name =~ /\.$/)  {
(86)         if (&User-Name =~ /\.$/)   -> FALSE
(86)         if (&User-Name =~ /@\./)  {
(86)         if (&User-Name =~ /@\./)   -> FALSE
(86)       } # if (&User-Name)  = notfound
(86)     } # policy filter_username = notfound
(86)     [preprocess] = ok
(86)     [chap] = noop
(86)     [mschap] = noop
(86)     [digest] = noop
(86) suffix: Checking for suffix after "@"
(86) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(86) suffix: No such realm "NULL"
(86)     [suffix] = noop
(86) eap: Peer sent EAP Response (code 2) ID 250 length 242
(86) eap: Continuing tunnel setup
(86)     [eap] = ok
(86)   } # authorize = ok
(86) Found Auth-Type = eap
(86) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(86)   authenticate {
(86) eap: Expiring EAP session with state 0xff771595fe8d0c84
(86) eap: Finished EAP session with state 0xff771595fe8d0c84
(86) eap: Previous EAP request found for state 0xff771595fe8d0c84, released from the list
(86) eap: Peer sent packet with method EAP PEAP (25)
(86) eap: Calling submodule eap_peap to process data
(86) eap_peap: (TLS) EAP Peer says that the final record size will be 232 bytes
(86) eap_peap: (TLS) EAP Got all data (232 bytes)
(86) eap_peap: (TLS) Handshake state - before SSL initialization
(86) eap_peap: (TLS) Handshake state - Server before SSL initialization
(86) eap_peap: (TLS) Handshake state - Server before SSL initialization
(86) eap_peap: (TLS) recv TLS 1.3 Handshake, ClientHello
(86) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read client hello
(86) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHello
(86) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server hello
(86) eap_peap: (TLS) send TLS 1.2 Handshake, Certificate
(86) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write certificate
(86) eap_peap: (TLS) send TLS 1.2 Handshake, ServerKeyExchange
(86) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write key exchange
(86) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHelloDone
(86) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server done
(86) eap_peap: (TLS) Server : Need to read more data: SSLv3/TLS write server done
(86) eap_peap: (TLS) In Handshake Phase
(86) eap: Sending EAP Request (code 1) ID 251 length 1004
(86) eap: EAP session adding &reply:State = 0xff771595fd8c0c84
(86)     [eap] = handled
(86)   } # authenticate = handled
(86) Using Post-Auth-Type Challenge
(86) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(86)   Challenge { ... } # empty sub-section is ignored
(86) session-state: Saving cached attributes
(86)   Framed-MTU = 994
(86)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(86)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(86)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(86)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(86)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(86) Sent Access-Challenge Id 86 from 127.0.0.1:1812 to 127.0.0.1:33891 length 1068
(86)   EAP-Message = 0x01fb03ec19c000000aac160303003d020000390303789fa0503100a184bbdf0be4543df662774b9a654f3394b654691d7393ced7ed00c030000011ff01000100000b00040300010200170000160303092b0b0009270009240004203082041c30820304a003020102020101300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232303134333732315a170d3234303231383134333732315a307c310b3009060355040613024652310f300d06035504080c0652616469757331153013060355040a0c0c4578616d706c6520496e632e3123302106035504030c1a4578616d70
(86)   Message-Authenticator = 0x00000000000000000000000000000000
(86)   State = 0xff771595fd8c0c8429b810c90373a1db
(86) Finished request
Waking up in 0.3 seconds.
(83) Cleaning up request packet ID 83 with timestamp +83 due to cleanup_delay was reached
Waking up in 4.5 seconds.
(87) Received Access-Request Id 87 from 127.0.0.1:33891 to 127.0.0.1:1812 length 240
(87)   User-Name = "anonymous"
(87)   NAS-IP-Address = 127.0.0.1
(87)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(87)   NAS-Port-Type = Wireless-802.11
(87)   Service-Type = Framed-User
(87)   NAS-Port = 1
(87)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(87)   Connect-Info = "CONNECT 54Mbps 802.11g"
(87)   Acct-Session-Id = "CF9BFBD35CAE8770"
(87)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(87)   WLAN-Pairwise-Cipher = 1027076
(87)   WLAN-Group-Cipher = 1027076
(87)   WLAN-AKM-Suite = 1027073
(87)   WLAN-Group-Mgmt-Cipher = 1027078
(87)   Framed-MTU = 1400
(87)   EAP-Message = 0x02fb00061900
(87)   State = 0xff771595fd8c0c8429b810c90373a1db
(87)   Message-Authenticator = 0x6edb5e6548c5fa702eabe1d62a13b57d
(87) Restoring &session-state
(87)   &session-state:Framed-MTU = 994
(87)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(87)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(87)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(87)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(87)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(87) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(87)   authorize {
(87)     policy filter_username {
(87)       if (&User-Name) {
(87)       if (&User-Name)  -> TRUE
(87)       if (&User-Name)  {
(87)         if (&User-Name =~ / /) {
(87)         if (&User-Name =~ / /)  -> FALSE
(87)         if (&User-Name =~ /@[^@]*@/ ) {
(87)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(87)         if (&User-Name =~ /\.\./ ) {
(87)         if (&User-Name =~ /\.\./ )  -> FALSE
(87)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(87)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(87)         if (&User-Name =~ /\.$/)  {
(87)         if (&User-Name =~ /\.$/)   -> FALSE
(87)         if (&User-Name =~ /@\./)  {
(87)         if (&User-Name =~ /@\./)   -> FALSE
(87)       } # if (&User-Name)  = notfound
(87)     } # policy filter_username = notfound
(87)     [preprocess] = ok
(87)     [chap] = noop
(87)     [mschap] = noop
(87)     [digest] = noop
(87) suffix: Checking for suffix after "@"
(87) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(87) suffix: No such realm "NULL"
(87)     [suffix] = noop
(87) eap: Peer sent EAP Response (code 2) ID 251 length 6
(87) eap: Continuing tunnel setup
(87)     [eap] = ok
(87)   } # authorize = ok
(87) Found Auth-Type = eap
(87) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(87)   authenticate {
(87) eap: Expiring EAP session with state 0xff771595fd8c0c84
(87) eap: Finished EAP session with state 0xff771595fd8c0c84
(87) eap: Previous EAP request found for state 0xff771595fd8c0c84, released from the list
(87) eap: Peer sent packet with method EAP PEAP (25)
(87) eap: Calling submodule eap_peap to process data
(87) eap_peap: (TLS) Peer ACKed our handshake fragment
(87) eap: Sending EAP Request (code 1) ID 252 length 1000
(87) eap: EAP session adding &reply:State = 0xff771595fc8b0c84
(87)     [eap] = handled
(87)   } # authenticate = handled
(87) Using Post-Auth-Type Challenge
(87) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(87)   Challenge { ... } # empty sub-section is ignored
(87) session-state: Saving cached attributes
(87)   Framed-MTU = 994
(87)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(87)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(87)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(87)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(87)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(87) Sent Access-Challenge Id 87 from 127.0.0.1:1812 to 127.0.0.1:33891 length 1064
(87)   EAP-Message = 0x01fc03e81940b365595edec634be72466f496c8cad448e057893222e9d9b96fa51c2d84df387dace2b8dd56e85ea1e27ed302547bc22a35b0349ae7075502f1be4a933467c7ec41b12f969f65caf80e82b77b04c1d46756210be2684f027b347debb97d3bca395775660fe2168969187b5d46b43284bb130757803bdfe082cbf44b37353c4f853131bace8ca9c30290a88b1bf0a680004fe308204fa308203e2a003020102021457604ee8762089eef125d540c0bbf0b5a118a4af300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232303134333731355a170d32343032
(87)   Message-Authenticator = 0x00000000000000000000000000000000
(87)   State = 0xff771595fc8b0c8429b810c90373a1db
(87) Finished request
Waking up in 4.4 seconds.
(88) Received Access-Request Id 88 from 127.0.0.1:33891 to 127.0.0.1:1812 length 240
(88)   User-Name = "anonymous"
(88)   NAS-IP-Address = 127.0.0.1
(88)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(88)   NAS-Port-Type = Wireless-802.11
(88)   Service-Type = Framed-User
(88)   NAS-Port = 1
(88)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(88)   Connect-Info = "CONNECT 54Mbps 802.11g"
(88)   Acct-Session-Id = "CF9BFBD35CAE8770"
(88)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(88)   WLAN-Pairwise-Cipher = 1027076
(88)   WLAN-Group-Cipher = 1027076
(88)   WLAN-AKM-Suite = 1027073
(88)   WLAN-Group-Mgmt-Cipher = 1027078
(88)   Framed-MTU = 1400
(88)   EAP-Message = 0x02fc00061900
(88)   State = 0xff771595fc8b0c8429b810c90373a1db
(88)   Message-Authenticator = 0x7b565b97390f813157177d4f79f7f295
(88) Restoring &session-state
(88)   &session-state:Framed-MTU = 994
(88)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(88)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(88)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(88)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(88)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(88) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(88)   authorize {
(88)     policy filter_username {
(88)       if (&User-Name) {
(88)       if (&User-Name)  -> TRUE
(88)       if (&User-Name)  {
(88)         if (&User-Name =~ / /) {
(88)         if (&User-Name =~ / /)  -> FALSE
(88)         if (&User-Name =~ /@[^@]*@/ ) {
(88)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(88)         if (&User-Name =~ /\.\./ ) {
(88)         if (&User-Name =~ /\.\./ )  -> FALSE
(88)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(88)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(88)         if (&User-Name =~ /\.$/)  {
(88)         if (&User-Name =~ /\.$/)   -> FALSE
(88)         if (&User-Name =~ /@\./)  {
(88)         if (&User-Name =~ /@\./)   -> FALSE
(88)       } # if (&User-Name)  = notfound
(88)     } # policy filter_username = notfound
(88)     [preprocess] = ok
(88)     [chap] = noop
(88)     [mschap] = noop
(88)     [digest] = noop
(88) suffix: Checking for suffix after "@"
(88) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(88) suffix: No such realm "NULL"
(88)     [suffix] = noop
(88) eap: Peer sent EAP Response (code 2) ID 252 length 6
(88) eap: Continuing tunnel setup
(88)     [eap] = ok
(88)   } # authorize = ok
(88) Found Auth-Type = eap
(88) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(88)   authenticate {
(88) eap: Expiring EAP session with state 0xff771595fc8b0c84
(88) eap: Finished EAP session with state 0xff771595fc8b0c84
(88) eap: Previous EAP request found for state 0xff771595fc8b0c84, released from the list
(88) eap: Peer sent packet with method EAP PEAP (25)
(88) eap: Calling submodule eap_peap to process data
(88) eap_peap: (TLS) Peer ACKed our handshake fragment
(88) eap: Sending EAP Request (code 1) ID 253 length 750
(88) eap: EAP session adding &reply:State = 0xff771595fb8a0c84
(88)     [eap] = handled
(88)   } # authenticate = handled
(88) Using Post-Auth-Type Challenge
(88) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(88)   Challenge { ... } # empty sub-section is ignored
(88) session-state: Saving cached attributes
(88)   Framed-MTU = 994
(88)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(88)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(88)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(88)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(88)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(88) Sent Access-Challenge Id 88 from 127.0.0.1:1812 to 127.0.0.1:33891 length 812
(88)   EAP-Message = 0x01fd02ee1900161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479821457604ee8762089eef125d540c0bbf0b5a118a4af300f0603551d130101ff040530030101ff30360603551d1f042f302d302ba029a0278625687474703a2f2f7777772e6578616d706c652e6f72672f6578616d706c655f63612e63726c300d06092a864886f70d01010b05000382010100a38f6633d2e2daf953e93089c5b4a66c9abe99620e270f6120051d2195bb6972966c6b98bc7cb21016f89ec601899088e642d40ac9f4ac816aecd5c65482432b5385e04b9bdf7129b175bb275e6021db0725fccea1f8daeb4488f004dfe73aee302570804c93d471bdfc1175c9cd6b7e16a895981dd2e189f5e3d482de9e2ed67b800e000fc33fc1d505bef9840b6037ebb7e9d090a4dbf93ef5dc3a9c956c4f17bc65b21468466551d3e57e331cdcc6dfb1f7279eda22b92b9d6875ae09efa1738980
(88)   Message-Authenticator = 0x00000000000000000000000000000000
(88)   State = 0xff771595fb8a0c8429b810c90373a1db
(88) Finished request
Waking up in 4.0 seconds.
(89) Received Access-Request Id 89 from 127.0.0.1:33891 to 127.0.0.1:1812 length 251
(89)   User-Name = "anonymous"
(89)   NAS-IP-Address = 127.0.0.1
(89)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(89)   NAS-Port-Type = Wireless-802.11
(89)   Service-Type = Framed-User
(89)   NAS-Port = 1
(89)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(89)   Connect-Info = "CONNECT 54Mbps 802.11g"
(89)   Acct-Session-Id = "CF9BFBD35CAE8770"
(89)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(89)   WLAN-Pairwise-Cipher = 1027076
(89)   WLAN-Group-Cipher = 1027076
(89)   WLAN-AKM-Suite = 1027073
(89)   WLAN-Group-Mgmt-Cipher = 1027078
(89)   Framed-MTU = 1400
(89)   EAP-Message = 0x02fd001119800000000715030300020230
(89)   State = 0xff771595fb8a0c8429b810c90373a1db
(89)   Message-Authenticator = 0xc00e00764057eadd443d57795c48eb03
(89) Restoring &session-state
(89)   &session-state:Framed-MTU = 994
(89)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(89)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(89)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(89)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(89)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(89) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(89)   authorize {
(89)     policy filter_username {
(89)       if (&User-Name) {
(89)       if (&User-Name)  -> TRUE
(89)       if (&User-Name)  {
(89)         if (&User-Name =~ / /) {
(89)         if (&User-Name =~ / /)  -> FALSE
(89)         if (&User-Name =~ /@[^@]*@/ ) {
(89)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(89)         if (&User-Name =~ /\.\./ ) {
(89)         if (&User-Name =~ /\.\./ )  -> FALSE
(89)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(89)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(89)         if (&User-Name =~ /\.$/)  {
(89)         if (&User-Name =~ /\.$/)   -> FALSE
(89)         if (&User-Name =~ /@\./)  {
(89)         if (&User-Name =~ /@\./)   -> FALSE
(89)       } # if (&User-Name)  = notfound
(89)     } # policy filter_username = notfound
(89)     [preprocess] = ok
(89)     [chap] = noop
(89)     [mschap] = noop
(89)     [digest] = noop
(89) suffix: Checking for suffix after "@"
(89) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(89) suffix: No such realm "NULL"
(89)     [suffix] = noop
(89) eap: Peer sent EAP Response (code 2) ID 253 length 17
(89) eap: Continuing tunnel setup
(89)     [eap] = ok
(89)   } # authorize = ok
(89) Found Auth-Type = eap
(89) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(89)   authenticate {
(89) eap: Expiring EAP session with state 0xff771595fb8a0c84
(89) eap: Finished EAP session with state 0xff771595fb8a0c84
(89) eap: Previous EAP request found for state 0xff771595fb8a0c84, released from the list
(89) eap: Peer sent packet with method EAP PEAP (25)
(89) eap: Calling submodule eap_peap to process data
(89) eap_peap: (TLS) EAP Peer says that the final record size will be 7 bytes
(89) eap_peap: (TLS) EAP Got all data (7 bytes)
(89) eap_peap: (TLS) recv TLS 1.2 Alert, fatal unknown_ca
(89) eap_peap: (TLS) The client is informing us that it does not recognize the CA used to issue the server certificate.  Please update the client so that it knows about the CA.
(89) eap_peap: ERROR: (TLS) Alert read:fatal:unknown CA
(89) eap_peap: (TLS) Server : Need to read more data: error
(89) eap_peap: ERROR: (TLS) Failed reading from OpenSSL: error:0A000418:SSL routines::tlsv1 alert unknown ca
(89) eap_peap: (TLS) In Handshake Phase
(89) eap_peap: (TLS) Application data.
(89) eap_peap: ERROR: (TLS) Cannot continue, as the peer is misbehaving.
(89) eap_peap: ERROR: [eaptls process] = fail
(89) eap: ERROR: Failed continuing EAP PEAP (25) session.  EAP sub-module failed
(89) eap: Sending EAP Failure (code 4) ID 253 length 4
(89) eap: Failed in EAP select
(89)     [eap] = invalid
(89)   } # authenticate = invalid
(89) Failed to authenticate the user
(89) Using Post-Auth-Type Reject
(89) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(89)   Post-Auth-Type REJECT {
(89) attr_filter.access_reject: EXPAND %{User-Name}
(89) attr_filter.access_reject:    --> anonymous
(89) attr_filter.access_reject: Matched entry DEFAULT at line 11
(89)     [attr_filter.access_reject] = updated
(89)     [eap] = noop
(89)     policy remove_reply_message_if_eap {
(89)       if (&reply:EAP-Message && &reply:Reply-Message) {
(89)       if (&reply:EAP-Message && &reply:Reply-Message)  -> FALSE
(89)       else {
(89)         [noop] = noop
(89)       } # else = noop
(89)     } # policy remove_reply_message_if_eap = noop
(89)   } # Post-Auth-Type REJECT = updated
(89) Delaying response for 1.000000 seconds
Waking up in 0.3 seconds.
Waking up in 0.6 seconds.
(89) Sending delayed response
(89) Sent Access-Reject Id 89 from 127.0.0.1:1812 to 127.0.0.1:33891 length 44
(89)   EAP-Message = 0x04fd0004
(89)   Message-Authenticator = 0x00000000000000000000000000000000
Waking up in 2.6 seconds.
(84) Cleaning up request packet ID 84 with timestamp +87 due to cleanup_delay was reached
(85) Cleaning up request packet ID 85 with timestamp +87 due to cleanup_delay was reached
(86) Cleaning up request packet ID 86 with timestamp +87 due to cleanup_delay was reached
Waking up in 0.4 seconds.
(87) Cleaning up request packet ID 87 with timestamp +88 due to cleanup_delay was reached
Waking up in 0.4 seconds.
(90) Received Access-Request Id 90 from 127.0.0.1:33891 to 127.0.0.1:1812 length 230
(90)   User-Name = "anonymous"
(90)   NAS-IP-Address = 127.0.0.1
(90)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(90)   NAS-Port-Type = Wireless-802.11
(90)   Service-Type = Framed-User
(90)   NAS-Port = 1
(90)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(90)   Connect-Info = "CONNECT 54Mbps 802.11g"
(90)   Acct-Session-Id = "CF9BFBD35CAE8770"
(90)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(90)   WLAN-Pairwise-Cipher = 1027076
(90)   WLAN-Group-Cipher = 1027076
(90)   WLAN-AKM-Suite = 1027073
(90)   WLAN-Group-Mgmt-Cipher = 1027078
(90)   Framed-MTU = 1400
(90)   EAP-Message = 0x02d5000e01616e6f6e796d6f7573
(90)   Message-Authenticator = 0xc9db3520427ca661d9b89927da0cfc59
(90) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(90)   authorize {
(90)     policy filter_username {
(90)       if (&User-Name) {
(90)       if (&User-Name)  -> TRUE
(90)       if (&User-Name)  {
(90)         if (&User-Name =~ / /) {
(90)         if (&User-Name =~ / /)  -> FALSE
(90)         if (&User-Name =~ /@[^@]*@/ ) {
(90)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(90)         if (&User-Name =~ /\.\./ ) {
(90)         if (&User-Name =~ /\.\./ )  -> FALSE
(90)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(90)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(90)         if (&User-Name =~ /\.$/)  {
(90)         if (&User-Name =~ /\.$/)   -> FALSE
(90)         if (&User-Name =~ /@\./)  {
(90)         if (&User-Name =~ /@\./)   -> FALSE
(90)       } # if (&User-Name)  = notfound
(90)     } # policy filter_username = notfound
(90)     [preprocess] = ok
(90)     [chap] = noop
(90)     [mschap] = noop
(90)     [digest] = noop
(90) suffix: Checking for suffix after "@"
(90) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(90) suffix: No such realm "NULL"
(90)     [suffix] = noop
(90) eap: Peer sent EAP Response (code 2) ID 213 length 14
(90) eap: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
(90)     [eap] = ok
(90)   } # authorize = ok
(90) Found Auth-Type = eap
(90) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(90)   authenticate {
(90) eap: Peer sent packet with method EAP Identity (1)
(90) eap: Calling submodule eap_md5 to process data
(90) eap_md5: Issuing MD5 Challenge
(90) eap: Sending EAP Request (code 1) ID 214 length 22
(90) eap: EAP session adding &reply:State = 0x0bd7180a0b011c84
(90)     [eap] = handled
(90)   } # authenticate = handled
(90) Using Post-Auth-Type Challenge
(90) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(90)   Challenge { ... } # empty sub-section is ignored
(90) Sent Access-Challenge Id 90 from 127.0.0.1:1812 to 127.0.0.1:33891 length 80
(90)   EAP-Message = 0x01d600160410d978981e73be7ef87257465e13fb3831
(90)   Message-Authenticator = 0x00000000000000000000000000000000
(90)   State = 0x0bd7180a0b011c8458273ec60e663a63
(90) Finished request
(91) Received Access-Request Id 91 from 127.0.0.1:33891 to 127.0.0.1:1812 length 241
(91)   User-Name = "anonymous"
(91)   NAS-IP-Address = 127.0.0.1
(91)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(91)   NAS-Port-Type = Wireless-802.11
(91)   Service-Type = Framed-User
(91)   NAS-Port = 1
(91)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(91)   Connect-Info = "CONNECT 54Mbps 802.11g"
(91)   Acct-Session-Id = "CF9BFBD35CAE8770"
(91)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(91)   WLAN-Pairwise-Cipher = 1027076
(91)   WLAN-Group-Cipher = 1027076
(91)   WLAN-AKM-Suite = 1027073
(91)   WLAN-Group-Mgmt-Cipher = 1027078
(91)   Framed-MTU = 1400
(91)   EAP-Message = 0x02d60007031915
(91)   State = 0x0bd7180a0b011c8458273ec60e663a63
(91)   Message-Authenticator = 0x01e4f9bbfc8ed4afc0f4111b399a00e6
(91) session-state: No cached attributes
(91) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(91)   authorize {
(91)     policy filter_username {
(91)       if (&User-Name) {
(91)       if (&User-Name)  -> TRUE
(91)       if (&User-Name)  {
(91)         if (&User-Name =~ / /) {
(91)         if (&User-Name =~ / /)  -> FALSE
(91)         if (&User-Name =~ /@[^@]*@/ ) {
(91)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(91)         if (&User-Name =~ /\.\./ ) {
(91)         if (&User-Name =~ /\.\./ )  -> FALSE
(91)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(91)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(91)         if (&User-Name =~ /\.$/)  {
(91)         if (&User-Name =~ /\.$/)   -> FALSE
(91)         if (&User-Name =~ /@\./)  {
(91)         if (&User-Name =~ /@\./)   -> FALSE
(91)       } # if (&User-Name)  = notfound
(91)     } # policy filter_username = notfound
(91)     [preprocess] = ok
(91)     [chap] = noop
(91)     [mschap] = noop
(91)     [digest] = noop
(91) suffix: Checking for suffix after "@"
(91) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(91) suffix: No such realm "NULL"
(91)     [suffix] = noop
(91) eap: Peer sent EAP Response (code 2) ID 214 length 7
(91) eap: No EAP Start, assuming it's an on-going EAP conversation
(91)     [eap] = updated
(91)     [files] = noop
(91)     [expiration] = noop
(91)     [logintime] = noop
Not doing PAP as Auth-Type is already set.
(91)     [pap] = noop
(91)   } # authorize = updated
(91) Found Auth-Type = eap
(91) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(91)   authenticate {
(91) eap: Expiring EAP session with state 0x0bd7180a0b011c84
(91) eap: Finished EAP session with state 0x0bd7180a0b011c84
(91) eap: Previous EAP request found for state 0x0bd7180a0b011c84, released from the list
(91) eap: Peer sent packet with method EAP NAK (3)
(91) eap: Found mutually acceptable type PEAP (25)
(91) eap: Calling submodule eap_peap to process data
(91) eap_peap: (TLS) Initiating new session
(91) eap: Sending EAP Request (code 1) ID 215 length 6
(91) eap: EAP session adding &reply:State = 0x0bd7180a0a000184
(91)     [eap] = handled
(91)   } # authenticate = handled
(91) Using Post-Auth-Type Challenge
(91) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(91)   Challenge { ... } # empty sub-section is ignored
(91) session-state: Saving cached attributes
(91)   Framed-MTU = 994
(91) Sent Access-Challenge Id 91 from 127.0.0.1:1812 to 127.0.0.1:33891 length 64
(91)   EAP-Message = 0x01d700061920
(91)   Message-Authenticator = 0x00000000000000000000000000000000
(91)   State = 0x0bd7180a0a00018458273ec60e663a63
(91) Finished request
(88) Cleaning up request packet ID 88 with timestamp +88 due to cleanup_delay was reached
Waking up in 0.3 seconds.
(92) Received Access-Request Id 92 from 127.0.0.1:33891 to 127.0.0.1:1812 length 476
(92)   User-Name = "anonymous"
(92)   NAS-IP-Address = 127.0.0.1
(92)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(92)   NAS-Port-Type = Wireless-802.11
(92)   Service-Type = Framed-User
(92)   NAS-Port = 1
(92)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(92)   Connect-Info = "CONNECT 54Mbps 802.11g"
(92)   Acct-Session-Id = "CF9BFBD35CAE8770"
(92)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(92)   WLAN-Pairwise-Cipher = 1027076
(92)   WLAN-Group-Cipher = 1027076
(92)   WLAN-AKM-Suite = 1027073
(92)   WLAN-Group-Mgmt-Cipher = 1027078
(92)   Framed-MTU = 1400
(92)   EAP-Message = 0x02d700f21980000000e816030300e3010000df03030000009880c80cfa60c2cd87079477c63e154c61746a458d44b489319b4dd3e8000076c02cc030c0adc024c028c00ac014c0afc05dc061c049c04dc02bc02fc0acc023c027c009c013c0aec05cc060c048c04c009dc09d003d0035c032c02ac00fc02ec026c005c0a1c05fc063c051c04bc04fc03d009cc09c003c002fc031c029c00ec02dc025c004c0a0c05ec062c050c04ac04ec03c00ff01000040000a0010000e001d001700180019001a001b001c000d001600140603050306010501040303030401030102030201000b00020100001600000017000000230000
(92)   State = 0x0bd7180a0a00018458273ec60e663a63
(92)   Message-Authenticator = 0x896236d7dd825c3297b5866f0b529b6e
(92) Restoring &session-state
(92)   &session-state:Framed-MTU = 994
(92) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(92)   authorize {
(92)     policy filter_username {
(92)       if (&User-Name) {
(92)       if (&User-Name)  -> TRUE
(92)       if (&User-Name)  {
(92)         if (&User-Name =~ / /) {
(92)         if (&User-Name =~ / /)  -> FALSE
(92)         if (&User-Name =~ /@[^@]*@/ ) {
(92)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(92)         if (&User-Name =~ /\.\./ ) {
(92)         if (&User-Name =~ /\.\./ )  -> FALSE
(92)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(92)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(92)         if (&User-Name =~ /\.$/)  {
(92)         if (&User-Name =~ /\.$/)   -> FALSE
(92)         if (&User-Name =~ /@\./)  {
(92)         if (&User-Name =~ /@\./)   -> FALSE
(92)       } # if (&User-Name)  = notfound
(92)     } # policy filter_username = notfound
(92)     [preprocess] = ok
(92)     [chap] = noop
(92)     [mschap] = noop
(92)     [digest] = noop
(92) suffix: Checking for suffix after "@"
(92) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(92) suffix: No such realm "NULL"
(92)     [suffix] = noop
(92) eap: Peer sent EAP Response (code 2) ID 215 length 242
(92) eap: Continuing tunnel setup
(92)     [eap] = ok
(92)   } # authorize = ok
(92) Found Auth-Type = eap
(92) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(92)   authenticate {
(92) eap: Expiring EAP session with state 0x0bd7180a0a000184
(92) eap: Finished EAP session with state 0x0bd7180a0a000184
(92) eap: Previous EAP request found for state 0x0bd7180a0a000184, released from the list
(92) eap: Peer sent packet with method EAP PEAP (25)
(92) eap: Calling submodule eap_peap to process data
(92) eap_peap: (TLS) EAP Peer says that the final record size will be 232 bytes
(92) eap_peap: (TLS) EAP Got all data (232 bytes)
(92) eap_peap: (TLS) Handshake state - before SSL initialization
(92) eap_peap: (TLS) Handshake state - Server before SSL initialization
(92) eap_peap: (TLS) Handshake state - Server before SSL initialization
(92) eap_peap: (TLS) recv TLS 1.3 Handshake, ClientHello
(92) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read client hello
(92) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHello
(92) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server hello
(92) eap_peap: (TLS) send TLS 1.2 Handshake, Certificate
(92) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write certificate
(92) eap_peap: (TLS) send TLS 1.2 Handshake, ServerKeyExchange
(92) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write key exchange
(92) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHelloDone
(92) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server done
(92) eap_peap: (TLS) Server : Need to read more data: SSLv3/TLS write server done
(92) eap_peap: (TLS) In Handshake Phase
(92) eap: Sending EAP Request (code 1) ID 216 length 1004
(92) eap: EAP session adding &reply:State = 0x0bd7180a090f0184
(92)     [eap] = handled
(92)   } # authenticate = handled
(92) Using Post-Auth-Type Challenge
(92) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(92)   Challenge { ... } # empty sub-section is ignored
(92) session-state: Saving cached attributes
(92)   Framed-MTU = 994
(92)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(92)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(92)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(92)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(92)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(92) Sent Access-Challenge Id 92 from 127.0.0.1:1812 to 127.0.0.1:33891 length 1068
(92)   EAP-Message = 0x01d803ec19c000000aac160303003d0200003903034b9834ab6ad7d8748d690589c143228e7f99c1e2c159ef7b902174fa8d5b9f0b00c030000011ff01000100000b00040300010200170000160303092b0b0009270009240004203082041c30820304a003020102020101300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232303134333732315a170d3234303231383134333732315a307c310b3009060355040613024652310f300d06035504080c0652616469757331153013060355040a0c0c4578616d706c6520496e632e3123302106035504030c1a4578616d70
(92)   Message-Authenticator = 0x00000000000000000000000000000000
(92)   State = 0x0bd7180a090f018458273ec60e663a63
(92) Finished request
Waking up in 0.3 seconds.
(89) Cleaning up request packet ID 89 with timestamp +89 due to cleanup_delay was reached
Waking up in 4.5 seconds.
(93) Received Access-Request Id 93 from 127.0.0.1:33891 to 127.0.0.1:1812 length 240
(93)   User-Name = "anonymous"
(93)   NAS-IP-Address = 127.0.0.1
(93)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(93)   NAS-Port-Type = Wireless-802.11
(93)   Service-Type = Framed-User
(93)   NAS-Port = 1
(93)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(93)   Connect-Info = "CONNECT 54Mbps 802.11g"
(93)   Acct-Session-Id = "CF9BFBD35CAE8770"
(93)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(93)   WLAN-Pairwise-Cipher = 1027076
(93)   WLAN-Group-Cipher = 1027076
(93)   WLAN-AKM-Suite = 1027073
(93)   WLAN-Group-Mgmt-Cipher = 1027078
(93)   Framed-MTU = 1400
(93)   EAP-Message = 0x02d800061900
(93)   State = 0x0bd7180a090f018458273ec60e663a63
(93)   Message-Authenticator = 0xc522abf47cc760499b7a147ed91dd2d2
(93) Restoring &session-state
(93)   &session-state:Framed-MTU = 994
(93)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(93)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(93)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(93)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(93)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(93) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(93)   authorize {
(93)     policy filter_username {
(93)       if (&User-Name) {
(93)       if (&User-Name)  -> TRUE
(93)       if (&User-Name)  {
(93)         if (&User-Name =~ / /) {
(93)         if (&User-Name =~ / /)  -> FALSE
(93)         if (&User-Name =~ /@[^@]*@/ ) {
(93)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(93)         if (&User-Name =~ /\.\./ ) {
(93)         if (&User-Name =~ /\.\./ )  -> FALSE
(93)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(93)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(93)         if (&User-Name =~ /\.$/)  {
(93)         if (&User-Name =~ /\.$/)   -> FALSE
(93)         if (&User-Name =~ /@\./)  {
(93)         if (&User-Name =~ /@\./)   -> FALSE
(93)       } # if (&User-Name)  = notfound
(93)     } # policy filter_username = notfound
(93)     [preprocess] = ok
(93)     [chap] = noop
(93)     [mschap] = noop
(93)     [digest] = noop
(93) suffix: Checking for suffix after "@"
(93) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(93) suffix: No such realm "NULL"
(93)     [suffix] = noop
(93) eap: Peer sent EAP Response (code 2) ID 216 length 6
(93) eap: Continuing tunnel setup
(93)     [eap] = ok
(93)   } # authorize = ok
(93) Found Auth-Type = eap
(93) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(93)   authenticate {
(93) eap: Expiring EAP session with state 0x0bd7180a090f0184
(93) eap: Finished EAP session with state 0x0bd7180a090f0184
(93) eap: Previous EAP request found for state 0x0bd7180a090f0184, released from the list
(93) eap: Peer sent packet with method EAP PEAP (25)
(93) eap: Calling submodule eap_peap to process data
(93) eap_peap: (TLS) Peer ACKed our handshake fragment
(93) eap: Sending EAP Request (code 1) ID 217 length 1000
(93) eap: EAP session adding &reply:State = 0x0bd7180a080e0184
(93)     [eap] = handled
(93)   } # authenticate = handled
(93) Using Post-Auth-Type Challenge
(93) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(93)   Challenge { ... } # empty sub-section is ignored
(93) session-state: Saving cached attributes
(93)   Framed-MTU = 994
(93)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(93)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(93)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(93)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(93)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(93) Sent Access-Challenge Id 93 from 127.0.0.1:1812 to 127.0.0.1:33891 length 1064
(93)   EAP-Message = 0x01d903e81940b365595edec634be72466f496c8cad448e057893222e9d9b96fa51c2d84df387dace2b8dd56e85ea1e27ed302547bc22a35b0349ae7075502f1be4a933467c7ec41b12f969f65caf80e82b77b04c1d46756210be2684f027b347debb97d3bca395775660fe2168969187b5d46b43284bb130757803bdfe082cbf44b37353c4f853131bace8ca9c30290a88b1bf0a680004fe308204fa308203e2a003020102021457604ee8762089eef125d540c0bbf0b5a118a4af300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232303134333731355a170d32343032
(93)   Message-Authenticator = 0x00000000000000000000000000000000
(93)   State = 0x0bd7180a080e018458273ec60e663a63
(93) Finished request
Waking up in 4.4 seconds.
(94) Received Access-Request Id 94 from 127.0.0.1:33891 to 127.0.0.1:1812 length 240
(94)   User-Name = "anonymous"
(94)   NAS-IP-Address = 127.0.0.1
(94)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(94)   NAS-Port-Type = Wireless-802.11
(94)   Service-Type = Framed-User
(94)   NAS-Port = 1
(94)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(94)   Connect-Info = "CONNECT 54Mbps 802.11g"
(94)   Acct-Session-Id = "CF9BFBD35CAE8770"
(94)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(94)   WLAN-Pairwise-Cipher = 1027076
(94)   WLAN-Group-Cipher = 1027076
(94)   WLAN-AKM-Suite = 1027073
(94)   WLAN-Group-Mgmt-Cipher = 1027078
(94)   Framed-MTU = 1400
(94)   EAP-Message = 0x02d900061900
(94)   State = 0x0bd7180a080e018458273ec60e663a63
(94)   Message-Authenticator = 0xceb7ddf8e350c0ec97554a88b99511e2
(94) Restoring &session-state
(94)   &session-state:Framed-MTU = 994
(94)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(94)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(94)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(94)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(94)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(94) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(94)   authorize {
(94)     policy filter_username {
(94)       if (&User-Name) {
(94)       if (&User-Name)  -> TRUE
(94)       if (&User-Name)  {
(94)         if (&User-Name =~ / /) {
(94)         if (&User-Name =~ / /)  -> FALSE
(94)         if (&User-Name =~ /@[^@]*@/ ) {
(94)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(94)         if (&User-Name =~ /\.\./ ) {
(94)         if (&User-Name =~ /\.\./ )  -> FALSE
(94)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(94)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(94)         if (&User-Name =~ /\.$/)  {
(94)         if (&User-Name =~ /\.$/)   -> FALSE
(94)         if (&User-Name =~ /@\./)  {
(94)         if (&User-Name =~ /@\./)   -> FALSE
(94)       } # if (&User-Name)  = notfound
(94)     } # policy filter_username = notfound
(94)     [preprocess] = ok
(94)     [chap] = noop
(94)     [mschap] = noop
(94)     [digest] = noop
(94) suffix: Checking for suffix after "@"
(94) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(94) suffix: No such realm "NULL"
(94)     [suffix] = noop
(94) eap: Peer sent EAP Response (code 2) ID 217 length 6
(94) eap: Continuing tunnel setup
(94)     [eap] = ok
(94)   } # authorize = ok
(94) Found Auth-Type = eap
(94) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(94)   authenticate {
(94) eap: Expiring EAP session with state 0x0bd7180a080e0184
(94) eap: Finished EAP session with state 0x0bd7180a080e0184
(94) eap: Previous EAP request found for state 0x0bd7180a080e0184, released from the list
(94) eap: Peer sent packet with method EAP PEAP (25)
(94) eap: Calling submodule eap_peap to process data
(94) eap_peap: (TLS) Peer ACKed our handshake fragment
(94) eap: Sending EAP Request (code 1) ID 218 length 750
(94) eap: EAP session adding &reply:State = 0x0bd7180a0f0d0184
(94)     [eap] = handled
(94)   } # authenticate = handled
(94) Using Post-Auth-Type Challenge
(94) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(94)   Challenge { ... } # empty sub-section is ignored
(94) session-state: Saving cached attributes
(94)   Framed-MTU = 994
(94)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(94)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(94)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(94)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(94)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(94) Sent Access-Challenge Id 94 from 127.0.0.1:1812 to 127.0.0.1:33891 length 812
(94)   EAP-Message = 0x01da02ee1900161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479821457604ee8762089eef125d540c0bbf0b5a118a4af300f0603551d130101ff040530030101ff30360603551d1f042f302d302ba029a0278625687474703a2f2f7777772e6578616d706c652e6f72672f6578616d706c655f63612e63726c300d06092a864886f70d01010b05000382010100a38f6633d2e2daf953e93089c5b4a66c9abe99620e270f6120051d2195bb6972966c6b98bc7cb21016f89ec601899088e642d40ac9f4ac816aecd5c65482432b5385e04b9bdf7129b175bb275e6021db0725fccea1f8daeb4488f004dfe73aee302570804c93d471bdfc1175c9cd6b7e16a895981dd2e189f5e3d482de9e2ed67b800e000fc33fc1d505bef9840b6037ebb7e9d090a4dbf93ef5dc3a9c956c4f17bc65b21468466551d3e57e331cdcc6dfb1f7279eda22b92b9d6875ae09efa1738980
(94)   Message-Authenticator = 0x00000000000000000000000000000000
(94)   State = 0x0bd7180a0f0d018458273ec60e663a63
(94) Finished request
Waking up in 4.0 seconds.
(95) Received Access-Request Id 95 from 127.0.0.1:33891 to 127.0.0.1:1812 length 251
(95)   User-Name = "anonymous"
(95)   NAS-IP-Address = 127.0.0.1
(95)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(95)   NAS-Port-Type = Wireless-802.11
(95)   Service-Type = Framed-User
(95)   NAS-Port = 1
(95)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(95)   Connect-Info = "CONNECT 54Mbps 802.11g"
(95)   Acct-Session-Id = "CF9BFBD35CAE8770"
(95)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(95)   WLAN-Pairwise-Cipher = 1027076
(95)   WLAN-Group-Cipher = 1027076
(95)   WLAN-AKM-Suite = 1027073
(95)   WLAN-Group-Mgmt-Cipher = 1027078
(95)   Framed-MTU = 1400
(95)   EAP-Message = 0x02da001119800000000715030300020230
(95)   State = 0x0bd7180a0f0d018458273ec60e663a63
(95)   Message-Authenticator = 0x57f4c3b72d23f12d07c1523b3fcf87a0
(95) Restoring &session-state
(95)   &session-state:Framed-MTU = 994
(95)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(95)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(95)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(95)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(95)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(95) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(95)   authorize {
(95)     policy filter_username {
(95)       if (&User-Name) {
(95)       if (&User-Name)  -> TRUE
(95)       if (&User-Name)  {
(95)         if (&User-Name =~ / /) {
(95)         if (&User-Name =~ / /)  -> FALSE
(95)         if (&User-Name =~ /@[^@]*@/ ) {
(95)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(95)         if (&User-Name =~ /\.\./ ) {
(95)         if (&User-Name =~ /\.\./ )  -> FALSE
(95)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(95)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(95)         if (&User-Name =~ /\.$/)  {
(95)         if (&User-Name =~ /\.$/)   -> FALSE
(95)         if (&User-Name =~ /@\./)  {
(95)         if (&User-Name =~ /@\./)   -> FALSE
(95)       } # if (&User-Name)  = notfound
(95)     } # policy filter_username = notfound
(95)     [preprocess] = ok
(95)     [chap] = noop
(95)     [mschap] = noop
(95)     [digest] = noop
(95) suffix: Checking for suffix after "@"
(95) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(95) suffix: No such realm "NULL"
(95)     [suffix] = noop
(95) eap: Peer sent EAP Response (code 2) ID 218 length 17
(95) eap: Continuing tunnel setup
(95)     [eap] = ok
(95)   } # authorize = ok
(95) Found Auth-Type = eap
(95) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(95)   authenticate {
(95) eap: Expiring EAP session with state 0x0bd7180a0f0d0184
(95) eap: Finished EAP session with state 0x0bd7180a0f0d0184
(95) eap: Previous EAP request found for state 0x0bd7180a0f0d0184, released from the list
(95) eap: Peer sent packet with method EAP PEAP (25)
(95) eap: Calling submodule eap_peap to process data
(95) eap_peap: (TLS) EAP Peer says that the final record size will be 7 bytes
(95) eap_peap: (TLS) EAP Got all data (7 bytes)
(95) eap_peap: (TLS) recv TLS 1.2 Alert, fatal unknown_ca
(95) eap_peap: (TLS) The client is informing us that it does not recognize the CA used to issue the server certificate.  Please update the client so that it knows about the CA.
(95) eap_peap: ERROR: (TLS) Alert read:fatal:unknown CA
(95) eap_peap: (TLS) Server : Need to read more data: error
(95) eap_peap: ERROR: (TLS) Failed reading from OpenSSL: error:0A000418:SSL routines::tlsv1 alert unknown ca
(95) eap_peap: (TLS) In Handshake Phase
(95) eap_peap: (TLS) Application data.
(95) eap_peap: ERROR: (TLS) Cannot continue, as the peer is misbehaving.
(95) eap_peap: ERROR: [eaptls process] = fail
(95) eap: ERROR: Failed continuing EAP PEAP (25) session.  EAP sub-module failed
(95) eap: Sending EAP Failure (code 4) ID 218 length 4
(95) eap: Failed in EAP select
(95)     [eap] = invalid
(95)   } # authenticate = invalid
(95) Failed to authenticate the user
(95) Using Post-Auth-Type Reject
(95) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(95)   Post-Auth-Type REJECT {
(95) attr_filter.access_reject: EXPAND %{User-Name}
(95) attr_filter.access_reject:    --> anonymous
(95) attr_filter.access_reject: Matched entry DEFAULT at line 11
(95)     [attr_filter.access_reject] = updated
(95)     [eap] = noop
(95)     policy remove_reply_message_if_eap {
(95)       if (&reply:EAP-Message && &reply:Reply-Message) {
(95)       if (&reply:EAP-Message && &reply:Reply-Message)  -> FALSE
(95)       else {
(95)         [noop] = noop
(95)       } # else = noop
(95)     } # policy remove_reply_message_if_eap = noop
(95)   } # Post-Auth-Type REJECT = updated
(95) Delaying response for 1.000000 seconds
Waking up in 0.3 seconds.
Waking up in 0.6 seconds.
(95) Sending delayed response
(95) Sent Access-Reject Id 95 from 127.0.0.1:1812 to 127.0.0.1:33891 length 44
(95)   EAP-Message = 0x04da0004
(95)   Message-Authenticator = 0x00000000000000000000000000000000
Waking up in 2.6 seconds.
(90) Cleaning up request packet ID 90 with timestamp +93 due to cleanup_delay was reached
(91) Cleaning up request packet ID 91 with timestamp +93 due to cleanup_delay was reached
(92) Cleaning up request packet ID 92 with timestamp +93 due to cleanup_delay was reached
Waking up in 0.4 seconds.
(93) Cleaning up request packet ID 93 with timestamp +94 due to cleanup_delay was reached
Waking up in 0.4 seconds.
(96) Received Access-Request Id 96 from 127.0.0.1:33891 to 127.0.0.1:1812 length 230
(96)   User-Name = "anonymous"
(96)   NAS-IP-Address = 127.0.0.1
(96)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(96)   NAS-Port-Type = Wireless-802.11
(96)   Service-Type = Framed-User
(96)   NAS-Port = 1
(96)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(96)   Connect-Info = "CONNECT 54Mbps 802.11g"
(96)   Acct-Session-Id = "CF9BFBD35CAE8770"
(96)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(96)   WLAN-Pairwise-Cipher = 1027076
(96)   WLAN-Group-Cipher = 1027076
(96)   WLAN-AKM-Suite = 1027073
(96)   WLAN-Group-Mgmt-Cipher = 1027078
(96)   Framed-MTU = 1400
(96)   EAP-Message = 0x022f000e01616e6f6e796d6f7573
(96)   Message-Authenticator = 0x8f7c7636ec50fb67da74373f16a4643a
(96) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(96)   authorize {
(96)     policy filter_username {
(96)       if (&User-Name) {
(96)       if (&User-Name)  -> TRUE
(96)       if (&User-Name)  {
(96)         if (&User-Name =~ / /) {
(96)         if (&User-Name =~ / /)  -> FALSE
(96)         if (&User-Name =~ /@[^@]*@/ ) {
(96)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(96)         if (&User-Name =~ /\.\./ ) {
(96)         if (&User-Name =~ /\.\./ )  -> FALSE
(96)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(96)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(96)         if (&User-Name =~ /\.$/)  {
(96)         if (&User-Name =~ /\.$/)   -> FALSE
(96)         if (&User-Name =~ /@\./)  {
(96)         if (&User-Name =~ /@\./)   -> FALSE
(96)       } # if (&User-Name)  = notfound
(96)     } # policy filter_username = notfound
(96)     [preprocess] = ok
(96)     [chap] = noop
(96)     [mschap] = noop
(96)     [digest] = noop
(96) suffix: Checking for suffix after "@"
(96) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(96) suffix: No such realm "NULL"
(96)     [suffix] = noop
(96) eap: Peer sent EAP Response (code 2) ID 47 length 14
(96) eap: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
(96)     [eap] = ok
(96)   } # authorize = ok
(96) Found Auth-Type = eap
(96) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(96)   authenticate {
(96) eap: Peer sent packet with method EAP Identity (1)
(96) eap: Calling submodule eap_md5 to process data
(96) eap_md5: Issuing MD5 Challenge
(96) eap: Sending EAP Request (code 1) ID 48 length 22
(96) eap: EAP session adding &reply:State = 0x9471bac69441be44
(96)     [eap] = handled
(96)   } # authenticate = handled
(96) Using Post-Auth-Type Challenge
(96) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(96)   Challenge { ... } # empty sub-section is ignored
(96) Sent Access-Challenge Id 96 from 127.0.0.1:1812 to 127.0.0.1:33891 length 80
(96)   EAP-Message = 0x01300016041070a5491f946379d2d60c518a80eccfb6
(96)   Message-Authenticator = 0x00000000000000000000000000000000
(96)   State = 0x9471bac69441be44c067a3f2ac8d2dc6
(96) Finished request
(97) Received Access-Request Id 97 from 127.0.0.1:33891 to 127.0.0.1:1812 length 241
(97)   User-Name = "anonymous"
(97)   NAS-IP-Address = 127.0.0.1
(97)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(97)   NAS-Port-Type = Wireless-802.11
(97)   Service-Type = Framed-User
(97)   NAS-Port = 1
(97)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(97)   Connect-Info = "CONNECT 54Mbps 802.11g"
(97)   Acct-Session-Id = "CF9BFBD35CAE8770"
(97)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(97)   WLAN-Pairwise-Cipher = 1027076
(97)   WLAN-Group-Cipher = 1027076
(97)   WLAN-AKM-Suite = 1027073
(97)   WLAN-Group-Mgmt-Cipher = 1027078
(97)   Framed-MTU = 1400
(97)   EAP-Message = 0x02300007031915
(97)   State = 0x9471bac69441be44c067a3f2ac8d2dc6
(97)   Message-Authenticator = 0xb45dd283b0b7fb936a689c3ab5065def
(97) session-state: No cached attributes
(97) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(97)   authorize {
(97)     policy filter_username {
(97)       if (&User-Name) {
(97)       if (&User-Name)  -> TRUE
(97)       if (&User-Name)  {
(97)         if (&User-Name =~ / /) {
(97)         if (&User-Name =~ / /)  -> FALSE
(97)         if (&User-Name =~ /@[^@]*@/ ) {
(97)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(97)         if (&User-Name =~ /\.\./ ) {
(97)         if (&User-Name =~ /\.\./ )  -> FALSE
(97)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(97)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(97)         if (&User-Name =~ /\.$/)  {
(97)         if (&User-Name =~ /\.$/)   -> FALSE
(97)         if (&User-Name =~ /@\./)  {
(97)         if (&User-Name =~ /@\./)   -> FALSE
(97)       } # if (&User-Name)  = notfound
(97)     } # policy filter_username = notfound
(97)     [preprocess] = ok
(97)     [chap] = noop
(97)     [mschap] = noop
(97)     [digest] = noop
(97) suffix: Checking for suffix after "@"
(97) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(97) suffix: No such realm "NULL"
(97)     [suffix] = noop
(97) eap: Peer sent EAP Response (code 2) ID 48 length 7
(97) eap: No EAP Start, assuming it's an on-going EAP conversation
(97)     [eap] = updated
(97)     [files] = noop
(97)     [expiration] = noop
(97)     [logintime] = noop
Not doing PAP as Auth-Type is already set.
(97)     [pap] = noop
(97)   } # authorize = updated
(97) Found Auth-Type = eap
(97) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(97)   authenticate {
(97) eap: Expiring EAP session with state 0x9471bac69441be44
(97) eap: Finished EAP session with state 0x9471bac69441be44
(97) eap: Previous EAP request found for state 0x9471bac69441be44, released from the list
(97) eap: Peer sent packet with method EAP NAK (3)
(97) eap: Found mutually acceptable type PEAP (25)
(97) eap: Calling submodule eap_peap to process data
(97) eap_peap: (TLS) Initiating new session
(97) eap: Sending EAP Request (code 1) ID 49 length 6
(97) eap: EAP session adding &reply:State = 0x9471bac69540a344
(97)     [eap] = handled
(97)   } # authenticate = handled
(97) Using Post-Auth-Type Challenge
(97) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(97)   Challenge { ... } # empty sub-section is ignored
(97) session-state: Saving cached attributes
(97)   Framed-MTU = 994
(97) Sent Access-Challenge Id 97 from 127.0.0.1:1812 to 127.0.0.1:33891 length 64
(97)   EAP-Message = 0x013100061920
(97)   Message-Authenticator = 0x00000000000000000000000000000000
(97)   State = 0x9471bac69540a344c067a3f2ac8d2dc6
(97) Finished request
(94) Cleaning up request packet ID 94 with timestamp +94 due to cleanup_delay was reached
(98) Received Access-Request Id 98 from 127.0.0.1:33891 to 127.0.0.1:1812 length 476
(98)   User-Name = "anonymous"
(98)   NAS-IP-Address = 127.0.0.1
(98)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(98)   NAS-Port-Type = Wireless-802.11
(98)   Service-Type = Framed-User
(98)   NAS-Port = 1
(98)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(98)   Connect-Info = "CONNECT 54Mbps 802.11g"
(98)   Acct-Session-Id = "CF9BFBD35CAE8770"
(98)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(98)   WLAN-Pairwise-Cipher = 1027076
(98)   WLAN-Group-Cipher = 1027076
(98)   WLAN-AKM-Suite = 1027073
(98)   WLAN-Group-Mgmt-Cipher = 1027078
(98)   Framed-MTU = 1400
(98)   EAP-Message = 0x023100f21980000000e816030300e3010000df03030000009e23c54342760ab897d2208bb2b8b177c58c34f9ae626e6fac3e7ade63000076c02cc030c0adc024c028c00ac014c0afc05dc061c049c04dc02bc02fc0acc023c027c009c013c0aec05cc060c048c04c009dc09d003d0035c032c02ac00fc02ec026c005c0a1c05fc063c051c04bc04fc03d009cc09c003c002fc031c029c00ec02dc025c004c0a0c05ec062c050c04ac04ec03c00ff01000040000a0010000e001d001700180019001a001b001c000d001600140603050306010501040303030401030102030201000b00020100001600000017000000230000
(98)   State = 0x9471bac69540a344c067a3f2ac8d2dc6
(98)   Message-Authenticator = 0xdd806f4c7f34b75169053b45129b081d
(98) Restoring &session-state
(98)   &session-state:Framed-MTU = 994
(98) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(98)   authorize {
(98)     policy filter_username {
(98)       if (&User-Name) {
(98)       if (&User-Name)  -> TRUE
(98)       if (&User-Name)  {
(98)         if (&User-Name =~ / /) {
(98)         if (&User-Name =~ / /)  -> FALSE
(98)         if (&User-Name =~ /@[^@]*@/ ) {
(98)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(98)         if (&User-Name =~ /\.\./ ) {
(98)         if (&User-Name =~ /\.\./ )  -> FALSE
(98)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(98)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(98)         if (&User-Name =~ /\.$/)  {
(98)         if (&User-Name =~ /\.$/)   -> FALSE
(98)         if (&User-Name =~ /@\./)  {
(98)         if (&User-Name =~ /@\./)   -> FALSE
(98)       } # if (&User-Name)  = notfound
(98)     } # policy filter_username = notfound
(98)     [preprocess] = ok
(98)     [chap] = noop
(98)     [mschap] = noop
(98)     [digest] = noop
(98) suffix: Checking for suffix after "@"
(98) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(98) suffix: No such realm "NULL"
(98)     [suffix] = noop
(98) eap: Peer sent EAP Response (code 2) ID 49 length 242
(98) eap: Continuing tunnel setup
(98)     [eap] = ok
(98)   } # authorize = ok
(98) Found Auth-Type = eap
(98) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(98)   authenticate {
(98) eap: Expiring EAP session with state 0x9471bac69540a344
(98) eap: Finished EAP session with state 0x9471bac69540a344
(98) eap: Previous EAP request found for state 0x9471bac69540a344, released from the list
(98) eap: Peer sent packet with method EAP PEAP (25)
(98) eap: Calling submodule eap_peap to process data
(98) eap_peap: (TLS) EAP Peer says that the final record size will be 232 bytes
(98) eap_peap: (TLS) EAP Got all data (232 bytes)
(98) eap_peap: (TLS) Handshake state - before SSL initialization
(98) eap_peap: (TLS) Handshake state - Server before SSL initialization
(98) eap_peap: (TLS) Handshake state - Server before SSL initialization
(98) eap_peap: (TLS) recv TLS 1.3 Handshake, ClientHello
(98) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read client hello
(98) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHello
(98) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server hello
(98) eap_peap: (TLS) send TLS 1.2 Handshake, Certificate
(98) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write certificate
(98) eap_peap: (TLS) send TLS 1.2 Handshake, ServerKeyExchange
(98) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write key exchange
(98) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHelloDone
(98) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server done
(98) eap_peap: (TLS) Server : Need to read more data: SSLv3/TLS write server done
(98) eap_peap: (TLS) In Handshake Phase
(98) eap: Sending EAP Request (code 1) ID 50 length 1004
(98) eap: EAP session adding &reply:State = 0x9471bac69643a344
(98)     [eap] = handled
(98)   } # authenticate = handled
(98) Using Post-Auth-Type Challenge
(98) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(98)   Challenge { ... } # empty sub-section is ignored
(98) session-state: Saving cached attributes
(98)   Framed-MTU = 994
(98)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(98)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(98)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(98)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(98)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(98) Sent Access-Challenge Id 98 from 127.0.0.1:1812 to 127.0.0.1:33891 length 1068
(98)   EAP-Message = 0x013203ec19c000000aac160303003d0200003903032dee9c6b132b4a9213695b24fe5e4b1fe6f6c8f9f7167b4f5a501f8074f62e3800c030000011ff01000100000b00040300010200170000160303092b0b0009270009240004203082041c30820304a003020102020101300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232303134333732315a170d3234303231383134333732315a307c310b3009060355040613024652310f300d06035504080c0652616469757331153013060355040a0c0c4578616d706c6520496e632e3123302106035504030c1a4578616d70
(98)   Message-Authenticator = 0x00000000000000000000000000000000
(98)   State = 0x9471bac69643a344c067a3f2ac8d2dc6
(98) Finished request
Waking up in 0.3 seconds.
(95) Cleaning up request packet ID 95 with timestamp +94 due to cleanup_delay was reached
Waking up in 4.5 seconds.
(99) Received Access-Request Id 99 from 127.0.0.1:33891 to 127.0.0.1:1812 length 240
(99)   User-Name = "anonymous"
(99)   NAS-IP-Address = 127.0.0.1
(99)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(99)   NAS-Port-Type = Wireless-802.11
(99)   Service-Type = Framed-User
(99)   NAS-Port = 1
(99)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(99)   Connect-Info = "CONNECT 54Mbps 802.11g"
(99)   Acct-Session-Id = "CF9BFBD35CAE8770"
(99)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(99)   WLAN-Pairwise-Cipher = 1027076
(99)   WLAN-Group-Cipher = 1027076
(99)   WLAN-AKM-Suite = 1027073
(99)   WLAN-Group-Mgmt-Cipher = 1027078
(99)   Framed-MTU = 1400
(99)   EAP-Message = 0x023200061900
(99)   State = 0x9471bac69643a344c067a3f2ac8d2dc6
(99)   Message-Authenticator = 0xfa92d84a0e005a7ddab197567098a73c
(99) Restoring &session-state
(99)   &session-state:Framed-MTU = 994
(99)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(99)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(99)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(99)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(99)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(99) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(99)   authorize {
(99)     policy filter_username {
(99)       if (&User-Name) {
(99)       if (&User-Name)  -> TRUE
(99)       if (&User-Name)  {
(99)         if (&User-Name =~ / /) {
(99)         if (&User-Name =~ / /)  -> FALSE
(99)         if (&User-Name =~ /@[^@]*@/ ) {
(99)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(99)         if (&User-Name =~ /\.\./ ) {
(99)         if (&User-Name =~ /\.\./ )  -> FALSE
(99)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(99)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(99)         if (&User-Name =~ /\.$/)  {
(99)         if (&User-Name =~ /\.$/)   -> FALSE
(99)         if (&User-Name =~ /@\./)  {
(99)         if (&User-Name =~ /@\./)   -> FALSE
(99)       } # if (&User-Name)  = notfound
(99)     } # policy filter_username = notfound
(99)     [preprocess] = ok
(99)     [chap] = noop
(99)     [mschap] = noop
(99)     [digest] = noop
(99) suffix: Checking for suffix after "@"
(99) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(99) suffix: No such realm "NULL"
(99)     [suffix] = noop
(99) eap: Peer sent EAP Response (code 2) ID 50 length 6
(99) eap: Continuing tunnel setup
(99)     [eap] = ok
(99)   } # authorize = ok
(99) Found Auth-Type = eap
(99) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(99)   authenticate {
(99) eap: Expiring EAP session with state 0x9471bac69643a344
(99) eap: Finished EAP session with state 0x9471bac69643a344
(99) eap: Previous EAP request found for state 0x9471bac69643a344, released from the list
(99) eap: Peer sent packet with method EAP PEAP (25)
(99) eap: Calling submodule eap_peap to process data
(99) eap_peap: (TLS) Peer ACKed our handshake fragment
(99) eap: Sending EAP Request (code 1) ID 51 length 1000
(99) eap: EAP session adding &reply:State = 0x9471bac69742a344
(99)     [eap] = handled
(99)   } # authenticate = handled
(99) Using Post-Auth-Type Challenge
(99) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(99)   Challenge { ... } # empty sub-section is ignored
(99) session-state: Saving cached attributes
(99)   Framed-MTU = 994
(99)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(99)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(99)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(99)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(99)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(99) Sent Access-Challenge Id 99 from 127.0.0.1:1812 to 127.0.0.1:33891 length 1064
(99)   EAP-Message = 0x013303e81940b365595edec634be72466f496c8cad448e057893222e9d9b96fa51c2d84df387dace2b8dd56e85ea1e27ed302547bc22a35b0349ae7075502f1be4a933467c7ec41b12f969f65caf80e82b77b04c1d46756210be2684f027b347debb97d3bca395775660fe2168969187b5d46b43284bb130757803bdfe082cbf44b37353c4f853131bace8ca9c30290a88b1bf0a680004fe308204fa308203e2a003020102021457604ee8762089eef125d540c0bbf0b5a118a4af300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232303134333731355a170d32343032
(99)   Message-Authenticator = 0x00000000000000000000000000000000
(99)   State = 0x9471bac69742a344c067a3f2ac8d2dc6
(99) Finished request
Waking up in 4.4 seconds.
(100) Received Access-Request Id 100 from 127.0.0.1:33891 to 127.0.0.1:1812 length 240
(100)   User-Name = "anonymous"
(100)   NAS-IP-Address = 127.0.0.1
(100)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(100)   NAS-Port-Type = Wireless-802.11
(100)   Service-Type = Framed-User
(100)   NAS-Port = 1
(100)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(100)   Connect-Info = "CONNECT 54Mbps 802.11g"
(100)   Acct-Session-Id = "CF9BFBD35CAE8770"
(100)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(100)   WLAN-Pairwise-Cipher = 1027076
(100)   WLAN-Group-Cipher = 1027076
(100)   WLAN-AKM-Suite = 1027073
(100)   WLAN-Group-Mgmt-Cipher = 1027078
(100)   Framed-MTU = 1400
(100)   EAP-Message = 0x023300061900
(100)   State = 0x9471bac69742a344c067a3f2ac8d2dc6
(100)   Message-Authenticator = 0xe7ff95cab95b168a6e31bc9b4d4f50f9
(100) Restoring &session-state
(100)   &session-state:Framed-MTU = 994
(100)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(100)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(100)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(100)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(100)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(100) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(100)   authorize {
(100)     policy filter_username {
(100)       if (&User-Name) {
(100)       if (&User-Name)  -> TRUE
(100)       if (&User-Name)  {
(100)         if (&User-Name =~ / /) {
(100)         if (&User-Name =~ / /)  -> FALSE
(100)         if (&User-Name =~ /@[^@]*@/ ) {
(100)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(100)         if (&User-Name =~ /\.\./ ) {
(100)         if (&User-Name =~ /\.\./ )  -> FALSE
(100)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(100)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(100)         if (&User-Name =~ /\.$/)  {
(100)         if (&User-Name =~ /\.$/)   -> FALSE
(100)         if (&User-Name =~ /@\./)  {
(100)         if (&User-Name =~ /@\./)   -> FALSE
(100)       } # if (&User-Name)  = notfound
(100)     } # policy filter_username = notfound
(100)     [preprocess] = ok
(100)     [chap] = noop
(100)     [mschap] = noop
(100)     [digest] = noop
(100) suffix: Checking for suffix after "@"
(100) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(100) suffix: No such realm "NULL"
(100)     [suffix] = noop
(100) eap: Peer sent EAP Response (code 2) ID 51 length 6
(100) eap: Continuing tunnel setup
(100)     [eap] = ok
(100)   } # authorize = ok
(100) Found Auth-Type = eap
(100) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(100)   authenticate {
(100) eap: Expiring EAP session with state 0x9471bac69742a344
(100) eap: Finished EAP session with state 0x9471bac69742a344
(100) eap: Previous EAP request found for state 0x9471bac69742a344, released from the list
(100) eap: Peer sent packet with method EAP PEAP (25)
(100) eap: Calling submodule eap_peap to process data
(100) eap_peap: (TLS) Peer ACKed our handshake fragment
(100) eap: Sending EAP Request (code 1) ID 52 length 750
(100) eap: EAP session adding &reply:State = 0x9471bac69045a344
(100)     [eap] = handled
(100)   } # authenticate = handled
(100) Using Post-Auth-Type Challenge
(100) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(100)   Challenge { ... } # empty sub-section is ignored
(100) session-state: Saving cached attributes
(100)   Framed-MTU = 994
(100)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(100)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(100)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(100)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(100)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(100) Sent Access-Challenge Id 100 from 127.0.0.1:1812 to 127.0.0.1:33891 length 812
(100)   EAP-Message = 0x013402ee1900161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479821457604ee8762089eef125d540c0bbf0b5a118a4af300f0603551d130101ff040530030101ff30360603551d1f042f302d302ba029a0278625687474703a2f2f7777772e6578616d706c652e6f72672f6578616d706c655f63612e63726c300d06092a864886f70d01010b05000382010100a38f6633d2e2daf953e93089c5b4a66c9abe99620e270f6120051d2195bb6972966c6b98bc7cb21016f89ec601899088e642d40ac9f4ac816aecd5c65482432b5385e04b9bdf7129b175bb275e6021db0725fccea1f8daeb4488f004dfe73aee302570804c93d471bdfc1175c9cd6b7e16a895981dd2e189f5e3d482de9e2ed67b800e000fc33fc1d505bef9840b6037ebb7e9d090a4dbf93ef5dc3a9c956c4f17bc65b21468466551d3e57e331cdcc6dfb1f7279eda22b92b9d6875ae09efa1738980
(100)   Message-Authenticator = 0x00000000000000000000000000000000
(100)   State = 0x9471bac69045a344c067a3f2ac8d2dc6
(100) Finished request
Waking up in 4.0 seconds.
(101) Received Access-Request Id 101 from 127.0.0.1:33891 to 127.0.0.1:1812 length 251
(101)   User-Name = "anonymous"
(101)   NAS-IP-Address = 127.0.0.1
(101)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(101)   NAS-Port-Type = Wireless-802.11
(101)   Service-Type = Framed-User
(101)   NAS-Port = 1
(101)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(101)   Connect-Info = "CONNECT 54Mbps 802.11g"
(101)   Acct-Session-Id = "CF9BFBD35CAE8770"
(101)   Acct-Multi-Session-Id = "EEA5F2AB3235C322"
(101)   WLAN-Pairwise-Cipher = 1027076
(101)   WLAN-Group-Cipher = 1027076
(101)   WLAN-AKM-Suite = 1027073
(101)   WLAN-Group-Mgmt-Cipher = 1027078
(101)   Framed-MTU = 1400
(101)   EAP-Message = 0x0234001119800000000715030300020230
(101)   State = 0x9471bac69045a344c067a3f2ac8d2dc6
(101)   Message-Authenticator = 0x8e2d38ef4650c5e651740b950f67ae31
(101) Restoring &session-state
(101)   &session-state:Framed-MTU = 994
(101)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(101)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(101)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(101)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(101)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(101) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(101)   authorize {
(101)     policy filter_username {
(101)       if (&User-Name) {
(101)       if (&User-Name)  -> TRUE
(101)       if (&User-Name)  {
(101)         if (&User-Name =~ / /) {
(101)         if (&User-Name =~ / /)  -> FALSE
(101)         if (&User-Name =~ /@[^@]*@/ ) {
(101)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(101)         if (&User-Name =~ /\.\./ ) {
(101)         if (&User-Name =~ /\.\./ )  -> FALSE
(101)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(101)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(101)         if (&User-Name =~ /\.$/)  {
(101)         if (&User-Name =~ /\.$/)   -> FALSE
(101)         if (&User-Name =~ /@\./)  {
(101)         if (&User-Name =~ /@\./)   -> FALSE
(101)       } # if (&User-Name)  = notfound
(101)     } # policy filter_username = notfound
(101)     [preprocess] = ok
(101)     [chap] = noop
(101)     [mschap] = noop
(101)     [digest] = noop
(101) suffix: Checking for suffix after "@"
(101) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(101) suffix: No such realm "NULL"
(101)     [suffix] = noop
(101) eap: Peer sent EAP Response (code 2) ID 52 length 17
(101) eap: Continuing tunnel setup
(101)     [eap] = ok
(101)   } # authorize = ok
(101) Found Auth-Type = eap
(101) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(101)   authenticate {
(101) eap: Expiring EAP session with state 0x9471bac69045a344
(101) eap: Finished EAP session with state 0x9471bac69045a344
(101) eap: Previous EAP request found for state 0x9471bac69045a344, released from the list
(101) eap: Peer sent packet with method EAP PEAP (25)
(101) eap: Calling submodule eap_peap to process data
(101) eap_peap: (TLS) EAP Peer says that the final record size will be 7 bytes
(101) eap_peap: (TLS) EAP Got all data (7 bytes)
(101) eap_peap: (TLS) recv TLS 1.2 Alert, fatal unknown_ca
(101) eap_peap: (TLS) The client is informing us that it does not recognize the CA used to issue the server certificate.  Please update the client so that it knows about the CA.
(101) eap_peap: ERROR: (TLS) Alert read:fatal:unknown CA
(101) eap_peap: (TLS) Server : Need to read more data: error
(101) eap_peap: ERROR: (TLS) Failed reading from OpenSSL: error:0A000418:SSL routines::tlsv1 alert unknown ca
(101) eap_peap: (TLS) In Handshake Phase
(101) eap_peap: (TLS) Application data.
(101) eap_peap: ERROR: (TLS) Cannot continue, as the peer is misbehaving.
(101) eap_peap: ERROR: [eaptls process] = fail
(101) eap: ERROR: Failed continuing EAP PEAP (25) session.  EAP sub-module failed
(101) eap: Sending EAP Failure (code 4) ID 52 length 4
(101) eap: Failed in EAP select
(101)     [eap] = invalid
(101)   } # authenticate = invalid
(101) Failed to authenticate the user
(101) Using Post-Auth-Type Reject
(101) # Executing group from file Freeradius/Conf/E_rogue_wpa2//sites-enabled/default
(101)   Post-Auth-Type REJECT {
(101) attr_filter.access_reject: EXPAND %{User-Name}
(101) attr_filter.access_reject:    --> anonymous
(101) attr_filter.access_reject: Matched entry DEFAULT at line 11
(101)     [attr_filter.access_reject] = updated
(101)     [eap] = noop
(101)     policy remove_reply_message_if_eap {
(101)       if (&reply:EAP-Message && &reply:Reply-Message) {
(101)       if (&reply:EAP-Message && &reply:Reply-Message)  -> FALSE
(101)       else {
(101)         [noop] = noop
(101)       } # else = noop
(101)     } # policy remove_reply_message_if_eap = noop
(101)   } # Post-Auth-Type REJECT = updated
(101) Delaying response for 1.000000 seconds
Waking up in 0.3 seconds.
Waking up in 0.6 seconds.
Waking up in 0.4 seconds.
Signalled to terminate
Exiting normally

[0;36mFreeRADIUS is stopped.[0m


