[10:12:55.251] Beginning saving session of stdout and stderr Test/Tmp/Log/ESP32/e_tofu_wpa3...
[0;32mSuccess.[0m

[10:12:55.252] Fetching configuration directory associated to e_tofu_wpa3...
[0;32mSuccess.[0m

[10:12:55.270] Looking for Freeradius/Conf/E_tofu_wpa3/...
[0;32mSuccess.[0m

[0;36mRunning FreeRADIUS. Press Ctrl-C to stop.[0m

FreeRADIUS Version 3.0.26
Copyright (C) 1999-2021 The FreeRADIUS server project and contributors
There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE
You may redistribute copies of FreeRADIUS under the terms of the
GNU General Public License
For more information about these matters, see the file named COPYRIGHT
Starting - reading configuration files ...
including dictionary file /usr/share/freeradius/dictionary
including dictionary file /usr/share/freeradius/dictionary.dhcp
including dictionary file /usr/share/freeradius/dictionary.vqp
including dictionary file Freeradius/Conf/E_tofu_wpa3//dictionary
including configuration file Freeradius/Conf/E_tofu_wpa3//radiusd.conf
including configuration file Freeradius/Conf/E_tofu_wpa3//proxy.conf
including configuration file Freeradius/Conf/E_tofu_wpa3//clients.conf
including files in directory Freeradius/Conf/E_tofu_wpa3//mods-enabled/
including configuration file Freeradius/Conf/E_tofu_wpa3//mods-enabled/files
including configuration file Freeradius/Conf/E_tofu_wpa3//mods-enabled/passwd
including configuration file Freeradius/Conf/E_tofu_wpa3//mods-enabled/expr
including configuration file Freeradius/Conf/E_tofu_wpa3//mods-enabled/soh
including configuration file Freeradius/Conf/E_tofu_wpa3//mods-enabled/digest
including configuration file Freeradius/Conf/E_tofu_wpa3//mods-enabled/dynamic_clients
including configuration file Freeradius/Conf/E_tofu_wpa3//mods-enabled/unix
including configuration file Freeradius/Conf/E_tofu_wpa3//mods-enabled/echo
including configuration file Freeradius/Conf/E_tofu_wpa3//mods-enabled/preprocess
including configuration file Freeradius/Conf/E_tofu_wpa3//mods-enabled/replicate
including configuration file Freeradius/Conf/E_tofu_wpa3//mods-enabled/pap
including configuration file Freeradius/Conf/E_tofu_wpa3//mods-enabled/always
including configuration file Freeradius/Conf/E_tofu_wpa3//mods-enabled/detail
including configuration file Freeradius/Conf/E_tofu_wpa3//mods-enabled/cache_eap
including configuration file Freeradius/Conf/E_tofu_wpa3//mods-enabled/mschap
including configuration file Freeradius/Conf/E_tofu_wpa3//mods-enabled/eap
including configuration file Freeradius/Conf/E_tofu_wpa3//mods-enabled/logintime
including configuration file Freeradius/Conf/E_tofu_wpa3//mods-enabled/utf8
including configuration file Freeradius/Conf/E_tofu_wpa3//mods-enabled/unpack
including configuration file Freeradius/Conf/E_tofu_wpa3//mods-enabled/radutmp
including configuration file Freeradius/Conf/E_tofu_wpa3//mods-enabled/expiration
including configuration file Freeradius/Conf/E_tofu_wpa3//mods-enabled/chap
including configuration file Freeradius/Conf/E_tofu_wpa3//mods-enabled/realm
including configuration file Freeradius/Conf/E_tofu_wpa3//mods-enabled/sradutmp
including configuration file Freeradius/Conf/E_tofu_wpa3//mods-enabled/attr_filter
including configuration file Freeradius/Conf/E_tofu_wpa3//mods-enabled/ntlm_auth
including configuration file Freeradius/Conf/E_tofu_wpa3//mods-enabled/detail.log
including configuration file Freeradius/Conf/E_tofu_wpa3//mods-enabled/exec
including configuration file Freeradius/Conf/E_tofu_wpa3//mods-enabled/linelog
including files in directory Freeradius/Conf/E_tofu_wpa3//policy.d/
including configuration file Freeradius/Conf/E_tofu_wpa3//policy.d/operator-name
including configuration file Freeradius/Conf/E_tofu_wpa3//policy.d/dhcp
including configuration file Freeradius/Conf/E_tofu_wpa3//policy.d/rfc7542
including configuration file Freeradius/Conf/E_tofu_wpa3//policy.d/accounting
including configuration file Freeradius/Conf/E_tofu_wpa3//policy.d/filter
including configuration file Freeradius/Conf/E_tofu_wpa3//policy.d/cui
including configuration file Freeradius/Conf/E_tofu_wpa3//policy.d/moonshot-targeted-ids
including configuration file Freeradius/Conf/E_tofu_wpa3//policy.d/canonicalization
including configuration file Freeradius/Conf/E_tofu_wpa3//policy.d/eap
including configuration file Freeradius/Conf/E_tofu_wpa3//policy.d/control
including configuration file Freeradius/Conf/E_tofu_wpa3//policy.d/abfab-tr
including configuration file Freeradius/Conf/E_tofu_wpa3//policy.d/debug
including files in directory Freeradius/Conf/E_tofu_wpa3//sites-enabled/
including configuration file Freeradius/Conf/E_tofu_wpa3//sites-enabled/inner-tunnel
including configuration file Freeradius/Conf/E_tofu_wpa3//sites-enabled/default
main {
 security {
 	user = "freerad"
 	group = "freerad"
 	allow_core_dumps = no
 }
	name = "freeradius"
	prefix = "/usr"
	localstatedir = "/var"
	logdir = "/var/log/freeradius"
	run_dir = "/var/run/freeradius"
}
main {
	name = "freeradius"
	prefix = "/usr"
	localstatedir = "/var"
	sbindir = "/usr/sbin"
	logdir = "/var/log/freeradius"
	run_dir = "/var/run/freeradius"
	libdir = "/usr/lib/freeradius"
	radacctdir = "/var/log/freeradius/radacct"
	hostname_lookups = no
	max_request_time = 30
	cleanup_delay = 5
	max_requests = 16384
	postauth_client_lost = no
	pidfile = "/var/run/freeradius/freeradius.pid"
	checkrad = "/usr/sbin/checkrad"
	debug_level = 0
	proxy_requests = yes
 log {
 	stripped_names = no
 	auth = no
 	auth_badpass = no
 	auth_goodpass = no
 	colourise = yes
 	msg_denied = "You are already logged in - access denied"
 }
 resources {
 }
 security {
 	max_attributes = 200
 	reject_delay = 1.000000
 	status_server = yes
 }
}
radiusd: #### Loading Realms and Home Servers ####
 proxy server {
 	retry_delay = 5
 	retry_count = 3
 	default_fallback = no
 	dead_time = 120
 	wake_all_if_all_dead = no
 }
 home_server localhost {
 	ipaddr = 127.0.0.1
 	port = 1812
 	type = "auth"
 	secret = <<< secret >>>
 	response_window = 20.000000
 	response_timeouts = 1
 	max_outstanding = 65536
 	zombie_period = 40
 	status_check = "status-server"
 	ping_interval = 30
 	check_interval = 30
 	check_timeout = 4
 	num_answers_to_alive = 3
 	revive_interval = 120
  limit {
  	max_connections = 16
  	max_requests = 0
  	lifetime = 0
  	idle_timeout = 0
  }
  coa {
  	irt = 2
  	mrt = 16
  	mrc = 5
  	mrd = 30
  }
 }
 home_server_pool my_auth_failover {
	type = fail-over
	home_server = localhost
 }
 realm example.com {
	auth_pool = my_auth_failover
 }
 realm LOCAL {
 }
radiusd: #### Loading Clients ####
 client localhost {
 	ipaddr = 127.0.0.1
 	require_message_authenticator = no
 	secret = <<< secret >>>
 	nas_type = "other"
 	proto = "*"
  limit {
  	max_connections = 16
  	lifetime = 0
  	idle_timeout = 30
  }
 }
 client localhost_ipv6 {
 	ipv6addr = ::1
 	require_message_authenticator = no
 	secret = <<< secret >>>
  limit {
  	max_connections = 16
  	lifetime = 0
  	idle_timeout = 30
  }
 }
Debugger not attached
systemd watchdog is disabled
 # Creating Auth-Type = mschap
 # Creating Auth-Type = eap
 # Creating Auth-Type = PAP
 # Creating Auth-Type = CHAP
 # Creating Auth-Type = MS-CHAP
 # Creating Auth-Type = digest
 # Creating Autz-Type = New-TLS-Connection
radiusd: #### Instantiating modules ####
 modules {
  # Loaded module rlm_files
  # Loading module "files" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/files
  files {
  	filename = "Freeradius/Conf/E_tofu_wpa3//mods-config/files/authorize"
  	acctusersfile = "Freeradius/Conf/E_tofu_wpa3//mods-config/files/accounting"
  	preproxy_usersfile = "Freeradius/Conf/E_tofu_wpa3//mods-config/files/pre-proxy"
  }
  # Loaded module rlm_passwd
  # Loading module "etc_passwd" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/passwd
  passwd etc_passwd {
  	filename = "/etc/passwd"
  	format = "*User-Name:Crypt-Password:"
  	delimiter = ":"
  	ignore_nislike = no
  	ignore_empty = yes
  	allow_multiple_keys = no
  	hash_size = 100
  }
  # Loaded module rlm_expr
  # Loading module "expr" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/expr
  expr {
  	safe_characters = "@abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789.-_: /√§√©√∂√º√†√¢√¶√ß√®√©√™√´√Æ√Ø√¥≈ì√π√ª√ºa√ø√Ñ√â√ñ√ú√ü√Ä√Ç√Ü√á√à√â√ä√ã√é√è√î≈í√ô√õ√ú≈∏"
  }
  # Loaded module rlm_soh
  # Loading module "soh" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/soh
  soh {
  	dhcp = yes
  }
  # Loaded module rlm_digest
  # Loading module "digest" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/digest
  # Loaded module rlm_dynamic_clients
  # Loading module "dynamic_clients" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/dynamic_clients
  # Loaded module rlm_unix
  # Loading module "unix" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/unix
  unix {
  	radwtmp = "/var/log/freeradius/radwtmp"
  }
Creating attribute Unix-Group
  # Loaded module rlm_exec
  # Loading module "echo" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/echo
  exec echo {
  	wait = yes
  	program = "/bin/echo %{User-Name}"
  	input_pairs = "request"
  	output_pairs = "reply"
  	shell_escape = yes
  }
  # Loaded module rlm_preprocess
  # Loading module "preprocess" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/preprocess
  preprocess {
  	huntgroups = "Freeradius/Conf/E_tofu_wpa3//mods-config/preprocess/huntgroups"
  	hints = "Freeradius/Conf/E_tofu_wpa3//mods-config/preprocess/hints"
  	with_ascend_hack = no
  	ascend_channels_per_line = 23
  	with_ntdomain_hack = no
  	with_specialix_jetstream_hack = no
  	with_cisco_vsa_hack = no
  	with_alvarion_vsa_hack = no
  }
  # Loaded module rlm_replicate
  # Loading module "replicate" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/replicate
  # Loaded module rlm_pap
  # Loading module "pap" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/pap
  pap {
  	normalise = yes
  }
  # Loaded module rlm_always
  # Loading module "reject" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/always
  always reject {
  	rcode = "reject"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "fail" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/always
  always fail {
  	rcode = "fail"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "ok" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/always
  always ok {
  	rcode = "ok"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "handled" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/always
  always handled {
  	rcode = "handled"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "invalid" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/always
  always invalid {
  	rcode = "invalid"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "userlock" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/always
  always userlock {
  	rcode = "userlock"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "notfound" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/always
  always notfound {
  	rcode = "notfound"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "noop" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/always
  always noop {
  	rcode = "noop"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "updated" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/always
  always updated {
  	rcode = "updated"
  	simulcount = 0
  	mpp = no
  }
  # Loaded module rlm_detail
  # Loading module "detail" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/detail
  detail {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loaded module rlm_cache
  # Loading module "cache_eap" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/cache_eap
  cache cache_eap {
  	driver = "rlm_cache_rbtree"
  	key = "%{%{control:State}:-%{%{reply:State}:-%{State}}}"
  	ttl = 15
  	max_entries = 0
  	epoch = 0
  	add_stats = no
  }
  # Loaded module rlm_mschap
  # Loading module "mschap" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/mschap
  mschap {
  	use_mppe = yes
  	require_encryption = no
  	require_strong = no
  	with_ntdomain_hack = yes
   passchange {
   }
  	allow_retry = yes
  	winbind_retry_with_normalised_username = no
  }
  # Loaded module rlm_eap
  # Loading module "eap" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/eap
  eap {
  	default_eap_type = "md5"
  	timer_expire = 60
  	ignore_unknown_eap_types = no
  	cisco_accounting_username_bug = no
  	max_sessions = 16384
  }
  # Loaded module rlm_logintime
  # Loading module "logintime" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/logintime
  logintime {
  	minimum_timeout = 60
  }
  # Loaded module rlm_utf8
  # Loading module "utf8" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/utf8
  # Loaded module rlm_unpack
  # Loading module "unpack" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/unpack
  # Loaded module rlm_radutmp
  # Loading module "radutmp" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/radutmp
  radutmp {
  	filename = "/var/log/freeradius/radutmp"
  	username = "%{User-Name}"
  	case_sensitive = yes
  	check_with_nas = yes
  	permissions = 384
  	caller_id = yes
  }
  # Loaded module rlm_expiration
  # Loading module "expiration" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/expiration
  # Loaded module rlm_chap
  # Loading module "chap" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/chap
  # Loaded module rlm_realm
  # Loading module "IPASS" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/realm
  realm IPASS {
  	format = "prefix"
  	delimiter = "/"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "suffix" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/realm
  realm suffix {
  	format = "suffix"
  	delimiter = "@"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "bangpath" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/realm
  realm bangpath {
  	format = "prefix"
  	delimiter = "!"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "realmpercent" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/realm
  realm realmpercent {
  	format = "suffix"
  	delimiter = "%"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "ntdomain" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/realm
  realm ntdomain {
  	format = "prefix"
  	delimiter = "\\"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "sradutmp" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/sradutmp
  radutmp sradutmp {
  	filename = "/var/log/freeradius/sradutmp"
  	username = "%{User-Name}"
  	case_sensitive = yes
  	check_with_nas = yes
  	permissions = 420
  	caller_id = no
  }
  # Loaded module rlm_attr_filter
  # Loading module "attr_filter.post-proxy" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/attr_filter
  attr_filter attr_filter.post-proxy {
  	filename = "Freeradius/Conf/E_tofu_wpa3//mods-config/attr_filter/post-proxy"
  	key = "%{Realm}"
  	relaxed = no
  }
  # Loading module "attr_filter.pre-proxy" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/attr_filter
  attr_filter attr_filter.pre-proxy {
  	filename = "Freeradius/Conf/E_tofu_wpa3//mods-config/attr_filter/pre-proxy"
  	key = "%{Realm}"
  	relaxed = no
  }
  # Loading module "attr_filter.access_reject" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/attr_filter
  attr_filter attr_filter.access_reject {
  	filename = "Freeradius/Conf/E_tofu_wpa3//mods-config/attr_filter/access_reject"
  	key = "%{User-Name}"
  	relaxed = no
  }
  # Loading module "attr_filter.access_challenge" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/attr_filter
  attr_filter attr_filter.access_challenge {
  	filename = "Freeradius/Conf/E_tofu_wpa3//mods-config/attr_filter/access_challenge"
  	key = "%{User-Name}"
  	relaxed = no
  }
  # Loading module "attr_filter.accounting_response" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/attr_filter
  attr_filter attr_filter.accounting_response {
  	filename = "Freeradius/Conf/E_tofu_wpa3//mods-config/attr_filter/accounting_response"
  	key = "%{User-Name}"
  	relaxed = no
  }
  # Loading module "attr_filter.coa" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/attr_filter
  attr_filter attr_filter.coa {
  	filename = "Freeradius/Conf/E_tofu_wpa3//mods-config/attr_filter/coa"
  	key = "%{User-Name}"
  	relaxed = no
  }
  # Loading module "ntlm_auth" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/ntlm_auth
  exec ntlm_auth {
  	wait = yes
  	program = "/path/to/ntlm_auth --request-nt-key --domain=MYDOMAIN --username=%{mschap:User-Name} --password=%{User-Password}"
  	shell_escape = yes
  }
  # Loading module "auth_log" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/detail.log
  detail auth_log {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/auth-detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loading module "reply_log" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/detail.log
  detail reply_log {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/reply-detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loading module "pre_proxy_log" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/detail.log
  detail pre_proxy_log {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/pre-proxy-detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loading module "post_proxy_log" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/detail.log
  detail post_proxy_log {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/post-proxy-detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loading module "exec" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/exec
  exec {
  	wait = no
  	input_pairs = "request"
  	shell_escape = yes
  	timeout = 10
  }
  # Loaded module rlm_linelog
  # Loading module "linelog" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/linelog
  linelog {
  	filename = "/var/log/freeradius/linelog"
  	escape_filenames = no
  	syslog_severity = "info"
  	permissions = 384
  	format = "This is a log message for %{User-Name}"
  	reference = "messages.%{%{reply:Packet-Type}:-default}"
  }
  # Loading module "log_accounting" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/linelog
  linelog log_accounting {
  	filename = "/var/log/freeradius/linelog-accounting"
  	escape_filenames = no
  	syslog_severity = "info"
  	permissions = 384
  	format = ""
  	reference = "Accounting-Request.%{%{Acct-Status-Type}:-unknown}"
  }
  instantiate {
  }
  # Instantiating module "files" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/files
reading pairlist file Freeradius/Conf/E_tofu_wpa3//mods-config/files/authorize
reading pairlist file Freeradius/Conf/E_tofu_wpa3//mods-config/files/accounting
reading pairlist file Freeradius/Conf/E_tofu_wpa3//mods-config/files/pre-proxy
  # Instantiating module "etc_passwd" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/passwd
rlm_passwd: nfields: 3 keyfield 0(User-Name) listable: no
  # Instantiating module "preprocess" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/preprocess
reading pairlist file Freeradius/Conf/E_tofu_wpa3//mods-config/preprocess/huntgroups
reading pairlist file Freeradius/Conf/E_tofu_wpa3//mods-config/preprocess/hints
  # Instantiating module "pap" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/pap
  # Instantiating module "reject" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/always
  # Instantiating module "fail" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/always
  # Instantiating module "ok" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/always
  # Instantiating module "handled" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/always
  # Instantiating module "invalid" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/always
  # Instantiating module "userlock" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/always
  # Instantiating module "notfound" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/always
  # Instantiating module "noop" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/always
  # Instantiating module "updated" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/always
  # Instantiating module "detail" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/detail
  # Instantiating module "cache_eap" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/cache_eap
rlm_cache (cache_eap): Driver rlm_cache_rbtree (module rlm_cache_rbtree) loaded and linked
  # Instantiating module "mschap" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/mschap
rlm_mschap (mschap): using internal authentication
  # Instantiating module "eap" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/eap
   # Linked to sub-module rlm_eap_md5
   # Linked to sub-module rlm_eap_gtc
   gtc {
   	challenge = "Password: "
   	auth_type = "PAP"
   }
   # Linked to sub-module rlm_eap_tls
   tls {
   	tls = "tls-common"
   }
   tls-config tls-common {
   	verify_depth = 0
   	ca_path = "Freeradius/Conf/E_tofu_wpa3//certs"
   	pem_file_type = yes
   	private_key_file = "Freeradius/Conf/E_tofu_wpa3//certs/server.key"
   	certificate_file = "Freeradius/Conf/E_tofu_wpa3//certs/server.crt"
   	ca_file = "Freeradius/Conf/E_tofu_wpa3//certs/ca.pem"
   	private_key_password = <<< secret >>>
   	fragment_size = 1024
   	include_length = yes
   	auto_chain = yes
   	check_crl = no
   	check_all_crl = no
   	ca_path_reload_interval = 0
   	cipher_list = "DEFAULT"
   	cipher_server_preference = no
   	reject_unknown_intermediate_ca = no
   	ecdh_curve = ""
   	tls_max_version = "1.2"
   	tls_min_version = "1.2"
    cache {
    	enable = no
    	lifetime = 24
    	max_entries = 255
    }
    verify {
    	skip_if_ocsp_ok = no
    }
    ocsp {
    	enable = no
    	override_cert_url = yes
    	url = "http://127.0.0.1/ocsp/"
    	use_nonce = yes
    	timeout = 0
    	softfail = no
    }
   }
   # Linked to sub-module rlm_eap_ttls
   ttls {
   	tls = "tls-common"
   	default_eap_type = "md5"
   	copy_request_to_tunnel = no
   	use_tunneled_reply = no
   	virtual_server = "inner-tunnel"
   	include_length = yes
   	require_client_cert = no
   }
tls: Using cached TLS configuration from previous invocation
   # Linked to sub-module rlm_eap_peap
   peap {
   	tls = "tls-common"
   	default_eap_type = "mschapv2"
   	copy_request_to_tunnel = no
   	use_tunneled_reply = no
   	proxy_tunneled_request_as_eap = yes
   	virtual_server = "inner-tunnel"
   	soh = no
   	require_client_cert = no
   }
tls: Using cached TLS configuration from previous invocation
   # Linked to sub-module rlm_eap_mschapv2
   mschapv2 {
   	with_ntdomain_hack = no
   	send_error = no
   }
  # Instantiating module "logintime" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/logintime
  # Instantiating module "expiration" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/expiration
  # Instantiating module "IPASS" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/realm
  # Instantiating module "suffix" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/realm
  # Instantiating module "bangpath" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/realm
  # Instantiating module "realmpercent" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/realm
  # Instantiating module "ntdomain" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/realm
  # Instantiating module "attr_filter.post-proxy" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/attr_filter
reading pairlist file Freeradius/Conf/E_tofu_wpa3//mods-config/attr_filter/post-proxy
  # Instantiating module "attr_filter.pre-proxy" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/attr_filter
reading pairlist file Freeradius/Conf/E_tofu_wpa3//mods-config/attr_filter/pre-proxy
  # Instantiating module "attr_filter.access_reject" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/attr_filter
reading pairlist file Freeradius/Conf/E_tofu_wpa3//mods-config/attr_filter/access_reject
  # Instantiating module "attr_filter.access_challenge" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/attr_filter
reading pairlist file Freeradius/Conf/E_tofu_wpa3//mods-config/attr_filter/access_challenge
  # Instantiating module "attr_filter.accounting_response" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/attr_filter
reading pairlist file Freeradius/Conf/E_tofu_wpa3//mods-config/attr_filter/accounting_response
  # Instantiating module "attr_filter.coa" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/attr_filter
reading pairlist file Freeradius/Conf/E_tofu_wpa3//mods-config/attr_filter/coa
  # Instantiating module "auth_log" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/detail.log
rlm_detail (auth_log): 'User-Password' suppressed, will not appear in detail output
  # Instantiating module "reply_log" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/detail.log
  # Instantiating module "pre_proxy_log" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/detail.log
  # Instantiating module "post_proxy_log" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/detail.log
  # Instantiating module "linelog" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/linelog
  # Instantiating module "log_accounting" from file Freeradius/Conf/E_tofu_wpa3//mods-enabled/linelog
 } # modules
radiusd: #### Loading Virtual Servers ####
server { # from file Freeradius/Conf/E_tofu_wpa3//radiusd.conf
} # server
server inner-tunnel { # from file Freeradius/Conf/E_tofu_wpa3//sites-enabled/inner-tunnel
 # Loading authenticate {...}
Compiling Auth-Type PAP for attr Auth-Type
Compiling Auth-Type CHAP for attr Auth-Type
Compiling Auth-Type MS-CHAP for attr Auth-Type
 # Loading authorize {...}
Ignoring "sql" (see raddb/mods-available/README.rst)
Ignoring "ldap" (see raddb/mods-available/README.rst)
 # Loading session {...}
 # Loading post-proxy {...}
 # Loading post-auth {...}
 # Skipping contents of 'if' as it is always 'false' -- Freeradius/Conf/E_tofu_wpa3//sites-enabled/inner-tunnel:336
Compiling Post-Auth-Type REJECT for attr Post-Auth-Type
} # server inner-tunnel
server default { # from file Freeradius/Conf/E_tofu_wpa3//sites-enabled/default
 # Loading authenticate {...}
Compiling Auth-Type PAP for attr Auth-Type
Compiling Auth-Type CHAP for attr Auth-Type
Compiling Auth-Type MS-CHAP for attr Auth-Type
 # Loading authorize {...}
Compiling Autz-Type New-TLS-Connection for attr Autz-Type
 # Loading preacct {...}
 # Loading accounting {...}
 # Loading post-proxy {...}
 # Loading post-auth {...}
Compiling Post-Auth-Type REJECT for attr Post-Auth-Type
Compiling Post-Auth-Type Challenge for attr Post-Auth-Type
Compiling Post-Auth-Type Client-Lost for attr Post-Auth-Type
} # server default
radiusd: #### Opening IP addresses and Ports ####
listen {
  	type = "auth"
  	ipaddr = 127.0.0.1
  	port = 18120
}
listen {
  	type = "auth"
  	ipaddr = *
  	port = 0
   limit {
   	max_connections = 16
   	lifetime = 0
   	idle_timeout = 30
   }
}
listen {
  	type = "acct"
  	ipaddr = *
  	port = 0
   limit {
   	max_connections = 16
   	lifetime = 0
   	idle_timeout = 30
   }
}
listen {
  	type = "auth"
  	ipv6addr = ::
  	port = 0
   limit {
   	max_connections = 16
   	lifetime = 0
   	idle_timeout = 30
   }
}
listen {
  	type = "acct"
  	ipv6addr = ::
  	port = 0
   limit {
   	max_connections = 16
   	lifetime = 0
   	idle_timeout = 30
   }
}
Listening on auth address 127.0.0.1 port 18120 bound to server inner-tunnel
Listening on auth address * port 1812 bound to server default
Listening on acct address * port 1813 bound to server default
Listening on auth address :: port 1812 bound to server default
Listening on acct address :: port 1813 bound to server default
Listening on proxy address * port 59930
Listening on proxy address :: port 34928
Ready to process requests
(0) Received Access-Request Id 0 from 127.0.0.1:37284 to 127.0.0.1:1812 length 230
(0)   User-Name = "anonymous"
(0)   NAS-IP-Address = 127.0.0.1
(0)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(0)   NAS-Port-Type = Wireless-802.11
(0)   Service-Type = Framed-User
(0)   NAS-Port = 1
(0)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(0)   Connect-Info = "CONNECT 54Mbps 802.11g"
(0)   Acct-Session-Id = "2CB4125B3C3CE6E5"
(0)   Acct-Multi-Session-Id = "E6FC7EC4F74E1D18"
(0)   WLAN-Pairwise-Cipher = 1027076
(0)   WLAN-Group-Cipher = 1027076
(0)   WLAN-AKM-Suite = 1027073
(0)   WLAN-Group-Mgmt-Cipher = 1027078
(0)   Framed-MTU = 1400
(0)   EAP-Message = 0x0296000e01616e6f6e796d6f7573
(0)   Message-Authenticator = 0x3d8b640af32fbfdc0e7659d66238bde1
(0) # Executing section authorize from file Freeradius/Conf/E_tofu_wpa3//sites-enabled/default
(0)   authorize {
(0)     policy filter_username {
(0)       if (&User-Name) {
(0)       if (&User-Name)  -> TRUE
(0)       if (&User-Name)  {
(0)         if (&User-Name =~ / /) {
(0)         if (&User-Name =~ / /)  -> FALSE
(0)         if (&User-Name =~ /@[^@]*@/ ) {
(0)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(0)         if (&User-Name =~ /\.\./ ) {
(0)         if (&User-Name =~ /\.\./ )  -> FALSE
(0)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(0)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(0)         if (&User-Name =~ /\.$/)  {
(0)         if (&User-Name =~ /\.$/)   -> FALSE
(0)         if (&User-Name =~ /@\./)  {
(0)         if (&User-Name =~ /@\./)   -> FALSE
(0)       } # if (&User-Name)  = notfound
(0)     } # policy filter_username = notfound
(0)     [preprocess] = ok
(0)     [chap] = noop
(0)     [mschap] = noop
(0)     [digest] = noop
(0) suffix: Checking for suffix after "@"
(0) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(0) suffix: No such realm "NULL"
(0)     [suffix] = noop
(0) eap: Peer sent EAP Response (code 2) ID 150 length 14
(0) eap: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
(0)     [eap] = ok
(0)   } # authorize = ok
(0) Found Auth-Type = eap
(0) # Executing group from file Freeradius/Conf/E_tofu_wpa3//sites-enabled/default
(0)   authenticate {
(0) eap: Peer sent packet with method EAP Identity (1)
(0) eap: Calling submodule eap_md5 to process data
(0) eap_md5: Issuing MD5 Challenge
(0) eap: Sending EAP Request (code 1) ID 151 length 22
(0) eap: EAP session adding &reply:State = 0x16eca8f0167bac43
(0)     [eap] = handled
(0)   } # authenticate = handled
(0) Using Post-Auth-Type Challenge
(0) # Executing group from file Freeradius/Conf/E_tofu_wpa3//sites-enabled/default
(0)   Challenge { ... } # empty sub-section is ignored
(0) Sent Access-Challenge Id 0 from 127.0.0.1:1812 to 127.0.0.1:37284 length 80
(0)   EAP-Message = 0x019700160410f01de1592ad8ddc3524f3e86cb4f9f90
(0)   Message-Authenticator = 0x00000000000000000000000000000000
(0)   State = 0x16eca8f0167bac43fe571917be7c23ff
(0) Finished request
Waking up in 4.9 seconds.
(1) Received Access-Request Id 1 from 127.0.0.1:37284 to 127.0.0.1:1812 length 241
(1)   User-Name = "anonymous"
(1)   NAS-IP-Address = 127.0.0.1
(1)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(1)   NAS-Port-Type = Wireless-802.11
(1)   Service-Type = Framed-User
(1)   NAS-Port = 1
(1)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(1)   Connect-Info = "CONNECT 54Mbps 802.11g"
(1)   Acct-Session-Id = "2CB4125B3C3CE6E5"
(1)   Acct-Multi-Session-Id = "E6FC7EC4F74E1D18"
(1)   WLAN-Pairwise-Cipher = 1027076
(1)   WLAN-Group-Cipher = 1027076
(1)   WLAN-AKM-Suite = 1027073
(1)   WLAN-Group-Mgmt-Cipher = 1027078
(1)   Framed-MTU = 1400
(1)   EAP-Message = 0x02970007031915
(1)   State = 0x16eca8f0167bac43fe571917be7c23ff
(1)   Message-Authenticator = 0x8179bf3137c9f69e059ef9bc782473e9
(1) session-state: No cached attributes
(1) # Executing section authorize from file Freeradius/Conf/E_tofu_wpa3//sites-enabled/default
(1)   authorize {
(1)     policy filter_username {
(1)       if (&User-Name) {
(1)       if (&User-Name)  -> TRUE
(1)       if (&User-Name)  {
(1)         if (&User-Name =~ / /) {
(1)         if (&User-Name =~ / /)  -> FALSE
(1)         if (&User-Name =~ /@[^@]*@/ ) {
(1)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(1)         if (&User-Name =~ /\.\./ ) {
(1)         if (&User-Name =~ /\.\./ )  -> FALSE
(1)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(1)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(1)         if (&User-Name =~ /\.$/)  {
(1)         if (&User-Name =~ /\.$/)   -> FALSE
(1)         if (&User-Name =~ /@\./)  {
(1)         if (&User-Name =~ /@\./)   -> FALSE
(1)       } # if (&User-Name)  = notfound
(1)     } # policy filter_username = notfound
(1)     [preprocess] = ok
(1)     [chap] = noop
(1)     [mschap] = noop
(1)     [digest] = noop
(1) suffix: Checking for suffix after "@"
(1) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(1) suffix: No such realm "NULL"
(1)     [suffix] = noop
(1) eap: Peer sent EAP Response (code 2) ID 151 length 7
(1) eap: No EAP Start, assuming it's an on-going EAP conversation
(1)     [eap] = updated
(1)     [files] = noop
(1)     [expiration] = noop
(1)     [logintime] = noop
Not doing PAP as Auth-Type is already set.
(1)     [pap] = noop
(1)   } # authorize = updated
(1) Found Auth-Type = eap
(1) # Executing group from file Freeradius/Conf/E_tofu_wpa3//sites-enabled/default
(1)   authenticate {
(1) eap: Expiring EAP session with state 0x16eca8f0167bac43
(1) eap: Finished EAP session with state 0x16eca8f0167bac43
(1) eap: Previous EAP request found for state 0x16eca8f0167bac43, released from the list
(1) eap: Peer sent packet with method EAP NAK (3)
(1) eap: Found mutually acceptable type PEAP (25)
(1) eap: Calling submodule eap_peap to process data
(1) eap_peap: (TLS) Initiating new session
(1) eap: Sending EAP Request (code 1) ID 152 length 6
(1) eap: EAP session adding &reply:State = 0x16eca8f01774b143
(1)     [eap] = handled
(1)   } # authenticate = handled
(1) Using Post-Auth-Type Challenge
(1) # Executing group from file Freeradius/Conf/E_tofu_wpa3//sites-enabled/default
(1)   Challenge { ... } # empty sub-section is ignored
(1) session-state: Saving cached attributes
(1)   Framed-MTU = 994
(1) Sent Access-Challenge Id 1 from 127.0.0.1:1812 to 127.0.0.1:37284 length 64
(1)   EAP-Message = 0x019800061920
(1)   Message-Authenticator = 0x00000000000000000000000000000000
(1)   State = 0x16eca8f01774b143fe571917be7c23ff
(1) Finished request
Waking up in 4.9 seconds.
(2) Received Access-Request Id 2 from 127.0.0.1:37284 to 127.0.0.1:1812 length 476
(2)   User-Name = "anonymous"
(2)   NAS-IP-Address = 127.0.0.1
(2)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(2)   NAS-Port-Type = Wireless-802.11
(2)   Service-Type = Framed-User
(2)   NAS-Port = 1
(2)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(2)   Connect-Info = "CONNECT 54Mbps 802.11g"
(2)   Acct-Session-Id = "2CB4125B3C3CE6E5"
(2)   Acct-Multi-Session-Id = "E6FC7EC4F74E1D18"
(2)   WLAN-Pairwise-Cipher = 1027076
(2)   WLAN-Group-Cipher = 1027076
(2)   WLAN-AKM-Suite = 1027073
(2)   WLAN-Group-Mgmt-Cipher = 1027078
(2)   Framed-MTU = 1400
(2)   EAP-Message = 0x029800f21980000000e816030300e3010000df0303000000016eb096e2e05aa72068356e234a5862c333dab258842d3c8a63dddce7000076c02cc030c0adc024c028c00ac014c0afc05dc061c049c04dc02bc02fc0acc023c027c009c013c0aec05cc060c048c04c009dc09d003d0035c032c02ac00fc02ec026c005c0a1c05fc063c051c04bc04fc03d009cc09c003c002fc031c029c00ec02dc025c004c0a0c05ec062c050c04ac04ec03c00ff01000040000a0010000e001d001700180019001a001b001c000d001600140603050306010501040303030401030102030201000b00020100001600000017000000230000
(2)   State = 0x16eca8f01774b143fe571917be7c23ff
(2)   Message-Authenticator = 0x0108b66fb7396c0bb7a9e952fa219c49
(2) Restoring &session-state
(2)   &session-state:Framed-MTU = 994
(2) # Executing section authorize from file Freeradius/Conf/E_tofu_wpa3//sites-enabled/default
(2)   authorize {
(2)     policy filter_username {
(2)       if (&User-Name) {
(2)       if (&User-Name)  -> TRUE
(2)       if (&User-Name)  {
(2)         if (&User-Name =~ / /) {
(2)         if (&User-Name =~ / /)  -> FALSE
(2)         if (&User-Name =~ /@[^@]*@/ ) {
(2)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(2)         if (&User-Name =~ /\.\./ ) {
(2)         if (&User-Name =~ /\.\./ )  -> FALSE
(2)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(2)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(2)         if (&User-Name =~ /\.$/)  {
(2)         if (&User-Name =~ /\.$/)   -> FALSE
(2)         if (&User-Name =~ /@\./)  {
(2)         if (&User-Name =~ /@\./)   -> FALSE
(2)       } # if (&User-Name)  = notfound
(2)     } # policy filter_username = notfound
(2)     [preprocess] = ok
(2)     [chap] = noop
(2)     [mschap] = noop
(2)     [digest] = noop
(2) suffix: Checking for suffix after "@"
(2) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(2) suffix: No such realm "NULL"
(2)     [suffix] = noop
(2) eap: Peer sent EAP Response (code 2) ID 152 length 242
(2) eap: Continuing tunnel setup
(2)     [eap] = ok
(2)   } # authorize = ok
(2) Found Auth-Type = eap
(2) # Executing group from file Freeradius/Conf/E_tofu_wpa3//sites-enabled/default
(2)   authenticate {
(2) eap: Expiring EAP session with state 0x16eca8f01774b143
(2) eap: Finished EAP session with state 0x16eca8f01774b143
(2) eap: Previous EAP request found for state 0x16eca8f01774b143, released from the list
(2) eap: Peer sent packet with method EAP PEAP (25)
(2) eap: Calling submodule eap_peap to process data
(2) eap_peap: (TLS) EAP Peer says that the final record size will be 232 bytes
(2) eap_peap: (TLS) EAP Got all data (232 bytes)
(2) eap_peap: (TLS) Handshake state - before SSL initialization
(2) eap_peap: (TLS) Handshake state - Server before SSL initialization
(2) eap_peap: (TLS) Handshake state - Server before SSL initialization
(2) eap_peap: (TLS) recv TLS 1.3 Handshake, ClientHello
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read client hello
(2) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHello
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server hello
(2) eap_peap: (TLS) send TLS 1.2 Handshake, Certificate
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write certificate
(2) eap_peap: (TLS) send TLS 1.2 Handshake, ServerKeyExchange
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write key exchange
(2) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHelloDone
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server done
(2) eap_peap: (TLS) Server : Need to read more data: SSLv3/TLS write server done
(2) eap_peap: (TLS) In Handshake Phase
(2) eap: Sending EAP Request (code 1) ID 153 length 1004
(2) eap: EAP session adding &reply:State = 0x16eca8f01475b143
(2)     [eap] = handled
(2)   } # authenticate = handled
(2) Using Post-Auth-Type Challenge
(2) # Executing group from file Freeradius/Conf/E_tofu_wpa3//sites-enabled/default
(2)   Challenge { ... } # empty sub-section is ignored
(2) session-state: Saving cached attributes
(2)   Framed-MTU = 994
(2)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(2)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(2)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(2)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(2)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(2) Sent Access-Challenge Id 2 from 127.0.0.1:1812 to 127.0.0.1:37284 length 1068
(2)   EAP-Message = 0x019903ec19c000000ac6160303003d020000390303a19e8634a0cc73c2f01b182c90edfbaed751c69f70cae7be767990b6955ce77700c030000011ff01000100000b0004030001020017000016030309450b00094100093e00043a308204363082031ea003020102020101300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232303134333834335a170d3234303231383134333834335a307c310b3009060355040613024652310f300d06035504080c0652616469757331153013060355040a0c0c4578616d706c6520496e632e3123302106035504030c1a4578616d70
(2)   Message-Authenticator = 0x00000000000000000000000000000000
(2)   State = 0x16eca8f01475b143fe571917be7c23ff
(2) Finished request
Waking up in 4.9 seconds.
(3) Received Access-Request Id 3 from 127.0.0.1:37284 to 127.0.0.1:1812 length 240
(3)   User-Name = "anonymous"
(3)   NAS-IP-Address = 127.0.0.1
(3)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(3)   NAS-Port-Type = Wireless-802.11
(3)   Service-Type = Framed-User
(3)   NAS-Port = 1
(3)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(3)   Connect-Info = "CONNECT 54Mbps 802.11g"
(3)   Acct-Session-Id = "2CB4125B3C3CE6E5"
(3)   Acct-Multi-Session-Id = "E6FC7EC4F74E1D18"
(3)   WLAN-Pairwise-Cipher = 1027076
(3)   WLAN-Group-Cipher = 1027076
(3)   WLAN-AKM-Suite = 1027073
(3)   WLAN-Group-Mgmt-Cipher = 1027078
(3)   Framed-MTU = 1400
(3)   EAP-Message = 0x029900061900
(3)   State = 0x16eca8f01475b143fe571917be7c23ff
(3)   Message-Authenticator = 0xa5ac468142d38515bea533ce9f6cab30
(3) Restoring &session-state
(3)   &session-state:Framed-MTU = 994
(3)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(3)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(3)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(3)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(3)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(3) # Executing section authorize from file Freeradius/Conf/E_tofu_wpa3//sites-enabled/default
(3)   authorize {
(3)     policy filter_username {
(3)       if (&User-Name) {
(3)       if (&User-Name)  -> TRUE
(3)       if (&User-Name)  {
(3)         if (&User-Name =~ / /) {
(3)         if (&User-Name =~ / /)  -> FALSE
(3)         if (&User-Name =~ /@[^@]*@/ ) {
(3)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(3)         if (&User-Name =~ /\.\./ ) {
(3)         if (&User-Name =~ /\.\./ )  -> FALSE
(3)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(3)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(3)         if (&User-Name =~ /\.$/)  {
(3)         if (&User-Name =~ /\.$/)   -> FALSE
(3)         if (&User-Name =~ /@\./)  {
(3)         if (&User-Name =~ /@\./)   -> FALSE
(3)       } # if (&User-Name)  = notfound
(3)     } # policy filter_username = notfound
(3)     [preprocess] = ok
(3)     [chap] = noop
(3)     [mschap] = noop
(3)     [digest] = noop
(3) suffix: Checking for suffix after "@"
(3) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(3) suffix: No such realm "NULL"
(3)     [suffix] = noop
(3) eap: Peer sent EAP Response (code 2) ID 153 length 6
(3) eap: Continuing tunnel setup
(3)     [eap] = ok
(3)   } # authorize = ok
(3) Found Auth-Type = eap
(3) # Executing group from file Freeradius/Conf/E_tofu_wpa3//sites-enabled/default
(3)   authenticate {
(3) eap: Expiring EAP session with state 0x16eca8f01475b143
(3) eap: Finished EAP session with state 0x16eca8f01475b143
(3) eap: Previous EAP request found for state 0x16eca8f01475b143, released from the list
(3) eap: Peer sent packet with method EAP PEAP (25)
(3) eap: Calling submodule eap_peap to process data
(3) eap_peap: (TLS) Peer ACKed our handshake fragment
(3) eap: Sending EAP Request (code 1) ID 154 length 1000
(3) eap: EAP session adding &reply:State = 0x16eca8f01576b143
(3)     [eap] = handled
(3)   } # authenticate = handled
(3) Using Post-Auth-Type Challenge
(3) # Executing group from file Freeradius/Conf/E_tofu_wpa3//sites-enabled/default
(3)   Challenge { ... } # empty sub-section is ignored
(3) session-state: Saving cached attributes
(3)   Framed-MTU = 994
(3)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(3)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(3)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(3)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(3)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(3) Sent Access-Challenge Id 3 from 127.0.0.1:1812 to 127.0.0.1:37284 length 1064
(3)   EAP-Message = 0x019a03e81940c066b4487955d91fae555c757e3bd231c82efaecfd888dd97a9457c262e278b3fbdaf7025184f0c3f702b6ea8337c849aa0bbb2b42c758682ce692b07548e23d780d4dccfed66518d7984235a5b595ee107882efde4494975e2fbe9f38b06c7b3e098706411809ce98342f9c487ab866d8845128d0eb8db8d24a1f6978f41cc4ab813a516702d96003087448f425b838164e3c3419af9cac50755771cf5d87bd38ef6a2a3211e139980004fe308204fa308203e2a0030201020214669e28efd6428e45774f1d66f1b15fb62d50776b300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72
(3)   Message-Authenticator = 0x00000000000000000000000000000000
(3)   State = 0x16eca8f01576b143fe571917be7c23ff
(3) Finished request
Waking up in 4.8 seconds.
(4) Received Access-Request Id 4 from 127.0.0.1:37284 to 127.0.0.1:1812 length 240
(4)   User-Name = "anonymous"
(4)   NAS-IP-Address = 127.0.0.1
(4)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(4)   NAS-Port-Type = Wireless-802.11
(4)   Service-Type = Framed-User
(4)   NAS-Port = 1
(4)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(4)   Connect-Info = "CONNECT 54Mbps 802.11g"
(4)   Acct-Session-Id = "2CB4125B3C3CE6E5"
(4)   Acct-Multi-Session-Id = "E6FC7EC4F74E1D18"
(4)   WLAN-Pairwise-Cipher = 1027076
(4)   WLAN-Group-Cipher = 1027076
(4)   WLAN-AKM-Suite = 1027073
(4)   WLAN-Group-Mgmt-Cipher = 1027078
(4)   Framed-MTU = 1400
(4)   EAP-Message = 0x029a00061900
(4)   State = 0x16eca8f01576b143fe571917be7c23ff
(4)   Message-Authenticator = 0x2f40c3b755ee7c6447038a9ea897b1e5
(4) Restoring &session-state
(4)   &session-state:Framed-MTU = 994
(4)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(4) # Executing section authorize from file Freeradius/Conf/E_tofu_wpa3//sites-enabled/default
(4)   authorize {
(4)     policy filter_username {
(4)       if (&User-Name) {
(4)       if (&User-Name)  -> TRUE
(4)       if (&User-Name)  {
(4)         if (&User-Name =~ / /) {
(4)         if (&User-Name =~ / /)  -> FALSE
(4)         if (&User-Name =~ /@[^@]*@/ ) {
(4)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(4)         if (&User-Name =~ /\.\./ ) {
(4)         if (&User-Name =~ /\.\./ )  -> FALSE
(4)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(4)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(4)         if (&User-Name =~ /\.$/)  {
(4)         if (&User-Name =~ /\.$/)   -> FALSE
(4)         if (&User-Name =~ /@\./)  {
(4)         if (&User-Name =~ /@\./)   -> FALSE
(4)       } # if (&User-Name)  = notfound
(4)     } # policy filter_username = notfound
(4)     [preprocess] = ok
(4)     [chap] = noop
(4)     [mschap] = noop
(4)     [digest] = noop
(4) suffix: Checking for suffix after "@"
(4) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(4) suffix: No such realm "NULL"
(4)     [suffix] = noop
(4) eap: Peer sent EAP Response (code 2) ID 154 length 6
(4) eap: Continuing tunnel setup
(4)     [eap] = ok
(4)   } # authorize = ok
(4) Found Auth-Type = eap
(4) # Executing group from file Freeradius/Conf/E_tofu_wpa3//sites-enabled/default
(4)   authenticate {
(4) eap: Expiring EAP session with state 0x16eca8f01576b143
(4) eap: Finished EAP session with state 0x16eca8f01576b143
(4) eap: Previous EAP request found for state 0x16eca8f01576b143, released from the list
(4) eap: Peer sent packet with method EAP PEAP (25)
(4) eap: Calling submodule eap_peap to process data
(4) eap_peap: (TLS) Peer ACKed our handshake fragment
(4) eap: Sending EAP Request (code 1) ID 155 length 776
(4) eap: EAP session adding &reply:State = 0x16eca8f01277b143
(4)     [eap] = handled
(4)   } # authenticate = handled
(4) Using Post-Auth-Type Challenge
(4) # Executing group from file Freeradius/Conf/E_tofu_wpa3//sites-enabled/default
(4)   Challenge { ... } # empty sub-section is ignored
(4) session-state: Saving cached attributes
(4)   Framed-MTU = 994
(4)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(4)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(4)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(4)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(4)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(4) Sent Access-Challenge Id 4 from 127.0.0.1:1812 to 127.0.0.1:37284 length 840
(4)   EAP-Message = 0x019b0308190078616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f726974798214669e28efd6428e45774f1d66f1b15fb62d50776b300f0603551d130101ff040530030101ff30360603551d1f042f302d302ba029a0278625687474703a2f2f7777772e6578616d706c652e6f72672f6578616d706c655f63612e63726c300d06092a864886f70d01010b05000382010100923f43f461ad7e2ad1959230fac25e5e207d2a15adb3764b46451160c132eb4d79bc86056db703df4e7375b27045b63a9ec6da788f4b66473ee1c8449112b9ecac7ef39d8462b1ff7b42416c8edeb73f13c5b152722a4fd6d622ce848ed2e21f99881e038cf17cdd5479018e5c9ba7a649431736e320e753a2bcaa3e6c3b5f68835851f470c40ceb8f31f909e34b21d586e6169d82a2d9117288dd5ed11b67cbaba86fb7584281d58f
(4)   Message-Authenticator = 0x00000000000000000000000000000000
(4)   State = 0x16eca8f01277b143fe571917be7c23ff
(4) Finished request
Waking up in 4.8 seconds.
(5) Received Access-Request Id 5 from 127.0.0.1:37284 to 127.0.0.1:1812 length 337
(5)   User-Name = "anonymous"
(5)   NAS-IP-Address = 127.0.0.1
(5)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(5)   NAS-Port-Type = Wireless-802.11
(5)   Service-Type = Framed-User
(5)   NAS-Port = 1
(5)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(5)   Connect-Info = "CONNECT 54Mbps 802.11g"
(5)   Acct-Session-Id = "2CB4125B3C3CE6E5"
(5)   Acct-Multi-Session-Id = "E6FC7EC4F74E1D18"
(5)   WLAN-Pairwise-Cipher = 1027076
(5)   WLAN-Group-Cipher = 1027076
(5)   WLAN-AKM-Suite = 1027073
(5)   WLAN-Group-Mgmt-Cipher = 1027078
(5)   Framed-MTU = 1400
(5)   EAP-Message = 0x029b006719800000005d160303002510000021208597ec48bb15f7fe4e3c2d1c8879674ff7a928a7d386016055b78d90636d946d140303000101160303002800000000000000001439d3ffcc64dea81d6b22d96ca054da9e70983781027ffcaff0c1603e8dded8
(5)   State = 0x16eca8f01277b143fe571917be7c23ff
(5)   Message-Authenticator = 0x5a81670c4a7243607e97a2d25e8fa15d
(5) Restoring &session-state
(5)   &session-state:Framed-MTU = 994
(5)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(5) # Executing section authorize from file Freeradius/Conf/E_tofu_wpa3//sites-enabled/default
(5)   authorize {
(5)     policy filter_username {
(5)       if (&User-Name) {
(5)       if (&User-Name)  -> TRUE
(5)       if (&User-Name)  {
(5)         if (&User-Name =~ / /) {
(5)         if (&User-Name =~ / /)  -> FALSE
(5)         if (&User-Name =~ /@[^@]*@/ ) {
(5)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(5)         if (&User-Name =~ /\.\./ ) {
(5)         if (&User-Name =~ /\.\./ )  -> FALSE
(5)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(5)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(5)         if (&User-Name =~ /\.$/)  {
(5)         if (&User-Name =~ /\.$/)   -> FALSE
(5)         if (&User-Name =~ /@\./)  {
(5)         if (&User-Name =~ /@\./)   -> FALSE
(5)       } # if (&User-Name)  = notfound
(5)     } # policy filter_username = notfound
(5)     [preprocess] = ok
(5)     [chap] = noop
(5)     [mschap] = noop
(5)     [digest] = noop
(5) suffix: Checking for suffix after "@"
(5) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(5) suffix: No such realm "NULL"
(5)     [suffix] = noop
(5) eap: Peer sent EAP Response (code 2) ID 155 length 103
(5) eap: Continuing tunnel setup
(5)     [eap] = ok
(5)   } # authorize = ok
(5) Found Auth-Type = eap
(5) # Executing group from file Freeradius/Conf/E_tofu_wpa3//sites-enabled/default
(5)   authenticate {
(5) eap: Expiring EAP session with state 0x16eca8f01277b143
(5) eap: Finished EAP session with state 0x16eca8f01277b143
(5) eap: Previous EAP request found for state 0x16eca8f01277b143, released from the list
(5) eap: Peer sent packet with method EAP PEAP (25)
(5) eap: Calling submodule eap_peap to process data
(5) eap_peap: (TLS) EAP Peer says that the final record size will be 93 bytes
(5) eap_peap: (TLS) EAP Got all data (93 bytes)
(5) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server done
(5) eap_peap: (TLS) recv TLS 1.2 Handshake, ClientKeyExchange
(5) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read client key exchange
(5) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read change cipher spec
(5) eap_peap: (TLS) recv TLS 1.2 Handshake, Finished
(5) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read finished
(5) eap_peap: (TLS) send TLS 1.2 ChangeCipherSpec
(5) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write change cipher spec
(5) eap_peap: (TLS) send TLS 1.2 Handshake, Finished
(5) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write finished
(5) eap_peap: (TLS) Handshake state - SSL negotiation finished successfully
(5) eap_peap: (TLS) Connection Established
(5) eap_peap:   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(5) eap_peap:   TLS-Session-Version = "TLS 1.2"
(5) eap: Sending EAP Request (code 1) ID 156 length 57
(5) eap: EAP session adding &reply:State = 0x16eca8f01370b143
(5)     [eap] = handled
(5)   } # authenticate = handled
(5) Using Post-Auth-Type Challenge
(5) # Executing group from file Freeradius/Conf/E_tofu_wpa3//sites-enabled/default
(5)   Challenge { ... } # empty sub-section is ignored
(5) session-state: Saving cached attributes
(5)   Framed-MTU = 994
(5)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(5)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(5)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(5)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(5)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(5)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(5)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(5)   TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(5)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(5)   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(5)   TLS-Session-Version = "TLS 1.2"
(5) Sent Access-Challenge Id 5 from 127.0.0.1:1812 to 127.0.0.1:37284 length 115
(5)   EAP-Message = 0x019c00391900140303000101160303002858005c1f4be2e77f38ccb1e4213309721d5ae391bcb791b9f883eaa4d2b1d2f600386585671f79b2
(5)   Message-Authenticator = 0x00000000000000000000000000000000
(5)   State = 0x16eca8f01370b143fe571917be7c23ff
(5) Finished request
Waking up in 4.4 seconds.
(6) Received Access-Request Id 6 from 127.0.0.1:37284 to 127.0.0.1:1812 length 240
(6)   User-Name = "anonymous"
(6)   NAS-IP-Address = 127.0.0.1
(6)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(6)   NAS-Port-Type = Wireless-802.11
(6)   Service-Type = Framed-User
(6)   NAS-Port = 1
(6)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(6)   Connect-Info = "CONNECT 54Mbps 802.11g"
(6)   Acct-Session-Id = "2CB4125B3C3CE6E5"
(6)   Acct-Multi-Session-Id = "E6FC7EC4F74E1D18"
(6)   WLAN-Pairwise-Cipher = 1027076
(6)   WLAN-Group-Cipher = 1027076
(6)   WLAN-AKM-Suite = 1027073
(6)   WLAN-Group-Mgmt-Cipher = 1027078
(6)   Framed-MTU = 1400
(6)   EAP-Message = 0x029c00061900
(6)   State = 0x16eca8f01370b143fe571917be7c23ff
(6)   Message-Authenticator = 0xc3c040acc9a6556ee022dd096e62e581
(6) Restoring &session-state
(6)   &session-state:Framed-MTU = 994
(6)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(6)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(6)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(6)   &session-state:TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(6)   &session-state:TLS-Session-Version = "TLS 1.2"
(6) # Executing section authorize from file Freeradius/Conf/E_tofu_wpa3//sites-enabled/default
(6)   authorize {
(6)     policy filter_username {
(6)       if (&User-Name) {
(6)       if (&User-Name)  -> TRUE
(6)       if (&User-Name)  {
(6)         if (&User-Name =~ / /) {
(6)         if (&User-Name =~ / /)  -> FALSE
(6)         if (&User-Name =~ /@[^@]*@/ ) {
(6)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(6)         if (&User-Name =~ /\.\./ ) {
(6)         if (&User-Name =~ /\.\./ )  -> FALSE
(6)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(6)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(6)         if (&User-Name =~ /\.$/)  {
(6)         if (&User-Name =~ /\.$/)   -> FALSE
(6)         if (&User-Name =~ /@\./)  {
(6)         if (&User-Name =~ /@\./)   -> FALSE
(6)       } # if (&User-Name)  = notfound
(6)     } # policy filter_username = notfound
(6)     [preprocess] = ok
(6)     [chap] = noop
(6)     [mschap] = noop
(6)     [digest] = noop
(6) suffix: Checking for suffix after "@"
(6) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(6) suffix: No such realm "NULL"
(6)     [suffix] = noop
(6) eap: Peer sent EAP Response (code 2) ID 156 length 6
(6) eap: Continuing tunnel setup
(6)     [eap] = ok
(6)   } # authorize = ok
(6) Found Auth-Type = eap
(6) # Executing group from file Freeradius/Conf/E_tofu_wpa3//sites-enabled/default
(6)   authenticate {
(6) eap: Expiring EAP session with state 0x16eca8f01370b143
(6) eap: Finished EAP session with state 0x16eca8f01370b143
(6) eap: Previous EAP request found for state 0x16eca8f01370b143, released from the list
(6) eap: Peer sent packet with method EAP PEAP (25)
(6) eap: Calling submodule eap_peap to process data
(6) eap_peap: (TLS) Peer ACKed our handshake fragment.  handshake is finished
(6) eap_peap: Session established.  Decoding tunneled attributes
(6) eap_peap: PEAP state TUNNEL ESTABLISHED
(6) eap: Sending EAP Request (code 1) ID 157 length 40
(6) eap: EAP session adding &reply:State = 0x16eca8f01071b143
(6)     [eap] = handled
(6)   } # authenticate = handled
(6) Using Post-Auth-Type Challenge
(6) # Executing group from file Freeradius/Conf/E_tofu_wpa3//sites-enabled/default
(6)   Challenge { ... } # empty sub-section is ignored
(6) session-state: Saving cached attributes
(6)   Framed-MTU = 994
(6)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(6)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(6)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(6)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(6)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(6)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(6)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(6)   TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(6)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(6)   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(6)   TLS-Session-Version = "TLS 1.2"
(6) Sent Access-Challenge Id 6 from 127.0.0.1:1812 to 127.0.0.1:37284 length 98
(6)   EAP-Message = 0x019d00281900170303001d58005c1f4be2e780bc4ae1112af65c92981ab0365addf00af28309bec1
(6)   Message-Authenticator = 0x00000000000000000000000000000000
(6)   State = 0x16eca8f01071b143fe571917be7c23ff
(6) Finished request
Waking up in 4.2 seconds.
(7) Received Access-Request Id 7 from 127.0.0.1:37284 to 127.0.0.1:1812 length 285
(7)   User-Name = "anonymous"
(7)   NAS-IP-Address = 127.0.0.1
(7)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(7)   NAS-Port-Type = Wireless-802.11
(7)   Service-Type = Framed-User
(7)   NAS-Port = 1
(7)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(7)   Connect-Info = "CONNECT 54Mbps 802.11g"
(7)   Acct-Session-Id = "2CB4125B3C3CE6E5"
(7)   Acct-Multi-Session-Id = "E6FC7EC4F74E1D18"
(7)   WLAN-Pairwise-Cipher = 1027076
(7)   WLAN-Group-Cipher = 1027076
(7)   WLAN-AKM-Suite = 1027073
(7)   WLAN-Group-Mgmt-Cipher = 1027078
(7)   Framed-MTU = 1400
(7)   EAP-Message = 0x029d0033190017030300280000000000000001b258dd94be59278791cfa1602a9702737529daf0db7353426e85bb31d953075e
(7)   State = 0x16eca8f01071b143fe571917be7c23ff
(7)   Message-Authenticator = 0x4ac23251be31a5f2877c09df259117f1
(7) Restoring &session-state
(7)   &session-state:Framed-MTU = 994
(7)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(7)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(7)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(7)   &session-state:TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(7)   &session-state:TLS-Session-Version = "TLS 1.2"
(7) # Executing section authorize from file Freeradius/Conf/E_tofu_wpa3//sites-enabled/default
(7)   authorize {
(7)     policy filter_username {
(7)       if (&User-Name) {
(7)       if (&User-Name)  -> TRUE
(7)       if (&User-Name)  {
(7)         if (&User-Name =~ / /) {
(7)         if (&User-Name =~ / /)  -> FALSE
(7)         if (&User-Name =~ /@[^@]*@/ ) {
(7)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(7)         if (&User-Name =~ /\.\./ ) {
(7)         if (&User-Name =~ /\.\./ )  -> FALSE
(7)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(7)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(7)         if (&User-Name =~ /\.$/)  {
(7)         if (&User-Name =~ /\.$/)   -> FALSE
(7)         if (&User-Name =~ /@\./)  {
(7)         if (&User-Name =~ /@\./)   -> FALSE
(7)       } # if (&User-Name)  = notfound
(7)     } # policy filter_username = notfound
(7)     [preprocess] = ok
(7)     [chap] = noop
(7)     [mschap] = noop
(7)     [digest] = noop
(7) suffix: Checking for suffix after "@"
(7) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(7) suffix: No such realm "NULL"
(7)     [suffix] = noop
(7) eap: Peer sent EAP Response (code 2) ID 157 length 51
(7) eap: Continuing tunnel setup
(7)     [eap] = ok
(7)   } # authorize = ok
(7) Found Auth-Type = eap
(7) # Executing group from file Freeradius/Conf/E_tofu_wpa3//sites-enabled/default
(7)   authenticate {
(7) eap: Expiring EAP session with state 0x16eca8f01071b143
(7) eap: Finished EAP session with state 0x16eca8f01071b143
(7) eap: Previous EAP request found for state 0x16eca8f01071b143, released from the list
(7) eap: Peer sent packet with method EAP PEAP (25)
(7) eap: Calling submodule eap_peap to process data
(7) eap_peap: (TLS) EAP Done initial handshake
(7) eap_peap: Session established.  Decoding tunneled attributes
(7) eap_peap: PEAP state WAITING FOR INNER IDENTITY
(7) eap_peap: Identity - bob@example.org
(7) eap_peap: Got inner identity 'bob@example.org'
(7) eap_peap: Setting default EAP type for tunneled EAP session
(7) eap_peap: Got tunneled request
(7) eap_peap:   EAP-Message = 0x029d001401626f62406578616d706c652e6f7267
(7) eap_peap: Setting User-Name to bob@example.org
(7) eap_peap: Sending tunneled request to inner-tunnel
(7) eap_peap:   EAP-Message = 0x029d001401626f62406578616d706c652e6f7267
(7) eap_peap:   FreeRADIUS-Proxied-To = 127.0.0.1
(7) eap_peap:   User-Name = "bob@example.org"
(7) Virtual server inner-tunnel received request
(7)   EAP-Message = 0x029d001401626f62406578616d706c652e6f7267
(7)   FreeRADIUS-Proxied-To = 127.0.0.1
(7)   User-Name = "bob@example.org"
(7) server inner-tunnel {
(7)   # Executing section authorize from file Freeradius/Conf/E_tofu_wpa3//sites-enabled/inner-tunnel
(7)     authorize {
(7)       policy filter_username {
(7)         if (&User-Name) {
(7)         if (&User-Name)  -> TRUE
(7)         if (&User-Name)  {
(7)           if (&User-Name =~ / /) {
(7)           if (&User-Name =~ / /)  -> FALSE
(7)           if (&User-Name =~ /@[^@]*@/ ) {
(7)           if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(7)           if (&User-Name =~ /\.\./ ) {
(7)           if (&User-Name =~ /\.\./ )  -> FALSE
(7)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(7)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(7)           if (&User-Name =~ /\.$/)  {
(7)           if (&User-Name =~ /\.$/)   -> FALSE
(7)           if (&User-Name =~ /@\./)  {
(7)           if (&User-Name =~ /@\./)   -> FALSE
(7)         } # if (&User-Name)  = notfound
(7)       } # policy filter_username = notfound
(7)       [chap] = noop
(7)       [mschap] = noop
(7) suffix: Checking for suffix after "@"
(7) suffix: Looking up realm "example.org" for User-Name = "bob@example.org"
(7) suffix: No such realm "example.org"
(7)       [suffix] = noop
(7)       update control {
(7)         &Proxy-To-Realm := LOCAL
(7)       } # update control = noop
(7) eap: Peer sent EAP Response (code 2) ID 157 length 20
(7) eap: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
(7)       [eap] = ok
(7)     } # authorize = ok
(7)   Found Auth-Type = eap
(7)   # Executing group from file Freeradius/Conf/E_tofu_wpa3//sites-enabled/inner-tunnel
(7)     authenticate {
(7) eap: Peer sent packet with method EAP Identity (1)
(7) eap: Calling submodule eap_mschapv2 to process data
(7) eap_mschapv2: Issuing Challenge
(7) eap: Sending EAP Request (code 1) ID 158 length 43
(7) eap: EAP session adding &reply:State = 0x4d84327d4d1a2877
(7)       [eap] = handled
(7)     } # authenticate = handled
(7) } # server inner-tunnel
(7) Virtual server sending reply
(7)   EAP-Message = 0x019e002b1a019e002610a6812f7534085c2f5fafa774db5e074f667265657261646975732d332e302e3236
(7)   Message-Authenticator = 0x00000000000000000000000000000000
(7)   State = 0x4d84327d4d1a28770d2b32df24cae74c
(7) eap_peap: Got tunneled reply code 11
(7) eap_peap:   EAP-Message = 0x019e002b1a019e002610a6812f7534085c2f5fafa774db5e074f667265657261646975732d332e302e3236
(7) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(7) eap_peap:   State = 0x4d84327d4d1a28770d2b32df24cae74c
(7) eap_peap: Got tunneled reply RADIUS code 11
(7) eap_peap:   EAP-Message = 0x019e002b1a019e002610a6812f7534085c2f5fafa774db5e074f667265657261646975732d332e302e3236
(7) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(7) eap_peap:   State = 0x4d84327d4d1a28770d2b32df24cae74c
(7) eap_peap: Got tunneled Access-Challenge
(7) eap: Sending EAP Request (code 1) ID 158 length 74
(7) eap: EAP session adding &reply:State = 0x16eca8f01172b143
(7)     [eap] = handled
(7)   } # authenticate = handled
(7) Using Post-Auth-Type Challenge
(7) # Executing group from file Freeradius/Conf/E_tofu_wpa3//sites-enabled/default
(7)   Challenge { ... } # empty sub-section is ignored
(7) session-state: Saving cached attributes
(7)   Framed-MTU = 994
(7)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(7)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(7)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(7)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(7)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(7)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(7)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(7)   TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(7)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(7)   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(7)   TLS-Session-Version = "TLS 1.2"
(7) Sent Access-Challenge Id 7 from 127.0.0.1:1812 to 127.0.0.1:37284 length 132
(7)   EAP-Message = 0x019e004a1900170303003f58005c1f4be2e781070bf737a8b6ccc44caa95a3a67103ec92ef59cf2c933c6b7e38831265747f7345d790c29209f87350323645cd240e205074fa29ab2423
(7)   Message-Authenticator = 0x00000000000000000000000000000000
(7)   State = 0x16eca8f01172b143fe571917be7c23ff
(7) Finished request
Waking up in 4.2 seconds.
(8) Received Access-Request Id 8 from 127.0.0.1:37284 to 127.0.0.1:1812 length 339
(8)   User-Name = "anonymous"
(8)   NAS-IP-Address = 127.0.0.1
(8)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(8)   NAS-Port-Type = Wireless-802.11
(8)   Service-Type = Framed-User
(8)   NAS-Port = 1
(8)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(8)   Connect-Info = "CONNECT 54Mbps 802.11g"
(8)   Acct-Session-Id = "2CB4125B3C3CE6E5"
(8)   Acct-Multi-Session-Id = "E6FC7EC4F74E1D18"
(8)   WLAN-Pairwise-Cipher = 1027076
(8)   WLAN-Group-Cipher = 1027076
(8)   WLAN-AKM-Suite = 1027073
(8)   WLAN-Group-Mgmt-Cipher = 1027078
(8)   Framed-MTU = 1400
(8)   EAP-Message = 0x029e00691900170303005e0000000000000002cbd552d58175f63ffd6b159b4d4c3b66450810d000f6cdc6746f9b6e835876491b5b2539c67a8be20d2abab20a90b54b645265e495e7b10c7c0172cc8f16897baf3cd61e6b8341d657809e3d1a03bf058326ae496f99
(8)   State = 0x16eca8f01172b143fe571917be7c23ff
(8)   Message-Authenticator = 0xb06d3bc4799e6ed29fef1951374720a3
(8) Restoring &session-state
(8)   &session-state:Framed-MTU = 994
(8)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(8)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(8)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(8)   &session-state:TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(8)   &session-state:TLS-Session-Version = "TLS 1.2"
(8) # Executing section authorize from file Freeradius/Conf/E_tofu_wpa3//sites-enabled/default
(8)   authorize {
(8)     policy filter_username {
(8)       if (&User-Name) {
(8)       if (&User-Name)  -> TRUE
(8)       if (&User-Name)  {
(8)         if (&User-Name =~ / /) {
(8)         if (&User-Name =~ / /)  -> FALSE
(8)         if (&User-Name =~ /@[^@]*@/ ) {
(8)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(8)         if (&User-Name =~ /\.\./ ) {
(8)         if (&User-Name =~ /\.\./ )  -> FALSE
(8)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(8)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(8)         if (&User-Name =~ /\.$/)  {
(8)         if (&User-Name =~ /\.$/)   -> FALSE
(8)         if (&User-Name =~ /@\./)  {
(8)         if (&User-Name =~ /@\./)   -> FALSE
(8)       } # if (&User-Name)  = notfound
(8)     } # policy filter_username = notfound
(8)     [preprocess] = ok
(8)     [chap] = noop
(8)     [mschap] = noop
(8)     [digest] = noop
(8) suffix: Checking for suffix after "@"
(8) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(8) suffix: No such realm "NULL"
(8)     [suffix] = noop
(8) eap: Peer sent EAP Response (code 2) ID 158 length 105
(8) eap: Continuing tunnel setup
(8)     [eap] = ok
(8)   } # authorize = ok
(8) Found Auth-Type = eap
(8) # Executing group from file Freeradius/Conf/E_tofu_wpa3//sites-enabled/default
(8)   authenticate {
(8) eap: Expiring EAP session with state 0x4d84327d4d1a2877
(8) eap: Finished EAP session with state 0x16eca8f01172b143
(8) eap: Previous EAP request found for state 0x16eca8f01172b143, released from the list
(8) eap: Peer sent packet with method EAP PEAP (25)
(8) eap: Calling submodule eap_peap to process data
(8) eap_peap: (TLS) EAP Done initial handshake
(8) eap_peap: Session established.  Decoding tunneled attributes
(8) eap_peap: PEAP state phase2
(8) eap_peap: EAP method MSCHAPv2 (26)
(8) eap_peap: Got tunneled request
(8) eap_peap:   EAP-Message = 0x029e004a1a029e004531042acf44dbc69d60b15d5f195724d3e30000000000000000e9477b4fc992a135510d0ccdd17d64d41f84a0e0d275049e00626f62406578616d706c652e6f7267
(8) eap_peap: Setting User-Name to bob@example.org
(8) eap_peap: Sending tunneled request to inner-tunnel
(8) eap_peap:   EAP-Message = 0x029e004a1a029e004531042acf44dbc69d60b15d5f195724d3e30000000000000000e9477b4fc992a135510d0ccdd17d64d41f84a0e0d275049e00626f62406578616d706c652e6f7267
(8) eap_peap:   FreeRADIUS-Proxied-To = 127.0.0.1
(8) eap_peap:   User-Name = "bob@example.org"
(8) eap_peap:   State = 0x4d84327d4d1a28770d2b32df24cae74c
(8) Virtual server inner-tunnel received request
(8)   EAP-Message = 0x029e004a1a029e004531042acf44dbc69d60b15d5f195724d3e30000000000000000e9477b4fc992a135510d0ccdd17d64d41f84a0e0d275049e00626f62406578616d706c652e6f7267
(8)   FreeRADIUS-Proxied-To = 127.0.0.1
(8)   User-Name = "bob@example.org"
(8)   State = 0x4d84327d4d1a28770d2b32df24cae74c
(8) server inner-tunnel {
(8)   session-state: No cached attributes
(8)   # Executing section authorize from file Freeradius/Conf/E_tofu_wpa3//sites-enabled/inner-tunnel
(8)     authorize {
(8)       policy filter_username {
(8)         if (&User-Name) {
(8)         if (&User-Name)  -> TRUE
(8)         if (&User-Name)  {
(8)           if (&User-Name =~ / /) {
(8)           if (&User-Name =~ / /)  -> FALSE
(8)           if (&User-Name =~ /@[^@]*@/ ) {
(8)           if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(8)           if (&User-Name =~ /\.\./ ) {
(8)           if (&User-Name =~ /\.\./ )  -> FALSE
(8)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(8)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(8)           if (&User-Name =~ /\.$/)  {
(8)           if (&User-Name =~ /\.$/)   -> FALSE
(8)           if (&User-Name =~ /@\./)  {
(8)           if (&User-Name =~ /@\./)   -> FALSE
(8)         } # if (&User-Name)  = notfound
(8)       } # policy filter_username = notfound
(8)       [chap] = noop
(8)       [mschap] = noop
(8) suffix: Checking for suffix after "@"
(8) suffix: Looking up realm "example.org" for User-Name = "bob@example.org"
(8) suffix: No such realm "example.org"
(8)       [suffix] = noop
(8)       update control {
(8)         &Proxy-To-Realm := LOCAL
(8)       } # update control = noop
(8) eap: Peer sent EAP Response (code 2) ID 158 length 74
(8) eap: No EAP Start, assuming it's an on-going EAP conversation
(8)       [eap] = updated
(8) files: users: Matched entry bob@example.org at line 1
(8) files: EXPAND Hello, %{User-Name}
(8) files:    --> Hello, bob@example.org
(8)       [files] = ok
(8)       [expiration] = noop
(8)       [logintime] = noop
(8) pap: WARNING: Auth-Type already set.  Not setting to PAP
(8)       [pap] = noop
(8)     } # authorize = updated
(8)   Found Auth-Type = eap
(8)   # Executing group from file Freeradius/Conf/E_tofu_wpa3//sites-enabled/inner-tunnel
(8)     authenticate {
(8) eap: Expiring EAP session with state 0x4d84327d4d1a2877
(8) eap: Finished EAP session with state 0x4d84327d4d1a2877
(8) eap: Previous EAP request found for state 0x4d84327d4d1a2877, released from the list
(8) eap: Peer sent packet with method EAP MSCHAPv2 (26)
(8) eap: Calling submodule eap_mschapv2 to process data
(8) eap_mschapv2: # Executing group from file Freeradius/Conf/E_tofu_wpa3//sites-enabled/inner-tunnel
(8) eap_mschapv2:   authenticate {
(8) mschap: Found Cleartext-Password, hashing to create NT-Password
(8) mschap: Creating challenge hash with username: bob@example.org
(8) mschap: Client is using MS-CHAPv2
(8) mschap: Adding MS-CHAPv2 MPPE keys
(8) eap_mschapv2:     [mschap] = ok
(8) eap_mschapv2:   } # authenticate = ok
(8) eap_mschapv2: MSCHAP Success
(8) eap: Sending EAP Request (code 1) ID 159 length 51
(8) eap: EAP session adding &reply:State = 0x4d84327d4c1b2877
(8)       [eap] = handled
(8)     } # authenticate = handled
(8) } # server inner-tunnel
(8) Virtual server sending reply
(8)   Reply-Message = "Hello, bob@example.org"
(8)   EAP-Message = 0x019f00331a039e002e533d36323330353036343836424533344234464137443937453435434631434434374430353431433643
(8)   Message-Authenticator = 0x00000000000000000000000000000000
(8)   State = 0x4d84327d4c1b28770d2b32df24cae74c
(8) eap_peap: Got tunneled reply code 11
(8) eap_peap:   Reply-Message = "Hello, bob@example.org"
(8) eap_peap:   EAP-Message = 0x019f00331a039e002e533d36323330353036343836424533344234464137443937453435434631434434374430353431433643
(8) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(8) eap_peap:   State = 0x4d84327d4c1b28770d2b32df24cae74c
(8) eap_peap: Got tunneled reply RADIUS code 11
(8) eap_peap:   Reply-Message = "Hello, bob@example.org"
(8) eap_peap:   EAP-Message = 0x019f00331a039e002e533d36323330353036343836424533344234464137443937453435434631434434374430353431433643
(8) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(8) eap_peap:   State = 0x4d84327d4c1b28770d2b32df24cae74c
(8) eap_peap: Got tunneled Access-Challenge
(8) eap: Sending EAP Request (code 1) ID 159 length 82
(8) eap: EAP session adding &reply:State = 0x16eca8f01e73b143
(8)     [eap] = handled
(8)   } # authenticate = handled
(8) Using Post-Auth-Type Challenge
(8) # Executing group from file Freeradius/Conf/E_tofu_wpa3//sites-enabled/default
(8)   Challenge { ... } # empty sub-section is ignored
(8) session-state: Saving cached attributes
(8)   Framed-MTU = 994
(8)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(8)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(8)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(8)   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(8)   TLS-Session-Version = "TLS 1.2"
(8) Sent Access-Challenge Id 8 from 127.0.0.1:1812 to 127.0.0.1:37284 length 140
(8)   EAP-Message = 0x019f00521900170303004758005c1f4be2e7824dd134bb3327dd327a5574c73cff1daa6e4425ba8c4017519e72ca93f23272c831668428869d213f54b87d8637fe443a61a6f9780d061de1e0b0a04e059c39
(8)   Message-Authenticator = 0x00000000000000000000000000000000
(8)   State = 0x16eca8f01e73b143fe571917be7c23ff
(8) Finished request
Waking up in 3.9 seconds.
(9) Received Access-Request Id 9 from 127.0.0.1:37284 to 127.0.0.1:1812 length 271
(9)   User-Name = "anonymous"
(9)   NAS-IP-Address = 127.0.0.1
(9)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(9)   NAS-Port-Type = Wireless-802.11
(9)   Service-Type = Framed-User
(9)   NAS-Port = 1
(9)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(9)   Connect-Info = "CONNECT 54Mbps 802.11g"
(9)   Acct-Session-Id = "2CB4125B3C3CE6E5"
(9)   Acct-Multi-Session-Id = "E6FC7EC4F74E1D18"
(9)   WLAN-Pairwise-Cipher = 1027076
(9)   WLAN-Group-Cipher = 1027076
(9)   WLAN-AKM-Suite = 1027073
(9)   WLAN-Group-Mgmt-Cipher = 1027078
(9)   Framed-MTU = 1400
(9)   EAP-Message = 0x029f00251900170303001a00000000000000038943706817d29ad536fdeb8468ada8f956fa
(9)   State = 0x16eca8f01e73b143fe571917be7c23ff
(9)   Message-Authenticator = 0x21f76d1ce451b56c3d35bca8ae812d6d
(9) Restoring &session-state
(9)   &session-state:Framed-MTU = 994
(9)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(9)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(9)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(9)   &session-state:TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(9)   &session-state:TLS-Session-Version = "TLS 1.2"
(9) # Executing section authorize from file Freeradius/Conf/E_tofu_wpa3//sites-enabled/default
(9)   authorize {
(9)     policy filter_username {
(9)       if (&User-Name) {
(9)       if (&User-Name)  -> TRUE
(9)       if (&User-Name)  {
(9)         if (&User-Name =~ / /) {
(9)         if (&User-Name =~ / /)  -> FALSE
(9)         if (&User-Name =~ /@[^@]*@/ ) {
(9)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(9)         if (&User-Name =~ /\.\./ ) {
(9)         if (&User-Name =~ /\.\./ )  -> FALSE
(9)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(9)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(9)         if (&User-Name =~ /\.$/)  {
(9)         if (&User-Name =~ /\.$/)   -> FALSE
(9)         if (&User-Name =~ /@\./)  {
(9)         if (&User-Name =~ /@\./)   -> FALSE
(9)       } # if (&User-Name)  = notfound
(9)     } # policy filter_username = notfound
(9)     [preprocess] = ok
(9)     [chap] = noop
(9)     [mschap] = noop
(9)     [digest] = noop
(9) suffix: Checking for suffix after "@"
(9) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(9) suffix: No such realm "NULL"
(9)     [suffix] = noop
(9) eap: Peer sent EAP Response (code 2) ID 159 length 37
(9) eap: Continuing tunnel setup
(9)     [eap] = ok
(9)   } # authorize = ok
(9) Found Auth-Type = eap
(9) # Executing group from file Freeradius/Conf/E_tofu_wpa3//sites-enabled/default
(9)   authenticate {
(9) eap: Expiring EAP session with state 0x4d84327d4c1b2877
(9) eap: Finished EAP session with state 0x16eca8f01e73b143
(9) eap: Previous EAP request found for state 0x16eca8f01e73b143, released from the list
(9) eap: Peer sent packet with method EAP PEAP (25)
(9) eap: Calling submodule eap_peap to process data
(9) eap_peap: (TLS) EAP Done initial handshake
(9) eap_peap: Session established.  Decoding tunneled attributes
(9) eap_peap: PEAP state phase2
(9) eap_peap: EAP method MSCHAPv2 (26)
(9) eap_peap: Got tunneled request
(9) eap_peap:   EAP-Message = 0x029f00061a03
(9) eap_peap: Setting User-Name to bob@example.org
(9) eap_peap: Sending tunneled request to inner-tunnel
(9) eap_peap:   EAP-Message = 0x029f00061a03
(9) eap_peap:   FreeRADIUS-Proxied-To = 127.0.0.1
(9) eap_peap:   User-Name = "bob@example.org"
(9) eap_peap:   State = 0x4d84327d4c1b28770d2b32df24cae74c
(9) Virtual server inner-tunnel received request
(9)   EAP-Message = 0x029f00061a03
(9)   FreeRADIUS-Proxied-To = 127.0.0.1
(9)   User-Name = "bob@example.org"
(9)   State = 0x4d84327d4c1b28770d2b32df24cae74c
(9) server inner-tunnel {
(9)   session-state: No cached attributes
(9)   # Executing section authorize from file Freeradius/Conf/E_tofu_wpa3//sites-enabled/inner-tunnel
(9)     authorize {
(9)       policy filter_username {
(9)         if (&User-Name) {
(9)         if (&User-Name)  -> TRUE
(9)         if (&User-Name)  {
(9)           if (&User-Name =~ / /) {
(9)           if (&User-Name =~ / /)  -> FALSE
(9)           if (&User-Name =~ /@[^@]*@/ ) {
(9)           if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(9)           if (&User-Name =~ /\.\./ ) {
(9)           if (&User-Name =~ /\.\./ )  -> FALSE
(9)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(9)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(9)           if (&User-Name =~ /\.$/)  {
(9)           if (&User-Name =~ /\.$/)   -> FALSE
(9)           if (&User-Name =~ /@\./)  {
(9)           if (&User-Name =~ /@\./)   -> FALSE
(9)         } # if (&User-Name)  = notfound
(9)       } # policy filter_username = notfound
(9)       [chap] = noop
(9)       [mschap] = noop
(9) suffix: Checking for suffix after "@"
(9) suffix: Looking up realm "example.org" for User-Name = "bob@example.org"
(9) suffix: No such realm "example.org"
(9)       [suffix] = noop
(9)       update control {
(9)         &Proxy-To-Realm := LOCAL
(9)       } # update control = noop
(9) eap: Peer sent EAP Response (code 2) ID 159 length 6
(9) eap: No EAP Start, assuming it's an on-going EAP conversation
(9)       [eap] = updated
(9) files: users: Matched entry bob@example.org at line 1
(9) files: EXPAND Hello, %{User-Name}
(9) files:    --> Hello, bob@example.org
(9)       [files] = ok
(9)       [expiration] = noop
(9)       [logintime] = noop
(9) pap: WARNING: Auth-Type already set.  Not setting to PAP
(9)       [pap] = noop
(9)     } # authorize = updated
(9)   Found Auth-Type = eap
(9)   # Executing group from file Freeradius/Conf/E_tofu_wpa3//sites-enabled/inner-tunnel
(9)     authenticate {
(9) eap: Expiring EAP session with state 0x4d84327d4c1b2877
(9) eap: Finished EAP session with state 0x4d84327d4c1b2877
(9) eap: Previous EAP request found for state 0x4d84327d4c1b2877, released from the list
(9) eap: Peer sent packet with method EAP MSCHAPv2 (26)
(9) eap: Calling submodule eap_mschapv2 to process data
(9) eap: Sending EAP Success (code 3) ID 159 length 4
(9) eap: Freeing handler
(9)       [eap] = ok
(9)     } # authenticate = ok
(9)   # Executing section post-auth from file Freeradius/Conf/E_tofu_wpa3//sites-enabled/inner-tunnel
(9)     post-auth {
(9)       if (0) {
(9)       if (0)  -> FALSE
(9)     } # post-auth = noop
(9) } # server inner-tunnel
(9) Virtual server sending reply
(9)   Reply-Message = "Hello, bob@example.org"
(9)   MS-MPPE-Encryption-Policy = Encryption-Allowed
(9)   MS-MPPE-Encryption-Types = RC4-40or128-bit-Allowed
(9)   MS-MPPE-Send-Key = 0xcc2a976464dcc21e61a9272638681c84
(9)   MS-MPPE-Recv-Key = 0x6b260add218d051e1e5ecf4d3b1d707f
(9)   EAP-Message = 0x039f0004
(9)   Message-Authenticator = 0x00000000000000000000000000000000
(9)   User-Name = "bob@example.org"
(9) eap_peap: Got tunneled reply code 2
(9) eap_peap:   Reply-Message = "Hello, bob@example.org"
(9) eap_peap:   MS-MPPE-Encryption-Policy = Encryption-Allowed
(9) eap_peap:   MS-MPPE-Encryption-Types = RC4-40or128-bit-Allowed
(9) eap_peap:   MS-MPPE-Send-Key = 0xcc2a976464dcc21e61a9272638681c84
(9) eap_peap:   MS-MPPE-Recv-Key = 0x6b260add218d051e1e5ecf4d3b1d707f
(9) eap_peap:   EAP-Message = 0x039f0004
(9) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(9) eap_peap:   User-Name = "bob@example.org"
(9) eap_peap: Got tunneled reply RADIUS code 2
(9) eap_peap:   Reply-Message = "Hello, bob@example.org"
(9) eap_peap:   MS-MPPE-Encryption-Policy = Encryption-Allowed
(9) eap_peap:   MS-MPPE-Encryption-Types = RC4-40or128-bit-Allowed
(9) eap_peap:   MS-MPPE-Send-Key = 0xcc2a976464dcc21e61a9272638681c84
(9) eap_peap:   MS-MPPE-Recv-Key = 0x6b260add218d051e1e5ecf4d3b1d707f
(9) eap_peap:   EAP-Message = 0x039f0004
(9) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(9) eap_peap:   User-Name = "bob@example.org"
(9) eap_peap: Tunneled authentication was successful
(9) eap_peap: SUCCESS
(9) eap: Sending EAP Request (code 1) ID 160 length 46
(9) eap: EAP session adding &reply:State = 0x16eca8f01f4cb143
(9)     [eap] = handled
(9)   } # authenticate = handled
(9) Using Post-Auth-Type Challenge
(9) # Executing group from file Freeradius/Conf/E_tofu_wpa3//sites-enabled/default
(9)   Challenge { ... } # empty sub-section is ignored
(9) session-state: Saving cached attributes
(9)   Framed-MTU = 994
(9)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(9)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(9)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(9)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(9)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(9)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(9)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(9)   TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(9)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(9)   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(9)   TLS-Session-Version = "TLS 1.2"
(9) Sent Access-Challenge Id 9 from 127.0.0.1:1812 to 127.0.0.1:37284 length 104
(9)   EAP-Message = 0x01a0002e1900170303002358005c1f4be2e783795f85074c7fe4ae1aef3fc8d3bcf8724f0f19c6e569c229e8981d
(9)   Message-Authenticator = 0x00000000000000000000000000000000
(9)   State = 0x16eca8f01f4cb143fe571917be7c23ff
(9) Finished request
Waking up in 3.8 seconds.
(10) Received Access-Request Id 10 from 127.0.0.1:37284 to 127.0.0.1:1812 length 280
(10)   User-Name = "anonymous"
(10)   NAS-IP-Address = 127.0.0.1
(10)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(10)   NAS-Port-Type = Wireless-802.11
(10)   Service-Type = Framed-User
(10)   NAS-Port = 1
(10)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(10)   Connect-Info = "CONNECT 54Mbps 802.11g"
(10)   Acct-Session-Id = "2CB4125B3C3CE6E5"
(10)   Acct-Multi-Session-Id = "E6FC7EC4F74E1D18"
(10)   WLAN-Pairwise-Cipher = 1027076
(10)   WLAN-Group-Cipher = 1027076
(10)   WLAN-AKM-Suite = 1027073
(10)   WLAN-Group-Mgmt-Cipher = 1027078
(10)   Framed-MTU = 1400
(10)   EAP-Message = 0x02a0002e1900170303002300000000000000043fcfc73a91e65c4f32b19cea5a192a1f7c7d5bd2f6c8e44670bd7b
(10)   State = 0x16eca8f01f4cb143fe571917be7c23ff
(10)   Message-Authenticator = 0x488fddb34fb30aa4a8f16700fd2e0b1a
(10) Restoring &session-state
(10)   &session-state:Framed-MTU = 994
(10)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(10)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(10)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(10)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(10)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(10)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(10)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(10)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(10)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(10)   &session-state:TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(10)   &session-state:TLS-Session-Version = "TLS 1.2"
(10) # Executing section authorize from file Freeradius/Conf/E_tofu_wpa3//sites-enabled/default
(10)   authorize {
(10)     policy filter_username {
(10)       if (&User-Name) {
(10)       if (&User-Name)  -> TRUE
(10)       if (&User-Name)  {
(10)         if (&User-Name =~ / /) {
(10)         if (&User-Name =~ / /)  -> FALSE
(10)         if (&User-Name =~ /@[^@]*@/ ) {
(10)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(10)         if (&User-Name =~ /\.\./ ) {
(10)         if (&User-Name =~ /\.\./ )  -> FALSE
(10)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(10)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(10)         if (&User-Name =~ /\.$/)  {
(10)         if (&User-Name =~ /\.$/)   -> FALSE
(10)         if (&User-Name =~ /@\./)  {
(10)         if (&User-Name =~ /@\./)   -> FALSE
(10)       } # if (&User-Name)  = notfound
(10)     } # policy filter_username = notfound
(10)     [preprocess] = ok
(10)     [chap] = noop
(10)     [mschap] = noop
(10)     [digest] = noop
(10) suffix: Checking for suffix after "@"
(10) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(10) suffix: No such realm "NULL"
(10)     [suffix] = noop
(10) eap: Peer sent EAP Response (code 2) ID 160 length 46
(10) eap: Continuing tunnel setup
(10)     [eap] = ok
(10)   } # authorize = ok
(10) Found Auth-Type = eap
(10) # Executing group from file Freeradius/Conf/E_tofu_wpa3//sites-enabled/default
(10)   authenticate {
(10) eap: Expiring EAP session with state 0x16eca8f01f4cb143
(10) eap: Finished EAP session with state 0x16eca8f01f4cb143
(10) eap: Previous EAP request found for state 0x16eca8f01f4cb143, released from the list
(10) eap: Peer sent packet with method EAP PEAP (25)
(10) eap: Calling submodule eap_peap to process data
(10) eap_peap: (TLS) EAP Done initial handshake
(10) eap_peap: Session established.  Decoding tunneled attributes
(10) eap_peap: PEAP state send tlv success
(10) eap_peap: Received EAP-TLV response
(10) eap_peap: Success
(10) eap: Sending EAP Success (code 3) ID 160 length 4
(10) eap: Freeing handler
(10)     [eap] = ok
(10)   } # authenticate = ok
(10) # Executing section post-auth from file Freeradius/Conf/E_tofu_wpa3//sites-enabled/default
(10)   post-auth {
(10)     if (session-state:User-Name && reply:User-Name && request:User-Name && (reply:User-Name == request:User-Name)) {
(10)     if (session-state:User-Name && reply:User-Name && request:User-Name && (reply:User-Name == request:User-Name))  -> FALSE
(10)     update {
(10)       &reply::Framed-MTU += &session-state:Framed-MTU[*] -> 994
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) recv TLS 1.3 Handshake, ClientHello'
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, ServerHello'
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, Certificate'
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, ServerKeyExchange'
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, ServerHelloDone'
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) recv TLS 1.2 Handshake, ClientKeyExchange'
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) recv TLS 1.2 Handshake, Finished'
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 ChangeCipherSpec'
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, Finished'
(10)       &reply::TLS-Session-Cipher-Suite += &session-state:TLS-Session-Cipher-Suite[*] -> 'ECDHE-RSA-AES256-GCM-SHA384'
(10)       &reply::TLS-Session-Version += &session-state:TLS-Session-Version[*] -> 'TLS 1.2'
(10)     } # update = noop
(10)     [exec] = noop
(10)     policy remove_reply_message_if_eap {
(10)       if (&reply:EAP-Message && &reply:Reply-Message) {
(10)       if (&reply:EAP-Message && &reply:Reply-Message)  -> FALSE
(10)       else {
(10)         [noop] = noop
(10)       } # else = noop
(10)     } # policy remove_reply_message_if_eap = noop
(10)     if (EAP-Key-Name && &reply:EAP-Session-Id) {
(10)     if (EAP-Key-Name && &reply:EAP-Session-Id)  -> FALSE
(10)   } # post-auth = noop
(10) Sent Access-Accept Id 10 from 127.0.0.1:1812 to 127.0.0.1:37284 length 177
(10)   MS-MPPE-Recv-Key = 0x109f49db55549dd8945233e73bf4d1c55f9f0176256a7876b4f9732ceeb2fbf1
(10)   MS-MPPE-Send-Key = 0x4b5ef44cebb887de588907a0dd2a228eac5cdf626a096bf4235196881e9679dc
(10)   EAP-Message = 0x03a00004
(10)   Message-Authenticator = 0x00000000000000000000000000000000
(10)   User-Name = "anonymous"
(10)   Framed-MTU += 994
(10) Finished request
Waking up in 3.7 seconds.
(0) Cleaning up request packet ID 0 with timestamp +4 due to cleanup_delay was reached
(1) Cleaning up request packet ID 1 with timestamp +4 due to cleanup_delay was reached
(2) Cleaning up request packet ID 2 with timestamp +4 due to cleanup_delay was reached
(3) Cleaning up request packet ID 3 with timestamp +4 due to cleanup_delay was reached
(4) Cleaning up request packet ID 4 with timestamp +4 due to cleanup_delay was reached
Waking up in 0.4 seconds.
(5) Cleaning up request packet ID 5 with timestamp +5 due to cleanup_delay was reached
Waking up in 0.1 seconds.
(6) Cleaning up request packet ID 6 with timestamp +5 due to cleanup_delay was reached
(7) Cleaning up request packet ID 7 with timestamp +5 due to cleanup_delay was reached
Waking up in 0.2 seconds.
(8) Cleaning up request packet ID 8 with timestamp +5 due to cleanup_delay was reached
(9) Cleaning up request packet ID 9 with timestamp +5 due to cleanup_delay was reached
(10) Cleaning up request packet ID 10 with timestamp +5 due to cleanup_delay was reached
Ready to process requests
Ready to process requests
Signalled to terminate
Exiting normally

[0;36mFreeRADIUS is stopped.[0m


[10:13:17.257] Beginning saving session of stdout and stderr Test/Tmp/Log/ESP32/e_tofu_wpa3...
[0;32mSuccess.[0m

[10:13:17.258] Fetching configuration directory associated to e_rogue_wpa3...
[0;32mSuccess.[0m

[10:13:17.278] Looking for Freeradius/Conf/E_rogue_wpa3/...
[0;32mSuccess.[0m

[0;36mRunning FreeRADIUS. Press Ctrl-C to stop.[0m

FreeRADIUS Version 3.0.26
Copyright (C) 1999-2021 The FreeRADIUS server project and contributors
There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE
You may redistribute copies of FreeRADIUS under the terms of the
GNU General Public License
For more information about these matters, see the file named COPYRIGHT
Starting - reading configuration files ...
including dictionary file /usr/share/freeradius/dictionary
including dictionary file /usr/share/freeradius/dictionary.dhcp
including dictionary file /usr/share/freeradius/dictionary.vqp
including dictionary file Freeradius/Conf/E_rogue_wpa3//dictionary
including configuration file Freeradius/Conf/E_rogue_wpa3//radiusd.conf
including configuration file Freeradius/Conf/E_rogue_wpa3//proxy.conf
including configuration file Freeradius/Conf/E_rogue_wpa3//clients.conf
including files in directory Freeradius/Conf/E_rogue_wpa3//mods-enabled/
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/files
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/passwd
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/expr
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/soh
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/digest
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/dynamic_clients
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/unix
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/echo
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/preprocess
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/replicate
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/pap
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/detail
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/cache_eap
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/mschap
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/eap
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/logintime
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/utf8
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/unpack
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/radutmp
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/expiration
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/chap
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/realm
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/sradutmp
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/attr_filter
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/ntlm_auth
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/detail.log
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/exec
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/linelog
including files in directory Freeradius/Conf/E_rogue_wpa3//policy.d/
including configuration file Freeradius/Conf/E_rogue_wpa3//policy.d/operator-name
including configuration file Freeradius/Conf/E_rogue_wpa3//policy.d/dhcp
including configuration file Freeradius/Conf/E_rogue_wpa3//policy.d/rfc7542
including configuration file Freeradius/Conf/E_rogue_wpa3//policy.d/accounting
including configuration file Freeradius/Conf/E_rogue_wpa3//policy.d/filter
including configuration file Freeradius/Conf/E_rogue_wpa3//policy.d/cui
including configuration file Freeradius/Conf/E_rogue_wpa3//policy.d/moonshot-targeted-ids
including configuration file Freeradius/Conf/E_rogue_wpa3//policy.d/canonicalization
including configuration file Freeradius/Conf/E_rogue_wpa3//policy.d/eap
including configuration file Freeradius/Conf/E_rogue_wpa3//policy.d/control
including configuration file Freeradius/Conf/E_rogue_wpa3//policy.d/abfab-tr
including configuration file Freeradius/Conf/E_rogue_wpa3//policy.d/debug
including files in directory Freeradius/Conf/E_rogue_wpa3//sites-enabled/
including configuration file Freeradius/Conf/E_rogue_wpa3//sites-enabled/inner-tunnel
including configuration file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
main {
 security {
 	user = "freerad"
 	group = "freerad"
 	allow_core_dumps = no
 }
	name = "freeradius"
	prefix = "/usr"
	localstatedir = "/var"
	logdir = "/var/log/freeradius"
	run_dir = "/var/run/freeradius"
}
main {
	name = "freeradius"
	prefix = "/usr"
	localstatedir = "/var"
	sbindir = "/usr/sbin"
	logdir = "/var/log/freeradius"
	run_dir = "/var/run/freeradius"
	libdir = "/usr/lib/freeradius"
	radacctdir = "/var/log/freeradius/radacct"
	hostname_lookups = no
	max_request_time = 30
	cleanup_delay = 5
	max_requests = 16384
	postauth_client_lost = no
	pidfile = "/var/run/freeradius/freeradius.pid"
	checkrad = "/usr/sbin/checkrad"
	debug_level = 0
	proxy_requests = yes
 log {
 	stripped_names = no
 	auth = no
 	auth_badpass = no
 	auth_goodpass = no
 	colourise = yes
 	msg_denied = "You are already logged in - access denied"
 }
 resources {
 }
 security {
 	max_attributes = 200
 	reject_delay = 1.000000
 	status_server = yes
 }
}
radiusd: #### Loading Realms and Home Servers ####
 proxy server {
 	retry_delay = 5
 	retry_count = 3
 	default_fallback = no
 	dead_time = 120
 	wake_all_if_all_dead = no
 }
 home_server localhost {
 	ipaddr = 127.0.0.1
 	port = 1812
 	type = "auth"
 	secret = <<< secret >>>
 	response_window = 20.000000
 	response_timeouts = 1
 	max_outstanding = 65536
 	zombie_period = 40
 	status_check = "status-server"
 	ping_interval = 30
 	check_interval = 30
 	check_timeout = 4
 	num_answers_to_alive = 3
 	revive_interval = 120
  limit {
  	max_connections = 16
  	max_requests = 0
  	lifetime = 0
  	idle_timeout = 0
  }
  coa {
  	irt = 2
  	mrt = 16
  	mrc = 5
  	mrd = 30
  }
 }
 home_server_pool my_auth_failover {
	type = fail-over
	home_server = localhost
 }
 realm example.com {
	auth_pool = my_auth_failover
 }
 realm LOCAL {
 }
radiusd: #### Loading Clients ####
 client localhost {
 	ipaddr = 127.0.0.1
 	require_message_authenticator = no
 	secret = <<< secret >>>
 	nas_type = "other"
 	proto = "*"
  limit {
  	max_connections = 16
  	lifetime = 0
  	idle_timeout = 30
  }
 }
 client localhost_ipv6 {
 	ipv6addr = ::1
 	require_message_authenticator = no
 	secret = <<< secret >>>
  limit {
  	max_connections = 16
  	lifetime = 0
  	idle_timeout = 30
  }
 }
Debugger not attached
systemd watchdog is disabled
 # Creating Auth-Type = mschap
 # Creating Auth-Type = eap
 # Creating Auth-Type = PAP
 # Creating Auth-Type = CHAP
 # Creating Auth-Type = MS-CHAP
 # Creating Auth-Type = digest
 # Creating Autz-Type = New-TLS-Connection
radiusd: #### Instantiating modules ####
 modules {
  # Loaded module rlm_files
  # Loading module "files" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/files
  files {
  	filename = "Freeradius/Conf/E_rogue_wpa3//mods-config/files/authorize"
  	acctusersfile = "Freeradius/Conf/E_rogue_wpa3//mods-config/files/accounting"
  	preproxy_usersfile = "Freeradius/Conf/E_rogue_wpa3//mods-config/files/pre-proxy"
  }
  # Loaded module rlm_passwd
  # Loading module "etc_passwd" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/passwd
  passwd etc_passwd {
  	filename = "/etc/passwd"
  	format = "*User-Name:Crypt-Password:"
  	delimiter = ":"
  	ignore_nislike = no
  	ignore_empty = yes
  	allow_multiple_keys = no
  	hash_size = 100
  }
  # Loaded module rlm_expr
  # Loading module "expr" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/expr
  expr {
  	safe_characters = "@abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789.-_: /√§√©√∂√º√†√¢√¶√ß√®√©√™√´√Æ√Ø√¥≈ì√π√ª√ºa√ø√Ñ√â√ñ√ú√ü√Ä√Ç√Ü√á√à√â√ä√ã√é√è√î≈í√ô√õ√ú≈∏"
  }
  # Loaded module rlm_soh
  # Loading module "soh" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/soh
  soh {
  	dhcp = yes
  }
  # Loaded module rlm_digest
  # Loading module "digest" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/digest
  # Loaded module rlm_dynamic_clients
  # Loading module "dynamic_clients" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/dynamic_clients
  # Loaded module rlm_unix
  # Loading module "unix" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/unix
  unix {
  	radwtmp = "/var/log/freeradius/radwtmp"
  }
Creating attribute Unix-Group
  # Loaded module rlm_exec
  # Loading module "echo" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/echo
  exec echo {
  	wait = yes
  	program = "/bin/echo %{User-Name}"
  	input_pairs = "request"
  	output_pairs = "reply"
  	shell_escape = yes
  }
  # Loaded module rlm_preprocess
  # Loading module "preprocess" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/preprocess
  preprocess {
  	huntgroups = "Freeradius/Conf/E_rogue_wpa3//mods-config/preprocess/huntgroups"
  	hints = "Freeradius/Conf/E_rogue_wpa3//mods-config/preprocess/hints"
  	with_ascend_hack = no
  	ascend_channels_per_line = 23
  	with_ntdomain_hack = no
  	with_specialix_jetstream_hack = no
  	with_cisco_vsa_hack = no
  	with_alvarion_vsa_hack = no
  }
  # Loaded module rlm_replicate
  # Loading module "replicate" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/replicate
  # Loaded module rlm_pap
  # Loading module "pap" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/pap
  pap {
  	normalise = yes
  }
  # Loaded module rlm_always
  # Loading module "reject" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  always reject {
  	rcode = "reject"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "fail" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  always fail {
  	rcode = "fail"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "ok" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  always ok {
  	rcode = "ok"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "handled" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  always handled {
  	rcode = "handled"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "invalid" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  always invalid {
  	rcode = "invalid"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "userlock" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  always userlock {
  	rcode = "userlock"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "notfound" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  always notfound {
  	rcode = "notfound"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "noop" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  always noop {
  	rcode = "noop"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "updated" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  always updated {
  	rcode = "updated"
  	simulcount = 0
  	mpp = no
  }
  # Loaded module rlm_detail
  # Loading module "detail" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/detail
  detail {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loaded module rlm_cache
  # Loading module "cache_eap" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/cache_eap
  cache cache_eap {
  	driver = "rlm_cache_rbtree"
  	key = "%{%{control:State}:-%{%{reply:State}:-%{State}}}"
  	ttl = 15
  	max_entries = 0
  	epoch = 0
  	add_stats = no
  }
  # Loaded module rlm_mschap
  # Loading module "mschap" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/mschap
  mschap {
  	use_mppe = yes
  	require_encryption = no
  	require_strong = no
  	with_ntdomain_hack = yes
   passchange {
   }
  	allow_retry = yes
  	winbind_retry_with_normalised_username = no
  }
  # Loaded module rlm_eap
  # Loading module "eap" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/eap
  eap {
  	default_eap_type = "md5"
  	timer_expire = 60
  	ignore_unknown_eap_types = no
  	cisco_accounting_username_bug = no
  	max_sessions = 16384
  }
  # Loaded module rlm_logintime
  # Loading module "logintime" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/logintime
  logintime {
  	minimum_timeout = 60
  }
  # Loaded module rlm_utf8
  # Loading module "utf8" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/utf8
  # Loaded module rlm_unpack
  # Loading module "unpack" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/unpack
  # Loaded module rlm_radutmp
  # Loading module "radutmp" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/radutmp
  radutmp {
  	filename = "/var/log/freeradius/radutmp"
  	username = "%{User-Name}"
  	case_sensitive = yes
  	check_with_nas = yes
  	permissions = 384
  	caller_id = yes
  }
  # Loaded module rlm_expiration
  # Loading module "expiration" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/expiration
  # Loaded module rlm_chap
  # Loading module "chap" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/chap
  # Loaded module rlm_realm
  # Loading module "IPASS" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/realm
  realm IPASS {
  	format = "prefix"
  	delimiter = "/"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "suffix" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/realm
  realm suffix {
  	format = "suffix"
  	delimiter = "@"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "bangpath" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/realm
  realm bangpath {
  	format = "prefix"
  	delimiter = "!"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "realmpercent" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/realm
  realm realmpercent {
  	format = "suffix"
  	delimiter = "%"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "ntdomain" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/realm
  realm ntdomain {
  	format = "prefix"
  	delimiter = "\\"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "sradutmp" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/sradutmp
  radutmp sradutmp {
  	filename = "/var/log/freeradius/sradutmp"
  	username = "%{User-Name}"
  	case_sensitive = yes
  	check_with_nas = yes
  	permissions = 420
  	caller_id = no
  }
  # Loaded module rlm_attr_filter
  # Loading module "attr_filter.post-proxy" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/attr_filter
  attr_filter attr_filter.post-proxy {
  	filename = "Freeradius/Conf/E_rogue_wpa3//mods-config/attr_filter/post-proxy"
  	key = "%{Realm}"
  	relaxed = no
  }
  # Loading module "attr_filter.pre-proxy" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/attr_filter
  attr_filter attr_filter.pre-proxy {
  	filename = "Freeradius/Conf/E_rogue_wpa3//mods-config/attr_filter/pre-proxy"
  	key = "%{Realm}"
  	relaxed = no
  }
  # Loading module "attr_filter.access_reject" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/attr_filter
  attr_filter attr_filter.access_reject {
  	filename = "Freeradius/Conf/E_rogue_wpa3//mods-config/attr_filter/access_reject"
  	key = "%{User-Name}"
  	relaxed = no
  }
  # Loading module "attr_filter.access_challenge" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/attr_filter
  attr_filter attr_filter.access_challenge {
  	filename = "Freeradius/Conf/E_rogue_wpa3//mods-config/attr_filter/access_challenge"
  	key = "%{User-Name}"
  	relaxed = no
  }
  # Loading module "attr_filter.accounting_response" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/attr_filter
  attr_filter attr_filter.accounting_response {
  	filename = "Freeradius/Conf/E_rogue_wpa3//mods-config/attr_filter/accounting_response"
  	key = "%{User-Name}"
  	relaxed = no
  }
  # Loading module "attr_filter.coa" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/attr_filter
  attr_filter attr_filter.coa {
  	filename = "Freeradius/Conf/E_rogue_wpa3//mods-config/attr_filter/coa"
  	key = "%{User-Name}"
  	relaxed = no
  }
  # Loading module "ntlm_auth" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/ntlm_auth
  exec ntlm_auth {
  	wait = yes
  	program = "/path/to/ntlm_auth --request-nt-key --domain=MYDOMAIN --username=%{mschap:User-Name} --password=%{User-Password}"
  	shell_escape = yes
  }
  # Loading module "auth_log" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/detail.log
  detail auth_log {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/auth-detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loading module "reply_log" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/detail.log
  detail reply_log {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/reply-detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loading module "pre_proxy_log" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/detail.log
  detail pre_proxy_log {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/pre-proxy-detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loading module "post_proxy_log" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/detail.log
  detail post_proxy_log {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/post-proxy-detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loading module "exec" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/exec
  exec {
  	wait = no
  	input_pairs = "request"
  	shell_escape = yes
  	timeout = 10
  }
  # Loaded module rlm_linelog
  # Loading module "linelog" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/linelog
  linelog {
  	filename = "/var/log/freeradius/linelog"
  	escape_filenames = no
  	syslog_severity = "info"
  	permissions = 384
  	format = "This is a log message for %{User-Name}"
  	reference = "messages.%{%{reply:Packet-Type}:-default}"
  }
  # Loading module "log_accounting" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/linelog
  linelog log_accounting {
  	filename = "/var/log/freeradius/linelog-accounting"
  	escape_filenames = no
  	syslog_severity = "info"
  	permissions = 384
  	format = ""
  	reference = "Accounting-Request.%{%{Acct-Status-Type}:-unknown}"
  }
  instantiate {
  }
  # Instantiating module "files" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/files
reading pairlist file Freeradius/Conf/E_rogue_wpa3//mods-config/files/authorize
reading pairlist file Freeradius/Conf/E_rogue_wpa3//mods-config/files/accounting
reading pairlist file Freeradius/Conf/E_rogue_wpa3//mods-config/files/pre-proxy
  # Instantiating module "etc_passwd" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/passwd
rlm_passwd: nfields: 3 keyfield 0(User-Name) listable: no
  # Instantiating module "preprocess" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/preprocess
reading pairlist file Freeradius/Conf/E_rogue_wpa3//mods-config/preprocess/huntgroups
reading pairlist file Freeradius/Conf/E_rogue_wpa3//mods-config/preprocess/hints
  # Instantiating module "pap" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/pap
  # Instantiating module "reject" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  # Instantiating module "fail" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  # Instantiating module "ok" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  # Instantiating module "handled" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  # Instantiating module "invalid" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  # Instantiating module "userlock" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  # Instantiating module "notfound" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  # Instantiating module "noop" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  # Instantiating module "updated" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  # Instantiating module "detail" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/detail
  # Instantiating module "cache_eap" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/cache_eap
rlm_cache (cache_eap): Driver rlm_cache_rbtree (module rlm_cache_rbtree) loaded and linked
  # Instantiating module "mschap" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/mschap
rlm_mschap (mschap): using internal authentication
  # Instantiating module "eap" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/eap
   # Linked to sub-module rlm_eap_md5
   # Linked to sub-module rlm_eap_gtc
   gtc {
   	challenge = "Password: "
   	auth_type = "PAP"
   }
   # Linked to sub-module rlm_eap_tls
   tls {
   	tls = "tls-common"
   }
   tls-config tls-common {
   	verify_depth = 0
   	ca_path = "Freeradius/Conf/E_rogue_wpa3//certs"
   	pem_file_type = yes
   	private_key_file = "Freeradius/Conf/E_rogue_wpa3//certs/server.key"
   	certificate_file = "Freeradius/Conf/E_rogue_wpa3//certs/server.crt"
   	ca_file = "Freeradius/Conf/E_rogue_wpa3//certs/ca.pem"
   	private_key_password = <<< secret >>>
   	fragment_size = 1024
   	include_length = yes
   	auto_chain = yes
   	check_crl = no
   	check_all_crl = no
   	ca_path_reload_interval = 0
   	cipher_list = "DEFAULT"
   	cipher_server_preference = no
   	reject_unknown_intermediate_ca = no
   	ecdh_curve = ""
   	tls_max_version = "1.2"
   	tls_min_version = "1.2"
    cache {
    	enable = no
    	lifetime = 24
    	max_entries = 255
    }
    verify {
    	skip_if_ocsp_ok = no
    }
    ocsp {
    	enable = no
    	override_cert_url = yes
    	url = "http://127.0.0.1/ocsp/"
    	use_nonce = yes
    	timeout = 0
    	softfail = no
    }
   }
   # Linked to sub-module rlm_eap_ttls
   ttls {
   	tls = "tls-common"
   	default_eap_type = "md5"
   	copy_request_to_tunnel = no
   	use_tunneled_reply = no
   	virtual_server = "inner-tunnel"
   	include_length = yes
   	require_client_cert = no
   }
tls: Using cached TLS configuration from previous invocation
   # Linked to sub-module rlm_eap_peap
   peap {
   	tls = "tls-common"
   	default_eap_type = "mschapv2"
   	copy_request_to_tunnel = no
   	use_tunneled_reply = no
   	proxy_tunneled_request_as_eap = yes
   	virtual_server = "inner-tunnel"
   	soh = no
   	require_client_cert = no
   }
tls: Using cached TLS configuration from previous invocation
   # Linked to sub-module rlm_eap_mschapv2
   mschapv2 {
   	with_ntdomain_hack = no
   	send_error = no
   }
  # Instantiating module "logintime" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/logintime
  # Instantiating module "expiration" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/expiration
  # Instantiating module "IPASS" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/realm
  # Instantiating module "suffix" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/realm
  # Instantiating module "bangpath" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/realm
  # Instantiating module "realmpercent" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/realm
  # Instantiating module "ntdomain" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/realm
  # Instantiating module "attr_filter.post-proxy" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/attr_filter
reading pairlist file Freeradius/Conf/E_rogue_wpa3//mods-config/attr_filter/post-proxy
  # Instantiating module "attr_filter.pre-proxy" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/attr_filter
reading pairlist file Freeradius/Conf/E_rogue_wpa3//mods-config/attr_filter/pre-proxy
  # Instantiating module "attr_filter.access_reject" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/attr_filter
reading pairlist file Freeradius/Conf/E_rogue_wpa3//mods-config/attr_filter/access_reject
  # Instantiating module "attr_filter.access_challenge" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/attr_filter
reading pairlist file Freeradius/Conf/E_rogue_wpa3//mods-config/attr_filter/access_challenge
  # Instantiating module "attr_filter.accounting_response" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/attr_filter
reading pairlist file Freeradius/Conf/E_rogue_wpa3//mods-config/attr_filter/accounting_response
  # Instantiating module "attr_filter.coa" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/attr_filter
reading pairlist file Freeradius/Conf/E_rogue_wpa3//mods-config/attr_filter/coa
  # Instantiating module "auth_log" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/detail.log
rlm_detail (auth_log): 'User-Password' suppressed, will not appear in detail output
  # Instantiating module "reply_log" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/detail.log
  # Instantiating module "pre_proxy_log" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/detail.log
  # Instantiating module "post_proxy_log" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/detail.log
  # Instantiating module "linelog" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/linelog
  # Instantiating module "log_accounting" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/linelog
 } # modules
radiusd: #### Loading Virtual Servers ####
server { # from file Freeradius/Conf/E_rogue_wpa3//radiusd.conf
} # server
server inner-tunnel { # from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/inner-tunnel
 # Loading authenticate {...}
Compiling Auth-Type PAP for attr Auth-Type
Compiling Auth-Type CHAP for attr Auth-Type
Compiling Auth-Type MS-CHAP for attr Auth-Type
 # Loading authorize {...}
Ignoring "sql" (see raddb/mods-available/README.rst)
Ignoring "ldap" (see raddb/mods-available/README.rst)
 # Loading session {...}
 # Loading post-proxy {...}
 # Loading post-auth {...}
 # Skipping contents of 'if' as it is always 'false' -- Freeradius/Conf/E_rogue_wpa3//sites-enabled/inner-tunnel:336
Compiling Post-Auth-Type REJECT for attr Post-Auth-Type
} # server inner-tunnel
server default { # from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
 # Loading authenticate {...}
Compiling Auth-Type PAP for attr Auth-Type
Compiling Auth-Type CHAP for attr Auth-Type
Compiling Auth-Type MS-CHAP for attr Auth-Type
 # Loading authorize {...}
Compiling Autz-Type New-TLS-Connection for attr Autz-Type
 # Loading preacct {...}
 # Loading accounting {...}
 # Loading post-proxy {...}
 # Loading post-auth {...}
Compiling Post-Auth-Type REJECT for attr Post-Auth-Type
Compiling Post-Auth-Type Challenge for attr Post-Auth-Type
Compiling Post-Auth-Type Client-Lost for attr Post-Auth-Type
} # server default
radiusd: #### Opening IP addresses and Ports ####
listen {
  	type = "auth"
  	ipaddr = 127.0.0.1
  	port = 18120
}
listen {
  	type = "auth"
  	ipaddr = *
  	port = 0
   limit {
   	max_connections = 16
   	lifetime = 0
   	idle_timeout = 30
   }
}
listen {
  	type = "acct"
  	ipaddr = *
  	port = 0
   limit {
   	max_connections = 16
   	lifetime = 0
   	idle_timeout = 30
   }
}
listen {
  	type = "auth"
  	ipv6addr = ::
  	port = 0
   limit {
   	max_connections = 16
   	lifetime = 0
   	idle_timeout = 30
   }
}
listen {
  	type = "acct"
  	ipv6addr = ::
  	port = 0
   limit {
   	max_connections = 16
   	lifetime = 0
   	idle_timeout = 30
   }
}
Listening on auth address 127.0.0.1 port 18120 bound to server inner-tunnel
Listening on auth address * port 1812 bound to server default
Listening on acct address * port 1813 bound to server default
Listening on auth address :: port 1812 bound to server default
Listening on acct address :: port 1813 bound to server default
Listening on proxy address * port 56624
Listening on proxy address :: port 55230
Ready to process requests
(0) Received Access-Request Id 0 from 127.0.0.1:40818 to 127.0.0.1:1812 length 230
(0)   User-Name = "anonymous"
(0)   NAS-IP-Address = 127.0.0.1
(0)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(0)   NAS-Port-Type = Wireless-802.11
(0)   Service-Type = Framed-User
(0)   NAS-Port = 1
(0)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(0)   Connect-Info = "CONNECT 54Mbps 802.11g"
(0)   Acct-Session-Id = "A40F4F1E58BA01BF"
(0)   Acct-Multi-Session-Id = "4F68F026BE7D2BDE"
(0)   WLAN-Pairwise-Cipher = 1027076
(0)   WLAN-Group-Cipher = 1027076
(0)   WLAN-AKM-Suite = 1027073
(0)   WLAN-Group-Mgmt-Cipher = 1027078
(0)   Framed-MTU = 1400
(0)   EAP-Message = 0x0270000e01616e6f6e796d6f7573
(0)   Message-Authenticator = 0x740797240877565715759ecbcf3a4ff6
(0) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(0)   authorize {
(0)     policy filter_username {
(0)       if (&User-Name) {
(0)       if (&User-Name)  -> TRUE
(0)       if (&User-Name)  {
(0)         if (&User-Name =~ / /) {
(0)         if (&User-Name =~ / /)  -> FALSE
(0)         if (&User-Name =~ /@[^@]*@/ ) {
(0)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(0)         if (&User-Name =~ /\.\./ ) {
(0)         if (&User-Name =~ /\.\./ )  -> FALSE
(0)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(0)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(0)         if (&User-Name =~ /\.$/)  {
(0)         if (&User-Name =~ /\.$/)   -> FALSE
(0)         if (&User-Name =~ /@\./)  {
(0)         if (&User-Name =~ /@\./)   -> FALSE
(0)       } # if (&User-Name)  = notfound
(0)     } # policy filter_username = notfound
(0)     [preprocess] = ok
(0)     [chap] = noop
(0)     [mschap] = noop
(0)     [digest] = noop
(0) suffix: Checking for suffix after "@"
(0) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(0) suffix: No such realm "NULL"
(0)     [suffix] = noop
(0) eap: Peer sent EAP Response (code 2) ID 112 length 14
(0) eap: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
(0)     [eap] = ok
(0)   } # authorize = ok
(0) Found Auth-Type = eap
(0) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(0)   authenticate {
(0) eap: Peer sent packet with method EAP Identity (1)
(0) eap: Calling submodule eap_md5 to process data
(0) eap_md5: Issuing MD5 Challenge
(0) eap: Sending EAP Request (code 1) ID 113 length 22
(0) eap: EAP session adding &reply:State = 0x9381edd093f0e9cf
(0)     [eap] = handled
(0)   } # authenticate = handled
(0) Using Post-Auth-Type Challenge
(0) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(0)   Challenge { ... } # empty sub-section is ignored
(0) Sent Access-Challenge Id 0 from 127.0.0.1:1812 to 127.0.0.1:40818 length 80
(0)   EAP-Message = 0x017100160410e766cf9a18297399714f0777a5b92d7e
(0)   Message-Authenticator = 0x00000000000000000000000000000000
(0)   State = 0x9381edd093f0e9cff18215b8fbe3f77e
(0) Finished request
Waking up in 4.9 seconds.
(1) Received Access-Request Id 1 from 127.0.0.1:40818 to 127.0.0.1:1812 length 241
(1)   User-Name = "anonymous"
(1)   NAS-IP-Address = 127.0.0.1
(1)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(1)   NAS-Port-Type = Wireless-802.11
(1)   Service-Type = Framed-User
(1)   NAS-Port = 1
(1)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(1)   Connect-Info = "CONNECT 54Mbps 802.11g"
(1)   Acct-Session-Id = "A40F4F1E58BA01BF"
(1)   Acct-Multi-Session-Id = "4F68F026BE7D2BDE"
(1)   WLAN-Pairwise-Cipher = 1027076
(1)   WLAN-Group-Cipher = 1027076
(1)   WLAN-AKM-Suite = 1027073
(1)   WLAN-Group-Mgmt-Cipher = 1027078
(1)   Framed-MTU = 1400
(1)   EAP-Message = 0x02710007031915
(1)   State = 0x9381edd093f0e9cff18215b8fbe3f77e
(1)   Message-Authenticator = 0xbc600cad49d02a3dadf85b337ec96d6a
(1) session-state: No cached attributes
(1) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(1)   authorize {
(1)     policy filter_username {
(1)       if (&User-Name) {
(1)       if (&User-Name)  -> TRUE
(1)       if (&User-Name)  {
(1)         if (&User-Name =~ / /) {
(1)         if (&User-Name =~ / /)  -> FALSE
(1)         if (&User-Name =~ /@[^@]*@/ ) {
(1)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(1)         if (&User-Name =~ /\.\./ ) {
(1)         if (&User-Name =~ /\.\./ )  -> FALSE
(1)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(1)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(1)         if (&User-Name =~ /\.$/)  {
(1)         if (&User-Name =~ /\.$/)   -> FALSE
(1)         if (&User-Name =~ /@\./)  {
(1)         if (&User-Name =~ /@\./)   -> FALSE
(1)       } # if (&User-Name)  = notfound
(1)     } # policy filter_username = notfound
(1)     [preprocess] = ok
(1)     [chap] = noop
(1)     [mschap] = noop
(1)     [digest] = noop
(1) suffix: Checking for suffix after "@"
(1) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(1) suffix: No such realm "NULL"
(1)     [suffix] = noop
(1) eap: Peer sent EAP Response (code 2) ID 113 length 7
(1) eap: No EAP Start, assuming it's an on-going EAP conversation
(1)     [eap] = updated
(1)     [files] = noop
(1)     [expiration] = noop
(1)     [logintime] = noop
Not doing PAP as Auth-Type is already set.
(1)     [pap] = noop
(1)   } # authorize = updated
(1) Found Auth-Type = eap
(1) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(1)   authenticate {
(1) eap: Expiring EAP session with state 0x9381edd093f0e9cf
(1) eap: Finished EAP session with state 0x9381edd093f0e9cf
(1) eap: Previous EAP request found for state 0x9381edd093f0e9cf, released from the list
(1) eap: Peer sent packet with method EAP NAK (3)
(1) eap: Found mutually acceptable type PEAP (25)
(1) eap: Calling submodule eap_peap to process data
(1) eap_peap: (TLS) Initiating new session
(1) eap: Sending EAP Request (code 1) ID 114 length 6
(1) eap: EAP session adding &reply:State = 0x9381edd092f3f4cf
(1)     [eap] = handled
(1)   } # authenticate = handled
(1) Using Post-Auth-Type Challenge
(1) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(1)   Challenge { ... } # empty sub-section is ignored
(1) session-state: Saving cached attributes
(1)   Framed-MTU = 994
(1) Sent Access-Challenge Id 1 from 127.0.0.1:1812 to 127.0.0.1:40818 length 64
(1)   EAP-Message = 0x017200061920
(1)   Message-Authenticator = 0x00000000000000000000000000000000
(1)   State = 0x9381edd092f3f4cff18215b8fbe3f77e
(1) Finished request
Waking up in 4.9 seconds.
(2) Received Access-Request Id 2 from 127.0.0.1:40818 to 127.0.0.1:1812 length 476
(2)   User-Name = "anonymous"
(2)   NAS-IP-Address = 127.0.0.1
(2)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(2)   NAS-Port-Type = Wireless-802.11
(2)   Service-Type = Framed-User
(2)   NAS-Port = 1
(2)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(2)   Connect-Info = "CONNECT 54Mbps 802.11g"
(2)   Acct-Session-Id = "A40F4F1E58BA01BF"
(2)   Acct-Multi-Session-Id = "4F68F026BE7D2BDE"
(2)   WLAN-Pairwise-Cipher = 1027076
(2)   WLAN-Group-Cipher = 1027076
(2)   WLAN-AKM-Suite = 1027073
(2)   WLAN-Group-Mgmt-Cipher = 1027078
(2)   Framed-MTU = 1400
(2)   EAP-Message = 0x027200f21980000000e816030300e3010000df0303000000193c355d7f3a4ab31ada8639e615f9c971497506e26e60a936b24be13a000076c02cc030c0adc024c028c00ac014c0afc05dc061c049c04dc02bc02fc0acc023c027c009c013c0aec05cc060c048c04c009dc09d003d0035c032c02ac00fc02ec026c005c0a1c05fc063c051c04bc04fc03d009cc09c003c002fc031c029c00ec02dc025c004c0a0c05ec062c050c04ac04ec03c00ff01000040000a0010000e001d001700180019001a001b001c000d001600140603050306010501040303030401030102030201000b00020100001600000017000000230000
(2)   State = 0x9381edd092f3f4cff18215b8fbe3f77e
(2)   Message-Authenticator = 0x000f2ff6536b5a655f225face90954ac
(2) Restoring &session-state
(2)   &session-state:Framed-MTU = 994
(2) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(2)   authorize {
(2)     policy filter_username {
(2)       if (&User-Name) {
(2)       if (&User-Name)  -> TRUE
(2)       if (&User-Name)  {
(2)         if (&User-Name =~ / /) {
(2)         if (&User-Name =~ / /)  -> FALSE
(2)         if (&User-Name =~ /@[^@]*@/ ) {
(2)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(2)         if (&User-Name =~ /\.\./ ) {
(2)         if (&User-Name =~ /\.\./ )  -> FALSE
(2)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(2)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(2)         if (&User-Name =~ /\.$/)  {
(2)         if (&User-Name =~ /\.$/)   -> FALSE
(2)         if (&User-Name =~ /@\./)  {
(2)         if (&User-Name =~ /@\./)   -> FALSE
(2)       } # if (&User-Name)  = notfound
(2)     } # policy filter_username = notfound
(2)     [preprocess] = ok
(2)     [chap] = noop
(2)     [mschap] = noop
(2)     [digest] = noop
(2) suffix: Checking for suffix after "@"
(2) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(2) suffix: No such realm "NULL"
(2)     [suffix] = noop
(2) eap: Peer sent EAP Response (code 2) ID 114 length 242
(2) eap: Continuing tunnel setup
(2)     [eap] = ok
(2)   } # authorize = ok
(2) Found Auth-Type = eap
(2) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(2)   authenticate {
(2) eap: Expiring EAP session with state 0x9381edd092f3f4cf
(2) eap: Finished EAP session with state 0x9381edd092f3f4cf
(2) eap: Previous EAP request found for state 0x9381edd092f3f4cf, released from the list
(2) eap: Peer sent packet with method EAP PEAP (25)
(2) eap: Calling submodule eap_peap to process data
(2) eap_peap: (TLS) EAP Peer says that the final record size will be 232 bytes
(2) eap_peap: (TLS) EAP Got all data (232 bytes)
(2) eap_peap: (TLS) Handshake state - before SSL initialization
(2) eap_peap: (TLS) Handshake state - Server before SSL initialization
(2) eap_peap: (TLS) Handshake state - Server before SSL initialization
(2) eap_peap: (TLS) recv TLS 1.3 Handshake, ClientHello
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read client hello
(2) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHello
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server hello
(2) eap_peap: (TLS) send TLS 1.2 Handshake, Certificate
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write certificate
(2) eap_peap: (TLS) send TLS 1.2 Handshake, ServerKeyExchange
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write key exchange
(2) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHelloDone
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server done
(2) eap_peap: (TLS) Server : Need to read more data: SSLv3/TLS write server done
(2) eap_peap: (TLS) In Handshake Phase
(2) eap: Sending EAP Request (code 1) ID 115 length 1004
(2) eap: EAP session adding &reply:State = 0x9381edd091f2f4cf
(2)     [eap] = handled
(2)   } # authenticate = handled
(2) Using Post-Auth-Type Challenge
(2) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(2)   Challenge { ... } # empty sub-section is ignored
(2) session-state: Saving cached attributes
(2)   Framed-MTU = 994
(2)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(2)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(2)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(2)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(2)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(2) Sent Access-Challenge Id 2 from 127.0.0.1:1812 to 127.0.0.1:40818 length 1068
(2)   EAP-Message = 0x017303ec19c000000aac160303003d02000039030360b36ac02c9dfe5932f4eec8686af00f4295d58caa0a3a415da755ab8b1f4b2400c030000011ff01000100000b00040300010200170000160303092b0b0009270009240004203082041c30820304a003020102020101300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232333136353534385a170d3234303232313136353534385a307c310b3009060355040613024652310f300d06035504080c0652616469757331153013060355040a0c0c4578616d706c6520496e632e3123302106035504030c1a4578616d70
(2)   Message-Authenticator = 0x00000000000000000000000000000000
(2)   State = 0x9381edd091f2f4cff18215b8fbe3f77e
(2) Finished request
Waking up in 4.9 seconds.
(3) Received Access-Request Id 3 from 127.0.0.1:40818 to 127.0.0.1:1812 length 240
(3)   User-Name = "anonymous"
(3)   NAS-IP-Address = 127.0.0.1
(3)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(3)   NAS-Port-Type = Wireless-802.11
(3)   Service-Type = Framed-User
(3)   NAS-Port = 1
(3)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(3)   Connect-Info = "CONNECT 54Mbps 802.11g"
(3)   Acct-Session-Id = "A40F4F1E58BA01BF"
(3)   Acct-Multi-Session-Id = "4F68F026BE7D2BDE"
(3)   WLAN-Pairwise-Cipher = 1027076
(3)   WLAN-Group-Cipher = 1027076
(3)   WLAN-AKM-Suite = 1027073
(3)   WLAN-Group-Mgmt-Cipher = 1027078
(3)   Framed-MTU = 1400
(3)   EAP-Message = 0x027300061900
(3)   State = 0x9381edd091f2f4cff18215b8fbe3f77e
(3)   Message-Authenticator = 0xfd4d20bb09234b0e52f9c2784957851c
(3) Restoring &session-state
(3)   &session-state:Framed-MTU = 994
(3)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(3)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(3)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(3)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(3)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(3) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(3)   authorize {
(3)     policy filter_username {
(3)       if (&User-Name) {
(3)       if (&User-Name)  -> TRUE
(3)       if (&User-Name)  {
(3)         if (&User-Name =~ / /) {
(3)         if (&User-Name =~ / /)  -> FALSE
(3)         if (&User-Name =~ /@[^@]*@/ ) {
(3)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(3)         if (&User-Name =~ /\.\./ ) {
(3)         if (&User-Name =~ /\.\./ )  -> FALSE
(3)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(3)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(3)         if (&User-Name =~ /\.$/)  {
(3)         if (&User-Name =~ /\.$/)   -> FALSE
(3)         if (&User-Name =~ /@\./)  {
(3)         if (&User-Name =~ /@\./)   -> FALSE
(3)       } # if (&User-Name)  = notfound
(3)     } # policy filter_username = notfound
(3)     [preprocess] = ok
(3)     [chap] = noop
(3)     [mschap] = noop
(3)     [digest] = noop
(3) suffix: Checking for suffix after "@"
(3) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(3) suffix: No such realm "NULL"
(3)     [suffix] = noop
(3) eap: Peer sent EAP Response (code 2) ID 115 length 6
(3) eap: Continuing tunnel setup
(3)     [eap] = ok
(3)   } # authorize = ok
(3) Found Auth-Type = eap
(3) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(3)   authenticate {
(3) eap: Expiring EAP session with state 0x9381edd091f2f4cf
(3) eap: Finished EAP session with state 0x9381edd091f2f4cf
(3) eap: Previous EAP request found for state 0x9381edd091f2f4cf, released from the list
(3) eap: Peer sent packet with method EAP PEAP (25)
(3) eap: Calling submodule eap_peap to process data
(3) eap_peap: (TLS) Peer ACKed our handshake fragment
(3) eap: Sending EAP Request (code 1) ID 116 length 1000
(3) eap: EAP session adding &reply:State = 0x9381edd090f5f4cf
(3)     [eap] = handled
(3)   } # authenticate = handled
(3) Using Post-Auth-Type Challenge
(3) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(3)   Challenge { ... } # empty sub-section is ignored
(3) session-state: Saving cached attributes
(3)   Framed-MTU = 994
(3)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(3)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(3)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(3)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(3)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(3) Sent Access-Challenge Id 3 from 127.0.0.1:1812 to 127.0.0.1:40818 length 1064
(3)   EAP-Message = 0x017403e81940fdc5d236f5cebe7b526d662e8d0c3336e0804a8a795a821a8dfea62d43c63bbb694adeed590362a65c8a265eae3cd71b430a3dfe2edfa887fa5816577ab1223ae511b3f2e37cd250f622f068aaca3941e0a54a8ef6e236114871333ac2763798f73181d75c408eaad48291d2bac09400dc45fc153b29d61a00896c9415f6f4ce2bd8d4a98c105a4c480e11cb8b51900004fe308204fa308203e2a00302010202146f0684a6149c1b984ef557a40f4730895d7e5f43300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232333136353534335a170d32343032
(3)   Message-Authenticator = 0x00000000000000000000000000000000
(3)   State = 0x9381edd090f5f4cff18215b8fbe3f77e
(3) Finished request
Waking up in 4.8 seconds.
(4) Received Access-Request Id 4 from 127.0.0.1:40818 to 127.0.0.1:1812 length 240
(4)   User-Name = "anonymous"
(4)   NAS-IP-Address = 127.0.0.1
(4)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(4)   NAS-Port-Type = Wireless-802.11
(4)   Service-Type = Framed-User
(4)   NAS-Port = 1
(4)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(4)   Connect-Info = "CONNECT 54Mbps 802.11g"
(4)   Acct-Session-Id = "A40F4F1E58BA01BF"
(4)   Acct-Multi-Session-Id = "4F68F026BE7D2BDE"
(4)   WLAN-Pairwise-Cipher = 1027076
(4)   WLAN-Group-Cipher = 1027076
(4)   WLAN-AKM-Suite = 1027073
(4)   WLAN-Group-Mgmt-Cipher = 1027078
(4)   Framed-MTU = 1400
(4)   EAP-Message = 0x027400061900
(4)   State = 0x9381edd090f5f4cff18215b8fbe3f77e
(4)   Message-Authenticator = 0x751baa068a78a70c49d4f0588751adf0
(4) Restoring &session-state
(4)   &session-state:Framed-MTU = 994
(4)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(4) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(4)   authorize {
(4)     policy filter_username {
(4)       if (&User-Name) {
(4)       if (&User-Name)  -> TRUE
(4)       if (&User-Name)  {
(4)         if (&User-Name =~ / /) {
(4)         if (&User-Name =~ / /)  -> FALSE
(4)         if (&User-Name =~ /@[^@]*@/ ) {
(4)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(4)         if (&User-Name =~ /\.\./ ) {
(4)         if (&User-Name =~ /\.\./ )  -> FALSE
(4)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(4)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(4)         if (&User-Name =~ /\.$/)  {
(4)         if (&User-Name =~ /\.$/)   -> FALSE
(4)         if (&User-Name =~ /@\./)  {
(4)         if (&User-Name =~ /@\./)   -> FALSE
(4)       } # if (&User-Name)  = notfound
(4)     } # policy filter_username = notfound
(4)     [preprocess] = ok
(4)     [chap] = noop
(4)     [mschap] = noop
(4)     [digest] = noop
(4) suffix: Checking for suffix after "@"
(4) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(4) suffix: No such realm "NULL"
(4)     [suffix] = noop
(4) eap: Peer sent EAP Response (code 2) ID 116 length 6
(4) eap: Continuing tunnel setup
(4)     [eap] = ok
(4)   } # authorize = ok
(4) Found Auth-Type = eap
(4) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(4)   authenticate {
(4) eap: Expiring EAP session with state 0x9381edd090f5f4cf
(4) eap: Finished EAP session with state 0x9381edd090f5f4cf
(4) eap: Previous EAP request found for state 0x9381edd090f5f4cf, released from the list
(4) eap: Peer sent packet with method EAP PEAP (25)
(4) eap: Calling submodule eap_peap to process data
(4) eap_peap: (TLS) Peer ACKed our handshake fragment
(4) eap: Sending EAP Request (code 1) ID 117 length 750
(4) eap: EAP session adding &reply:State = 0x9381edd097f4f4cf
(4)     [eap] = handled
(4)   } # authenticate = handled
(4) Using Post-Auth-Type Challenge
(4) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(4)   Challenge { ... } # empty sub-section is ignored
(4) session-state: Saving cached attributes
(4)   Framed-MTU = 994
(4)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(4)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(4)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(4)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(4)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(4) Sent Access-Challenge Id 4 from 127.0.0.1:1812 to 127.0.0.1:40818 length 812
(4)   EAP-Message = 0x017502ee1900161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f7269747982146f0684a6149c1b984ef557a40f4730895d7e5f43300f0603551d130101ff040530030101ff30360603551d1f042f302d302ba029a0278625687474703a2f2f7777772e6578616d706c652e6f72672f6578616d706c655f63612e63726c300d06092a864886f70d01010b050003820101003807f802d6e3f777023cafffba3d532320e791bc2fe8808de95c0d3d0f48f999b3dfd75562a21e51aedb44e704f7da35cef48a70b02f189ef938473e56c47ab3879b49f65281e70ea094586954f0645469ae97a3e857379bf32e358d7d67eb5b8b0dd94b85192ed1ed655bc4dfc605d1b7d4e9ae2c577651a694122ea52dfab128d837b6eeeaeee6c41b3a58dea83f99fe284c685ea730ea0cc3343f958674ec886221c3d0ba7ac099236e6ba1f80655e446919b8c239057a73f8e752810006c6e8b8b
(4)   Message-Authenticator = 0x00000000000000000000000000000000
(4)   State = 0x9381edd097f4f4cff18215b8fbe3f77e
(4) Finished request
Waking up in 4.8 seconds.
(5) Received Access-Request Id 5 from 127.0.0.1:40818 to 127.0.0.1:1812 length 337
(5)   User-Name = "anonymous"
(5)   NAS-IP-Address = 127.0.0.1
(5)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(5)   NAS-Port-Type = Wireless-802.11
(5)   Service-Type = Framed-User
(5)   NAS-Port = 1
(5)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(5)   Connect-Info = "CONNECT 54Mbps 802.11g"
(5)   Acct-Session-Id = "A40F4F1E58BA01BF"
(5)   Acct-Multi-Session-Id = "4F68F026BE7D2BDE"
(5)   WLAN-Pairwise-Cipher = 1027076
(5)   WLAN-Group-Cipher = 1027076
(5)   WLAN-AKM-Suite = 1027073
(5)   WLAN-Group-Mgmt-Cipher = 1027078
(5)   Framed-MTU = 1400
(5)   EAP-Message = 0x0275006719800000005d16030300251000002120c5567bf30d974d52cf9b1f9e9150ce4c1fa849997ca210fc432d2e665216d77d14030300010116030300280000000000000000105ab731f8afc41ae8aed08faac547c75803a762690ee0633a9250a35e4473e8
(5)   State = 0x9381edd097f4f4cff18215b8fbe3f77e
(5)   Message-Authenticator = 0x40e72e16f4c67d6edcbfb39b03be2f68
(5) Restoring &session-state
(5)   &session-state:Framed-MTU = 994
(5)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(5) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(5)   authorize {
(5)     policy filter_username {
(5)       if (&User-Name) {
(5)       if (&User-Name)  -> TRUE
(5)       if (&User-Name)  {
(5)         if (&User-Name =~ / /) {
(5)         if (&User-Name =~ / /)  -> FALSE
(5)         if (&User-Name =~ /@[^@]*@/ ) {
(5)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(5)         if (&User-Name =~ /\.\./ ) {
(5)         if (&User-Name =~ /\.\./ )  -> FALSE
(5)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(5)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(5)         if (&User-Name =~ /\.$/)  {
(5)         if (&User-Name =~ /\.$/)   -> FALSE
(5)         if (&User-Name =~ /@\./)  {
(5)         if (&User-Name =~ /@\./)   -> FALSE
(5)       } # if (&User-Name)  = notfound
(5)     } # policy filter_username = notfound
(5)     [preprocess] = ok
(5)     [chap] = noop
(5)     [mschap] = noop
(5)     [digest] = noop
(5) suffix: Checking for suffix after "@"
(5) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(5) suffix: No such realm "NULL"
(5)     [suffix] = noop
(5) eap: Peer sent EAP Response (code 2) ID 117 length 103
(5) eap: Continuing tunnel setup
(5)     [eap] = ok
(5)   } # authorize = ok
(5) Found Auth-Type = eap
(5) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(5)   authenticate {
(5) eap: Expiring EAP session with state 0x9381edd097f4f4cf
(5) eap: Finished EAP session with state 0x9381edd097f4f4cf
(5) eap: Previous EAP request found for state 0x9381edd097f4f4cf, released from the list
(5) eap: Peer sent packet with method EAP PEAP (25)
(5) eap: Calling submodule eap_peap to process data
(5) eap_peap: (TLS) EAP Peer says that the final record size will be 93 bytes
(5) eap_peap: (TLS) EAP Got all data (93 bytes)
(5) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server done
(5) eap_peap: (TLS) recv TLS 1.2 Handshake, ClientKeyExchange
(5) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read client key exchange
(5) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read change cipher spec
(5) eap_peap: (TLS) recv TLS 1.2 Handshake, Finished
(5) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read finished
(5) eap_peap: (TLS) send TLS 1.2 ChangeCipherSpec
(5) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write change cipher spec
(5) eap_peap: (TLS) send TLS 1.2 Handshake, Finished
(5) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write finished
(5) eap_peap: (TLS) Handshake state - SSL negotiation finished successfully
(5) eap_peap: (TLS) Connection Established
(5) eap_peap:   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(5) eap_peap:   TLS-Session-Version = "TLS 1.2"
(5) eap: Sending EAP Request (code 1) ID 118 length 57
(5) eap: EAP session adding &reply:State = 0x9381edd096f7f4cf
(5)     [eap] = handled
(5)   } # authenticate = handled
(5) Using Post-Auth-Type Challenge
(5) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(5)   Challenge { ... } # empty sub-section is ignored
(5) session-state: Saving cached attributes
(5)   Framed-MTU = 994
(5)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(5)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(5)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(5)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(5)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(5)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(5)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(5)   TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(5)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(5)   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(5)   TLS-Session-Version = "TLS 1.2"
(5) Sent Access-Challenge Id 5 from 127.0.0.1:1812 to 127.0.0.1:40818 length 115
(5)   EAP-Message = 0x017600391900140303000101160303002871e55b634e8713be718f39d503aa6fea5a5b14b00c6e4a74ae6c063c4475982e36785878d9fe57bf
(5)   Message-Authenticator = 0x00000000000000000000000000000000
(5)   State = 0x9381edd096f7f4cff18215b8fbe3f77e
(5) Finished request
Waking up in 4.3 seconds.
(6) Received Access-Request Id 6 from 127.0.0.1:40818 to 127.0.0.1:1812 length 240
(6)   User-Name = "anonymous"
(6)   NAS-IP-Address = 127.0.0.1
(6)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(6)   NAS-Port-Type = Wireless-802.11
(6)   Service-Type = Framed-User
(6)   NAS-Port = 1
(6)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(6)   Connect-Info = "CONNECT 54Mbps 802.11g"
(6)   Acct-Session-Id = "A40F4F1E58BA01BF"
(6)   Acct-Multi-Session-Id = "4F68F026BE7D2BDE"
(6)   WLAN-Pairwise-Cipher = 1027076
(6)   WLAN-Group-Cipher = 1027076
(6)   WLAN-AKM-Suite = 1027073
(6)   WLAN-Group-Mgmt-Cipher = 1027078
(6)   Framed-MTU = 1400
(6)   EAP-Message = 0x027600061900
(6)   State = 0x9381edd096f7f4cff18215b8fbe3f77e
(6)   Message-Authenticator = 0x1805c2f9ff2c138cfda260f40713b568
(6) Restoring &session-state
(6)   &session-state:Framed-MTU = 994
(6)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(6)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(6)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(6)   &session-state:TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(6)   &session-state:TLS-Session-Version = "TLS 1.2"
(6) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(6)   authorize {
(6)     policy filter_username {
(6)       if (&User-Name) {
(6)       if (&User-Name)  -> TRUE
(6)       if (&User-Name)  {
(6)         if (&User-Name =~ / /) {
(6)         if (&User-Name =~ / /)  -> FALSE
(6)         if (&User-Name =~ /@[^@]*@/ ) {
(6)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(6)         if (&User-Name =~ /\.\./ ) {
(6)         if (&User-Name =~ /\.\./ )  -> FALSE
(6)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(6)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(6)         if (&User-Name =~ /\.$/)  {
(6)         if (&User-Name =~ /\.$/)   -> FALSE
(6)         if (&User-Name =~ /@\./)  {
(6)         if (&User-Name =~ /@\./)   -> FALSE
(6)       } # if (&User-Name)  = notfound
(6)     } # policy filter_username = notfound
(6)     [preprocess] = ok
(6)     [chap] = noop
(6)     [mschap] = noop
(6)     [digest] = noop
(6) suffix: Checking for suffix after "@"
(6) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(6) suffix: No such realm "NULL"
(6)     [suffix] = noop
(6) eap: Peer sent EAP Response (code 2) ID 118 length 6
(6) eap: Continuing tunnel setup
(6)     [eap] = ok
(6)   } # authorize = ok
(6) Found Auth-Type = eap
(6) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(6)   authenticate {
(6) eap: Expiring EAP session with state 0x9381edd096f7f4cf
(6) eap: Finished EAP session with state 0x9381edd096f7f4cf
(6) eap: Previous EAP request found for state 0x9381edd096f7f4cf, released from the list
(6) eap: Peer sent packet with method EAP PEAP (25)
(6) eap: Calling submodule eap_peap to process data
(6) eap_peap: (TLS) Peer ACKed our handshake fragment.  handshake is finished
(6) eap_peap: Session established.  Decoding tunneled attributes
(6) eap_peap: PEAP state TUNNEL ESTABLISHED
(6) eap: Sending EAP Request (code 1) ID 119 length 40
(6) eap: EAP session adding &reply:State = 0x9381edd095f6f4cf
(6)     [eap] = handled
(6)   } # authenticate = handled
(6) Using Post-Auth-Type Challenge
(6) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(6)   Challenge { ... } # empty sub-section is ignored
(6) session-state: Saving cached attributes
(6)   Framed-MTU = 994
(6)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(6)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(6)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(6)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(6)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(6)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(6)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(6)   TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(6)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(6)   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(6)   TLS-Session-Version = "TLS 1.2"
(6) Sent Access-Challenge Id 6 from 127.0.0.1:1812 to 127.0.0.1:40818 length 98
(6)   EAP-Message = 0x017700281900170303001d71e55b634e8713bf01c4fb5b6c081e1ab5365e058ec64342644abecdef
(6)   Message-Authenticator = 0x00000000000000000000000000000000
(6)   State = 0x9381edd095f6f4cff18215b8fbe3f77e
(6) Finished request
Waking up in 4.2 seconds.
(7) Received Access-Request Id 7 from 127.0.0.1:40818 to 127.0.0.1:1812 length 285
(7)   User-Name = "anonymous"
(7)   NAS-IP-Address = 127.0.0.1
(7)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(7)   NAS-Port-Type = Wireless-802.11
(7)   Service-Type = Framed-User
(7)   NAS-Port = 1
(7)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(7)   Connect-Info = "CONNECT 54Mbps 802.11g"
(7)   Acct-Session-Id = "A40F4F1E58BA01BF"
(7)   Acct-Multi-Session-Id = "4F68F026BE7D2BDE"
(7)   WLAN-Pairwise-Cipher = 1027076
(7)   WLAN-Group-Cipher = 1027076
(7)   WLAN-AKM-Suite = 1027073
(7)   WLAN-Group-Mgmt-Cipher = 1027078
(7)   Framed-MTU = 1400
(7)   EAP-Message = 0x0277003319001703030028000000000000000157c6ea029074d1be4171f6c6dabf05a46d53af2bfc91eca3ed11460768267c01
(7)   State = 0x9381edd095f6f4cff18215b8fbe3f77e
(7)   Message-Authenticator = 0x605f2bce36410acb59822f28c5eb9456
(7) Restoring &session-state
(7)   &session-state:Framed-MTU = 994
(7)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(7)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(7)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(7)   &session-state:TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(7)   &session-state:TLS-Session-Version = "TLS 1.2"
(7) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(7)   authorize {
(7)     policy filter_username {
(7)       if (&User-Name) {
(7)       if (&User-Name)  -> TRUE
(7)       if (&User-Name)  {
(7)         if (&User-Name =~ / /) {
(7)         if (&User-Name =~ / /)  -> FALSE
(7)         if (&User-Name =~ /@[^@]*@/ ) {
(7)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(7)         if (&User-Name =~ /\.\./ ) {
(7)         if (&User-Name =~ /\.\./ )  -> FALSE
(7)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(7)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(7)         if (&User-Name =~ /\.$/)  {
(7)         if (&User-Name =~ /\.$/)   -> FALSE
(7)         if (&User-Name =~ /@\./)  {
(7)         if (&User-Name =~ /@\./)   -> FALSE
(7)       } # if (&User-Name)  = notfound
(7)     } # policy filter_username = notfound
(7)     [preprocess] = ok
(7)     [chap] = noop
(7)     [mschap] = noop
(7)     [digest] = noop
(7) suffix: Checking for suffix after "@"
(7) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(7) suffix: No such realm "NULL"
(7)     [suffix] = noop
(7) eap: Peer sent EAP Response (code 2) ID 119 length 51
(7) eap: Continuing tunnel setup
(7)     [eap] = ok
(7)   } # authorize = ok
(7) Found Auth-Type = eap
(7) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(7)   authenticate {
(7) eap: Expiring EAP session with state 0x9381edd095f6f4cf
(7) eap: Finished EAP session with state 0x9381edd095f6f4cf
(7) eap: Previous EAP request found for state 0x9381edd095f6f4cf, released from the list
(7) eap: Peer sent packet with method EAP PEAP (25)
(7) eap: Calling submodule eap_peap to process data
(7) eap_peap: (TLS) EAP Done initial handshake
(7) eap_peap: Session established.  Decoding tunneled attributes
(7) eap_peap: PEAP state WAITING FOR INNER IDENTITY
(7) eap_peap: Identity - bob@example.org
(7) eap_peap: Got inner identity 'bob@example.org'
(7) eap_peap: Setting default EAP type for tunneled EAP session
(7) eap_peap: Got tunneled request
(7) eap_peap:   EAP-Message = 0x0277001401626f62406578616d706c652e6f7267
(7) eap_peap: Setting User-Name to bob@example.org
(7) eap_peap: Sending tunneled request to inner-tunnel
(7) eap_peap:   EAP-Message = 0x0277001401626f62406578616d706c652e6f7267
(7) eap_peap:   FreeRADIUS-Proxied-To = 127.0.0.1
(7) eap_peap:   User-Name = "bob@example.org"
(7) Virtual server inner-tunnel received request
(7)   EAP-Message = 0x0277001401626f62406578616d706c652e6f7267
(7)   FreeRADIUS-Proxied-To = 127.0.0.1
(7)   User-Name = "bob@example.org"
(7) server inner-tunnel {
(7)   # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/inner-tunnel
(7)     authorize {
(7)       policy filter_username {
(7)         if (&User-Name) {
(7)         if (&User-Name)  -> TRUE
(7)         if (&User-Name)  {
(7)           if (&User-Name =~ / /) {
(7)           if (&User-Name =~ / /)  -> FALSE
(7)           if (&User-Name =~ /@[^@]*@/ ) {
(7)           if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(7)           if (&User-Name =~ /\.\./ ) {
(7)           if (&User-Name =~ /\.\./ )  -> FALSE
(7)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(7)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(7)           if (&User-Name =~ /\.$/)  {
(7)           if (&User-Name =~ /\.$/)   -> FALSE
(7)           if (&User-Name =~ /@\./)  {
(7)           if (&User-Name =~ /@\./)   -> FALSE
(7)         } # if (&User-Name)  = notfound
(7)       } # policy filter_username = notfound
(7)       [chap] = noop
(7)       [mschap] = noop
(7) suffix: Checking for suffix after "@"
(7) suffix: Looking up realm "example.org" for User-Name = "bob@example.org"
(7) suffix: No such realm "example.org"
(7)       [suffix] = noop
(7)       update control {
(7)         &Proxy-To-Realm := LOCAL
(7)       } # update control = noop
(7) eap: Peer sent EAP Response (code 2) ID 119 length 20
(7) eap: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
(7)       [eap] = ok
(7)     } # authorize = ok
(7)   Found Auth-Type = eap
(7)   # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/inner-tunnel
(7)     authenticate {
(7) eap: Peer sent packet with method EAP Identity (1)
(7) eap: Calling submodule eap_mschapv2 to process data
(7) eap_mschapv2: Issuing Challenge
(7) eap: Sending EAP Request (code 1) ID 120 length 43
(7) eap: EAP session adding &reply:State = 0x9ca7e02e9cdffaca
(7)       [eap] = handled
(7)     } # authenticate = handled
(7) } # server inner-tunnel
(7) Virtual server sending reply
(7)   EAP-Message = 0x0178002b1a017800261064adbdc39fd4798cf61bf21367c5742c667265657261646975732d332e302e3236
(7)   Message-Authenticator = 0x00000000000000000000000000000000
(7)   State = 0x9ca7e02e9cdffacab83ccc99f66363f2
(7) eap_peap: Got tunneled reply code 11
(7) eap_peap:   EAP-Message = 0x0178002b1a017800261064adbdc39fd4798cf61bf21367c5742c667265657261646975732d332e302e3236
(7) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(7) eap_peap:   State = 0x9ca7e02e9cdffacab83ccc99f66363f2
(7) eap_peap: Got tunneled reply RADIUS code 11
(7) eap_peap:   EAP-Message = 0x0178002b1a017800261064adbdc39fd4798cf61bf21367c5742c667265657261646975732d332e302e3236
(7) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(7) eap_peap:   State = 0x9ca7e02e9cdffacab83ccc99f66363f2
(7) eap_peap: Got tunneled Access-Challenge
(7) eap: Sending EAP Request (code 1) ID 120 length 74
(7) eap: EAP session adding &reply:State = 0x9381edd094f9f4cf
(7)     [eap] = handled
(7)   } # authenticate = handled
(7) Using Post-Auth-Type Challenge
(7) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(7)   Challenge { ... } # empty sub-section is ignored
(7) session-state: Saving cached attributes
(7)   Framed-MTU = 994
(7)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(7)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(7)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(7)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(7)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(7)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(7)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(7)   TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(7)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(7)   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(7)   TLS-Session-Version = "TLS 1.2"
(7) Sent Access-Challenge Id 7 from 127.0.0.1:1812 to 127.0.0.1:40818 length 132
(7)   EAP-Message = 0x0178004a1900170303003f71e55b634e8713c097289df4b4a32f1e21f7ea4bf45aaae5a2d068fedd716bcfc10b19205f12b68d5ad2d9031a719b26327139a84a11b0aede7b8b9f8ca520
(7)   Message-Authenticator = 0x00000000000000000000000000000000
(7)   State = 0x9381edd094f9f4cff18215b8fbe3f77e
(7) Finished request
Waking up in 4.2 seconds.
(8) Received Access-Request Id 8 from 127.0.0.1:40818 to 127.0.0.1:1812 length 339
(8)   User-Name = "anonymous"
(8)   NAS-IP-Address = 127.0.0.1
(8)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(8)   NAS-Port-Type = Wireless-802.11
(8)   Service-Type = Framed-User
(8)   NAS-Port = 1
(8)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(8)   Connect-Info = "CONNECT 54Mbps 802.11g"
(8)   Acct-Session-Id = "A40F4F1E58BA01BF"
(8)   Acct-Multi-Session-Id = "4F68F026BE7D2BDE"
(8)   WLAN-Pairwise-Cipher = 1027076
(8)   WLAN-Group-Cipher = 1027076
(8)   WLAN-AKM-Suite = 1027073
(8)   WLAN-Group-Mgmt-Cipher = 1027078
(8)   Framed-MTU = 1400
(8)   EAP-Message = 0x027800691900170303005e0000000000000002143d197c1277b3b9977b19c6802dd0f4fbf7927a71373117589fa03a442334949336d6157e008899f9dd25e2febd8a5b9c7104a1d39276d299240681643e28a36340b965555c566d498274af150986565ac3763dbeb3
(8)   State = 0x9381edd094f9f4cff18215b8fbe3f77e
(8)   Message-Authenticator = 0x11f5cf758656ad19b292cbf5f66735b9
(8) Restoring &session-state
(8)   &session-state:Framed-MTU = 994
(8)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(8)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(8)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(8)   &session-state:TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(8)   &session-state:TLS-Session-Version = "TLS 1.2"
(8) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(8)   authorize {
(8)     policy filter_username {
(8)       if (&User-Name) {
(8)       if (&User-Name)  -> TRUE
(8)       if (&User-Name)  {
(8)         if (&User-Name =~ / /) {
(8)         if (&User-Name =~ / /)  -> FALSE
(8)         if (&User-Name =~ /@[^@]*@/ ) {
(8)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(8)         if (&User-Name =~ /\.\./ ) {
(8)         if (&User-Name =~ /\.\./ )  -> FALSE
(8)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(8)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(8)         if (&User-Name =~ /\.$/)  {
(8)         if (&User-Name =~ /\.$/)   -> FALSE
(8)         if (&User-Name =~ /@\./)  {
(8)         if (&User-Name =~ /@\./)   -> FALSE
(8)       } # if (&User-Name)  = notfound
(8)     } # policy filter_username = notfound
(8)     [preprocess] = ok
(8)     [chap] = noop
(8)     [mschap] = noop
(8)     [digest] = noop
(8) suffix: Checking for suffix after "@"
(8) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(8) suffix: No such realm "NULL"
(8)     [suffix] = noop
(8) eap: Peer sent EAP Response (code 2) ID 120 length 105
(8) eap: Continuing tunnel setup
(8)     [eap] = ok
(8)   } # authorize = ok
(8) Found Auth-Type = eap
(8) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(8)   authenticate {
(8) eap: Expiring EAP session with state 0x9ca7e02e9cdffaca
(8) eap: Finished EAP session with state 0x9381edd094f9f4cf
(8) eap: Previous EAP request found for state 0x9381edd094f9f4cf, released from the list
(8) eap: Peer sent packet with method EAP PEAP (25)
(8) eap: Calling submodule eap_peap to process data
(8) eap_peap: (TLS) EAP Done initial handshake
(8) eap_peap: Session established.  Decoding tunneled attributes
(8) eap_peap: PEAP state phase2
(8) eap_peap: EAP method MSCHAPv2 (26)
(8) eap_peap: Got tunneled request
(8) eap_peap:   EAP-Message = 0x0278004a1a0278004531c2c31d4cac8af2a9f950e5f26b3ea149000000000000000018d203da5c07d0fe7d46f20790b9aa99b48da2ae4b8f5f9500626f62406578616d706c652e6f7267
(8) eap_peap: Setting User-Name to bob@example.org
(8) eap_peap: Sending tunneled request to inner-tunnel
(8) eap_peap:   EAP-Message = 0x0278004a1a0278004531c2c31d4cac8af2a9f950e5f26b3ea149000000000000000018d203da5c07d0fe7d46f20790b9aa99b48da2ae4b8f5f9500626f62406578616d706c652e6f7267
(8) eap_peap:   FreeRADIUS-Proxied-To = 127.0.0.1
(8) eap_peap:   User-Name = "bob@example.org"
(8) eap_peap:   State = 0x9ca7e02e9cdffacab83ccc99f66363f2
(8) Virtual server inner-tunnel received request
(8)   EAP-Message = 0x0278004a1a0278004531c2c31d4cac8af2a9f950e5f26b3ea149000000000000000018d203da5c07d0fe7d46f20790b9aa99b48da2ae4b8f5f9500626f62406578616d706c652e6f7267
(8)   FreeRADIUS-Proxied-To = 127.0.0.1
(8)   User-Name = "bob@example.org"
(8)   State = 0x9ca7e02e9cdffacab83ccc99f66363f2
(8) server inner-tunnel {
(8)   session-state: No cached attributes
(8)   # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/inner-tunnel
(8)     authorize {
(8)       policy filter_username {
(8)         if (&User-Name) {
(8)         if (&User-Name)  -> TRUE
(8)         if (&User-Name)  {
(8)           if (&User-Name =~ / /) {
(8)           if (&User-Name =~ / /)  -> FALSE
(8)           if (&User-Name =~ /@[^@]*@/ ) {
(8)           if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(8)           if (&User-Name =~ /\.\./ ) {
(8)           if (&User-Name =~ /\.\./ )  -> FALSE
(8)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(8)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(8)           if (&User-Name =~ /\.$/)  {
(8)           if (&User-Name =~ /\.$/)   -> FALSE
(8)           if (&User-Name =~ /@\./)  {
(8)           if (&User-Name =~ /@\./)   -> FALSE
(8)         } # if (&User-Name)  = notfound
(8)       } # policy filter_username = notfound
(8)       [chap] = noop
(8)       [mschap] = noop
(8) suffix: Checking for suffix after "@"
(8) suffix: Looking up realm "example.org" for User-Name = "bob@example.org"
(8) suffix: No such realm "example.org"
(8)       [suffix] = noop
(8)       update control {
(8)         &Proxy-To-Realm := LOCAL
(8)       } # update control = noop
(8) eap: Peer sent EAP Response (code 2) ID 120 length 74
(8) eap: No EAP Start, assuming it's an on-going EAP conversation
(8)       [eap] = updated
(8) files: users: Matched entry bob@example.org at line 1
(8) files: EXPAND Hello, %{User-Name}
(8) files:    --> Hello, bob@example.org
(8)       [files] = ok
(8)       [expiration] = noop
(8)       [logintime] = noop
(8) pap: WARNING: Auth-Type already set.  Not setting to PAP
(8)       [pap] = noop
(8)     } # authorize = updated
(8)   Found Auth-Type = eap
(8)   # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/inner-tunnel
(8)     authenticate {
(8) eap: Expiring EAP session with state 0x9ca7e02e9cdffaca
(8) eap: Finished EAP session with state 0x9ca7e02e9cdffaca
(8) eap: Previous EAP request found for state 0x9ca7e02e9cdffaca, released from the list
(8) eap: Peer sent packet with method EAP MSCHAPv2 (26)
(8) eap: Calling submodule eap_mschapv2 to process data
(8) eap_mschapv2: # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/inner-tunnel
(8) eap_mschapv2:   authenticate {
(8) mschap: Found Cleartext-Password, hashing to create NT-Password
(8) mschap: Creating challenge hash with username: bob@example.org
(8) mschap: Client is using MS-CHAPv2
(8) mschap: Adding MS-CHAPv2 MPPE keys
(8) eap_mschapv2:     [mschap] = ok
(8) eap_mschapv2:   } # authenticate = ok
(8) eap_mschapv2: MSCHAP Success
(8) eap: Sending EAP Request (code 1) ID 121 length 51
(8) eap: EAP session adding &reply:State = 0x9ca7e02e9ddefaca
(8)       [eap] = handled
(8)     } # authenticate = handled
(8) } # server inner-tunnel
(8) Virtual server sending reply
(8)   Reply-Message = "Hello, bob@example.org"
(8)   EAP-Message = 0x017900331a0378002e533d37354246424343393632363033313437383135393344334432394139443238323732303632424332
(8)   Message-Authenticator = 0x00000000000000000000000000000000
(8)   State = 0x9ca7e02e9ddefacab83ccc99f66363f2
(8) eap_peap: Got tunneled reply code 11
(8) eap_peap:   Reply-Message = "Hello, bob@example.org"
(8) eap_peap:   EAP-Message = 0x017900331a0378002e533d37354246424343393632363033313437383135393344334432394139443238323732303632424332
(8) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(8) eap_peap:   State = 0x9ca7e02e9ddefacab83ccc99f66363f2
(8) eap_peap: Got tunneled reply RADIUS code 11
(8) eap_peap:   Reply-Message = "Hello, bob@example.org"
(8) eap_peap:   EAP-Message = 0x017900331a0378002e533d37354246424343393632363033313437383135393344334432394139443238323732303632424332
(8) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(8) eap_peap:   State = 0x9ca7e02e9ddefacab83ccc99f66363f2
(8) eap_peap: Got tunneled Access-Challenge
(8) eap: Sending EAP Request (code 1) ID 121 length 82
(8) eap: EAP session adding &reply:State = 0x9381edd09bf8f4cf
(8)     [eap] = handled
(8)   } # authenticate = handled
(8) Using Post-Auth-Type Challenge
(8) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(8)   Challenge { ... } # empty sub-section is ignored
(8) session-state: Saving cached attributes
(8)   Framed-MTU = 994
(8)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(8)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(8)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(8)   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(8)   TLS-Session-Version = "TLS 1.2"
(8) Sent Access-Challenge Id 8 from 127.0.0.1:1812 to 127.0.0.1:40818 length 140
(8)   EAP-Message = 0x017900521900170303004771e55b634e8713c14b3b7fd30b952fd396336a8ad5c7d5ccf37a068c3a2b3de2e8b50f35dbac1a4b1de66a9d465a39b401972f4e970abbe71db7e2b46abb175f59b42a0f999ac6
(8)   Message-Authenticator = 0x00000000000000000000000000000000
(8)   State = 0x9381edd09bf8f4cff18215b8fbe3f77e
(8) Finished request
Waking up in 3.9 seconds.
(9) Received Access-Request Id 9 from 127.0.0.1:40818 to 127.0.0.1:1812 length 271
(9)   User-Name = "anonymous"
(9)   NAS-IP-Address = 127.0.0.1
(9)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(9)   NAS-Port-Type = Wireless-802.11
(9)   Service-Type = Framed-User
(9)   NAS-Port = 1
(9)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(9)   Connect-Info = "CONNECT 54Mbps 802.11g"
(9)   Acct-Session-Id = "A40F4F1E58BA01BF"
(9)   Acct-Multi-Session-Id = "4F68F026BE7D2BDE"
(9)   WLAN-Pairwise-Cipher = 1027076
(9)   WLAN-Group-Cipher = 1027076
(9)   WLAN-AKM-Suite = 1027073
(9)   WLAN-Group-Mgmt-Cipher = 1027078
(9)   Framed-MTU = 1400
(9)   EAP-Message = 0x027900251900170303001a00000000000000033b16e0f75ea6d1e9aa85bcdabd66231273eb
(9)   State = 0x9381edd09bf8f4cff18215b8fbe3f77e
(9)   Message-Authenticator = 0x29a31e01afb87d070f7b339813c6b491
(9) Restoring &session-state
(9)   &session-state:Framed-MTU = 994
(9)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(9)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(9)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(9)   &session-state:TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(9)   &session-state:TLS-Session-Version = "TLS 1.2"
(9) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(9)   authorize {
(9)     policy filter_username {
(9)       if (&User-Name) {
(9)       if (&User-Name)  -> TRUE
(9)       if (&User-Name)  {
(9)         if (&User-Name =~ / /) {
(9)         if (&User-Name =~ / /)  -> FALSE
(9)         if (&User-Name =~ /@[^@]*@/ ) {
(9)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(9)         if (&User-Name =~ /\.\./ ) {
(9)         if (&User-Name =~ /\.\./ )  -> FALSE
(9)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(9)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(9)         if (&User-Name =~ /\.$/)  {
(9)         if (&User-Name =~ /\.$/)   -> FALSE
(9)         if (&User-Name =~ /@\./)  {
(9)         if (&User-Name =~ /@\./)   -> FALSE
(9)       } # if (&User-Name)  = notfound
(9)     } # policy filter_username = notfound
(9)     [preprocess] = ok
(9)     [chap] = noop
(9)     [mschap] = noop
(9)     [digest] = noop
(9) suffix: Checking for suffix after "@"
(9) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(9) suffix: No such realm "NULL"
(9)     [suffix] = noop
(9) eap: Peer sent EAP Response (code 2) ID 121 length 37
(9) eap: Continuing tunnel setup
(9)     [eap] = ok
(9)   } # authorize = ok
(9) Found Auth-Type = eap
(9) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(9)   authenticate {
(9) eap: Expiring EAP session with state 0x9ca7e02e9ddefaca
(9) eap: Finished EAP session with state 0x9381edd09bf8f4cf
(9) eap: Previous EAP request found for state 0x9381edd09bf8f4cf, released from the list
(9) eap: Peer sent packet with method EAP PEAP (25)
(9) eap: Calling submodule eap_peap to process data
(9) eap_peap: (TLS) EAP Done initial handshake
(9) eap_peap: Session established.  Decoding tunneled attributes
(9) eap_peap: PEAP state phase2
(9) eap_peap: EAP method MSCHAPv2 (26)
(9) eap_peap: Got tunneled request
(9) eap_peap:   EAP-Message = 0x027900061a03
(9) eap_peap: Setting User-Name to bob@example.org
(9) eap_peap: Sending tunneled request to inner-tunnel
(9) eap_peap:   EAP-Message = 0x027900061a03
(9) eap_peap:   FreeRADIUS-Proxied-To = 127.0.0.1
(9) eap_peap:   User-Name = "bob@example.org"
(9) eap_peap:   State = 0x9ca7e02e9ddefacab83ccc99f66363f2
(9) Virtual server inner-tunnel received request
(9)   EAP-Message = 0x027900061a03
(9)   FreeRADIUS-Proxied-To = 127.0.0.1
(9)   User-Name = "bob@example.org"
(9)   State = 0x9ca7e02e9ddefacab83ccc99f66363f2
(9) server inner-tunnel {
(9)   session-state: No cached attributes
(9)   # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/inner-tunnel
(9)     authorize {
(9)       policy filter_username {
(9)         if (&User-Name) {
(9)         if (&User-Name)  -> TRUE
(9)         if (&User-Name)  {
(9)           if (&User-Name =~ / /) {
(9)           if (&User-Name =~ / /)  -> FALSE
(9)           if (&User-Name =~ /@[^@]*@/ ) {
(9)           if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(9)           if (&User-Name =~ /\.\./ ) {
(9)           if (&User-Name =~ /\.\./ )  -> FALSE
(9)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(9)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(9)           if (&User-Name =~ /\.$/)  {
(9)           if (&User-Name =~ /\.$/)   -> FALSE
(9)           if (&User-Name =~ /@\./)  {
(9)           if (&User-Name =~ /@\./)   -> FALSE
(9)         } # if (&User-Name)  = notfound
(9)       } # policy filter_username = notfound
(9)       [chap] = noop
(9)       [mschap] = noop
(9) suffix: Checking for suffix after "@"
(9) suffix: Looking up realm "example.org" for User-Name = "bob@example.org"
(9) suffix: No such realm "example.org"
(9)       [suffix] = noop
(9)       update control {
(9)         &Proxy-To-Realm := LOCAL
(9)       } # update control = noop
(9) eap: Peer sent EAP Response (code 2) ID 121 length 6
(9) eap: No EAP Start, assuming it's an on-going EAP conversation
(9)       [eap] = updated
(9) files: users: Matched entry bob@example.org at line 1
(9) files: EXPAND Hello, %{User-Name}
(9) files:    --> Hello, bob@example.org
(9)       [files] = ok
(9)       [expiration] = noop
(9)       [logintime] = noop
(9) pap: WARNING: Auth-Type already set.  Not setting to PAP
(9)       [pap] = noop
(9)     } # authorize = updated
(9)   Found Auth-Type = eap
(9)   # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/inner-tunnel
(9)     authenticate {
(9) eap: Expiring EAP session with state 0x9ca7e02e9ddefaca
(9) eap: Finished EAP session with state 0x9ca7e02e9ddefaca
(9) eap: Previous EAP request found for state 0x9ca7e02e9ddefaca, released from the list
(9) eap: Peer sent packet with method EAP MSCHAPv2 (26)
(9) eap: Calling submodule eap_mschapv2 to process data
(9) eap: Sending EAP Success (code 3) ID 121 length 4
(9) eap: Freeing handler
(9)       [eap] = ok
(9)     } # authenticate = ok
(9)   # Executing section post-auth from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/inner-tunnel
(9)     post-auth {
(9)       if (0) {
(9)       if (0)  -> FALSE
(9)     } # post-auth = noop
(9) } # server inner-tunnel
(9) Virtual server sending reply
(9)   Reply-Message = "Hello, bob@example.org"
(9)   MS-MPPE-Encryption-Policy = Encryption-Allowed
(9)   MS-MPPE-Encryption-Types = RC4-40or128-bit-Allowed
(9)   MS-MPPE-Send-Key = 0x0cdcc133fbe23df0878390ea156e3678
(9)   MS-MPPE-Recv-Key = 0x75cf925fc95fc23ccfa37cfbf2371383
(9)   EAP-Message = 0x03790004
(9)   Message-Authenticator = 0x00000000000000000000000000000000
(9)   User-Name = "bob@example.org"
(9) eap_peap: Got tunneled reply code 2
(9) eap_peap:   Reply-Message = "Hello, bob@example.org"
(9) eap_peap:   MS-MPPE-Encryption-Policy = Encryption-Allowed
(9) eap_peap:   MS-MPPE-Encryption-Types = RC4-40or128-bit-Allowed
(9) eap_peap:   MS-MPPE-Send-Key = 0x0cdcc133fbe23df0878390ea156e3678
(9) eap_peap:   MS-MPPE-Recv-Key = 0x75cf925fc95fc23ccfa37cfbf2371383
(9) eap_peap:   EAP-Message = 0x03790004
(9) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(9) eap_peap:   User-Name = "bob@example.org"
(9) eap_peap: Got tunneled reply RADIUS code 2
(9) eap_peap:   Reply-Message = "Hello, bob@example.org"
(9) eap_peap:   MS-MPPE-Encryption-Policy = Encryption-Allowed
(9) eap_peap:   MS-MPPE-Encryption-Types = RC4-40or128-bit-Allowed
(9) eap_peap:   MS-MPPE-Send-Key = 0x0cdcc133fbe23df0878390ea156e3678
(9) eap_peap:   MS-MPPE-Recv-Key = 0x75cf925fc95fc23ccfa37cfbf2371383
(9) eap_peap:   EAP-Message = 0x03790004
(9) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(9) eap_peap:   User-Name = "bob@example.org"
(9) eap_peap: Tunneled authentication was successful
(9) eap_peap: SUCCESS
(9) eap: Sending EAP Request (code 1) ID 122 length 46
(9) eap: EAP session adding &reply:State = 0x9381edd09afbf4cf
(9)     [eap] = handled
(9)   } # authenticate = handled
(9) Using Post-Auth-Type Challenge
(9) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(9)   Challenge { ... } # empty sub-section is ignored
(9) session-state: Saving cached attributes
(9)   Framed-MTU = 994
(9)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(9)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(9)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(9)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(9)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(9)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(9)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(9)   TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(9)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(9)   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(9)   TLS-Session-Version = "TLS 1.2"
(9) Sent Access-Challenge Id 9 from 127.0.0.1:1812 to 127.0.0.1:40818 length 104
(9)   EAP-Message = 0x017a002e1900170303002371e55b634e8713c20c255eaa9bba116819bf24c28e9fc9e4538d897c01a42cd67158e5
(9)   Message-Authenticator = 0x00000000000000000000000000000000
(9)   State = 0x9381edd09afbf4cff18215b8fbe3f77e
(9) Finished request
Waking up in 3.8 seconds.
(10) Received Access-Request Id 10 from 127.0.0.1:40818 to 127.0.0.1:1812 length 280
(10)   User-Name = "anonymous"
(10)   NAS-IP-Address = 127.0.0.1
(10)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(10)   NAS-Port-Type = Wireless-802.11
(10)   Service-Type = Framed-User
(10)   NAS-Port = 1
(10)   Calling-Station-Id = "94-B5-55-19-1C-E8"
(10)   Connect-Info = "CONNECT 54Mbps 802.11g"
(10)   Acct-Session-Id = "A40F4F1E58BA01BF"
(10)   Acct-Multi-Session-Id = "4F68F026BE7D2BDE"
(10)   WLAN-Pairwise-Cipher = 1027076
(10)   WLAN-Group-Cipher = 1027076
(10)   WLAN-AKM-Suite = 1027073
(10)   WLAN-Group-Mgmt-Cipher = 1027078
(10)   Framed-MTU = 1400
(10)   EAP-Message = 0x027a002e190017030300230000000000000004b05286c1d2aaa2b6978f91021a3b2fa4d7825ed436c918f8e948f6
(10)   State = 0x9381edd09afbf4cff18215b8fbe3f77e
(10)   Message-Authenticator = 0xdb430f45ed6c90fbc897f4f1fdc90ad8
(10) Restoring &session-state
(10)   &session-state:Framed-MTU = 994
(10)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(10)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(10)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(10)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(10)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(10)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(10)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(10)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(10)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(10)   &session-state:TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(10)   &session-state:TLS-Session-Version = "TLS 1.2"
(10) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(10)   authorize {
(10)     policy filter_username {
(10)       if (&User-Name) {
(10)       if (&User-Name)  -> TRUE
(10)       if (&User-Name)  {
(10)         if (&User-Name =~ / /) {
(10)         if (&User-Name =~ / /)  -> FALSE
(10)         if (&User-Name =~ /@[^@]*@/ ) {
(10)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(10)         if (&User-Name =~ /\.\./ ) {
(10)         if (&User-Name =~ /\.\./ )  -> FALSE
(10)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(10)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(10)         if (&User-Name =~ /\.$/)  {
(10)         if (&User-Name =~ /\.$/)   -> FALSE
(10)         if (&User-Name =~ /@\./)  {
(10)         if (&User-Name =~ /@\./)   -> FALSE
(10)       } # if (&User-Name)  = notfound
(10)     } # policy filter_username = notfound
(10)     [preprocess] = ok
(10)     [chap] = noop
(10)     [mschap] = noop
(10)     [digest] = noop
(10) suffix: Checking for suffix after "@"
(10) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(10) suffix: No such realm "NULL"
(10)     [suffix] = noop
(10) eap: Peer sent EAP Response (code 2) ID 122 length 46
(10) eap: Continuing tunnel setup
(10)     [eap] = ok
(10)   } # authorize = ok
(10) Found Auth-Type = eap
(10) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(10)   authenticate {
(10) eap: Expiring EAP session with state 0x9381edd09afbf4cf
(10) eap: Finished EAP session with state 0x9381edd09afbf4cf
(10) eap: Previous EAP request found for state 0x9381edd09afbf4cf, released from the list
(10) eap: Peer sent packet with method EAP PEAP (25)
(10) eap: Calling submodule eap_peap to process data
(10) eap_peap: (TLS) EAP Done initial handshake
(10) eap_peap: Session established.  Decoding tunneled attributes
(10) eap_peap: PEAP state send tlv success
(10) eap_peap: Received EAP-TLV response
(10) eap_peap: Success
(10) eap: Sending EAP Success (code 3) ID 122 length 4
(10) eap: Freeing handler
(10)     [eap] = ok
(10)   } # authenticate = ok
(10) # Executing section post-auth from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(10)   post-auth {
(10)     if (session-state:User-Name && reply:User-Name && request:User-Name && (reply:User-Name == request:User-Name)) {
(10)     if (session-state:User-Name && reply:User-Name && request:User-Name && (reply:User-Name == request:User-Name))  -> FALSE
(10)     update {
(10)       &reply::Framed-MTU += &session-state:Framed-MTU[*] -> 994
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) recv TLS 1.3 Handshake, ClientHello'
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, ServerHello'
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, Certificate'
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, ServerKeyExchange'
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, ServerHelloDone'
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) recv TLS 1.2 Handshake, ClientKeyExchange'
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) recv TLS 1.2 Handshake, Finished'
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 ChangeCipherSpec'
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, Finished'
(10)       &reply::TLS-Session-Cipher-Suite += &session-state:TLS-Session-Cipher-Suite[*] -> 'ECDHE-RSA-AES256-GCM-SHA384'
(10)       &reply::TLS-Session-Version += &session-state:TLS-Session-Version[*] -> 'TLS 1.2'
(10)     } # update = noop
(10)     [exec] = noop
(10)     policy remove_reply_message_if_eap {
(10)       if (&reply:EAP-Message && &reply:Reply-Message) {
(10)       if (&reply:EAP-Message && &reply:Reply-Message)  -> FALSE
(10)       else {
(10)         [noop] = noop
(10)       } # else = noop
(10)     } # policy remove_reply_message_if_eap = noop
(10)     if (EAP-Key-Name && &reply:EAP-Session-Id) {
(10)     if (EAP-Key-Name && &reply:EAP-Session-Id)  -> FALSE
(10)   } # post-auth = noop
(10) Sent Access-Accept Id 10 from 127.0.0.1:1812 to 127.0.0.1:40818 length 177
(10)   MS-MPPE-Recv-Key = 0x121e7f2b80bfee3063141bdc512799c95c3e877f9d79e80f38b37f63cbd14eea
(10)   MS-MPPE-Send-Key = 0x973be3d121d0dfe1588621d8a0b3e42da468d72c14ff9089219ad3cd235b2615
(10)   EAP-Message = 0x037a0004
(10)   Message-Authenticator = 0x00000000000000000000000000000000
(10)   User-Name = "anonymous"
(10)   Framed-MTU += 994
(10) Finished request
Waking up in 3.7 seconds.
(0) Cleaning up request packet ID 0 with timestamp +6 due to cleanup_delay was reached
(1) Cleaning up request packet ID 1 with timestamp +6 due to cleanup_delay was reached
(2) Cleaning up request packet ID 2 with timestamp +6 due to cleanup_delay was reached
(3) Cleaning up request packet ID 3 with timestamp +6 due to cleanup_delay was reached
(4) Cleaning up request packet ID 4 with timestamp +6 due to cleanup_delay was reached
Waking up in 0.4 seconds.
(5) Cleaning up request packet ID 5 with timestamp +7 due to cleanup_delay was reached
Waking up in 0.1 seconds.
(6) Cleaning up request packet ID 6 with timestamp +7 due to cleanup_delay was reached
(7) Cleaning up request packet ID 7 with timestamp +7 due to cleanup_delay was reached
Waking up in 0.2 seconds.
(8) Cleaning up request packet ID 8 with timestamp +7 due to cleanup_delay was reached
(9) Cleaning up request packet ID 9 with timestamp +7 due to cleanup_delay was reached
(10) Cleaning up request packet ID 10 with timestamp +7 due to cleanup_delay was reached
Ready to process requests
Ready to process requests
Signalled to terminate
Exiting normally

[0;36mFreeRADIUS is stopped.[0m


