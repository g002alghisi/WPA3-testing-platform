+ return 0
+ log_success
+ echo -e '\033[0;32mSuccess.\033[0m'
[0;32mSuccess.[0m
+ log_info 'Fetching configuration file associated to p:wpa2...'
+ echo 'INFO: Fetching configuration file associated to p:wpa2...'
INFO: Fetching configuration file associated to p:wpa2...
++ get_from_list -f Hostapd/Conf/conf_list.txt -s p:wpa2
++ _file_list=
++ _string=
++ getopts f:s: opt
++ case $opt in
++ _file_list=Hostapd/Conf/conf_list.txt
++ getopts f:s: opt
++ case $opt in
++ _string=p:wpa2
++ getopts f:s: opt
++ OPTIND=1
++ '[' Hostapd/Conf/conf_list.txt == '' ']'
++ '[' p:wpa2 == '' ']'
++ file_exists -f Hostapd/Conf/conf_list.txt
++ _file=
++ _file_is_dir=0
++ getopts f:d: opt
++ case $opt in
++ _file=Hostapd/Conf/conf_list.txt
++ getopts f:d: opt
++ OPTIND=1
++ '[' Hostapd/Conf/conf_list.txt == '' ']'
++ '[' 0 == 0 ']'
++ '[' '!' -e Hostapd/Conf/conf_list.txt ']'
++ '[' 0 == 1 ']'
+++ grep p:wpa2= Hostapd/Conf/conf_list.txt
+++ cut -d = -f 2
++ _output=Hostapd/Conf/Minimal/Personal/p_wpa2.conf
++ '[' Hostapd/Conf/Minimal/Personal/p_wpa2.conf == '' ']'
++ echo Hostapd/Conf/Minimal/Personal/p_wpa2.conf
+ ap_conf_file=Hostapd/Conf/Minimal/Personal/p_wpa2.conf
+ log_success
+ echo -e '\033[0;32mSuccess.\033[0m'
[0;32mSuccess.[0m
+ log_info 'Changing interface and bridge name inside Hostapd/Conf/Minimal/Personal/p_wpa2.conf...'
+ echo 'INFO: Changing interface and bridge name inside Hostapd/Conf/Minimal/Personal/p_wpa2.conf...'
INFO: Changing interface and bridge name inside Hostapd/Conf/Minimal/Personal/p_wpa2.conf...
+ sed -i 's/^interface=.*/interface=wlp3s0/' Hostapd/Conf/Minimal/Personal/p_wpa2.conf
+ sed -i 's/^bridge=.*/bridge=br0/' Hostapd/Conf/Minimal/Personal/p_wpa2.conf
+ log_success
+ echo -e '\033[0;32mSuccess.\033[0m'
[0;32mSuccess.[0m
+ '[' 0 -eq 0 ']'
+ Hostapd/Src/ap.sh -w wlp3s0 -e ethf3 -b br0 -c Hostapd/Conf/Minimal/Personal/p_wpa2.conf
++ GENERAL_UTILS_IS_LOADED=True
++ CODE_OK=0
++ CODE_KO=1
++ CODE_ERROR=2
++ HOME_DIR=Hostapd-test
++ CYAN='\033[0;36m'
++ RED='\033[0;31m'
++ GREEN='\033[0;32m'
++ NC='\033[0m'
+ source Utils/Src/nm_utils.sh
++ NM_UTILS_IS_LOADED=True
++ CODE_OK=0
++ CODE_KO=1
++ CODE_ERROR=2
+ source Utils/Src/br_utils.sh
++ BR_UTILS_IS_LOADED=True
++ CODE_OK=0
++ CODE_KO=1
++ CODE_ERROR=2
+ source Utils/Src/net_if_utils.sh
++ NET_IF_UTILS_IS_LOADED=True
++ CODE_OK=0
++ CODE_KO=1
++ CODE_ERROR=2
+ HOSTAPD_PATH=Hostapd/Build/hostapd
+ main -w wlp3s0 -e ethf3 -b br0 -c Hostapd/Conf/Minimal/Personal/p_wpa2.conf
+ wifi_if=
+ eth_if=
+ br_if=
+ ap_conf_file=
+ ap_verbose_mode=0
+ getopts w:e:b:c:v opt
+ case $opt in
+ wifi_if=wlp3s0
+ getopts w:e:b:c:v opt
+ case $opt in
+ eth_if=ethf3
+ getopts w:e:b:c:v opt
+ case $opt in
+ br_if=br0
+ getopts w:e:b:c:v opt
+ case $opt in
+ ap_conf_file=Hostapd/Conf/Minimal/Personal/p_wpa2.conf
+ getopts w:e:b:c:v opt
+ OPTIND=1
+ '[' wlp3s0 == '' ']'
+ '[' ethf3 == '' ']'
+ '[' br0 == '' ']'
+ '[' Hostapd/Conf/Minimal/Personal/p_wpa2.conf == '' ']'
+ sudo -v
+ stty -echo
+ echo ''

+ ap_setup
+ nm_start
+ log_info 'Checking Ethernet interface... '
+ echo 'INFO: Checking Ethernet interface... '
INFO: Checking Ethernet interface... 
+ net_if_exists -e ethf3
+ _net_if_handle_param -e ethf3
+ _net_if=
+ _net_if_type=
+ _net_if_channel=0
+ getopts e:w:c: opt
+ case $opt in
+ _net_if=ethf3
+ _net_if_type=e
+ getopts e:w:c: opt
+ OPTIND=1
+ '[' ethf3 == '' ']'
+ case "$_net_if_type" in
+ ip -br l
+ grep -e '\bethf3\b'
+ awk '$1 !~ "lo|vir|wl" { print $1 }'
+ '[' 0 -ne 0 ']'
+ OPTIND=1
+ log_success
+ echo -e '\033[0;32mSuccess.\033[0m'
[0;32mSuccess.[0m
+ log_info 'Forcing Ethernet interface up... '
+ echo 'INFO: Forcing Ethernet interface up... '
INFO: Forcing Ethernet interface up... 
+ net_if_force_up -e ethf3
+ net_if_exists -e ethf3
+ _net_if_handle_param -e ethf3
+ _net_if=
+ _net_if_type=
+ _net_if_channel=0
+ getopts e:w:c: opt
+ case $opt in
+ _net_if=ethf3
+ _net_if_type=e
+ getopts e:w:c: opt
+ OPTIND=1
+ '[' ethf3 == '' ']'
+ case "$_net_if_type" in
+ ip -br l
+ awk '$1 !~ "lo|vir|wl" { print $1 }'
+ grep -e '\bethf3\b'
+ '[' 0 -ne 0 ']'
+ OPTIND=1
+ sudo ip link set ethf3 up
+ '[' 0 -ne 0 ']'
+ log_success
+ echo -e '\033[0;32mSuccess.\033[0m'
[0;32mSuccess.[0m
+ log_info 'Checking Ethernet connection... '
+ echo 'INFO: Checking Ethernet connection... '
INFO: Checking Ethernet connection... 
+ net_if_is_connected -e ethf3
+ net_if_exists -e ethf3
+ _net_if_handle_param -e ethf3
+ _net_if=
+ _net_if_type=
+ _net_if_channel=0
+ getopts e:w:c: opt
+ case $opt in
+ _net_if=ethf3
+ _net_if_type=e
+ getopts e:w:c: opt
+ OPTIND=1
+ '[' ethf3 == '' ']'
+ case "$_net_if_type" in
+ awk '$1 !~ "lo|vir|wl" { print $1 }'
+ ip -br l
+ grep -e '\bethf3\b'
+ '[' 0 -ne 0 ']'
+ OPTIND=1
+ systemctl is-active NetworkManager
+ '[' 0 -ne 0 ']'
+ _net_if_status=
+ case "$_net_if_type" in
++ nmcli -t device status
++ grep '\bethf3\b'
++ grep :ethernet:
+ _net_if_status=ethf3:ethernet:connected:Open
++ echo ethf3:ethernet:connected:Open
++ cut -d : -f 3
+ '[' connected '!=' connected ']'
+ echo ethf3:ethernet:connected:Open
ethf3:ethernet:connected:Open
+ return 0
+ log_success
+ echo -e '\033[0;32mSuccess.\033[0m'
[0;32mSuccess.[0m
+ log_info 'Checking Wi-Fi interface... '
+ echo 'INFO: Checking Wi-Fi interface... '
INFO: Checking Wi-Fi interface... 
+ net_if_exists -w wlp3s0
+ _net_if_handle_param -w wlp3s0
+ _net_if=
+ _net_if_type=
+ _net_if_channel=0
+ getopts e:w:c: opt
+ case $opt in
+ _net_if=wlp3s0
+ _net_if_type=w
+ getopts e:w:c: opt
+ OPTIND=1
+ '[' wlp3s0 == '' ']'
+ case "$_net_if_type" in
+ ip -br l
+ awk '$1 !~ "lo|vir|et" { print $1 }'
+ grep -e '\bwlp3s0\b'
+ '[' 0 -ne 0 ']'
+ OPTIND=1
+ log_success
+ echo -e '\033[0;32mSuccess.\033[0m'
[0;32mSuccess.[0m
+ log_info 'Forcing Wi-Fi interface up... '
+ echo 'INFO: Forcing Wi-Fi interface up... '
INFO: Forcing Wi-Fi interface up... 
+ net_if_force_up -w wlp3s0
+ net_if_exists -w wlp3s0
+ _net_if_handle_param -w wlp3s0
+ _net_if=
+ _net_if_type=
+ _net_if_channel=0
+ getopts e:w:c: opt
+ case $opt in
+ _net_if=wlp3s0
+ _net_if_type=w
+ getopts e:w:c: opt
+ OPTIND=1
+ '[' wlp3s0 == '' ']'
+ case "$_net_if_type" in
+ ip -br l
+ awk '$1 !~ "lo|vir|et" { print $1 }'
+ grep -e '\bwlp3s0\b'
+ '[' 0 -ne 0 ']'
+ OPTIND=1
+ sudo ip link set wlp3s0 up
+ '[' 0 -ne 0 ']'
+ log_success
+ echo -e '\033[0;32mSuccess.\033[0m'
[0;32mSuccess.[0m
+ log_info 'Stopping NetworkManager... '
+ echo 'INFO: Stopping NetworkManager... '
INFO: Stopping NetworkManager... 
+ nm_stop
+ sudo systemctl stop NetworkManager
+ '[' 0 -ne 0 ']'
+ log_success
+ echo -e '\033[0;32mSuccess.\033[0m'
[0;32mSuccess.[0m
+ log_info 'Creating the bridge... '
+ echo 'INFO: Creating the bridge... '
INFO: Creating the bridge... 
+ br_setup br0
+ _br_handle_param -p 1 -b br0
+ _br_handle_param_num=0
+ getopts p:b:n: opt
+ case $opt in
+ _br_handle_param_num=1
+ getopts p:b:n: opt
+ case $opt in
+ _br_if=br0
+ getopts p:b:n: opt
+ OPTIND=1
+ '[' 1 -ne 1 ']'
+ '[' 1 -eq 1 ']'
+ '[' br0 == '' ']'
+ '[' 1 -eq 2 ']'
+ '[' 1 -eq 2 ']'
+ br_setdown br0
+ sudo brctl addbr br0
+ '[' 0 -ne 0 ']'
+ sudo ip link set br0 up
+ '[' 0 -ne 0 ']'
+ log_success
+ echo -e '\033[0;32mSuccess.\033[0m'
[0;32mSuccess.[0m
+ log_info 'Adding ethf3 to the bridge (wlp3s0 is added later by hostapd)... '
+ echo 'INFO: Adding ethf3 to the bridge (wlp3s0 is added later by hostapd)... '
INFO: Adding ethf3 to the bridge (wlp3s0 is added later by hostapd)... 
+ br_add_if -b br0 -n ethf3
+ _br_handle_param -p 2 -b br0 -n ethf3
+ _br_handle_param_num=0
+ getopts p:b:n: opt
+ case $opt in
+ _br_handle_param_num=2
+ getopts p:b:n: opt
+ case $opt in
+ _br_if=br0
+ getopts p:b:n: opt
+ case $opt in
+ _net_if=ethf3
+ getopts p:b:n: opt
+ OPTIND=1
+ '[' 2 -ne 1 ']'
+ '[' 2 -ne 2 ']'
+ '[' 2 -eq 1 ']'
+ '[' 2 -eq 2 ']'
+ '[' br0 == '' ']'
+ '[' 2 -eq 2 ']'
+ '[' ethf3 == '' ']'
+ br_exists br0
+ _br_handle_param -p 1 -b br0
+ _br_handle_param_num=0
+ getopts p:b:n: opt
+ case $opt in
+ _br_handle_param_num=1
+ getopts p:b:n: opt
+ case $opt in
+ _br_if=br0
+ getopts p:b:n: opt
+ OPTIND=1
+ '[' 1 -ne 1 ']'
+ '[' 1 -eq 1 ']'
+ '[' br0 == '' ']'
+ '[' 1 -eq 2 ']'
+ '[' 1 -eq 2 ']'
+ brctl show
+ grep -q br0
+ '[' 0 -ne 0 ']'
+ sudo brctl addif br0 ethf3
+ '[' 0 -ne 0 ']'
+ log_success
+ echo -e '\033[0;32mSuccess.\033[0m'
[0;32mSuccess.[0m
+ log_info 'Looking for Hostapd/Conf/Minimal/Personal/p_wpa2.conf...'
+ echo 'INFO: Looking for Hostapd/Conf/Minimal/Personal/p_wpa2.conf...'
INFO: Looking for Hostapd/Conf/Minimal/Personal/p_wpa2.conf...
+ file_exists -f Hostapd/Conf/Minimal/Personal/p_wpa2.conf
+ _file=
+ _file_is_dir=0
+ getopts f:d: opt
+ case $opt in
+ _file=Hostapd/Conf/Minimal/Personal/p_wpa2.conf
+ getopts f:d: opt
+ OPTIND=1
+ '[' Hostapd/Conf/Minimal/Personal/p_wpa2.conf == '' ']'
+ '[' 0 == 0 ']'
+ '[' '!' -e Hostapd/Conf/Minimal/Personal/p_wpa2.conf ']'
+ '[' 0 == 1 ']'
+ log_success
+ echo -e '\033[0;32mSuccess.\033[0m'
[0;32mSuccess.[0m
+ sudo killall hostapd
+ return 0
+ ap_run
+ log_title 'Running Hostapd. Press Ctrl-C to stop.'
+ echo -e '\n\033[0;36mRunning Hostapd. Press Ctrl-C to stop.\033[0m\n'

[0;36mRunning Hostapd. Press Ctrl-C to stop.[0m

+ ap_print_info
+ echo 'AP settings:'
AP settings:
+ echo ''

+ cat Hostapd/Conf/Minimal/Personal/p_wpa2.conf
+ grep -vE '^(#|$)'
logger_syslog=8
logger_syslog_level=0
logger_stdout=11
logger_stdout_level=0
interface=wlp3s0
bridge=br0
country_code=IT
hw_mode=g
channel=1
auth_algs=1
wpa=2
rsn_pairwise=CCMP
ssid=Hostapd-AP
utf8_ssid=1
wpa_passphrase=argoargoargo
wpa_key_mgmt=WPA-PSK
ieee80211w=1
+ echo ''

+ echo ''

+ '[' 0 -eq 0 ']'
+ sudo Hostapd/Build/hostapd Hostapd/Conf/Minimal/Personal/p_wpa2.conf
wlp3s0: interface state UNINITIALIZED->COUNTRY_UPDATE
wlp3s0: interface state COUNTRY_UPDATE->ENABLED
wlp3s0: AP-ENABLED 
