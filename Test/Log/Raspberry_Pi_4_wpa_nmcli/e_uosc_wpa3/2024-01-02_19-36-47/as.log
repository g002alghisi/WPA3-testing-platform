[19:36:51.242] Beginning saving session of stdout and stderr Test/Tmp/Log/Raspberry_Pi_4_wpa_nmcli/e_uosc_wpa3...
[0;32mSuccess.[0m

[19:36:51.243] Fetching configuration directory associated to e_wpa3...
[0;32mSuccess.[0m

[19:36:51.259] Looking for Freeradius/Conf/E_wpa3/...
[0;32mSuccess.[0m

[0;36mRunning FreeRADIUS. Press Ctrl-C to stop.[0m

FreeRADIUS Version 3.0.26
Copyright (C) 1999-2021 The FreeRADIUS server project and contributors
There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE
You may redistribute copies of FreeRADIUS under the terms of the
GNU General Public License
For more information about these matters, see the file named COPYRIGHT
Starting - reading configuration files ...
including dictionary file /usr/share/freeradius/dictionary
including dictionary file /usr/share/freeradius/dictionary.dhcp
including dictionary file /usr/share/freeradius/dictionary.vqp
including dictionary file Freeradius/Conf/E_wpa3//dictionary
including configuration file Freeradius/Conf/E_wpa3//radiusd.conf
including configuration file Freeradius/Conf/E_wpa3//proxy.conf
including configuration file Freeradius/Conf/E_wpa3//clients.conf
including files in directory Freeradius/Conf/E_wpa3//mods-enabled/
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/files
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/passwd
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/expr
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/soh
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/digest
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/dynamic_clients
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/unix
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/echo
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/preprocess
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/replicate
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/pap
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/always
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/detail
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/cache_eap
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/mschap
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/eap
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/logintime
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/utf8
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/unpack
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/radutmp
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/expiration
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/chap
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/realm
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/sradutmp
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/attr_filter
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/ntlm_auth
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/detail.log
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/exec
including configuration file Freeradius/Conf/E_wpa3//mods-enabled/linelog
including files in directory Freeradius/Conf/E_wpa3//policy.d/
including configuration file Freeradius/Conf/E_wpa3//policy.d/operator-name
including configuration file Freeradius/Conf/E_wpa3//policy.d/dhcp
including configuration file Freeradius/Conf/E_wpa3//policy.d/rfc7542
including configuration file Freeradius/Conf/E_wpa3//policy.d/accounting
including configuration file Freeradius/Conf/E_wpa3//policy.d/filter
including configuration file Freeradius/Conf/E_wpa3//policy.d/cui
including configuration file Freeradius/Conf/E_wpa3//policy.d/moonshot-targeted-ids
including configuration file Freeradius/Conf/E_wpa3//policy.d/canonicalization
including configuration file Freeradius/Conf/E_wpa3//policy.d/eap
including configuration file Freeradius/Conf/E_wpa3//policy.d/control
including configuration file Freeradius/Conf/E_wpa3//policy.d/abfab-tr
including configuration file Freeradius/Conf/E_wpa3//policy.d/debug
including files in directory Freeradius/Conf/E_wpa3//sites-enabled/
including configuration file Freeradius/Conf/E_wpa3//sites-enabled/inner-tunnel
including configuration file Freeradius/Conf/E_wpa3//sites-enabled/default
main {
 security {
 	user = "freerad"
 	group = "freerad"
 	allow_core_dumps = no
 }
	name = "freeradius"
	prefix = "/usr"
	localstatedir = "/var"
	logdir = "/var/log/freeradius"
	run_dir = "/var/run/freeradius"
}
main {
	name = "freeradius"
	prefix = "/usr"
	localstatedir = "/var"
	sbindir = "/usr/sbin"
	logdir = "/var/log/freeradius"
	run_dir = "/var/run/freeradius"
	libdir = "/usr/lib/freeradius"
	radacctdir = "/var/log/freeradius/radacct"
	hostname_lookups = no
	max_request_time = 30
	cleanup_delay = 5
	max_requests = 16384
	postauth_client_lost = no
	pidfile = "/var/run/freeradius/freeradius.pid"
	checkrad = "/usr/sbin/checkrad"
	debug_level = 0
	proxy_requests = yes
 log {
 	stripped_names = no
 	auth = no
 	auth_badpass = no
 	auth_goodpass = no
 	colourise = yes
 	msg_denied = "You are already logged in - access denied"
 }
 resources {
 }
 security {
 	max_attributes = 200
 	reject_delay = 1.000000
 	status_server = yes
 }
}
radiusd: #### Loading Realms and Home Servers ####
 proxy server {
 	retry_delay = 5
 	retry_count = 3
 	default_fallback = no
 	dead_time = 120
 	wake_all_if_all_dead = no
 }
 home_server localhost {
 	ipaddr = 127.0.0.1
 	port = 1812
 	type = "auth"
 	secret = <<< secret >>>
 	response_window = 20.000000
 	response_timeouts = 1
 	max_outstanding = 65536
 	zombie_period = 40
 	status_check = "status-server"
 	ping_interval = 30
 	check_interval = 30
 	check_timeout = 4
 	num_answers_to_alive = 3
 	revive_interval = 120
  limit {
  	max_connections = 16
  	max_requests = 0
  	lifetime = 0
  	idle_timeout = 0
  }
  coa {
  	irt = 2
  	mrt = 16
  	mrc = 5
  	mrd = 30
  }
 }
 home_server_pool my_auth_failover {
	type = fail-over
	home_server = localhost
 }
 realm example.com {
	auth_pool = my_auth_failover
 }
 realm LOCAL {
 }
radiusd: #### Loading Clients ####
 client localhost {
 	ipaddr = 127.0.0.1
 	require_message_authenticator = no
 	secret = <<< secret >>>
 	nas_type = "other"
 	proto = "*"
  limit {
  	max_connections = 16
  	lifetime = 0
  	idle_timeout = 30
  }
 }
 client localhost_ipv6 {
 	ipv6addr = ::1
 	require_message_authenticator = no
 	secret = <<< secret >>>
  limit {
  	max_connections = 16
  	lifetime = 0
  	idle_timeout = 30
  }
 }
Debugger not attached
systemd watchdog is disabled
 # Creating Auth-Type = mschap
 # Creating Auth-Type = eap
 # Creating Auth-Type = PAP
 # Creating Auth-Type = CHAP
 # Creating Auth-Type = MS-CHAP
 # Creating Auth-Type = digest
 # Creating Autz-Type = New-TLS-Connection
radiusd: #### Instantiating modules ####
 modules {
  # Loaded module rlm_files
  # Loading module "files" from file Freeradius/Conf/E_wpa3//mods-enabled/files
  files {
  	filename = "Freeradius/Conf/E_wpa3//mods-config/files/authorize"
  	acctusersfile = "Freeradius/Conf/E_wpa3//mods-config/files/accounting"
  	preproxy_usersfile = "Freeradius/Conf/E_wpa3//mods-config/files/pre-proxy"
  }
  # Loaded module rlm_passwd
  # Loading module "etc_passwd" from file Freeradius/Conf/E_wpa3//mods-enabled/passwd
  passwd etc_passwd {
  	filename = "/etc/passwd"
  	format = "*User-Name:Crypt-Password:"
  	delimiter = ":"
  	ignore_nislike = no
  	ignore_empty = yes
  	allow_multiple_keys = no
  	hash_size = 100
  }
  # Loaded module rlm_expr
  # Loading module "expr" from file Freeradius/Conf/E_wpa3//mods-enabled/expr
  expr {
  	safe_characters = "@abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789.-_: /√§√©√∂√º√†√¢√¶√ß√®√©√™√´√Æ√Ø√¥≈ì√π√ª√ºa√ø√Ñ√â√ñ√ú√ü√Ä√Ç√Ü√á√à√â√ä√ã√é√è√î≈í√ô√õ√ú≈∏"
  }
  # Loaded module rlm_soh
  # Loading module "soh" from file Freeradius/Conf/E_wpa3//mods-enabled/soh
  soh {
  	dhcp = yes
  }
  # Loaded module rlm_digest
  # Loading module "digest" from file Freeradius/Conf/E_wpa3//mods-enabled/digest
  # Loaded module rlm_dynamic_clients
  # Loading module "dynamic_clients" from file Freeradius/Conf/E_wpa3//mods-enabled/dynamic_clients
  # Loaded module rlm_unix
  # Loading module "unix" from file Freeradius/Conf/E_wpa3//mods-enabled/unix
  unix {
  	radwtmp = "/var/log/freeradius/radwtmp"
  }
Creating attribute Unix-Group
  # Loaded module rlm_exec
  # Loading module "echo" from file Freeradius/Conf/E_wpa3//mods-enabled/echo
  exec echo {
  	wait = yes
  	program = "/bin/echo %{User-Name}"
  	input_pairs = "request"
  	output_pairs = "reply"
  	shell_escape = yes
  }
  # Loaded module rlm_preprocess
  # Loading module "preprocess" from file Freeradius/Conf/E_wpa3//mods-enabled/preprocess
  preprocess {
  	huntgroups = "Freeradius/Conf/E_wpa3//mods-config/preprocess/huntgroups"
  	hints = "Freeradius/Conf/E_wpa3//mods-config/preprocess/hints"
  	with_ascend_hack = no
  	ascend_channels_per_line = 23
  	with_ntdomain_hack = no
  	with_specialix_jetstream_hack = no
  	with_cisco_vsa_hack = no
  	with_alvarion_vsa_hack = no
  }
  # Loaded module rlm_replicate
  # Loading module "replicate" from file Freeradius/Conf/E_wpa3//mods-enabled/replicate
  # Loaded module rlm_pap
  # Loading module "pap" from file Freeradius/Conf/E_wpa3//mods-enabled/pap
  pap {
  	normalise = yes
  }
  # Loaded module rlm_always
  # Loading module "reject" from file Freeradius/Conf/E_wpa3//mods-enabled/always
  always reject {
  	rcode = "reject"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "fail" from file Freeradius/Conf/E_wpa3//mods-enabled/always
  always fail {
  	rcode = "fail"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "ok" from file Freeradius/Conf/E_wpa3//mods-enabled/always
  always ok {
  	rcode = "ok"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "handled" from file Freeradius/Conf/E_wpa3//mods-enabled/always
  always handled {
  	rcode = "handled"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "invalid" from file Freeradius/Conf/E_wpa3//mods-enabled/always
  always invalid {
  	rcode = "invalid"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "userlock" from file Freeradius/Conf/E_wpa3//mods-enabled/always
  always userlock {
  	rcode = "userlock"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "notfound" from file Freeradius/Conf/E_wpa3//mods-enabled/always
  always notfound {
  	rcode = "notfound"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "noop" from file Freeradius/Conf/E_wpa3//mods-enabled/always
  always noop {
  	rcode = "noop"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "updated" from file Freeradius/Conf/E_wpa3//mods-enabled/always
  always updated {
  	rcode = "updated"
  	simulcount = 0
  	mpp = no
  }
  # Loaded module rlm_detail
  # Loading module "detail" from file Freeradius/Conf/E_wpa3//mods-enabled/detail
  detail {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loaded module rlm_cache
  # Loading module "cache_eap" from file Freeradius/Conf/E_wpa3//mods-enabled/cache_eap
  cache cache_eap {
  	driver = "rlm_cache_rbtree"
  	key = "%{%{control:State}:-%{%{reply:State}:-%{State}}}"
  	ttl = 15
  	max_entries = 0
  	epoch = 0
  	add_stats = no
  }
  # Loaded module rlm_mschap
  # Loading module "mschap" from file Freeradius/Conf/E_wpa3//mods-enabled/mschap
  mschap {
  	use_mppe = yes
  	require_encryption = no
  	require_strong = no
  	with_ntdomain_hack = yes
   passchange {
   }
  	allow_retry = yes
  	winbind_retry_with_normalised_username = no
  }
  # Loaded module rlm_eap
  # Loading module "eap" from file Freeradius/Conf/E_wpa3//mods-enabled/eap
  eap {
  	default_eap_type = "md5"
  	timer_expire = 60
  	ignore_unknown_eap_types = no
  	cisco_accounting_username_bug = no
  	max_sessions = 16384
  }
  # Loaded module rlm_logintime
  # Loading module "logintime" from file Freeradius/Conf/E_wpa3//mods-enabled/logintime
  logintime {
  	minimum_timeout = 60
  }
  # Loaded module rlm_utf8
  # Loading module "utf8" from file Freeradius/Conf/E_wpa3//mods-enabled/utf8
  # Loaded module rlm_unpack
  # Loading module "unpack" from file Freeradius/Conf/E_wpa3//mods-enabled/unpack
  # Loaded module rlm_radutmp
  # Loading module "radutmp" from file Freeradius/Conf/E_wpa3//mods-enabled/radutmp
  radutmp {
  	filename = "/var/log/freeradius/radutmp"
  	username = "%{User-Name}"
  	case_sensitive = yes
  	check_with_nas = yes
  	permissions = 384
  	caller_id = yes
  }
  # Loaded module rlm_expiration
  # Loading module "expiration" from file Freeradius/Conf/E_wpa3//mods-enabled/expiration
  # Loaded module rlm_chap
  # Loading module "chap" from file Freeradius/Conf/E_wpa3//mods-enabled/chap
  # Loaded module rlm_realm
  # Loading module "IPASS" from file Freeradius/Conf/E_wpa3//mods-enabled/realm
  realm IPASS {
  	format = "prefix"
  	delimiter = "/"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "suffix" from file Freeradius/Conf/E_wpa3//mods-enabled/realm
  realm suffix {
  	format = "suffix"
  	delimiter = "@"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "bangpath" from file Freeradius/Conf/E_wpa3//mods-enabled/realm
  realm bangpath {
  	format = "prefix"
  	delimiter = "!"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "realmpercent" from file Freeradius/Conf/E_wpa3//mods-enabled/realm
  realm realmpercent {
  	format = "suffix"
  	delimiter = "%"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "ntdomain" from file Freeradius/Conf/E_wpa3//mods-enabled/realm
  realm ntdomain {
  	format = "prefix"
  	delimiter = "\\"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "sradutmp" from file Freeradius/Conf/E_wpa3//mods-enabled/sradutmp
  radutmp sradutmp {
  	filename = "/var/log/freeradius/sradutmp"
  	username = "%{User-Name}"
  	case_sensitive = yes
  	check_with_nas = yes
  	permissions = 420
  	caller_id = no
  }
  # Loaded module rlm_attr_filter
  # Loading module "attr_filter.post-proxy" from file Freeradius/Conf/E_wpa3//mods-enabled/attr_filter
  attr_filter attr_filter.post-proxy {
  	filename = "Freeradius/Conf/E_wpa3//mods-config/attr_filter/post-proxy"
  	key = "%{Realm}"
  	relaxed = no
  }
  # Loading module "attr_filter.pre-proxy" from file Freeradius/Conf/E_wpa3//mods-enabled/attr_filter
  attr_filter attr_filter.pre-proxy {
  	filename = "Freeradius/Conf/E_wpa3//mods-config/attr_filter/pre-proxy"
  	key = "%{Realm}"
  	relaxed = no
  }
  # Loading module "attr_filter.access_reject" from file Freeradius/Conf/E_wpa3//mods-enabled/attr_filter
  attr_filter attr_filter.access_reject {
  	filename = "Freeradius/Conf/E_wpa3//mods-config/attr_filter/access_reject"
  	key = "%{User-Name}"
  	relaxed = no
  }
  # Loading module "attr_filter.access_challenge" from file Freeradius/Conf/E_wpa3//mods-enabled/attr_filter
  attr_filter attr_filter.access_challenge {
  	filename = "Freeradius/Conf/E_wpa3//mods-config/attr_filter/access_challenge"
  	key = "%{User-Name}"
  	relaxed = no
  }
  # Loading module "attr_filter.accounting_response" from file Freeradius/Conf/E_wpa3//mods-enabled/attr_filter
  attr_filter attr_filter.accounting_response {
  	filename = "Freeradius/Conf/E_wpa3//mods-config/attr_filter/accounting_response"
  	key = "%{User-Name}"
  	relaxed = no
  }
  # Loading module "attr_filter.coa" from file Freeradius/Conf/E_wpa3//mods-enabled/attr_filter
  attr_filter attr_filter.coa {
  	filename = "Freeradius/Conf/E_wpa3//mods-config/attr_filter/coa"
  	key = "%{User-Name}"
  	relaxed = no
  }
  # Loading module "ntlm_auth" from file Freeradius/Conf/E_wpa3//mods-enabled/ntlm_auth
  exec ntlm_auth {
  	wait = yes
  	program = "/path/to/ntlm_auth --request-nt-key --domain=MYDOMAIN --username=%{mschap:User-Name} --password=%{User-Password}"
  	shell_escape = yes
  }
  # Loading module "auth_log" from file Freeradius/Conf/E_wpa3//mods-enabled/detail.log
  detail auth_log {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/auth-detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loading module "reply_log" from file Freeradius/Conf/E_wpa3//mods-enabled/detail.log
  detail reply_log {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/reply-detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loading module "pre_proxy_log" from file Freeradius/Conf/E_wpa3//mods-enabled/detail.log
  detail pre_proxy_log {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/pre-proxy-detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loading module "post_proxy_log" from file Freeradius/Conf/E_wpa3//mods-enabled/detail.log
  detail post_proxy_log {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/post-proxy-detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loading module "exec" from file Freeradius/Conf/E_wpa3//mods-enabled/exec
  exec {
  	wait = no
  	input_pairs = "request"
  	shell_escape = yes
  	timeout = 10
  }
  # Loaded module rlm_linelog
  # Loading module "linelog" from file Freeradius/Conf/E_wpa3//mods-enabled/linelog
  linelog {
  	filename = "/var/log/freeradius/linelog"
  	escape_filenames = no
  	syslog_severity = "info"
  	permissions = 384
  	format = "This is a log message for %{User-Name}"
  	reference = "messages.%{%{reply:Packet-Type}:-default}"
  }
  # Loading module "log_accounting" from file Freeradius/Conf/E_wpa3//mods-enabled/linelog
  linelog log_accounting {
  	filename = "/var/log/freeradius/linelog-accounting"
  	escape_filenames = no
  	syslog_severity = "info"
  	permissions = 384
  	format = ""
  	reference = "Accounting-Request.%{%{Acct-Status-Type}:-unknown}"
  }
  instantiate {
  }
  # Instantiating module "files" from file Freeradius/Conf/E_wpa3//mods-enabled/files
reading pairlist file Freeradius/Conf/E_wpa3//mods-config/files/authorize
reading pairlist file Freeradius/Conf/E_wpa3//mods-config/files/accounting
reading pairlist file Freeradius/Conf/E_wpa3//mods-config/files/pre-proxy
  # Instantiating module "etc_passwd" from file Freeradius/Conf/E_wpa3//mods-enabled/passwd
rlm_passwd: nfields: 3 keyfield 0(User-Name) listable: no
  # Instantiating module "preprocess" from file Freeradius/Conf/E_wpa3//mods-enabled/preprocess
reading pairlist file Freeradius/Conf/E_wpa3//mods-config/preprocess/huntgroups
reading pairlist file Freeradius/Conf/E_wpa3//mods-config/preprocess/hints
  # Instantiating module "pap" from file Freeradius/Conf/E_wpa3//mods-enabled/pap
  # Instantiating module "reject" from file Freeradius/Conf/E_wpa3//mods-enabled/always
  # Instantiating module "fail" from file Freeradius/Conf/E_wpa3//mods-enabled/always
  # Instantiating module "ok" from file Freeradius/Conf/E_wpa3//mods-enabled/always
  # Instantiating module "handled" from file Freeradius/Conf/E_wpa3//mods-enabled/always
  # Instantiating module "invalid" from file Freeradius/Conf/E_wpa3//mods-enabled/always
  # Instantiating module "userlock" from file Freeradius/Conf/E_wpa3//mods-enabled/always
  # Instantiating module "notfound" from file Freeradius/Conf/E_wpa3//mods-enabled/always
  # Instantiating module "noop" from file Freeradius/Conf/E_wpa3//mods-enabled/always
  # Instantiating module "updated" from file Freeradius/Conf/E_wpa3//mods-enabled/always
  # Instantiating module "detail" from file Freeradius/Conf/E_wpa3//mods-enabled/detail
  # Instantiating module "cache_eap" from file Freeradius/Conf/E_wpa3//mods-enabled/cache_eap
rlm_cache (cache_eap): Driver rlm_cache_rbtree (module rlm_cache_rbtree) loaded and linked
  # Instantiating module "mschap" from file Freeradius/Conf/E_wpa3//mods-enabled/mschap
rlm_mschap (mschap): using internal authentication
  # Instantiating module "eap" from file Freeradius/Conf/E_wpa3//mods-enabled/eap
   # Linked to sub-module rlm_eap_md5
   # Linked to sub-module rlm_eap_gtc
   gtc {
   	challenge = "Password: "
   	auth_type = "PAP"
   }
   # Linked to sub-module rlm_eap_tls
   tls {
   	tls = "tls-common"
   }
   tls-config tls-common {
   	verify_depth = 0
   	ca_path = "Freeradius/Conf/E_wpa3//certs"
   	pem_file_type = yes
   	private_key_file = "Freeradius/Conf/E_wpa3//certs/server.key"
   	certificate_file = "Freeradius/Conf/E_wpa3//certs/server.crt"
   	ca_file = "Freeradius/Conf/E_wpa3//certs/ca.pem"
   	private_key_password = <<< secret >>>
   	fragment_size = 1024
   	include_length = yes
   	auto_chain = yes
   	check_crl = no
   	check_all_crl = no
   	ca_path_reload_interval = 0
   	cipher_list = "DEFAULT"
   	cipher_server_preference = no
   	reject_unknown_intermediate_ca = no
   	ecdh_curve = ""
   	tls_max_version = "1.2"
   	tls_min_version = "1.2"
    cache {
    	enable = no
    	lifetime = 24
    	max_entries = 255
    }
    verify {
    	skip_if_ocsp_ok = no
    }
    ocsp {
    	enable = no
    	override_cert_url = yes
    	url = "http://127.0.0.1/ocsp/"
    	use_nonce = yes
    	timeout = 0
    	softfail = no
    }
   }
   # Linked to sub-module rlm_eap_ttls
   ttls {
   	tls = "tls-common"
   	default_eap_type = "md5"
   	copy_request_to_tunnel = no
   	use_tunneled_reply = no
   	virtual_server = "inner-tunnel"
   	include_length = yes
   	require_client_cert = no
   }
tls: Using cached TLS configuration from previous invocation
   # Linked to sub-module rlm_eap_peap
   peap {
   	tls = "tls-common"
   	default_eap_type = "mschapv2"
   	copy_request_to_tunnel = no
   	use_tunneled_reply = no
   	proxy_tunneled_request_as_eap = yes
   	virtual_server = "inner-tunnel"
   	soh = no
   	require_client_cert = no
   }
tls: Using cached TLS configuration from previous invocation
   # Linked to sub-module rlm_eap_mschapv2
   mschapv2 {
   	with_ntdomain_hack = no
   	send_error = no
   }
  # Instantiating module "logintime" from file Freeradius/Conf/E_wpa3//mods-enabled/logintime
  # Instantiating module "expiration" from file Freeradius/Conf/E_wpa3//mods-enabled/expiration
  # Instantiating module "IPASS" from file Freeradius/Conf/E_wpa3//mods-enabled/realm
  # Instantiating module "suffix" from file Freeradius/Conf/E_wpa3//mods-enabled/realm
  # Instantiating module "bangpath" from file Freeradius/Conf/E_wpa3//mods-enabled/realm
  # Instantiating module "realmpercent" from file Freeradius/Conf/E_wpa3//mods-enabled/realm
  # Instantiating module "ntdomain" from file Freeradius/Conf/E_wpa3//mods-enabled/realm
  # Instantiating module "attr_filter.post-proxy" from file Freeradius/Conf/E_wpa3//mods-enabled/attr_filter
reading pairlist file Freeradius/Conf/E_wpa3//mods-config/attr_filter/post-proxy
  # Instantiating module "attr_filter.pre-proxy" from file Freeradius/Conf/E_wpa3//mods-enabled/attr_filter
reading pairlist file Freeradius/Conf/E_wpa3//mods-config/attr_filter/pre-proxy
  # Instantiating module "attr_filter.access_reject" from file Freeradius/Conf/E_wpa3//mods-enabled/attr_filter
reading pairlist file Freeradius/Conf/E_wpa3//mods-config/attr_filter/access_reject
  # Instantiating module "attr_filter.access_challenge" from file Freeradius/Conf/E_wpa3//mods-enabled/attr_filter
reading pairlist file Freeradius/Conf/E_wpa3//mods-config/attr_filter/access_challenge
  # Instantiating module "attr_filter.accounting_response" from file Freeradius/Conf/E_wpa3//mods-enabled/attr_filter
reading pairlist file Freeradius/Conf/E_wpa3//mods-config/attr_filter/accounting_response
  # Instantiating module "attr_filter.coa" from file Freeradius/Conf/E_wpa3//mods-enabled/attr_filter
reading pairlist file Freeradius/Conf/E_wpa3//mods-config/attr_filter/coa
  # Instantiating module "auth_log" from file Freeradius/Conf/E_wpa3//mods-enabled/detail.log
rlm_detail (auth_log): 'User-Password' suppressed, will not appear in detail output
  # Instantiating module "reply_log" from file Freeradius/Conf/E_wpa3//mods-enabled/detail.log
  # Instantiating module "pre_proxy_log" from file Freeradius/Conf/E_wpa3//mods-enabled/detail.log
  # Instantiating module "post_proxy_log" from file Freeradius/Conf/E_wpa3//mods-enabled/detail.log
  # Instantiating module "linelog" from file Freeradius/Conf/E_wpa3//mods-enabled/linelog
  # Instantiating module "log_accounting" from file Freeradius/Conf/E_wpa3//mods-enabled/linelog
 } # modules
radiusd: #### Loading Virtual Servers ####
server { # from file Freeradius/Conf/E_wpa3//radiusd.conf
} # server
server inner-tunnel { # from file Freeradius/Conf/E_wpa3//sites-enabled/inner-tunnel
 # Loading authenticate {...}
Compiling Auth-Type PAP for attr Auth-Type
Compiling Auth-Type CHAP for attr Auth-Type
Compiling Auth-Type MS-CHAP for attr Auth-Type
 # Loading authorize {...}
Ignoring "sql" (see raddb/mods-available/README.rst)
Ignoring "ldap" (see raddb/mods-available/README.rst)
 # Loading session {...}
 # Loading post-proxy {...}
 # Loading post-auth {...}
 # Skipping contents of 'if' as it is always 'false' -- Freeradius/Conf/E_wpa3//sites-enabled/inner-tunnel:336
Compiling Post-Auth-Type REJECT for attr Post-Auth-Type
} # server inner-tunnel
server default { # from file Freeradius/Conf/E_wpa3//sites-enabled/default
 # Loading authenticate {...}
Compiling Auth-Type PAP for attr Auth-Type
Compiling Auth-Type CHAP for attr Auth-Type
Compiling Auth-Type MS-CHAP for attr Auth-Type
 # Loading authorize {...}
Compiling Autz-Type New-TLS-Connection for attr Autz-Type
 # Loading preacct {...}
 # Loading accounting {...}
 # Loading post-proxy {...}
 # Loading post-auth {...}
Compiling Post-Auth-Type REJECT for attr Post-Auth-Type
Compiling Post-Auth-Type Challenge for attr Post-Auth-Type
Compiling Post-Auth-Type Client-Lost for attr Post-Auth-Type
} # server default
radiusd: #### Opening IP addresses and Ports ####
listen {
  	type = "auth"
  	ipaddr = 127.0.0.1
  	port = 18120
}
listen {
  	type = "auth"
  	ipaddr = *
  	port = 0
   limit {
   	max_connections = 16
   	lifetime = 0
   	idle_timeout = 30
   }
}
listen {
  	type = "acct"
  	ipaddr = *
  	port = 0
   limit {
   	max_connections = 16
   	lifetime = 0
   	idle_timeout = 30
   }
}
listen {
  	type = "auth"
  	ipv6addr = ::
  	port = 0
   limit {
   	max_connections = 16
   	lifetime = 0
   	idle_timeout = 30
   }
}
listen {
  	type = "acct"
  	ipv6addr = ::
  	port = 0
   limit {
   	max_connections = 16
   	lifetime = 0
   	idle_timeout = 30
   }
}
Listening on auth address 127.0.0.1 port 18120 bound to server inner-tunnel
Listening on auth address * port 1812 bound to server default
Listening on acct address * port 1813 bound to server default
Listening on auth address :: port 1812 bound to server default
Listening on acct address :: port 1813 bound to server default
Listening on proxy address * port 60395
Listening on proxy address :: port 44061
Ready to process requests
(0) Received Access-Request Id 0 from 127.0.0.1:53640 to 127.0.0.1:1812 length 230
(0)   User-Name = "anonymous"
(0)   NAS-IP-Address = 127.0.0.1
(0)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(0)   NAS-Port-Type = Wireless-802.11
(0)   Service-Type = Framed-User
(0)   NAS-Port = 1
(0)   Calling-Station-Id = "DC-A6-32-DF-E1-5C"
(0)   Connect-Info = "CONNECT 54Mbps 802.11g"
(0)   Acct-Session-Id = "860F825ABC065597"
(0)   Acct-Multi-Session-Id = "F3D199047272100F"
(0)   WLAN-Pairwise-Cipher = 1027076
(0)   WLAN-Group-Cipher = 1027076
(0)   WLAN-AKM-Suite = 1027073
(0)   WLAN-Group-Mgmt-Cipher = 1027078
(0)   Framed-MTU = 1400
(0)   EAP-Message = 0x02d3000e01616e6f6e796d6f7573
(0)   Message-Authenticator = 0x4d1a2c9b91aa882b0f4b17c36009bea0
(0) # Executing section authorize from file Freeradius/Conf/E_wpa3//sites-enabled/default
(0)   authorize {
(0)     policy filter_username {
(0)       if (&User-Name) {
(0)       if (&User-Name)  -> TRUE
(0)       if (&User-Name)  {
(0)         if (&User-Name =~ / /) {
(0)         if (&User-Name =~ / /)  -> FALSE
(0)         if (&User-Name =~ /@[^@]*@/ ) {
(0)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(0)         if (&User-Name =~ /\.\./ ) {
(0)         if (&User-Name =~ /\.\./ )  -> FALSE
(0)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(0)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(0)         if (&User-Name =~ /\.$/)  {
(0)         if (&User-Name =~ /\.$/)   -> FALSE
(0)         if (&User-Name =~ /@\./)  {
(0)         if (&User-Name =~ /@\./)   -> FALSE
(0)       } # if (&User-Name)  = notfound
(0)     } # policy filter_username = notfound
(0)     [preprocess] = ok
(0)     [chap] = noop
(0)     [mschap] = noop
(0)     [digest] = noop
(0) suffix: Checking for suffix after "@"
(0) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(0) suffix: No such realm "NULL"
(0)     [suffix] = noop
(0) eap: Peer sent EAP Response (code 2) ID 211 length 14
(0) eap: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
(0)     [eap] = ok
(0)   } # authorize = ok
(0) Found Auth-Type = eap
(0) # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/default
(0)   authenticate {
(0) eap: Peer sent packet with method EAP Identity (1)
(0) eap: Calling submodule eap_md5 to process data
(0) eap_md5: Issuing MD5 Challenge
(0) eap: Sending EAP Request (code 1) ID 212 length 22
(0) eap: EAP session adding &reply:State = 0xbd72376ebda633ad
(0)     [eap] = handled
(0)   } # authenticate = handled
(0) Using Post-Auth-Type Challenge
(0) # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/default
(0)   Challenge { ... } # empty sub-section is ignored
(0) Sent Access-Challenge Id 0 from 127.0.0.1:1812 to 127.0.0.1:53640 length 80
(0)   EAP-Message = 0x01d400160410985ecb17dbecf91c3313facf30979220
(0)   Message-Authenticator = 0x00000000000000000000000000000000
(0)   State = 0xbd72376ebda633ad7bed4e46214f3633
(0) Finished request
Waking up in 4.9 seconds.
(1) Received Access-Request Id 1 from 127.0.0.1:53640 to 127.0.0.1:1812 length 240
(1)   User-Name = "anonymous"
(1)   NAS-IP-Address = 127.0.0.1
(1)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(1)   NAS-Port-Type = Wireless-802.11
(1)   Service-Type = Framed-User
(1)   NAS-Port = 1
(1)   Calling-Station-Id = "DC-A6-32-DF-E1-5C"
(1)   Connect-Info = "CONNECT 54Mbps 802.11g"
(1)   Acct-Session-Id = "860F825ABC065597"
(1)   Acct-Multi-Session-Id = "F3D199047272100F"
(1)   WLAN-Pairwise-Cipher = 1027076
(1)   WLAN-Group-Cipher = 1027076
(1)   WLAN-AKM-Suite = 1027073
(1)   WLAN-Group-Mgmt-Cipher = 1027078
(1)   Framed-MTU = 1400
(1)   EAP-Message = 0x02d400060319
(1)   State = 0xbd72376ebda633ad7bed4e46214f3633
(1)   Message-Authenticator = 0x716e029bca55141e0b3b03b955313441
(1) session-state: No cached attributes
(1) # Executing section authorize from file Freeradius/Conf/E_wpa3//sites-enabled/default
(1)   authorize {
(1)     policy filter_username {
(1)       if (&User-Name) {
(1)       if (&User-Name)  -> TRUE
(1)       if (&User-Name)  {
(1)         if (&User-Name =~ / /) {
(1)         if (&User-Name =~ / /)  -> FALSE
(1)         if (&User-Name =~ /@[^@]*@/ ) {
(1)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(1)         if (&User-Name =~ /\.\./ ) {
(1)         if (&User-Name =~ /\.\./ )  -> FALSE
(1)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(1)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(1)         if (&User-Name =~ /\.$/)  {
(1)         if (&User-Name =~ /\.$/)   -> FALSE
(1)         if (&User-Name =~ /@\./)  {
(1)         if (&User-Name =~ /@\./)   -> FALSE
(1)       } # if (&User-Name)  = notfound
(1)     } # policy filter_username = notfound
(1)     [preprocess] = ok
(1)     [chap] = noop
(1)     [mschap] = noop
(1)     [digest] = noop
(1) suffix: Checking for suffix after "@"
(1) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(1) suffix: No such realm "NULL"
(1)     [suffix] = noop
(1) eap: Peer sent EAP Response (code 2) ID 212 length 6
(1) eap: No EAP Start, assuming it's an on-going EAP conversation
(1)     [eap] = updated
(1)     [files] = noop
(1)     [expiration] = noop
(1)     [logintime] = noop
Not doing PAP as Auth-Type is already set.
(1)     [pap] = noop
(1)   } # authorize = updated
(1) Found Auth-Type = eap
(1) # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/default
(1)   authenticate {
(1) eap: Expiring EAP session with state 0xbd72376ebda633ad
(1) eap: Finished EAP session with state 0xbd72376ebda633ad
(1) eap: Previous EAP request found for state 0xbd72376ebda633ad, released from the list
(1) eap: Peer sent packet with method EAP NAK (3)
(1) eap: Found mutually acceptable type PEAP (25)
(1) eap: Calling submodule eap_peap to process data
(1) eap_peap: (TLS) Initiating new session
(1) eap: Sending EAP Request (code 1) ID 213 length 6
(1) eap: EAP session adding &reply:State = 0xbd72376ebca72ead
(1)     [eap] = handled
(1)   } # authenticate = handled
(1) Using Post-Auth-Type Challenge
(1) # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/default
(1)   Challenge { ... } # empty sub-section is ignored
(1) session-state: Saving cached attributes
(1)   Framed-MTU = 994
(1) Sent Access-Challenge Id 1 from 127.0.0.1:1812 to 127.0.0.1:53640 length 64
(1)   EAP-Message = 0x01d500061920
(1)   Message-Authenticator = 0x00000000000000000000000000000000
(1)   State = 0xbd72376ebca72ead7bed4e46214f3633
(1) Finished request
Waking up in 4.9 seconds.
(2) Received Access-Request Id 2 from 127.0.0.1:53640 to 127.0.0.1:1812 length 428
(2)   User-Name = "anonymous"
(2)   NAS-IP-Address = 127.0.0.1
(2)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(2)   NAS-Port-Type = Wireless-802.11
(2)   Service-Type = Framed-User
(2)   NAS-Port = 1
(2)   Calling-Station-Id = "DC-A6-32-DF-E1-5C"
(2)   Connect-Info = "CONNECT 54Mbps 802.11g"
(2)   Acct-Session-Id = "860F825ABC065597"
(2)   Acct-Multi-Session-Id = "F3D199047272100F"
(2)   WLAN-Pairwise-Cipher = 1027076
(2)   WLAN-Group-Cipher = 1027076
(2)   WLAN-AKM-Suite = 1027073
(2)   WLAN-Group-Mgmt-Cipher = 1027078
(2)   Framed-MTU = 1400
(2)   EAP-Message = 0x02d500c21980000000b816030100b3010000af0303c33e9bf2d810c7f8d22d53f101f3e4be296f575b19c89374965440f7a8f05999000038c02cc030009fcca9cca8ccaac02bc02f009ec024c028006bc023c0270067c00ac0140039c009c0130033009d009c003d003c0035002f00ff0100004e000b000403000102000a000c000a001d0017001e001900180016000000170000000d002a0028040305030603080708080809080a080b080408050806040105010601030303010302040205020602
(2)   State = 0xbd72376ebca72ead7bed4e46214f3633
(2)   Message-Authenticator = 0x135ddccda4cd02e1ccccbf797d29a3f1
(2) Restoring &session-state
(2)   &session-state:Framed-MTU = 994
(2) # Executing section authorize from file Freeradius/Conf/E_wpa3//sites-enabled/default
(2)   authorize {
(2)     policy filter_username {
(2)       if (&User-Name) {
(2)       if (&User-Name)  -> TRUE
(2)       if (&User-Name)  {
(2)         if (&User-Name =~ / /) {
(2)         if (&User-Name =~ / /)  -> FALSE
(2)         if (&User-Name =~ /@[^@]*@/ ) {
(2)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(2)         if (&User-Name =~ /\.\./ ) {
(2)         if (&User-Name =~ /\.\./ )  -> FALSE
(2)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(2)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(2)         if (&User-Name =~ /\.$/)  {
(2)         if (&User-Name =~ /\.$/)   -> FALSE
(2)         if (&User-Name =~ /@\./)  {
(2)         if (&User-Name =~ /@\./)   -> FALSE
(2)       } # if (&User-Name)  = notfound
(2)     } # policy filter_username = notfound
(2)     [preprocess] = ok
(2)     [chap] = noop
(2)     [mschap] = noop
(2)     [digest] = noop
(2) suffix: Checking for suffix after "@"
(2) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(2) suffix: No such realm "NULL"
(2)     [suffix] = noop
(2) eap: Peer sent EAP Response (code 2) ID 213 length 194
(2) eap: Continuing tunnel setup
(2)     [eap] = ok
(2)   } # authorize = ok
(2) Found Auth-Type = eap
(2) # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/default
(2)   authenticate {
(2) eap: Expiring EAP session with state 0xbd72376ebca72ead
(2) eap: Finished EAP session with state 0xbd72376ebca72ead
(2) eap: Previous EAP request found for state 0xbd72376ebca72ead, released from the list
(2) eap: Peer sent packet with method EAP PEAP (25)
(2) eap: Calling submodule eap_peap to process data
(2) eap_peap: (TLS) EAP Peer says that the final record size will be 184 bytes
(2) eap_peap: (TLS) EAP Got all data (184 bytes)
(2) eap_peap: (TLS) Handshake state - before SSL initialization
(2) eap_peap: (TLS) Handshake state - Server before SSL initialization
(2) eap_peap: (TLS) Handshake state - Server before SSL initialization
(2) eap_peap: (TLS) recv TLS 1.3 Handshake, ClientHello
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read client hello
(2) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHello
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server hello
(2) eap_peap: (TLS) send TLS 1.2 Handshake, Certificate
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write certificate
(2) eap_peap: (TLS) send TLS 1.2 Handshake, ServerKeyExchange
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write key exchange
(2) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHelloDone
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server done
(2) eap_peap: (TLS) Server : Need to read more data: SSLv3/TLS write server done
(2) eap_peap: (TLS) In Handshake Phase
(2) eap: Sending EAP Request (code 1) ID 214 length 1004
(2) eap: EAP session adding &reply:State = 0xbd72376ebfa42ead
(2)     [eap] = handled
(2)   } # authenticate = handled
(2) Using Post-Auth-Type Challenge
(2) # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/default
(2)   Challenge { ... } # empty sub-section is ignored
(2) session-state: Saving cached attributes
(2)   Framed-MTU = 994
(2)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(2)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(2)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(2)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(2)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(2) Sent Access-Challenge Id 2 from 127.0.0.1:1812 to 127.0.0.1:53640 length 1068
(2)   EAP-Message = 0x01d603ec19c000000aac160303003d0200003903034436e6abb591f505173823a464be8151890fe3db152118bf2c300f6c846dcf1700c030000011ff01000100000b00040300010200170000160303092b0b0009270009240004203082041c30820304a003020102020101300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232333136353435315a170d3234303232313136353435315a307c310b3009060355040613024652310f300d06035504080c0652616469757331153013060355040a0c0c4578616d706c6520496e632e3123302106035504030c1a4578616d70
(2)   Message-Authenticator = 0x00000000000000000000000000000000
(2)   State = 0xbd72376ebfa42ead7bed4e46214f3633
(2) Finished request
Waking up in 4.9 seconds.
(3) Received Access-Request Id 3 from 127.0.0.1:53640 to 127.0.0.1:1812 length 240
(3)   User-Name = "anonymous"
(3)   NAS-IP-Address = 127.0.0.1
(3)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(3)   NAS-Port-Type = Wireless-802.11
(3)   Service-Type = Framed-User
(3)   NAS-Port = 1
(3)   Calling-Station-Id = "DC-A6-32-DF-E1-5C"
(3)   Connect-Info = "CONNECT 54Mbps 802.11g"
(3)   Acct-Session-Id = "860F825ABC065597"
(3)   Acct-Multi-Session-Id = "F3D199047272100F"
(3)   WLAN-Pairwise-Cipher = 1027076
(3)   WLAN-Group-Cipher = 1027076
(3)   WLAN-AKM-Suite = 1027073
(3)   WLAN-Group-Mgmt-Cipher = 1027078
(3)   Framed-MTU = 1400
(3)   EAP-Message = 0x02d600061900
(3)   State = 0xbd72376ebfa42ead7bed4e46214f3633
(3)   Message-Authenticator = 0xf851a35f62b4e12e69c0a5c7859f12b5
(3) Restoring &session-state
(3)   &session-state:Framed-MTU = 994
(3)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(3)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(3)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(3)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(3)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(3) # Executing section authorize from file Freeradius/Conf/E_wpa3//sites-enabled/default
(3)   authorize {
(3)     policy filter_username {
(3)       if (&User-Name) {
(3)       if (&User-Name)  -> TRUE
(3)       if (&User-Name)  {
(3)         if (&User-Name =~ / /) {
(3)         if (&User-Name =~ / /)  -> FALSE
(3)         if (&User-Name =~ /@[^@]*@/ ) {
(3)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(3)         if (&User-Name =~ /\.\./ ) {
(3)         if (&User-Name =~ /\.\./ )  -> FALSE
(3)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(3)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(3)         if (&User-Name =~ /\.$/)  {
(3)         if (&User-Name =~ /\.$/)   -> FALSE
(3)         if (&User-Name =~ /@\./)  {
(3)         if (&User-Name =~ /@\./)   -> FALSE
(3)       } # if (&User-Name)  = notfound
(3)     } # policy filter_username = notfound
(3)     [preprocess] = ok
(3)     [chap] = noop
(3)     [mschap] = noop
(3)     [digest] = noop
(3) suffix: Checking for suffix after "@"
(3) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(3) suffix: No such realm "NULL"
(3)     [suffix] = noop
(3) eap: Peer sent EAP Response (code 2) ID 214 length 6
(3) eap: Continuing tunnel setup
(3)     [eap] = ok
(3)   } # authorize = ok
(3) Found Auth-Type = eap
(3) # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/default
(3)   authenticate {
(3) eap: Expiring EAP session with state 0xbd72376ebfa42ead
(3) eap: Finished EAP session with state 0xbd72376ebfa42ead
(3) eap: Previous EAP request found for state 0xbd72376ebfa42ead, released from the list
(3) eap: Peer sent packet with method EAP PEAP (25)
(3) eap: Calling submodule eap_peap to process data
(3) eap_peap: (TLS) Peer ACKed our handshake fragment
(3) eap: Sending EAP Request (code 1) ID 215 length 1000
(3) eap: EAP session adding &reply:State = 0xbd72376ebea52ead
(3)     [eap] = handled
(3)   } # authenticate = handled
(3) Using Post-Auth-Type Challenge
(3) # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/default
(3)   Challenge { ... } # empty sub-section is ignored
(3) session-state: Saving cached attributes
(3)   Framed-MTU = 994
(3)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(3)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(3)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(3)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(3)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(3) Sent Access-Challenge Id 3 from 127.0.0.1:1812 to 127.0.0.1:53640 length 1064
(3)   EAP-Message = 0x01d703e819406e8d207b384b2ae2d12e7bed43f3eb17a0463f5989a43596d79503a48b711a208564006aa309505027032fc7e36872e3d7b744ddb88b0effe0ebaf63f6fa53bbfc3a9fa6b0d5ed621f7a6dd2fb6634980f22b6005e5d19b4a10d03acc2d7b9f268479c801a8dc964cc65673428a76b0f150afb0e939913dce01cb5b5df8390eebeb37ef2942b713835d9a788f024ec0004fe308204fa308203e2a003020102021452935a18a7f7ca22bcfcfadfdd0c1edff7bec045300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232333136353434365a170d32343032
(3)   Message-Authenticator = 0x00000000000000000000000000000000
(3)   State = 0xbd72376ebea52ead7bed4e46214f3633
(3) Finished request
Waking up in 4.9 seconds.
(4) Received Access-Request Id 4 from 127.0.0.1:53640 to 127.0.0.1:1812 length 240
(4)   User-Name = "anonymous"
(4)   NAS-IP-Address = 127.0.0.1
(4)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(4)   NAS-Port-Type = Wireless-802.11
(4)   Service-Type = Framed-User
(4)   NAS-Port = 1
(4)   Calling-Station-Id = "DC-A6-32-DF-E1-5C"
(4)   Connect-Info = "CONNECT 54Mbps 802.11g"
(4)   Acct-Session-Id = "860F825ABC065597"
(4)   Acct-Multi-Session-Id = "F3D199047272100F"
(4)   WLAN-Pairwise-Cipher = 1027076
(4)   WLAN-Group-Cipher = 1027076
(4)   WLAN-AKM-Suite = 1027073
(4)   WLAN-Group-Mgmt-Cipher = 1027078
(4)   Framed-MTU = 1400
(4)   EAP-Message = 0x02d700061900
(4)   State = 0xbd72376ebea52ead7bed4e46214f3633
(4)   Message-Authenticator = 0xfbb5f12d99955fe73c844978aa908a59
(4) Restoring &session-state
(4)   &session-state:Framed-MTU = 994
(4)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(4) # Executing section authorize from file Freeradius/Conf/E_wpa3//sites-enabled/default
(4)   authorize {
(4)     policy filter_username {
(4)       if (&User-Name) {
(4)       if (&User-Name)  -> TRUE
(4)       if (&User-Name)  {
(4)         if (&User-Name =~ / /) {
(4)         if (&User-Name =~ / /)  -> FALSE
(4)         if (&User-Name =~ /@[^@]*@/ ) {
(4)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(4)         if (&User-Name =~ /\.\./ ) {
(4)         if (&User-Name =~ /\.\./ )  -> FALSE
(4)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(4)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(4)         if (&User-Name =~ /\.$/)  {
(4)         if (&User-Name =~ /\.$/)   -> FALSE
(4)         if (&User-Name =~ /@\./)  {
(4)         if (&User-Name =~ /@\./)   -> FALSE
(4)       } # if (&User-Name)  = notfound
(4)     } # policy filter_username = notfound
(4)     [preprocess] = ok
(4)     [chap] = noop
(4)     [mschap] = noop
(4)     [digest] = noop
(4) suffix: Checking for suffix after "@"
(4) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(4) suffix: No such realm "NULL"
(4)     [suffix] = noop
(4) eap: Peer sent EAP Response (code 2) ID 215 length 6
(4) eap: Continuing tunnel setup
(4)     [eap] = ok
(4)   } # authorize = ok
(4) Found Auth-Type = eap
(4) # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/default
(4)   authenticate {
(4) eap: Expiring EAP session with state 0xbd72376ebea52ead
(4) eap: Finished EAP session with state 0xbd72376ebea52ead
(4) eap: Previous EAP request found for state 0xbd72376ebea52ead, released from the list
(4) eap: Peer sent packet with method EAP PEAP (25)
(4) eap: Calling submodule eap_peap to process data
(4) eap_peap: (TLS) Peer ACKed our handshake fragment
(4) eap: Sending EAP Request (code 1) ID 216 length 750
(4) eap: EAP session adding &reply:State = 0xbd72376eb9aa2ead
(4)     [eap] = handled
(4)   } # authenticate = handled
(4) Using Post-Auth-Type Challenge
(4) # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/default
(4)   Challenge { ... } # empty sub-section is ignored
(4) session-state: Saving cached attributes
(4)   Framed-MTU = 994
(4)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(4)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(4)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(4)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(4)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(4) Sent Access-Challenge Id 4 from 127.0.0.1:1812 to 127.0.0.1:53640 length 812
(4)   EAP-Message = 0x01d802ee1900161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479821452935a18a7f7ca22bcfcfadfdd0c1edff7bec045300f0603551d130101ff040530030101ff30360603551d1f042f302d302ba029a0278625687474703a2f2f7777772e6578616d706c652e6f72672f6578616d706c655f63612e63726c300d06092a864886f70d01010b0500038201010042c68cf21c13a21940599f92e50fdf35e381113e48d581a242fd960dd32a91306d95085720d34f75625ad320f310fc7a37c0da14a9bc78c15a768a86809b272c00b9e84fb68640737630e717914b90a4137d1f12cff73cf05111d1cf489ea699536dac4a782408f0c6979c3cbe95f1782ce66e00e85851d5b7d25f5063516f7d9a055090fdf1ca8f6736848cfc5d7e372075246b7e3cb9f09c242b636eb993654b48de7adf8841b8dc01146ac976a755417f4ac1b9bdb8b92a0985ea62550be40aab4a
(4)   Message-Authenticator = 0x00000000000000000000000000000000
(4)   State = 0xbd72376eb9aa2ead7bed4e46214f3633
(4) Finished request
Waking up in 4.9 seconds.
(5) Received Access-Request Id 5 from 127.0.0.1:53640 to 127.0.0.1:1812 length 337
(5)   User-Name = "anonymous"
(5)   NAS-IP-Address = 127.0.0.1
(5)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(5)   NAS-Port-Type = Wireless-802.11
(5)   Service-Type = Framed-User
(5)   NAS-Port = 1
(5)   Calling-Station-Id = "DC-A6-32-DF-E1-5C"
(5)   Connect-Info = "CONNECT 54Mbps 802.11g"
(5)   Acct-Session-Id = "860F825ABC065597"
(5)   Acct-Multi-Session-Id = "F3D199047272100F"
(5)   WLAN-Pairwise-Cipher = 1027076
(5)   WLAN-Group-Cipher = 1027076
(5)   WLAN-AKM-Suite = 1027073
(5)   WLAN-Group-Mgmt-Cipher = 1027078
(5)   Framed-MTU = 1400
(5)   EAP-Message = 0x02d8006719800000005d1603030025100000212020ddf13f77338e0ab5dfdea6709963617e4ff0cc9e33cb2a185fbe3223c6252714030300010116030300285b37881dafc393df9ffd91756c0710d9c7be7e88d6a2abda2297ee6245acac04943ece2b249cd395
(5)   State = 0xbd72376eb9aa2ead7bed4e46214f3633
(5)   Message-Authenticator = 0xe8f11ee4d0757a134a801212b34541d0
(5) Restoring &session-state
(5)   &session-state:Framed-MTU = 994
(5)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(5) # Executing section authorize from file Freeradius/Conf/E_wpa3//sites-enabled/default
(5)   authorize {
(5)     policy filter_username {
(5)       if (&User-Name) {
(5)       if (&User-Name)  -> TRUE
(5)       if (&User-Name)  {
(5)         if (&User-Name =~ / /) {
(5)         if (&User-Name =~ / /)  -> FALSE
(5)         if (&User-Name =~ /@[^@]*@/ ) {
(5)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(5)         if (&User-Name =~ /\.\./ ) {
(5)         if (&User-Name =~ /\.\./ )  -> FALSE
(5)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(5)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(5)         if (&User-Name =~ /\.$/)  {
(5)         if (&User-Name =~ /\.$/)   -> FALSE
(5)         if (&User-Name =~ /@\./)  {
(5)         if (&User-Name =~ /@\./)   -> FALSE
(5)       } # if (&User-Name)  = notfound
(5)     } # policy filter_username = notfound
(5)     [preprocess] = ok
(5)     [chap] = noop
(5)     [mschap] = noop
(5)     [digest] = noop
(5) suffix: Checking for suffix after "@"
(5) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(5) suffix: No such realm "NULL"
(5)     [suffix] = noop
(5) eap: Peer sent EAP Response (code 2) ID 216 length 103
(5) eap: Continuing tunnel setup
(5)     [eap] = ok
(5)   } # authorize = ok
(5) Found Auth-Type = eap
(5) # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/default
(5)   authenticate {
(5) eap: Expiring EAP session with state 0xbd72376eb9aa2ead
(5) eap: Finished EAP session with state 0xbd72376eb9aa2ead
(5) eap: Previous EAP request found for state 0xbd72376eb9aa2ead, released from the list
(5) eap: Peer sent packet with method EAP PEAP (25)
(5) eap: Calling submodule eap_peap to process data
(5) eap_peap: (TLS) EAP Peer says that the final record size will be 93 bytes
(5) eap_peap: (TLS) EAP Got all data (93 bytes)
(5) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server done
(5) eap_peap: (TLS) recv TLS 1.2 Handshake, ClientKeyExchange
(5) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read client key exchange
(5) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read change cipher spec
(5) eap_peap: (TLS) recv TLS 1.2 Handshake, Finished
(5) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read finished
(5) eap_peap: (TLS) send TLS 1.2 ChangeCipherSpec
(5) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write change cipher spec
(5) eap_peap: (TLS) send TLS 1.2 Handshake, Finished
(5) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write finished
(5) eap_peap: (TLS) Handshake state - SSL negotiation finished successfully
(5) eap_peap: (TLS) Connection Established
(5) eap_peap:   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(5) eap_peap:   TLS-Session-Version = "TLS 1.2"
(5) eap: Sending EAP Request (code 1) ID 217 length 57
(5) eap: EAP session adding &reply:State = 0xbd72376eb8ab2ead
(5)     [eap] = handled
(5)   } # authenticate = handled
(5) Using Post-Auth-Type Challenge
(5) # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/default
(5)   Challenge { ... } # empty sub-section is ignored
(5) session-state: Saving cached attributes
(5)   Framed-MTU = 994
(5)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(5)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(5)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(5)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(5)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(5)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(5)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(5)   TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(5)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(5)   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(5)   TLS-Session-Version = "TLS 1.2"
(5) Sent Access-Challenge Id 5 from 127.0.0.1:1812 to 127.0.0.1:53640 length 115
(5)   EAP-Message = 0x01d9003919001403030001011603030028aed51b319ad22d44a5db6b465ed736bedb62305c63e14062876b6eba87d092fe9d69fed783665081
(5)   Message-Authenticator = 0x00000000000000000000000000000000
(5)   State = 0xbd72376eb8ab2ead7bed4e46214f3633
(5) Finished request
Waking up in 4.9 seconds.
(6) Received Access-Request Id 6 from 127.0.0.1:53640 to 127.0.0.1:1812 length 240
(6)   User-Name = "anonymous"
(6)   NAS-IP-Address = 127.0.0.1
(6)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(6)   NAS-Port-Type = Wireless-802.11
(6)   Service-Type = Framed-User
(6)   NAS-Port = 1
(6)   Calling-Station-Id = "DC-A6-32-DF-E1-5C"
(6)   Connect-Info = "CONNECT 54Mbps 802.11g"
(6)   Acct-Session-Id = "860F825ABC065597"
(6)   Acct-Multi-Session-Id = "F3D199047272100F"
(6)   WLAN-Pairwise-Cipher = 1027076
(6)   WLAN-Group-Cipher = 1027076
(6)   WLAN-AKM-Suite = 1027073
(6)   WLAN-Group-Mgmt-Cipher = 1027078
(6)   Framed-MTU = 1400
(6)   EAP-Message = 0x02d900061900
(6)   State = 0xbd72376eb8ab2ead7bed4e46214f3633
(6)   Message-Authenticator = 0x739443e6e93eff87df2032059f7d4bd1
(6) Restoring &session-state
(6)   &session-state:Framed-MTU = 994
(6)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(6)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(6)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(6)   &session-state:TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(6)   &session-state:TLS-Session-Version = "TLS 1.2"
(6) # Executing section authorize from file Freeradius/Conf/E_wpa3//sites-enabled/default
(6)   authorize {
(6)     policy filter_username {
(6)       if (&User-Name) {
(6)       if (&User-Name)  -> TRUE
(6)       if (&User-Name)  {
(6)         if (&User-Name =~ / /) {
(6)         if (&User-Name =~ / /)  -> FALSE
(6)         if (&User-Name =~ /@[^@]*@/ ) {
(6)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(6)         if (&User-Name =~ /\.\./ ) {
(6)         if (&User-Name =~ /\.\./ )  -> FALSE
(6)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(6)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(6)         if (&User-Name =~ /\.$/)  {
(6)         if (&User-Name =~ /\.$/)   -> FALSE
(6)         if (&User-Name =~ /@\./)  {
(6)         if (&User-Name =~ /@\./)   -> FALSE
(6)       } # if (&User-Name)  = notfound
(6)     } # policy filter_username = notfound
(6)     [preprocess] = ok
(6)     [chap] = noop
(6)     [mschap] = noop
(6)     [digest] = noop
(6) suffix: Checking for suffix after "@"
(6) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(6) suffix: No such realm "NULL"
(6)     [suffix] = noop
(6) eap: Peer sent EAP Response (code 2) ID 217 length 6
(6) eap: Continuing tunnel setup
(6)     [eap] = ok
(6)   } # authorize = ok
(6) Found Auth-Type = eap
(6) # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/default
(6)   authenticate {
(6) eap: Expiring EAP session with state 0xbd72376eb8ab2ead
(6) eap: Finished EAP session with state 0xbd72376eb8ab2ead
(6) eap: Previous EAP request found for state 0xbd72376eb8ab2ead, released from the list
(6) eap: Peer sent packet with method EAP PEAP (25)
(6) eap: Calling submodule eap_peap to process data
(6) eap_peap: (TLS) Peer ACKed our handshake fragment.  handshake is finished
(6) eap_peap: Session established.  Decoding tunneled attributes
(6) eap_peap: PEAP state TUNNEL ESTABLISHED
(6) eap: Sending EAP Request (code 1) ID 218 length 40
(6) eap: EAP session adding &reply:State = 0xbd72376ebba82ead
(6)     [eap] = handled
(6)   } # authenticate = handled
(6) Using Post-Auth-Type Challenge
(6) # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/default
(6)   Challenge { ... } # empty sub-section is ignored
(6) session-state: Saving cached attributes
(6)   Framed-MTU = 994
(6)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(6)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(6)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(6)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(6)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(6)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(6)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(6)   TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(6)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(6)   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(6)   TLS-Session-Version = "TLS 1.2"
(6) Sent Access-Challenge Id 6 from 127.0.0.1:1812 to 127.0.0.1:53640 length 98
(6)   EAP-Message = 0x01da00281900170303001daed51b319ad22d4528e89d210d5c41ae5bd4671c9edfc159ef4a706edf
(6)   Message-Authenticator = 0x00000000000000000000000000000000
(6)   State = 0xbd72376ebba82ead7bed4e46214f3633
(6) Finished request
Waking up in 4.9 seconds.
(7) Received Access-Request Id 7 from 127.0.0.1:53640 to 127.0.0.1:1812 length 285
(7)   User-Name = "anonymous"
(7)   NAS-IP-Address = 127.0.0.1
(7)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(7)   NAS-Port-Type = Wireless-802.11
(7)   Service-Type = Framed-User
(7)   NAS-Port = 1
(7)   Calling-Station-Id = "DC-A6-32-DF-E1-5C"
(7)   Connect-Info = "CONNECT 54Mbps 802.11g"
(7)   Acct-Session-Id = "860F825ABC065597"
(7)   Acct-Multi-Session-Id = "F3D199047272100F"
(7)   WLAN-Pairwise-Cipher = 1027076
(7)   WLAN-Group-Cipher = 1027076
(7)   WLAN-AKM-Suite = 1027073
(7)   WLAN-Group-Mgmt-Cipher = 1027078
(7)   Framed-MTU = 1400
(7)   EAP-Message = 0x02da0033190017030300285b37881dafc393e0526fb0f88b38408a4a177b4bbfcb1bdbb8677633f5bd89036db9b33416dbefa5
(7)   State = 0xbd72376ebba82ead7bed4e46214f3633
(7)   Message-Authenticator = 0xddc948efca2060b3f90eee7edf52f1f0
(7) Restoring &session-state
(7)   &session-state:Framed-MTU = 994
(7)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(7)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(7)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(7)   &session-state:TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(7)   &session-state:TLS-Session-Version = "TLS 1.2"
(7) # Executing section authorize from file Freeradius/Conf/E_wpa3//sites-enabled/default
(7)   authorize {
(7)     policy filter_username {
(7)       if (&User-Name) {
(7)       if (&User-Name)  -> TRUE
(7)       if (&User-Name)  {
(7)         if (&User-Name =~ / /) {
(7)         if (&User-Name =~ / /)  -> FALSE
(7)         if (&User-Name =~ /@[^@]*@/ ) {
(7)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(7)         if (&User-Name =~ /\.\./ ) {
(7)         if (&User-Name =~ /\.\./ )  -> FALSE
(7)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(7)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(7)         if (&User-Name =~ /\.$/)  {
(7)         if (&User-Name =~ /\.$/)   -> FALSE
(7)         if (&User-Name =~ /@\./)  {
(7)         if (&User-Name =~ /@\./)   -> FALSE
(7)       } # if (&User-Name)  = notfound
(7)     } # policy filter_username = notfound
(7)     [preprocess] = ok
(7)     [chap] = noop
(7)     [mschap] = noop
(7)     [digest] = noop
(7) suffix: Checking for suffix after "@"
(7) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(7) suffix: No such realm "NULL"
(7)     [suffix] = noop
(7) eap: Peer sent EAP Response (code 2) ID 218 length 51
(7) eap: Continuing tunnel setup
(7)     [eap] = ok
(7)   } # authorize = ok
(7) Found Auth-Type = eap
(7) # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/default
(7)   authenticate {
(7) eap: Expiring EAP session with state 0xbd72376ebba82ead
(7) eap: Finished EAP session with state 0xbd72376ebba82ead
(7) eap: Previous EAP request found for state 0xbd72376ebba82ead, released from the list
(7) eap: Peer sent packet with method EAP PEAP (25)
(7) eap: Calling submodule eap_peap to process data
(7) eap_peap: (TLS) EAP Done initial handshake
(7) eap_peap: Session established.  Decoding tunneled attributes
(7) eap_peap: PEAP state WAITING FOR INNER IDENTITY
(7) eap_peap: Identity - bob@example.org
(7) eap_peap: Got inner identity 'bob@example.org'
(7) eap_peap: Setting default EAP type for tunneled EAP session
(7) eap_peap: Got tunneled request
(7) eap_peap:   EAP-Message = 0x02da001401626f62406578616d706c652e6f7267
(7) eap_peap: Setting User-Name to bob@example.org
(7) eap_peap: Sending tunneled request to inner-tunnel
(7) eap_peap:   EAP-Message = 0x02da001401626f62406578616d706c652e6f7267
(7) eap_peap:   FreeRADIUS-Proxied-To = 127.0.0.1
(7) eap_peap:   User-Name = "bob@example.org"
(7) Virtual server inner-tunnel received request
(7)   EAP-Message = 0x02da001401626f62406578616d706c652e6f7267
(7)   FreeRADIUS-Proxied-To = 127.0.0.1
(7)   User-Name = "bob@example.org"
(7) server inner-tunnel {
(7)   # Executing section authorize from file Freeradius/Conf/E_wpa3//sites-enabled/inner-tunnel
(7)     authorize {
(7)       policy filter_username {
(7)         if (&User-Name) {
(7)         if (&User-Name)  -> TRUE
(7)         if (&User-Name)  {
(7)           if (&User-Name =~ / /) {
(7)           if (&User-Name =~ / /)  -> FALSE
(7)           if (&User-Name =~ /@[^@]*@/ ) {
(7)           if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(7)           if (&User-Name =~ /\.\./ ) {
(7)           if (&User-Name =~ /\.\./ )  -> FALSE
(7)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(7)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(7)           if (&User-Name =~ /\.$/)  {
(7)           if (&User-Name =~ /\.$/)   -> FALSE
(7)           if (&User-Name =~ /@\./)  {
(7)           if (&User-Name =~ /@\./)   -> FALSE
(7)         } # if (&User-Name)  = notfound
(7)       } # policy filter_username = notfound
(7)       [chap] = noop
(7)       [mschap] = noop
(7) suffix: Checking for suffix after "@"
(7) suffix: Looking up realm "example.org" for User-Name = "bob@example.org"
(7) suffix: No such realm "example.org"
(7)       [suffix] = noop
(7)       update control {
(7)         &Proxy-To-Realm := LOCAL
(7)       } # update control = noop
(7) eap: Peer sent EAP Response (code 2) ID 218 length 20
(7) eap: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
(7)       [eap] = ok
(7)     } # authorize = ok
(7)   Found Auth-Type = eap
(7)   # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/inner-tunnel
(7)     authenticate {
(7) eap: Peer sent packet with method EAP Identity (1)
(7) eap: Calling submodule eap_mschapv2 to process data
(7) eap_mschapv2: Issuing Challenge
(7) eap: Sending EAP Request (code 1) ID 219 length 43
(7) eap: EAP session adding &reply:State = 0x874a32d687912867
(7)       [eap] = handled
(7)     } # authenticate = handled
(7) } # server inner-tunnel
(7) Virtual server sending reply
(7)   EAP-Message = 0x01db002b1a01db00261091a246b9c9a148b966118050fa57d1cb667265657261646975732d332e302e3236
(7)   Message-Authenticator = 0x00000000000000000000000000000000
(7)   State = 0x874a32d687912867f429230c24c95781
(7) eap_peap: Got tunneled reply code 11
(7) eap_peap:   EAP-Message = 0x01db002b1a01db00261091a246b9c9a148b966118050fa57d1cb667265657261646975732d332e302e3236
(7) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(7) eap_peap:   State = 0x874a32d687912867f429230c24c95781
(7) eap_peap: Got tunneled reply RADIUS code 11
(7) eap_peap:   EAP-Message = 0x01db002b1a01db00261091a246b9c9a148b966118050fa57d1cb667265657261646975732d332e302e3236
(7) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(7) eap_peap:   State = 0x874a32d687912867f429230c24c95781
(7) eap_peap: Got tunneled Access-Challenge
(7) eap: Sending EAP Request (code 1) ID 219 length 74
(7) eap: EAP session adding &reply:State = 0xbd72376ebaa92ead
(7)     [eap] = handled
(7)   } # authenticate = handled
(7) Using Post-Auth-Type Challenge
(7) # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/default
(7)   Challenge { ... } # empty sub-section is ignored
(7) session-state: Saving cached attributes
(7)   Framed-MTU = 994
(7)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(7)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(7)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(7)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(7)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(7)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(7)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(7)   TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(7)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(7)   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(7)   TLS-Session-Version = "TLS 1.2"
(7) Sent Access-Challenge Id 7 from 127.0.0.1:1812 to 127.0.0.1:53640 length 132
(7)   EAP-Message = 0x01db004a1900170303003faed51b319ad22d4612377db89c7c506da84036e871e66366039d7e80da7f5f28e3801b78855b82d390fa2ecc5dd8cbc190530e7cfa11b76f3bfc53da7781e8
(7)   Message-Authenticator = 0x00000000000000000000000000000000
(7)   State = 0xbd72376ebaa92ead7bed4e46214f3633
(7) Finished request
Waking up in 4.9 seconds.
(8) Received Access-Request Id 8 from 127.0.0.1:53640 to 127.0.0.1:1812 length 339
(8)   User-Name = "anonymous"
(8)   NAS-IP-Address = 127.0.0.1
(8)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(8)   NAS-Port-Type = Wireless-802.11
(8)   Service-Type = Framed-User
(8)   NAS-Port = 1
(8)   Calling-Station-Id = "DC-A6-32-DF-E1-5C"
(8)   Connect-Info = "CONNECT 54Mbps 802.11g"
(8)   Acct-Session-Id = "860F825ABC065597"
(8)   Acct-Multi-Session-Id = "F3D199047272100F"
(8)   WLAN-Pairwise-Cipher = 1027076
(8)   WLAN-Group-Cipher = 1027076
(8)   WLAN-AKM-Suite = 1027073
(8)   WLAN-Group-Mgmt-Cipher = 1027078
(8)   Framed-MTU = 1400
(8)   EAP-Message = 0x02db00691900170303005e5b37881dafc393e11fd9f615e3f98d54cd89b72b31f1d47c44632d29ffa3912d0722f4322edc651657b8c46f654eca90b95921ced0e6f6f86ad210fcfc5d38c241c4e315e4ab939a38bf5f92a7f92d7824cdd56e8affc011dc9e30aad5ac
(8)   State = 0xbd72376ebaa92ead7bed4e46214f3633
(8)   Message-Authenticator = 0xea1a67b27e25cf139420005a491c3959
(8) Restoring &session-state
(8)   &session-state:Framed-MTU = 994
(8)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(8)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(8)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(8)   &session-state:TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(8)   &session-state:TLS-Session-Version = "TLS 1.2"
(8) # Executing section authorize from file Freeradius/Conf/E_wpa3//sites-enabled/default
(8)   authorize {
(8)     policy filter_username {
(8)       if (&User-Name) {
(8)       if (&User-Name)  -> TRUE
(8)       if (&User-Name)  {
(8)         if (&User-Name =~ / /) {
(8)         if (&User-Name =~ / /)  -> FALSE
(8)         if (&User-Name =~ /@[^@]*@/ ) {
(8)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(8)         if (&User-Name =~ /\.\./ ) {
(8)         if (&User-Name =~ /\.\./ )  -> FALSE
(8)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(8)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(8)         if (&User-Name =~ /\.$/)  {
(8)         if (&User-Name =~ /\.$/)   -> FALSE
(8)         if (&User-Name =~ /@\./)  {
(8)         if (&User-Name =~ /@\./)   -> FALSE
(8)       } # if (&User-Name)  = notfound
(8)     } # policy filter_username = notfound
(8)     [preprocess] = ok
(8)     [chap] = noop
(8)     [mschap] = noop
(8)     [digest] = noop
(8) suffix: Checking for suffix after "@"
(8) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(8) suffix: No such realm "NULL"
(8)     [suffix] = noop
(8) eap: Peer sent EAP Response (code 2) ID 219 length 105
(8) eap: Continuing tunnel setup
(8)     [eap] = ok
(8)   } # authorize = ok
(8) Found Auth-Type = eap
(8) # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/default
(8)   authenticate {
(8) eap: Expiring EAP session with state 0x874a32d687912867
(8) eap: Finished EAP session with state 0xbd72376ebaa92ead
(8) eap: Previous EAP request found for state 0xbd72376ebaa92ead, released from the list
(8) eap: Peer sent packet with method EAP PEAP (25)
(8) eap: Calling submodule eap_peap to process data
(8) eap_peap: (TLS) EAP Done initial handshake
(8) eap_peap: Session established.  Decoding tunneled attributes
(8) eap_peap: PEAP state phase2
(8) eap_peap: EAP method MSCHAPv2 (26)
(8) eap_peap: Got tunneled request
(8) eap_peap:   EAP-Message = 0x02db004a1a02db004531169aab3833f4efdaa3ed29efa825fac60000000000000000fe1104f797e069b0cf0826bc96a5baaf996db60fc8f02d7500626f62406578616d706c652e6f7267
(8) eap_peap: Setting User-Name to bob@example.org
(8) eap_peap: Sending tunneled request to inner-tunnel
(8) eap_peap:   EAP-Message = 0x02db004a1a02db004531169aab3833f4efdaa3ed29efa825fac60000000000000000fe1104f797e069b0cf0826bc96a5baaf996db60fc8f02d7500626f62406578616d706c652e6f7267
(8) eap_peap:   FreeRADIUS-Proxied-To = 127.0.0.1
(8) eap_peap:   User-Name = "bob@example.org"
(8) eap_peap:   State = 0x874a32d687912867f429230c24c95781
(8) Virtual server inner-tunnel received request
(8)   EAP-Message = 0x02db004a1a02db004531169aab3833f4efdaa3ed29efa825fac60000000000000000fe1104f797e069b0cf0826bc96a5baaf996db60fc8f02d7500626f62406578616d706c652e6f7267
(8)   FreeRADIUS-Proxied-To = 127.0.0.1
(8)   User-Name = "bob@example.org"
(8)   State = 0x874a32d687912867f429230c24c95781
(8) server inner-tunnel {
(8)   session-state: No cached attributes
(8)   # Executing section authorize from file Freeradius/Conf/E_wpa3//sites-enabled/inner-tunnel
(8)     authorize {
(8)       policy filter_username {
(8)         if (&User-Name) {
(8)         if (&User-Name)  -> TRUE
(8)         if (&User-Name)  {
(8)           if (&User-Name =~ / /) {
(8)           if (&User-Name =~ / /)  -> FALSE
(8)           if (&User-Name =~ /@[^@]*@/ ) {
(8)           if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(8)           if (&User-Name =~ /\.\./ ) {
(8)           if (&User-Name =~ /\.\./ )  -> FALSE
(8)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(8)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(8)           if (&User-Name =~ /\.$/)  {
(8)           if (&User-Name =~ /\.$/)   -> FALSE
(8)           if (&User-Name =~ /@\./)  {
(8)           if (&User-Name =~ /@\./)   -> FALSE
(8)         } # if (&User-Name)  = notfound
(8)       } # policy filter_username = notfound
(8)       [chap] = noop
(8)       [mschap] = noop
(8) suffix: Checking for suffix after "@"
(8) suffix: Looking up realm "example.org" for User-Name = "bob@example.org"
(8) suffix: No such realm "example.org"
(8)       [suffix] = noop
(8)       update control {
(8)         &Proxy-To-Realm := LOCAL
(8)       } # update control = noop
(8) eap: Peer sent EAP Response (code 2) ID 219 length 74
(8) eap: No EAP Start, assuming it's an on-going EAP conversation
(8)       [eap] = updated
(8) files: users: Matched entry bob@example.org at line 1
(8) files: EXPAND Hello, %{User-Name}
(8) files:    --> Hello, bob@example.org
(8)       [files] = ok
(8)       [expiration] = noop
(8)       [logintime] = noop
(8) pap: WARNING: Auth-Type already set.  Not setting to PAP
(8)       [pap] = noop
(8)     } # authorize = updated
(8)   Found Auth-Type = eap
(8)   # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/inner-tunnel
(8)     authenticate {
(8) eap: Expiring EAP session with state 0x874a32d687912867
(8) eap: Finished EAP session with state 0x874a32d687912867
(8) eap: Previous EAP request found for state 0x874a32d687912867, released from the list
(8) eap: Peer sent packet with method EAP MSCHAPv2 (26)
(8) eap: Calling submodule eap_mschapv2 to process data
(8) eap_mschapv2: # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/inner-tunnel
(8) eap_mschapv2:   authenticate {
(8) mschap: Found Cleartext-Password, hashing to create NT-Password
(8) mschap: Creating challenge hash with username: bob@example.org
(8) mschap: Client is using MS-CHAPv2
(8) mschap: Adding MS-CHAPv2 MPPE keys
(8) eap_mschapv2:     [mschap] = ok
(8) eap_mschapv2:   } # authenticate = ok
(8) eap_mschapv2: MSCHAP Success
(8) eap: Sending EAP Request (code 1) ID 220 length 51
(8) eap: EAP session adding &reply:State = 0x874a32d686962867
(8)       [eap] = handled
(8)     } # authenticate = handled
(8) } # server inner-tunnel
(8) Virtual server sending reply
(8)   Reply-Message = "Hello, bob@example.org"
(8)   EAP-Message = 0x01dc00331a03db002e533d30374642333743373634423545433334383346463936463241363832363844393944394643443242
(8)   Message-Authenticator = 0x00000000000000000000000000000000
(8)   State = 0x874a32d686962867f429230c24c95781
(8) eap_peap: Got tunneled reply code 11
(8) eap_peap:   Reply-Message = "Hello, bob@example.org"
(8) eap_peap:   EAP-Message = 0x01dc00331a03db002e533d30374642333743373634423545433334383346463936463241363832363844393944394643443242
(8) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(8) eap_peap:   State = 0x874a32d686962867f429230c24c95781
(8) eap_peap: Got tunneled reply RADIUS code 11
(8) eap_peap:   Reply-Message = "Hello, bob@example.org"
(8) eap_peap:   EAP-Message = 0x01dc00331a03db002e533d30374642333743373634423545433334383346463936463241363832363844393944394643443242
(8) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(8) eap_peap:   State = 0x874a32d686962867f429230c24c95781
(8) eap_peap: Got tunneled Access-Challenge
(8) eap: Sending EAP Request (code 1) ID 220 length 82
(8) eap: EAP session adding &reply:State = 0xbd72376eb5ae2ead
(8)     [eap] = handled
(8)   } # authenticate = handled
(8) Using Post-Auth-Type Challenge
(8) # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/default
(8)   Challenge { ... } # empty sub-section is ignored
(8) session-state: Saving cached attributes
(8)   Framed-MTU = 994
(8)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(8)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(8)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(8)   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(8)   TLS-Session-Version = "TLS 1.2"
(8) Sent Access-Challenge Id 8 from 127.0.0.1:1812 to 127.0.0.1:53640 length 140
(8)   EAP-Message = 0x01dc005219001703030047aed51b319ad22d47b17c922271372cbca2af4b4d68e049e207a2c009ec6cd8cf4cbc6c2a8e9abf49029e0b7670c3ee321e883ac58a26a3ec113f28685c20f4fe0741d29c3721f8
(8)   Message-Authenticator = 0x00000000000000000000000000000000
(8)   State = 0xbd72376eb5ae2ead7bed4e46214f3633
(8) Finished request
Waking up in 4.9 seconds.
(9) Received Access-Request Id 9 from 127.0.0.1:53640 to 127.0.0.1:1812 length 271
(9)   User-Name = "anonymous"
(9)   NAS-IP-Address = 127.0.0.1
(9)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(9)   NAS-Port-Type = Wireless-802.11
(9)   Service-Type = Framed-User
(9)   NAS-Port = 1
(9)   Calling-Station-Id = "DC-A6-32-DF-E1-5C"
(9)   Connect-Info = "CONNECT 54Mbps 802.11g"
(9)   Acct-Session-Id = "860F825ABC065597"
(9)   Acct-Multi-Session-Id = "F3D199047272100F"
(9)   WLAN-Pairwise-Cipher = 1027076
(9)   WLAN-Group-Cipher = 1027076
(9)   WLAN-AKM-Suite = 1027073
(9)   WLAN-Group-Mgmt-Cipher = 1027078
(9)   Framed-MTU = 1400
(9)   EAP-Message = 0x02dc00251900170303001a5b37881dafc393e28608b8367a6d7c693a4f7571eb614a77bb60
(9)   State = 0xbd72376eb5ae2ead7bed4e46214f3633
(9)   Message-Authenticator = 0xed4d3029a22e8d520b31d1ac28776144
(9) Restoring &session-state
(9)   &session-state:Framed-MTU = 994
(9)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(9)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(9)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(9)   &session-state:TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(9)   &session-state:TLS-Session-Version = "TLS 1.2"
(9) # Executing section authorize from file Freeradius/Conf/E_wpa3//sites-enabled/default
(9)   authorize {
(9)     policy filter_username {
(9)       if (&User-Name) {
(9)       if (&User-Name)  -> TRUE
(9)       if (&User-Name)  {
(9)         if (&User-Name =~ / /) {
(9)         if (&User-Name =~ / /)  -> FALSE
(9)         if (&User-Name =~ /@[^@]*@/ ) {
(9)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(9)         if (&User-Name =~ /\.\./ ) {
(9)         if (&User-Name =~ /\.\./ )  -> FALSE
(9)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(9)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(9)         if (&User-Name =~ /\.$/)  {
(9)         if (&User-Name =~ /\.$/)   -> FALSE
(9)         if (&User-Name =~ /@\./)  {
(9)         if (&User-Name =~ /@\./)   -> FALSE
(9)       } # if (&User-Name)  = notfound
(9)     } # policy filter_username = notfound
(9)     [preprocess] = ok
(9)     [chap] = noop
(9)     [mschap] = noop
(9)     [digest] = noop
(9) suffix: Checking for suffix after "@"
(9) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(9) suffix: No such realm "NULL"
(9)     [suffix] = noop
(9) eap: Peer sent EAP Response (code 2) ID 220 length 37
(9) eap: Continuing tunnel setup
(9)     [eap] = ok
(9)   } # authorize = ok
(9) Found Auth-Type = eap
(9) # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/default
(9)   authenticate {
(9) eap: Expiring EAP session with state 0x874a32d686962867
(9) eap: Finished EAP session with state 0xbd72376eb5ae2ead
(9) eap: Previous EAP request found for state 0xbd72376eb5ae2ead, released from the list
(9) eap: Peer sent packet with method EAP PEAP (25)
(9) eap: Calling submodule eap_peap to process data
(9) eap_peap: (TLS) EAP Done initial handshake
(9) eap_peap: Session established.  Decoding tunneled attributes
(9) eap_peap: PEAP state phase2
(9) eap_peap: EAP method MSCHAPv2 (26)
(9) eap_peap: Got tunneled request
(9) eap_peap:   EAP-Message = 0x02dc00061a03
(9) eap_peap: Setting User-Name to bob@example.org
(9) eap_peap: Sending tunneled request to inner-tunnel
(9) eap_peap:   EAP-Message = 0x02dc00061a03
(9) eap_peap:   FreeRADIUS-Proxied-To = 127.0.0.1
(9) eap_peap:   User-Name = "bob@example.org"
(9) eap_peap:   State = 0x874a32d686962867f429230c24c95781
(9) Virtual server inner-tunnel received request
(9)   EAP-Message = 0x02dc00061a03
(9)   FreeRADIUS-Proxied-To = 127.0.0.1
(9)   User-Name = "bob@example.org"
(9)   State = 0x874a32d686962867f429230c24c95781
(9) server inner-tunnel {
(9)   session-state: No cached attributes
(9)   # Executing section authorize from file Freeradius/Conf/E_wpa3//sites-enabled/inner-tunnel
(9)     authorize {
(9)       policy filter_username {
(9)         if (&User-Name) {
(9)         if (&User-Name)  -> TRUE
(9)         if (&User-Name)  {
(9)           if (&User-Name =~ / /) {
(9)           if (&User-Name =~ / /)  -> FALSE
(9)           if (&User-Name =~ /@[^@]*@/ ) {
(9)           if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(9)           if (&User-Name =~ /\.\./ ) {
(9)           if (&User-Name =~ /\.\./ )  -> FALSE
(9)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(9)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(9)           if (&User-Name =~ /\.$/)  {
(9)           if (&User-Name =~ /\.$/)   -> FALSE
(9)           if (&User-Name =~ /@\./)  {
(9)           if (&User-Name =~ /@\./)   -> FALSE
(9)         } # if (&User-Name)  = notfound
(9)       } # policy filter_username = notfound
(9)       [chap] = noop
(9)       [mschap] = noop
(9) suffix: Checking for suffix after "@"
(9) suffix: Looking up realm "example.org" for User-Name = "bob@example.org"
(9) suffix: No such realm "example.org"
(9)       [suffix] = noop
(9)       update control {
(9)         &Proxy-To-Realm := LOCAL
(9)       } # update control = noop
(9) eap: Peer sent EAP Response (code 2) ID 220 length 6
(9) eap: No EAP Start, assuming it's an on-going EAP conversation
(9)       [eap] = updated
(9) files: users: Matched entry bob@example.org at line 1
(9) files: EXPAND Hello, %{User-Name}
(9) files:    --> Hello, bob@example.org
(9)       [files] = ok
(9)       [expiration] = noop
(9)       [logintime] = noop
(9) pap: WARNING: Auth-Type already set.  Not setting to PAP
(9)       [pap] = noop
(9)     } # authorize = updated
(9)   Found Auth-Type = eap
(9)   # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/inner-tunnel
(9)     authenticate {
(9) eap: Expiring EAP session with state 0x874a32d686962867
(9) eap: Finished EAP session with state 0x874a32d686962867
(9) eap: Previous EAP request found for state 0x874a32d686962867, released from the list
(9) eap: Peer sent packet with method EAP MSCHAPv2 (26)
(9) eap: Calling submodule eap_mschapv2 to process data
(9) eap: Sending EAP Success (code 3) ID 220 length 4
(9) eap: Freeing handler
(9)       [eap] = ok
(9)     } # authenticate = ok
(9)   # Executing section post-auth from file Freeradius/Conf/E_wpa3//sites-enabled/inner-tunnel
(9)     post-auth {
(9)       if (0) {
(9)       if (0)  -> FALSE
(9)     } # post-auth = noop
(9) } # server inner-tunnel
(9) Virtual server sending reply
(9)   Reply-Message = "Hello, bob@example.org"
(9)   MS-MPPE-Encryption-Policy = Encryption-Allowed
(9)   MS-MPPE-Encryption-Types = RC4-40or128-bit-Allowed
(9)   MS-MPPE-Send-Key = 0x4b8e3efc607271f1bc187e1481ff0dc6
(9)   MS-MPPE-Recv-Key = 0xfd324a9a5d789db8603de41b0e4b168b
(9)   EAP-Message = 0x03dc0004
(9)   Message-Authenticator = 0x00000000000000000000000000000000
(9)   User-Name = "bob@example.org"
(9) eap_peap: Got tunneled reply code 2
(9) eap_peap:   Reply-Message = "Hello, bob@example.org"
(9) eap_peap:   MS-MPPE-Encryption-Policy = Encryption-Allowed
(9) eap_peap:   MS-MPPE-Encryption-Types = RC4-40or128-bit-Allowed
(9) eap_peap:   MS-MPPE-Send-Key = 0x4b8e3efc607271f1bc187e1481ff0dc6
(9) eap_peap:   MS-MPPE-Recv-Key = 0xfd324a9a5d789db8603de41b0e4b168b
(9) eap_peap:   EAP-Message = 0x03dc0004
(9) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(9) eap_peap:   User-Name = "bob@example.org"
(9) eap_peap: Got tunneled reply RADIUS code 2
(9) eap_peap:   Reply-Message = "Hello, bob@example.org"
(9) eap_peap:   MS-MPPE-Encryption-Policy = Encryption-Allowed
(9) eap_peap:   MS-MPPE-Encryption-Types = RC4-40or128-bit-Allowed
(9) eap_peap:   MS-MPPE-Send-Key = 0x4b8e3efc607271f1bc187e1481ff0dc6
(9) eap_peap:   MS-MPPE-Recv-Key = 0xfd324a9a5d789db8603de41b0e4b168b
(9) eap_peap:   EAP-Message = 0x03dc0004
(9) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(9) eap_peap:   User-Name = "bob@example.org"
(9) eap_peap: Tunneled authentication was successful
(9) eap_peap: SUCCESS
(9) eap: Sending EAP Request (code 1) ID 221 length 46
(9) eap: EAP session adding &reply:State = 0xbd72376eb4af2ead
(9)     [eap] = handled
(9)   } # authenticate = handled
(9) Using Post-Auth-Type Challenge
(9) # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/default
(9)   Challenge { ... } # empty sub-section is ignored
(9) session-state: Saving cached attributes
(9)   Framed-MTU = 994
(9)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(9)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(9)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(9)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(9)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(9)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(9)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(9)   TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(9)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(9)   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(9)   TLS-Session-Version = "TLS 1.2"
(9) Sent Access-Challenge Id 9 from 127.0.0.1:1812 to 127.0.0.1:53640 length 104
(9)   EAP-Message = 0x01dd002e19001703030023aed51b319ad22d48952807a55445dcaf66e4835b5e1337570051b740f66b13a96fe51f
(9)   Message-Authenticator = 0x00000000000000000000000000000000
(9)   State = 0xbd72376eb4af2ead7bed4e46214f3633
(9) Finished request
Waking up in 4.9 seconds.
(10) Received Access-Request Id 10 from 127.0.0.1:53640 to 127.0.0.1:1812 length 280
(10)   User-Name = "anonymous"
(10)   NAS-IP-Address = 127.0.0.1
(10)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(10)   NAS-Port-Type = Wireless-802.11
(10)   Service-Type = Framed-User
(10)   NAS-Port = 1
(10)   Calling-Station-Id = "DC-A6-32-DF-E1-5C"
(10)   Connect-Info = "CONNECT 54Mbps 802.11g"
(10)   Acct-Session-Id = "860F825ABC065597"
(10)   Acct-Multi-Session-Id = "F3D199047272100F"
(10)   WLAN-Pairwise-Cipher = 1027076
(10)   WLAN-Group-Cipher = 1027076
(10)   WLAN-AKM-Suite = 1027073
(10)   WLAN-Group-Mgmt-Cipher = 1027078
(10)   Framed-MTU = 1400
(10)   EAP-Message = 0x02dd002e190017030300235b37881dafc393e3e6c7176ccfc75aff432ca5f63f5fb5f4ac0bcf0493b80943b80ee5
(10)   State = 0xbd72376eb4af2ead7bed4e46214f3633
(10)   Message-Authenticator = 0xa2a15a6a38d151a93a3f36b3d6124162
(10) Restoring &session-state
(10)   &session-state:Framed-MTU = 994
(10)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(10)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(10)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(10)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(10)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(10)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(10)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(10)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(10)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(10)   &session-state:TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(10)   &session-state:TLS-Session-Version = "TLS 1.2"
(10) # Executing section authorize from file Freeradius/Conf/E_wpa3//sites-enabled/default
(10)   authorize {
(10)     policy filter_username {
(10)       if (&User-Name) {
(10)       if (&User-Name)  -> TRUE
(10)       if (&User-Name)  {
(10)         if (&User-Name =~ / /) {
(10)         if (&User-Name =~ / /)  -> FALSE
(10)         if (&User-Name =~ /@[^@]*@/ ) {
(10)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(10)         if (&User-Name =~ /\.\./ ) {
(10)         if (&User-Name =~ /\.\./ )  -> FALSE
(10)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(10)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(10)         if (&User-Name =~ /\.$/)  {
(10)         if (&User-Name =~ /\.$/)   -> FALSE
(10)         if (&User-Name =~ /@\./)  {
(10)         if (&User-Name =~ /@\./)   -> FALSE
(10)       } # if (&User-Name)  = notfound
(10)     } # policy filter_username = notfound
(10)     [preprocess] = ok
(10)     [chap] = noop
(10)     [mschap] = noop
(10)     [digest] = noop
(10) suffix: Checking for suffix after "@"
(10) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(10) suffix: No such realm "NULL"
(10)     [suffix] = noop
(10) eap: Peer sent EAP Response (code 2) ID 221 length 46
(10) eap: Continuing tunnel setup
(10)     [eap] = ok
(10)   } # authorize = ok
(10) Found Auth-Type = eap
(10) # Executing group from file Freeradius/Conf/E_wpa3//sites-enabled/default
(10)   authenticate {
(10) eap: Expiring EAP session with state 0xbd72376eb4af2ead
(10) eap: Finished EAP session with state 0xbd72376eb4af2ead
(10) eap: Previous EAP request found for state 0xbd72376eb4af2ead, released from the list
(10) eap: Peer sent packet with method EAP PEAP (25)
(10) eap: Calling submodule eap_peap to process data
(10) eap_peap: (TLS) EAP Done initial handshake
(10) eap_peap: Session established.  Decoding tunneled attributes
(10) eap_peap: PEAP state send tlv success
(10) eap_peap: Received EAP-TLV response
(10) eap_peap: Success
(10) eap: Sending EAP Success (code 3) ID 221 length 4
(10) eap: Freeing handler
(10)     [eap] = ok
(10)   } # authenticate = ok
(10) # Executing section post-auth from file Freeradius/Conf/E_wpa3//sites-enabled/default
(10)   post-auth {
(10)     if (session-state:User-Name && reply:User-Name && request:User-Name && (reply:User-Name == request:User-Name)) {
(10)     if (session-state:User-Name && reply:User-Name && request:User-Name && (reply:User-Name == request:User-Name))  -> FALSE
(10)     update {
(10)       &reply::Framed-MTU += &session-state:Framed-MTU[*] -> 994
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) recv TLS 1.3 Handshake, ClientHello'
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, ServerHello'
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, Certificate'
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, ServerKeyExchange'
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, ServerHelloDone'
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) recv TLS 1.2 Handshake, ClientKeyExchange'
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) recv TLS 1.2 Handshake, Finished'
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 ChangeCipherSpec'
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, Finished'
(10)       &reply::TLS-Session-Cipher-Suite += &session-state:TLS-Session-Cipher-Suite[*] -> 'ECDHE-RSA-AES256-GCM-SHA384'
(10)       &reply::TLS-Session-Version += &session-state:TLS-Session-Version[*] -> 'TLS 1.2'
(10)     } # update = noop
(10)     [exec] = noop
(10)     policy remove_reply_message_if_eap {
(10)       if (&reply:EAP-Message && &reply:Reply-Message) {
(10)       if (&reply:EAP-Message && &reply:Reply-Message)  -> FALSE
(10)       else {
(10)         [noop] = noop
(10)       } # else = noop
(10)     } # policy remove_reply_message_if_eap = noop
(10)     if (EAP-Key-Name && &reply:EAP-Session-Id) {
(10)     if (EAP-Key-Name && &reply:EAP-Session-Id)  -> FALSE
(10)   } # post-auth = noop
(10) Sent Access-Accept Id 10 from 127.0.0.1:1812 to 127.0.0.1:53640 length 177
(10)   MS-MPPE-Recv-Key = 0xfc07f13b878acec3a3964581a479aa4d3998cf1c576119b0e868d14ddbe4e249
(10)   MS-MPPE-Send-Key = 0x3a76cb030d38faa0753f908030dacda8ecd76b8c58700bd7c87f0ca112cde989
(10)   EAP-Message = 0x03dd0004
(10)   Message-Authenticator = 0x00000000000000000000000000000000
(10)   User-Name = "anonymous"
(10)   Framed-MTU += 994
(10) Finished request
Waking up in 4.9 seconds.
(0) Cleaning up request packet ID 0 with timestamp +167 due to cleanup_delay was reached
(1) Cleaning up request packet ID 1 with timestamp +167 due to cleanup_delay was reached
(2) Cleaning up request packet ID 2 with timestamp +167 due to cleanup_delay was reached
(3) Cleaning up request packet ID 3 with timestamp +167 due to cleanup_delay was reached
(4) Cleaning up request packet ID 4 with timestamp +167 due to cleanup_delay was reached
(5) Cleaning up request packet ID 5 with timestamp +167 due to cleanup_delay was reached
(6) Cleaning up request packet ID 6 with timestamp +167 due to cleanup_delay was reached
(7) Cleaning up request packet ID 7 with timestamp +167 due to cleanup_delay was reached
(8) Cleaning up request packet ID 8 with timestamp +167 due to cleanup_delay was reached
(9) Cleaning up request packet ID 9 with timestamp +167 due to cleanup_delay was reached
(10) Cleaning up request packet ID 10 with timestamp +167 due to cleanup_delay was reached
Ready to process requests
Ready to process requests
Signalled to terminate
Exiting normally

[0;36mFreeRADIUS is stopped.[0m


[19:39:56.587] Beginning saving session of stdout and stderr Test/Tmp/Log/Raspberry_Pi_4_wpa_nmcli/e_uosc_wpa3...
[0;32mSuccess.[0m

[19:39:56.588] Fetching configuration directory associated to e_rogue_wpa3...
[0;32mSuccess.[0m

[19:39:56.602] Looking for Freeradius/Conf/E_rogue_wpa3/...
[0;32mSuccess.[0m

[0;36mRunning FreeRADIUS. Press Ctrl-C to stop.[0m

FreeRADIUS Version 3.0.26
Copyright (C) 1999-2021 The FreeRADIUS server project and contributors
There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE
You may redistribute copies of FreeRADIUS under the terms of the
GNU General Public License
For more information about these matters, see the file named COPYRIGHT
Starting - reading configuration files ...
including dictionary file /usr/share/freeradius/dictionary
including dictionary file /usr/share/freeradius/dictionary.dhcp
including dictionary file /usr/share/freeradius/dictionary.vqp
including dictionary file Freeradius/Conf/E_rogue_wpa3//dictionary
including configuration file Freeradius/Conf/E_rogue_wpa3//radiusd.conf
including configuration file Freeradius/Conf/E_rogue_wpa3//proxy.conf
including configuration file Freeradius/Conf/E_rogue_wpa3//clients.conf
including files in directory Freeradius/Conf/E_rogue_wpa3//mods-enabled/
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/files
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/passwd
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/expr
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/soh
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/digest
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/dynamic_clients
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/unix
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/echo
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/preprocess
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/replicate
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/pap
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/detail
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/cache_eap
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/mschap
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/eap
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/logintime
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/utf8
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/unpack
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/radutmp
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/expiration
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/chap
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/realm
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/sradutmp
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/attr_filter
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/ntlm_auth
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/detail.log
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/exec
including configuration file Freeradius/Conf/E_rogue_wpa3//mods-enabled/linelog
including files in directory Freeradius/Conf/E_rogue_wpa3//policy.d/
including configuration file Freeradius/Conf/E_rogue_wpa3//policy.d/operator-name
including configuration file Freeradius/Conf/E_rogue_wpa3//policy.d/dhcp
including configuration file Freeradius/Conf/E_rogue_wpa3//policy.d/rfc7542
including configuration file Freeradius/Conf/E_rogue_wpa3//policy.d/accounting
including configuration file Freeradius/Conf/E_rogue_wpa3//policy.d/filter
including configuration file Freeradius/Conf/E_rogue_wpa3//policy.d/cui
including configuration file Freeradius/Conf/E_rogue_wpa3//policy.d/moonshot-targeted-ids
including configuration file Freeradius/Conf/E_rogue_wpa3//policy.d/canonicalization
including configuration file Freeradius/Conf/E_rogue_wpa3//policy.d/eap
including configuration file Freeradius/Conf/E_rogue_wpa3//policy.d/control
including configuration file Freeradius/Conf/E_rogue_wpa3//policy.d/abfab-tr
including configuration file Freeradius/Conf/E_rogue_wpa3//policy.d/debug
including files in directory Freeradius/Conf/E_rogue_wpa3//sites-enabled/
including configuration file Freeradius/Conf/E_rogue_wpa3//sites-enabled/inner-tunnel
including configuration file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
main {
 security {
 	user = "freerad"
 	group = "freerad"
 	allow_core_dumps = no
 }
	name = "freeradius"
	prefix = "/usr"
	localstatedir = "/var"
	logdir = "/var/log/freeradius"
	run_dir = "/var/run/freeradius"
}
main {
	name = "freeradius"
	prefix = "/usr"
	localstatedir = "/var"
	sbindir = "/usr/sbin"
	logdir = "/var/log/freeradius"
	run_dir = "/var/run/freeradius"
	libdir = "/usr/lib/freeradius"
	radacctdir = "/var/log/freeradius/radacct"
	hostname_lookups = no
	max_request_time = 30
	cleanup_delay = 5
	max_requests = 16384
	postauth_client_lost = no
	pidfile = "/var/run/freeradius/freeradius.pid"
	checkrad = "/usr/sbin/checkrad"
	debug_level = 0
	proxy_requests = yes
 log {
 	stripped_names = no
 	auth = no
 	auth_badpass = no
 	auth_goodpass = no
 	colourise = yes
 	msg_denied = "You are already logged in - access denied"
 }
 resources {
 }
 security {
 	max_attributes = 200
 	reject_delay = 1.000000
 	status_server = yes
 }
}
radiusd: #### Loading Realms and Home Servers ####
 proxy server {
 	retry_delay = 5
 	retry_count = 3
 	default_fallback = no
 	dead_time = 120
 	wake_all_if_all_dead = no
 }
 home_server localhost {
 	ipaddr = 127.0.0.1
 	port = 1812
 	type = "auth"
 	secret = <<< secret >>>
 	response_window = 20.000000
 	response_timeouts = 1
 	max_outstanding = 65536
 	zombie_period = 40
 	status_check = "status-server"
 	ping_interval = 30
 	check_interval = 30
 	check_timeout = 4
 	num_answers_to_alive = 3
 	revive_interval = 120
  limit {
  	max_connections = 16
  	max_requests = 0
  	lifetime = 0
  	idle_timeout = 0
  }
  coa {
  	irt = 2
  	mrt = 16
  	mrc = 5
  	mrd = 30
  }
 }
 home_server_pool my_auth_failover {
	type = fail-over
	home_server = localhost
 }
 realm example.com {
	auth_pool = my_auth_failover
 }
 realm LOCAL {
 }
radiusd: #### Loading Clients ####
 client localhost {
 	ipaddr = 127.0.0.1
 	require_message_authenticator = no
 	secret = <<< secret >>>
 	nas_type = "other"
 	proto = "*"
  limit {
  	max_connections = 16
  	lifetime = 0
  	idle_timeout = 30
  }
 }
 client localhost_ipv6 {
 	ipv6addr = ::1
 	require_message_authenticator = no
 	secret = <<< secret >>>
  limit {
  	max_connections = 16
  	lifetime = 0
  	idle_timeout = 30
  }
 }
Debugger not attached
systemd watchdog is disabled
 # Creating Auth-Type = mschap
 # Creating Auth-Type = eap
 # Creating Auth-Type = PAP
 # Creating Auth-Type = CHAP
 # Creating Auth-Type = MS-CHAP
 # Creating Auth-Type = digest
 # Creating Autz-Type = New-TLS-Connection
radiusd: #### Instantiating modules ####
 modules {
  # Loaded module rlm_files
  # Loading module "files" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/files
  files {
  	filename = "Freeradius/Conf/E_rogue_wpa3//mods-config/files/authorize"
  	acctusersfile = "Freeradius/Conf/E_rogue_wpa3//mods-config/files/accounting"
  	preproxy_usersfile = "Freeradius/Conf/E_rogue_wpa3//mods-config/files/pre-proxy"
  }
  # Loaded module rlm_passwd
  # Loading module "etc_passwd" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/passwd
  passwd etc_passwd {
  	filename = "/etc/passwd"
  	format = "*User-Name:Crypt-Password:"
  	delimiter = ":"
  	ignore_nislike = no
  	ignore_empty = yes
  	allow_multiple_keys = no
  	hash_size = 100
  }
  # Loaded module rlm_expr
  # Loading module "expr" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/expr
  expr {
  	safe_characters = "@abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789.-_: /√§√©√∂√º√†√¢√¶√ß√®√©√™√´√Æ√Ø√¥≈ì√π√ª√ºa√ø√Ñ√â√ñ√ú√ü√Ä√Ç√Ü√á√à√â√ä√ã√é√è√î≈í√ô√õ√ú≈∏"
  }
  # Loaded module rlm_soh
  # Loading module "soh" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/soh
  soh {
  	dhcp = yes
  }
  # Loaded module rlm_digest
  # Loading module "digest" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/digest
  # Loaded module rlm_dynamic_clients
  # Loading module "dynamic_clients" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/dynamic_clients
  # Loaded module rlm_unix
  # Loading module "unix" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/unix
  unix {
  	radwtmp = "/var/log/freeradius/radwtmp"
  }
Creating attribute Unix-Group
  # Loaded module rlm_exec
  # Loading module "echo" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/echo
  exec echo {
  	wait = yes
  	program = "/bin/echo %{User-Name}"
  	input_pairs = "request"
  	output_pairs = "reply"
  	shell_escape = yes
  }
  # Loaded module rlm_preprocess
  # Loading module "preprocess" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/preprocess
  preprocess {
  	huntgroups = "Freeradius/Conf/E_rogue_wpa3//mods-config/preprocess/huntgroups"
  	hints = "Freeradius/Conf/E_rogue_wpa3//mods-config/preprocess/hints"
  	with_ascend_hack = no
  	ascend_channels_per_line = 23
  	with_ntdomain_hack = no
  	with_specialix_jetstream_hack = no
  	with_cisco_vsa_hack = no
  	with_alvarion_vsa_hack = no
  }
  # Loaded module rlm_replicate
  # Loading module "replicate" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/replicate
  # Loaded module rlm_pap
  # Loading module "pap" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/pap
  pap {
  	normalise = yes
  }
  # Loaded module rlm_always
  # Loading module "reject" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  always reject {
  	rcode = "reject"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "fail" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  always fail {
  	rcode = "fail"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "ok" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  always ok {
  	rcode = "ok"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "handled" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  always handled {
  	rcode = "handled"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "invalid" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  always invalid {
  	rcode = "invalid"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "userlock" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  always userlock {
  	rcode = "userlock"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "notfound" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  always notfound {
  	rcode = "notfound"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "noop" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  always noop {
  	rcode = "noop"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "updated" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  always updated {
  	rcode = "updated"
  	simulcount = 0
  	mpp = no
  }
  # Loaded module rlm_detail
  # Loading module "detail" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/detail
  detail {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loaded module rlm_cache
  # Loading module "cache_eap" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/cache_eap
  cache cache_eap {
  	driver = "rlm_cache_rbtree"
  	key = "%{%{control:State}:-%{%{reply:State}:-%{State}}}"
  	ttl = 15
  	max_entries = 0
  	epoch = 0
  	add_stats = no
  }
  # Loaded module rlm_mschap
  # Loading module "mschap" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/mschap
  mschap {
  	use_mppe = yes
  	require_encryption = no
  	require_strong = no
  	with_ntdomain_hack = yes
   passchange {
   }
  	allow_retry = yes
  	winbind_retry_with_normalised_username = no
  }
  # Loaded module rlm_eap
  # Loading module "eap" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/eap
  eap {
  	default_eap_type = "md5"
  	timer_expire = 60
  	ignore_unknown_eap_types = no
  	cisco_accounting_username_bug = no
  	max_sessions = 16384
  }
  # Loaded module rlm_logintime
  # Loading module "logintime" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/logintime
  logintime {
  	minimum_timeout = 60
  }
  # Loaded module rlm_utf8
  # Loading module "utf8" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/utf8
  # Loaded module rlm_unpack
  # Loading module "unpack" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/unpack
  # Loaded module rlm_radutmp
  # Loading module "radutmp" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/radutmp
  radutmp {
  	filename = "/var/log/freeradius/radutmp"
  	username = "%{User-Name}"
  	case_sensitive = yes
  	check_with_nas = yes
  	permissions = 384
  	caller_id = yes
  }
  # Loaded module rlm_expiration
  # Loading module "expiration" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/expiration
  # Loaded module rlm_chap
  # Loading module "chap" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/chap
  # Loaded module rlm_realm
  # Loading module "IPASS" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/realm
  realm IPASS {
  	format = "prefix"
  	delimiter = "/"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "suffix" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/realm
  realm suffix {
  	format = "suffix"
  	delimiter = "@"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "bangpath" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/realm
  realm bangpath {
  	format = "prefix"
  	delimiter = "!"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "realmpercent" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/realm
  realm realmpercent {
  	format = "suffix"
  	delimiter = "%"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "ntdomain" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/realm
  realm ntdomain {
  	format = "prefix"
  	delimiter = "\\"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "sradutmp" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/sradutmp
  radutmp sradutmp {
  	filename = "/var/log/freeradius/sradutmp"
  	username = "%{User-Name}"
  	case_sensitive = yes
  	check_with_nas = yes
  	permissions = 420
  	caller_id = no
  }
  # Loaded module rlm_attr_filter
  # Loading module "attr_filter.post-proxy" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/attr_filter
  attr_filter attr_filter.post-proxy {
  	filename = "Freeradius/Conf/E_rogue_wpa3//mods-config/attr_filter/post-proxy"
  	key = "%{Realm}"
  	relaxed = no
  }
  # Loading module "attr_filter.pre-proxy" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/attr_filter
  attr_filter attr_filter.pre-proxy {
  	filename = "Freeradius/Conf/E_rogue_wpa3//mods-config/attr_filter/pre-proxy"
  	key = "%{Realm}"
  	relaxed = no
  }
  # Loading module "attr_filter.access_reject" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/attr_filter
  attr_filter attr_filter.access_reject {
  	filename = "Freeradius/Conf/E_rogue_wpa3//mods-config/attr_filter/access_reject"
  	key = "%{User-Name}"
  	relaxed = no
  }
  # Loading module "attr_filter.access_challenge" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/attr_filter
  attr_filter attr_filter.access_challenge {
  	filename = "Freeradius/Conf/E_rogue_wpa3//mods-config/attr_filter/access_challenge"
  	key = "%{User-Name}"
  	relaxed = no
  }
  # Loading module "attr_filter.accounting_response" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/attr_filter
  attr_filter attr_filter.accounting_response {
  	filename = "Freeradius/Conf/E_rogue_wpa3//mods-config/attr_filter/accounting_response"
  	key = "%{User-Name}"
  	relaxed = no
  }
  # Loading module "attr_filter.coa" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/attr_filter
  attr_filter attr_filter.coa {
  	filename = "Freeradius/Conf/E_rogue_wpa3//mods-config/attr_filter/coa"
  	key = "%{User-Name}"
  	relaxed = no
  }
  # Loading module "ntlm_auth" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/ntlm_auth
  exec ntlm_auth {
  	wait = yes
  	program = "/path/to/ntlm_auth --request-nt-key --domain=MYDOMAIN --username=%{mschap:User-Name} --password=%{User-Password}"
  	shell_escape = yes
  }
  # Loading module "auth_log" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/detail.log
  detail auth_log {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/auth-detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loading module "reply_log" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/detail.log
  detail reply_log {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/reply-detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loading module "pre_proxy_log" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/detail.log
  detail pre_proxy_log {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/pre-proxy-detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loading module "post_proxy_log" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/detail.log
  detail post_proxy_log {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/post-proxy-detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loading module "exec" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/exec
  exec {
  	wait = no
  	input_pairs = "request"
  	shell_escape = yes
  	timeout = 10
  }
  # Loaded module rlm_linelog
  # Loading module "linelog" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/linelog
  linelog {
  	filename = "/var/log/freeradius/linelog"
  	escape_filenames = no
  	syslog_severity = "info"
  	permissions = 384
  	format = "This is a log message for %{User-Name}"
  	reference = "messages.%{%{reply:Packet-Type}:-default}"
  }
  # Loading module "log_accounting" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/linelog
  linelog log_accounting {
  	filename = "/var/log/freeradius/linelog-accounting"
  	escape_filenames = no
  	syslog_severity = "info"
  	permissions = 384
  	format = ""
  	reference = "Accounting-Request.%{%{Acct-Status-Type}:-unknown}"
  }
  instantiate {
  }
  # Instantiating module "files" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/files
reading pairlist file Freeradius/Conf/E_rogue_wpa3//mods-config/files/authorize
reading pairlist file Freeradius/Conf/E_rogue_wpa3//mods-config/files/accounting
reading pairlist file Freeradius/Conf/E_rogue_wpa3//mods-config/files/pre-proxy
  # Instantiating module "etc_passwd" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/passwd
rlm_passwd: nfields: 3 keyfield 0(User-Name) listable: no
  # Instantiating module "preprocess" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/preprocess
reading pairlist file Freeradius/Conf/E_rogue_wpa3//mods-config/preprocess/huntgroups
reading pairlist file Freeradius/Conf/E_rogue_wpa3//mods-config/preprocess/hints
  # Instantiating module "pap" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/pap
  # Instantiating module "reject" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  # Instantiating module "fail" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  # Instantiating module "ok" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  # Instantiating module "handled" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  # Instantiating module "invalid" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  # Instantiating module "userlock" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  # Instantiating module "notfound" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  # Instantiating module "noop" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  # Instantiating module "updated" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/always
  # Instantiating module "detail" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/detail
  # Instantiating module "cache_eap" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/cache_eap
rlm_cache (cache_eap): Driver rlm_cache_rbtree (module rlm_cache_rbtree) loaded and linked
  # Instantiating module "mschap" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/mschap
rlm_mschap (mschap): using internal authentication
  # Instantiating module "eap" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/eap
   # Linked to sub-module rlm_eap_md5
   # Linked to sub-module rlm_eap_gtc
   gtc {
   	challenge = "Password: "
   	auth_type = "PAP"
   }
   # Linked to sub-module rlm_eap_tls
   tls {
   	tls = "tls-common"
   }
   tls-config tls-common {
   	verify_depth = 0
   	ca_path = "Freeradius/Conf/E_rogue_wpa3//certs"
   	pem_file_type = yes
   	private_key_file = "Freeradius/Conf/E_rogue_wpa3//certs/server.key"
   	certificate_file = "Freeradius/Conf/E_rogue_wpa3//certs/server.crt"
   	ca_file = "Freeradius/Conf/E_rogue_wpa3//certs/ca.pem"
   	private_key_password = <<< secret >>>
   	fragment_size = 1024
   	include_length = yes
   	auto_chain = yes
   	check_crl = no
   	check_all_crl = no
   	ca_path_reload_interval = 0
   	cipher_list = "DEFAULT"
   	cipher_server_preference = no
   	reject_unknown_intermediate_ca = no
   	ecdh_curve = ""
   	tls_max_version = "1.2"
   	tls_min_version = "1.2"
    cache {
    	enable = no
    	lifetime = 24
    	max_entries = 255
    }
    verify {
    	skip_if_ocsp_ok = no
    }
    ocsp {
    	enable = no
    	override_cert_url = yes
    	url = "http://127.0.0.1/ocsp/"
    	use_nonce = yes
    	timeout = 0
    	softfail = no
    }
   }
   # Linked to sub-module rlm_eap_ttls
   ttls {
   	tls = "tls-common"
   	default_eap_type = "md5"
   	copy_request_to_tunnel = no
   	use_tunneled_reply = no
   	virtual_server = "inner-tunnel"
   	include_length = yes
   	require_client_cert = no
   }
tls: Using cached TLS configuration from previous invocation
   # Linked to sub-module rlm_eap_peap
   peap {
   	tls = "tls-common"
   	default_eap_type = "mschapv2"
   	copy_request_to_tunnel = no
   	use_tunneled_reply = no
   	proxy_tunneled_request_as_eap = yes
   	virtual_server = "inner-tunnel"
   	soh = no
   	require_client_cert = no
   }
tls: Using cached TLS configuration from previous invocation
   # Linked to sub-module rlm_eap_mschapv2
   mschapv2 {
   	with_ntdomain_hack = no
   	send_error = no
   }
  # Instantiating module "logintime" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/logintime
  # Instantiating module "expiration" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/expiration
  # Instantiating module "IPASS" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/realm
  # Instantiating module "suffix" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/realm
  # Instantiating module "bangpath" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/realm
  # Instantiating module "realmpercent" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/realm
  # Instantiating module "ntdomain" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/realm
  # Instantiating module "attr_filter.post-proxy" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/attr_filter
reading pairlist file Freeradius/Conf/E_rogue_wpa3//mods-config/attr_filter/post-proxy
  # Instantiating module "attr_filter.pre-proxy" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/attr_filter
reading pairlist file Freeradius/Conf/E_rogue_wpa3//mods-config/attr_filter/pre-proxy
  # Instantiating module "attr_filter.access_reject" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/attr_filter
reading pairlist file Freeradius/Conf/E_rogue_wpa3//mods-config/attr_filter/access_reject
  # Instantiating module "attr_filter.access_challenge" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/attr_filter
reading pairlist file Freeradius/Conf/E_rogue_wpa3//mods-config/attr_filter/access_challenge
  # Instantiating module "attr_filter.accounting_response" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/attr_filter
reading pairlist file Freeradius/Conf/E_rogue_wpa3//mods-config/attr_filter/accounting_response
  # Instantiating module "attr_filter.coa" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/attr_filter
reading pairlist file Freeradius/Conf/E_rogue_wpa3//mods-config/attr_filter/coa
  # Instantiating module "auth_log" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/detail.log
rlm_detail (auth_log): 'User-Password' suppressed, will not appear in detail output
  # Instantiating module "reply_log" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/detail.log
  # Instantiating module "pre_proxy_log" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/detail.log
  # Instantiating module "post_proxy_log" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/detail.log
  # Instantiating module "linelog" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/linelog
  # Instantiating module "log_accounting" from file Freeradius/Conf/E_rogue_wpa3//mods-enabled/linelog
 } # modules
radiusd: #### Loading Virtual Servers ####
server { # from file Freeradius/Conf/E_rogue_wpa3//radiusd.conf
} # server
server inner-tunnel { # from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/inner-tunnel
 # Loading authenticate {...}
Compiling Auth-Type PAP for attr Auth-Type
Compiling Auth-Type CHAP for attr Auth-Type
Compiling Auth-Type MS-CHAP for attr Auth-Type
 # Loading authorize {...}
Ignoring "sql" (see raddb/mods-available/README.rst)
Ignoring "ldap" (see raddb/mods-available/README.rst)
 # Loading session {...}
 # Loading post-proxy {...}
 # Loading post-auth {...}
 # Skipping contents of 'if' as it is always 'false' -- Freeradius/Conf/E_rogue_wpa3//sites-enabled/inner-tunnel:336
Compiling Post-Auth-Type REJECT for attr Post-Auth-Type
} # server inner-tunnel
server default { # from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
 # Loading authenticate {...}
Compiling Auth-Type PAP for attr Auth-Type
Compiling Auth-Type CHAP for attr Auth-Type
Compiling Auth-Type MS-CHAP for attr Auth-Type
 # Loading authorize {...}
Compiling Autz-Type New-TLS-Connection for attr Autz-Type
 # Loading preacct {...}
 # Loading accounting {...}
 # Loading post-proxy {...}
 # Loading post-auth {...}
Compiling Post-Auth-Type REJECT for attr Post-Auth-Type
Compiling Post-Auth-Type Challenge for attr Post-Auth-Type
Compiling Post-Auth-Type Client-Lost for attr Post-Auth-Type
} # server default
radiusd: #### Opening IP addresses and Ports ####
listen {
  	type = "auth"
  	ipaddr = 127.0.0.1
  	port = 18120
}
listen {
  	type = "auth"
  	ipaddr = *
  	port = 0
   limit {
   	max_connections = 16
   	lifetime = 0
   	idle_timeout = 30
   }
}
listen {
  	type = "acct"
  	ipaddr = *
  	port = 0
   limit {
   	max_connections = 16
   	lifetime = 0
   	idle_timeout = 30
   }
}
listen {
  	type = "auth"
  	ipv6addr = ::
  	port = 0
   limit {
   	max_connections = 16
   	lifetime = 0
   	idle_timeout = 30
   }
}
listen {
  	type = "acct"
  	ipv6addr = ::
  	port = 0
   limit {
   	max_connections = 16
   	lifetime = 0
   	idle_timeout = 30
   }
}
Listening on auth address 127.0.0.1 port 18120 bound to server inner-tunnel
Listening on auth address * port 1812 bound to server default
Listening on acct address * port 1813 bound to server default
Listening on auth address :: port 1812 bound to server default
Listening on acct address :: port 1813 bound to server default
Listening on proxy address * port 53365
Listening on proxy address :: port 36179
Ready to process requests
(0) Received Access-Request Id 0 from 127.0.0.1:57623 to 127.0.0.1:1812 length 230
(0)   User-Name = "anonymous"
(0)   NAS-IP-Address = 127.0.0.1
(0)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(0)   NAS-Port-Type = Wireless-802.11
(0)   Service-Type = Framed-User
(0)   NAS-Port = 1
(0)   Calling-Station-Id = "DC-A6-32-DF-E1-5C"
(0)   Connect-Info = "CONNECT 54Mbps 802.11g"
(0)   Acct-Session-Id = "4B9D3B107DCB1E89"
(0)   Acct-Multi-Session-Id = "239CBA72C55E9E89"
(0)   WLAN-Pairwise-Cipher = 1027076
(0)   WLAN-Group-Cipher = 1027076
(0)   WLAN-AKM-Suite = 1027073
(0)   WLAN-Group-Mgmt-Cipher = 1027078
(0)   Framed-MTU = 1400
(0)   EAP-Message = 0x02ca000e01616e6f6e796d6f7573
(0)   Message-Authenticator = 0x4bc0329b473871bf30619ff7bd8da275
(0) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(0)   authorize {
(0)     policy filter_username {
(0)       if (&User-Name) {
(0)       if (&User-Name)  -> TRUE
(0)       if (&User-Name)  {
(0)         if (&User-Name =~ / /) {
(0)         if (&User-Name =~ / /)  -> FALSE
(0)         if (&User-Name =~ /@[^@]*@/ ) {
(0)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(0)         if (&User-Name =~ /\.\./ ) {
(0)         if (&User-Name =~ /\.\./ )  -> FALSE
(0)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(0)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(0)         if (&User-Name =~ /\.$/)  {
(0)         if (&User-Name =~ /\.$/)   -> FALSE
(0)         if (&User-Name =~ /@\./)  {
(0)         if (&User-Name =~ /@\./)   -> FALSE
(0)       } # if (&User-Name)  = notfound
(0)     } # policy filter_username = notfound
(0)     [preprocess] = ok
(0)     [chap] = noop
(0)     [mschap] = noop
(0)     [digest] = noop
(0) suffix: Checking for suffix after "@"
(0) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(0) suffix: No such realm "NULL"
(0)     [suffix] = noop
(0) eap: Peer sent EAP Response (code 2) ID 202 length 14
(0) eap: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
(0)     [eap] = ok
(0)   } # authorize = ok
(0) Found Auth-Type = eap
(0) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(0)   authenticate {
(0) eap: Peer sent packet with method EAP Identity (1)
(0) eap: Calling submodule eap_md5 to process data
(0) eap_md5: Issuing MD5 Challenge
(0) eap: Sending EAP Request (code 1) ID 203 length 22
(0) eap: EAP session adding &reply:State = 0x21f08305213b8749
(0)     [eap] = handled
(0)   } # authenticate = handled
(0) Using Post-Auth-Type Challenge
(0) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(0)   Challenge { ... } # empty sub-section is ignored
(0) Sent Access-Challenge Id 0 from 127.0.0.1:1812 to 127.0.0.1:57623 length 80
(0)   EAP-Message = 0x01cb00160410d2079b0c3dad343356e2315a50969d5b
(0)   Message-Authenticator = 0x00000000000000000000000000000000
(0)   State = 0x21f08305213b8749de3ebc9495c5e1c8
(0) Finished request
Waking up in 4.9 seconds.
(1) Received Access-Request Id 1 from 127.0.0.1:57623 to 127.0.0.1:1812 length 240
(1)   User-Name = "anonymous"
(1)   NAS-IP-Address = 127.0.0.1
(1)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(1)   NAS-Port-Type = Wireless-802.11
(1)   Service-Type = Framed-User
(1)   NAS-Port = 1
(1)   Calling-Station-Id = "DC-A6-32-DF-E1-5C"
(1)   Connect-Info = "CONNECT 54Mbps 802.11g"
(1)   Acct-Session-Id = "4B9D3B107DCB1E89"
(1)   Acct-Multi-Session-Id = "239CBA72C55E9E89"
(1)   WLAN-Pairwise-Cipher = 1027076
(1)   WLAN-Group-Cipher = 1027076
(1)   WLAN-AKM-Suite = 1027073
(1)   WLAN-Group-Mgmt-Cipher = 1027078
(1)   Framed-MTU = 1400
(1)   EAP-Message = 0x02cb00060319
(1)   State = 0x21f08305213b8749de3ebc9495c5e1c8
(1)   Message-Authenticator = 0x62f11845ee9af42269fa472182feca99
(1) session-state: No cached attributes
(1) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(1)   authorize {
(1)     policy filter_username {
(1)       if (&User-Name) {
(1)       if (&User-Name)  -> TRUE
(1)       if (&User-Name)  {
(1)         if (&User-Name =~ / /) {
(1)         if (&User-Name =~ / /)  -> FALSE
(1)         if (&User-Name =~ /@[^@]*@/ ) {
(1)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(1)         if (&User-Name =~ /\.\./ ) {
(1)         if (&User-Name =~ /\.\./ )  -> FALSE
(1)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(1)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(1)         if (&User-Name =~ /\.$/)  {
(1)         if (&User-Name =~ /\.$/)   -> FALSE
(1)         if (&User-Name =~ /@\./)  {
(1)         if (&User-Name =~ /@\./)   -> FALSE
(1)       } # if (&User-Name)  = notfound
(1)     } # policy filter_username = notfound
(1)     [preprocess] = ok
(1)     [chap] = noop
(1)     [mschap] = noop
(1)     [digest] = noop
(1) suffix: Checking for suffix after "@"
(1) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(1) suffix: No such realm "NULL"
(1)     [suffix] = noop
(1) eap: Peer sent EAP Response (code 2) ID 203 length 6
(1) eap: No EAP Start, assuming it's an on-going EAP conversation
(1)     [eap] = updated
(1)     [files] = noop
(1)     [expiration] = noop
(1)     [logintime] = noop
Not doing PAP as Auth-Type is already set.
(1)     [pap] = noop
(1)   } # authorize = updated
(1) Found Auth-Type = eap
(1) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(1)   authenticate {
(1) eap: Expiring EAP session with state 0x21f08305213b8749
(1) eap: Finished EAP session with state 0x21f08305213b8749
(1) eap: Previous EAP request found for state 0x21f08305213b8749, released from the list
(1) eap: Peer sent packet with method EAP NAK (3)
(1) eap: Found mutually acceptable type PEAP (25)
(1) eap: Calling submodule eap_peap to process data
(1) eap_peap: (TLS) Initiating new session
(1) eap: Sending EAP Request (code 1) ID 204 length 6
(1) eap: EAP session adding &reply:State = 0x21f08305203c9a49
(1)     [eap] = handled
(1)   } # authenticate = handled
(1) Using Post-Auth-Type Challenge
(1) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(1)   Challenge { ... } # empty sub-section is ignored
(1) session-state: Saving cached attributes
(1)   Framed-MTU = 994
(1) Sent Access-Challenge Id 1 from 127.0.0.1:1812 to 127.0.0.1:57623 length 64
(1)   EAP-Message = 0x01cc00061920
(1)   Message-Authenticator = 0x00000000000000000000000000000000
(1)   State = 0x21f08305203c9a49de3ebc9495c5e1c8
(1) Finished request
Waking up in 4.9 seconds.
(2) Received Access-Request Id 2 from 127.0.0.1:57623 to 127.0.0.1:1812 length 428
(2)   User-Name = "anonymous"
(2)   NAS-IP-Address = 127.0.0.1
(2)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(2)   NAS-Port-Type = Wireless-802.11
(2)   Service-Type = Framed-User
(2)   NAS-Port = 1
(2)   Calling-Station-Id = "DC-A6-32-DF-E1-5C"
(2)   Connect-Info = "CONNECT 54Mbps 802.11g"
(2)   Acct-Session-Id = "4B9D3B107DCB1E89"
(2)   Acct-Multi-Session-Id = "239CBA72C55E9E89"
(2)   WLAN-Pairwise-Cipher = 1027076
(2)   WLAN-Group-Cipher = 1027076
(2)   WLAN-AKM-Suite = 1027073
(2)   WLAN-Group-Mgmt-Cipher = 1027078
(2)   Framed-MTU = 1400
(2)   EAP-Message = 0x02cc00c21980000000b816030100b3010000af03037852264d50bce4c1215d3754eeaeb9f44fa5b7d6d179d9b812b0a934d3ce09fd000038c02cc030009fcca9cca8ccaac02bc02f009ec024c028006bc023c0270067c00ac0140039c009c0130033009d009c003d003c0035002f00ff0100004e000b000403000102000a000c000a001d0017001e001900180016000000170000000d002a0028040305030603080708080809080a080b080408050806040105010601030303010302040205020602
(2)   State = 0x21f08305203c9a49de3ebc9495c5e1c8
(2)   Message-Authenticator = 0x5f818d006d289ec9cfd12199771cba21
(2) Restoring &session-state
(2)   &session-state:Framed-MTU = 994
(2) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(2)   authorize {
(2)     policy filter_username {
(2)       if (&User-Name) {
(2)       if (&User-Name)  -> TRUE
(2)       if (&User-Name)  {
(2)         if (&User-Name =~ / /) {
(2)         if (&User-Name =~ / /)  -> FALSE
(2)         if (&User-Name =~ /@[^@]*@/ ) {
(2)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(2)         if (&User-Name =~ /\.\./ ) {
(2)         if (&User-Name =~ /\.\./ )  -> FALSE
(2)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(2)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(2)         if (&User-Name =~ /\.$/)  {
(2)         if (&User-Name =~ /\.$/)   -> FALSE
(2)         if (&User-Name =~ /@\./)  {
(2)         if (&User-Name =~ /@\./)   -> FALSE
(2)       } # if (&User-Name)  = notfound
(2)     } # policy filter_username = notfound
(2)     [preprocess] = ok
(2)     [chap] = noop
(2)     [mschap] = noop
(2)     [digest] = noop
(2) suffix: Checking for suffix after "@"
(2) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(2) suffix: No such realm "NULL"
(2)     [suffix] = noop
(2) eap: Peer sent EAP Response (code 2) ID 204 length 194
(2) eap: Continuing tunnel setup
(2)     [eap] = ok
(2)   } # authorize = ok
(2) Found Auth-Type = eap
(2) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(2)   authenticate {
(2) eap: Expiring EAP session with state 0x21f08305203c9a49
(2) eap: Finished EAP session with state 0x21f08305203c9a49
(2) eap: Previous EAP request found for state 0x21f08305203c9a49, released from the list
(2) eap: Peer sent packet with method EAP PEAP (25)
(2) eap: Calling submodule eap_peap to process data
(2) eap_peap: (TLS) EAP Peer says that the final record size will be 184 bytes
(2) eap_peap: (TLS) EAP Got all data (184 bytes)
(2) eap_peap: (TLS) Handshake state - before SSL initialization
(2) eap_peap: (TLS) Handshake state - Server before SSL initialization
(2) eap_peap: (TLS) Handshake state - Server before SSL initialization
(2) eap_peap: (TLS) recv TLS 1.3 Handshake, ClientHello
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read client hello
(2) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHello
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server hello
(2) eap_peap: (TLS) send TLS 1.2 Handshake, Certificate
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write certificate
(2) eap_peap: (TLS) send TLS 1.2 Handshake, ServerKeyExchange
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write key exchange
(2) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHelloDone
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server done
(2) eap_peap: (TLS) Server : Need to read more data: SSLv3/TLS write server done
(2) eap_peap: (TLS) In Handshake Phase
(2) eap: Sending EAP Request (code 1) ID 205 length 1004
(2) eap: EAP session adding &reply:State = 0x21f08305233d9a49
(2)     [eap] = handled
(2)   } # authenticate = handled
(2) Using Post-Auth-Type Challenge
(2) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(2)   Challenge { ... } # empty sub-section is ignored
(2) session-state: Saving cached attributes
(2)   Framed-MTU = 994
(2)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(2)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(2)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(2)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(2)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(2) Sent Access-Challenge Id 2 from 127.0.0.1:1812 to 127.0.0.1:57623 length 1068
(2)   EAP-Message = 0x01cd03ec19c000000aac160303003d020000390303a22e350e8fec2c612b284e8d5e4e84820100e5bdad0735e3c6c3f7aa084e7e6700c030000011ff01000100000b00040300010200170000160303092b0b0009270009240004203082041c30820304a003020102020101300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232333136353534385a170d3234303232313136353534385a307c310b3009060355040613024652310f300d06035504080c0652616469757331153013060355040a0c0c4578616d706c6520496e632e3123302106035504030c1a4578616d70
(2)   Message-Authenticator = 0x00000000000000000000000000000000
(2)   State = 0x21f08305233d9a49de3ebc9495c5e1c8
(2) Finished request
Waking up in 4.9 seconds.
(3) Received Access-Request Id 3 from 127.0.0.1:57623 to 127.0.0.1:1812 length 240
(3)   User-Name = "anonymous"
(3)   NAS-IP-Address = 127.0.0.1
(3)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(3)   NAS-Port-Type = Wireless-802.11
(3)   Service-Type = Framed-User
(3)   NAS-Port = 1
(3)   Calling-Station-Id = "DC-A6-32-DF-E1-5C"
(3)   Connect-Info = "CONNECT 54Mbps 802.11g"
(3)   Acct-Session-Id = "4B9D3B107DCB1E89"
(3)   Acct-Multi-Session-Id = "239CBA72C55E9E89"
(3)   WLAN-Pairwise-Cipher = 1027076
(3)   WLAN-Group-Cipher = 1027076
(3)   WLAN-AKM-Suite = 1027073
(3)   WLAN-Group-Mgmt-Cipher = 1027078
(3)   Framed-MTU = 1400
(3)   EAP-Message = 0x02cd00061900
(3)   State = 0x21f08305233d9a49de3ebc9495c5e1c8
(3)   Message-Authenticator = 0xf19f6e662a28194f53ae5c694ae9f220
(3) Restoring &session-state
(3)   &session-state:Framed-MTU = 994
(3)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(3)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(3)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(3)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(3)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(3) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(3)   authorize {
(3)     policy filter_username {
(3)       if (&User-Name) {
(3)       if (&User-Name)  -> TRUE
(3)       if (&User-Name)  {
(3)         if (&User-Name =~ / /) {
(3)         if (&User-Name =~ / /)  -> FALSE
(3)         if (&User-Name =~ /@[^@]*@/ ) {
(3)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(3)         if (&User-Name =~ /\.\./ ) {
(3)         if (&User-Name =~ /\.\./ )  -> FALSE
(3)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(3)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(3)         if (&User-Name =~ /\.$/)  {
(3)         if (&User-Name =~ /\.$/)   -> FALSE
(3)         if (&User-Name =~ /@\./)  {
(3)         if (&User-Name =~ /@\./)   -> FALSE
(3)       } # if (&User-Name)  = notfound
(3)     } # policy filter_username = notfound
(3)     [preprocess] = ok
(3)     [chap] = noop
(3)     [mschap] = noop
(3)     [digest] = noop
(3) suffix: Checking for suffix after "@"
(3) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(3) suffix: No such realm "NULL"
(3)     [suffix] = noop
(3) eap: Peer sent EAP Response (code 2) ID 205 length 6
(3) eap: Continuing tunnel setup
(3)     [eap] = ok
(3)   } # authorize = ok
(3) Found Auth-Type = eap
(3) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(3)   authenticate {
(3) eap: Expiring EAP session with state 0x21f08305233d9a49
(3) eap: Finished EAP session with state 0x21f08305233d9a49
(3) eap: Previous EAP request found for state 0x21f08305233d9a49, released from the list
(3) eap: Peer sent packet with method EAP PEAP (25)
(3) eap: Calling submodule eap_peap to process data
(3) eap_peap: (TLS) Peer ACKed our handshake fragment
(3) eap: Sending EAP Request (code 1) ID 206 length 1000
(3) eap: EAP session adding &reply:State = 0x21f08305223e9a49
(3)     [eap] = handled
(3)   } # authenticate = handled
(3) Using Post-Auth-Type Challenge
(3) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(3)   Challenge { ... } # empty sub-section is ignored
(3) session-state: Saving cached attributes
(3)   Framed-MTU = 994
(3)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(3)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(3)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(3)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(3)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(3) Sent Access-Challenge Id 3 from 127.0.0.1:1812 to 127.0.0.1:57623 length 1064
(3)   EAP-Message = 0x01ce03e81940fdc5d236f5cebe7b526d662e8d0c3336e0804a8a795a821a8dfea62d43c63bbb694adeed590362a65c8a265eae3cd71b430a3dfe2edfa887fa5816577ab1223ae511b3f2e37cd250f622f068aaca3941e0a54a8ef6e236114871333ac2763798f73181d75c408eaad48291d2bac09400dc45fc153b29d61a00896c9415f6f4ce2bd8d4a98c105a4c480e11cb8b51900004fe308204fa308203e2a00302010202146f0684a6149c1b984ef557a40f4730895d7e5f43300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232333136353534335a170d32343032
(3)   Message-Authenticator = 0x00000000000000000000000000000000
(3)   State = 0x21f08305223e9a49de3ebc9495c5e1c8
(3) Finished request
Waking up in 4.9 seconds.
(4) Received Access-Request Id 4 from 127.0.0.1:57623 to 127.0.0.1:1812 length 240
(4)   User-Name = "anonymous"
(4)   NAS-IP-Address = 127.0.0.1
(4)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(4)   NAS-Port-Type = Wireless-802.11
(4)   Service-Type = Framed-User
(4)   NAS-Port = 1
(4)   Calling-Station-Id = "DC-A6-32-DF-E1-5C"
(4)   Connect-Info = "CONNECT 54Mbps 802.11g"
(4)   Acct-Session-Id = "4B9D3B107DCB1E89"
(4)   Acct-Multi-Session-Id = "239CBA72C55E9E89"
(4)   WLAN-Pairwise-Cipher = 1027076
(4)   WLAN-Group-Cipher = 1027076
(4)   WLAN-AKM-Suite = 1027073
(4)   WLAN-Group-Mgmt-Cipher = 1027078
(4)   Framed-MTU = 1400
(4)   EAP-Message = 0x02ce00061900
(4)   State = 0x21f08305223e9a49de3ebc9495c5e1c8
(4)   Message-Authenticator = 0x88c774d671afa272c9e3b9b5126494fc
(4) Restoring &session-state
(4)   &session-state:Framed-MTU = 994
(4)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(4) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(4)   authorize {
(4)     policy filter_username {
(4)       if (&User-Name) {
(4)       if (&User-Name)  -> TRUE
(4)       if (&User-Name)  {
(4)         if (&User-Name =~ / /) {
(4)         if (&User-Name =~ / /)  -> FALSE
(4)         if (&User-Name =~ /@[^@]*@/ ) {
(4)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(4)         if (&User-Name =~ /\.\./ ) {
(4)         if (&User-Name =~ /\.\./ )  -> FALSE
(4)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(4)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(4)         if (&User-Name =~ /\.$/)  {
(4)         if (&User-Name =~ /\.$/)   -> FALSE
(4)         if (&User-Name =~ /@\./)  {
(4)         if (&User-Name =~ /@\./)   -> FALSE
(4)       } # if (&User-Name)  = notfound
(4)     } # policy filter_username = notfound
(4)     [preprocess] = ok
(4)     [chap] = noop
(4)     [mschap] = noop
(4)     [digest] = noop
(4) suffix: Checking for suffix after "@"
(4) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(4) suffix: No such realm "NULL"
(4)     [suffix] = noop
(4) eap: Peer sent EAP Response (code 2) ID 206 length 6
(4) eap: Continuing tunnel setup
(4)     [eap] = ok
(4)   } # authorize = ok
(4) Found Auth-Type = eap
(4) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(4)   authenticate {
(4) eap: Expiring EAP session with state 0x21f08305223e9a49
(4) eap: Finished EAP session with state 0x21f08305223e9a49
(4) eap: Previous EAP request found for state 0x21f08305223e9a49, released from the list
(4) eap: Peer sent packet with method EAP PEAP (25)
(4) eap: Calling submodule eap_peap to process data
(4) eap_peap: (TLS) Peer ACKed our handshake fragment
(4) eap: Sending EAP Request (code 1) ID 207 length 750
(4) eap: EAP session adding &reply:State = 0x21f08305253f9a49
(4)     [eap] = handled
(4)   } # authenticate = handled
(4) Using Post-Auth-Type Challenge
(4) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(4)   Challenge { ... } # empty sub-section is ignored
(4) session-state: Saving cached attributes
(4)   Framed-MTU = 994
(4)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(4)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(4)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(4)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(4)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(4) Sent Access-Challenge Id 4 from 127.0.0.1:1812 to 127.0.0.1:57623 length 812
(4)   EAP-Message = 0x01cf02ee1900161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f7269747982146f0684a6149c1b984ef557a40f4730895d7e5f43300f0603551d130101ff040530030101ff30360603551d1f042f302d302ba029a0278625687474703a2f2f7777772e6578616d706c652e6f72672f6578616d706c655f63612e63726c300d06092a864886f70d01010b050003820101003807f802d6e3f777023cafffba3d532320e791bc2fe8808de95c0d3d0f48f999b3dfd75562a21e51aedb44e704f7da35cef48a70b02f189ef938473e56c47ab3879b49f65281e70ea094586954f0645469ae97a3e857379bf32e358d7d67eb5b8b0dd94b85192ed1ed655bc4dfc605d1b7d4e9ae2c577651a694122ea52dfab128d837b6eeeaeee6c41b3a58dea83f99fe284c685ea730ea0cc3343f958674ec886221c3d0ba7ac099236e6ba1f80655e446919b8c239057a73f8e752810006c6e8b8b
(4)   Message-Authenticator = 0x00000000000000000000000000000000
(4)   State = 0x21f08305253f9a49de3ebc9495c5e1c8
(4) Finished request
Waking up in 4.9 seconds.
(5) Received Access-Request Id 5 from 127.0.0.1:57623 to 127.0.0.1:1812 length 337
(5)   User-Name = "anonymous"
(5)   NAS-IP-Address = 127.0.0.1
(5)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(5)   NAS-Port-Type = Wireless-802.11
(5)   Service-Type = Framed-User
(5)   NAS-Port = 1
(5)   Calling-Station-Id = "DC-A6-32-DF-E1-5C"
(5)   Connect-Info = "CONNECT 54Mbps 802.11g"
(5)   Acct-Session-Id = "4B9D3B107DCB1E89"
(5)   Acct-Multi-Session-Id = "239CBA72C55E9E89"
(5)   WLAN-Pairwise-Cipher = 1027076
(5)   WLAN-Group-Cipher = 1027076
(5)   WLAN-AKM-Suite = 1027073
(5)   WLAN-Group-Mgmt-Cipher = 1027078
(5)   Framed-MTU = 1400
(5)   EAP-Message = 0x02cf006719800000005d1603030025100000212096d7fda4d455d80208d2b3bb433b1cbae724199fd0b2f62f7997ab4f5b4bc16c1403030001011603030028d4c1c20d88694ccdb41b1222bd1faa826eae698779a130fc0956a9c43b32183184fef88339a96099
(5)   State = 0x21f08305253f9a49de3ebc9495c5e1c8
(5)   Message-Authenticator = 0x759b858a33f4263e760c4e8365bcf8dc
(5) Restoring &session-state
(5)   &session-state:Framed-MTU = 994
(5)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(5) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(5)   authorize {
(5)     policy filter_username {
(5)       if (&User-Name) {
(5)       if (&User-Name)  -> TRUE
(5)       if (&User-Name)  {
(5)         if (&User-Name =~ / /) {
(5)         if (&User-Name =~ / /)  -> FALSE
(5)         if (&User-Name =~ /@[^@]*@/ ) {
(5)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(5)         if (&User-Name =~ /\.\./ ) {
(5)         if (&User-Name =~ /\.\./ )  -> FALSE
(5)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(5)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(5)         if (&User-Name =~ /\.$/)  {
(5)         if (&User-Name =~ /\.$/)   -> FALSE
(5)         if (&User-Name =~ /@\./)  {
(5)         if (&User-Name =~ /@\./)   -> FALSE
(5)       } # if (&User-Name)  = notfound
(5)     } # policy filter_username = notfound
(5)     [preprocess] = ok
(5)     [chap] = noop
(5)     [mschap] = noop
(5)     [digest] = noop
(5) suffix: Checking for suffix after "@"
(5) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(5) suffix: No such realm "NULL"
(5)     [suffix] = noop
(5) eap: Peer sent EAP Response (code 2) ID 207 length 103
(5) eap: Continuing tunnel setup
(5)     [eap] = ok
(5)   } # authorize = ok
(5) Found Auth-Type = eap
(5) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(5)   authenticate {
(5) eap: Expiring EAP session with state 0x21f08305253f9a49
(5) eap: Finished EAP session with state 0x21f08305253f9a49
(5) eap: Previous EAP request found for state 0x21f08305253f9a49, released from the list
(5) eap: Peer sent packet with method EAP PEAP (25)
(5) eap: Calling submodule eap_peap to process data
(5) eap_peap: (TLS) EAP Peer says that the final record size will be 93 bytes
(5) eap_peap: (TLS) EAP Got all data (93 bytes)
(5) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server done
(5) eap_peap: (TLS) recv TLS 1.2 Handshake, ClientKeyExchange
(5) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read client key exchange
(5) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read change cipher spec
(5) eap_peap: (TLS) recv TLS 1.2 Handshake, Finished
(5) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read finished
(5) eap_peap: (TLS) send TLS 1.2 ChangeCipherSpec
(5) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write change cipher spec
(5) eap_peap: (TLS) send TLS 1.2 Handshake, Finished
(5) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write finished
(5) eap_peap: (TLS) Handshake state - SSL negotiation finished successfully
(5) eap_peap: (TLS) Connection Established
(5) eap_peap:   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(5) eap_peap:   TLS-Session-Version = "TLS 1.2"
(5) eap: Sending EAP Request (code 1) ID 208 length 57
(5) eap: EAP session adding &reply:State = 0x21f0830524209a49
(5)     [eap] = handled
(5)   } # authenticate = handled
(5) Using Post-Auth-Type Challenge
(5) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(5)   Challenge { ... } # empty sub-section is ignored
(5) session-state: Saving cached attributes
(5)   Framed-MTU = 994
(5)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(5)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(5)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(5)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(5)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(5)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(5)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(5)   TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(5)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(5)   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(5)   TLS-Session-Version = "TLS 1.2"
(5) Sent Access-Challenge Id 5 from 127.0.0.1:1812 to 127.0.0.1:57623 length 115
(5)   EAP-Message = 0x01d0003919001403030001011603030028ecb865dbaf8394d3d50212c0d354c94a1a5eced3bd87c801dd4915e1fd57beb5e6ff726b9796dd45
(5)   Message-Authenticator = 0x00000000000000000000000000000000
(5)   State = 0x21f0830524209a49de3ebc9495c5e1c8
(5) Finished request
Waking up in 4.9 seconds.
(6) Received Access-Request Id 6 from 127.0.0.1:57623 to 127.0.0.1:1812 length 240
(6)   User-Name = "anonymous"
(6)   NAS-IP-Address = 127.0.0.1
(6)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(6)   NAS-Port-Type = Wireless-802.11
(6)   Service-Type = Framed-User
(6)   NAS-Port = 1
(6)   Calling-Station-Id = "DC-A6-32-DF-E1-5C"
(6)   Connect-Info = "CONNECT 54Mbps 802.11g"
(6)   Acct-Session-Id = "4B9D3B107DCB1E89"
(6)   Acct-Multi-Session-Id = "239CBA72C55E9E89"
(6)   WLAN-Pairwise-Cipher = 1027076
(6)   WLAN-Group-Cipher = 1027076
(6)   WLAN-AKM-Suite = 1027073
(6)   WLAN-Group-Mgmt-Cipher = 1027078
(6)   Framed-MTU = 1400
(6)   EAP-Message = 0x02d000061900
(6)   State = 0x21f0830524209a49de3ebc9495c5e1c8
(6)   Message-Authenticator = 0x43487419dfaa1d518e748a7c70bf1323
(6) Restoring &session-state
(6)   &session-state:Framed-MTU = 994
(6)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(6)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(6)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(6)   &session-state:TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(6)   &session-state:TLS-Session-Version = "TLS 1.2"
(6) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(6)   authorize {
(6)     policy filter_username {
(6)       if (&User-Name) {
(6)       if (&User-Name)  -> TRUE
(6)       if (&User-Name)  {
(6)         if (&User-Name =~ / /) {
(6)         if (&User-Name =~ / /)  -> FALSE
(6)         if (&User-Name =~ /@[^@]*@/ ) {
(6)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(6)         if (&User-Name =~ /\.\./ ) {
(6)         if (&User-Name =~ /\.\./ )  -> FALSE
(6)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(6)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(6)         if (&User-Name =~ /\.$/)  {
(6)         if (&User-Name =~ /\.$/)   -> FALSE
(6)         if (&User-Name =~ /@\./)  {
(6)         if (&User-Name =~ /@\./)   -> FALSE
(6)       } # if (&User-Name)  = notfound
(6)     } # policy filter_username = notfound
(6)     [preprocess] = ok
(6)     [chap] = noop
(6)     [mschap] = noop
(6)     [digest] = noop
(6) suffix: Checking for suffix after "@"
(6) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(6) suffix: No such realm "NULL"
(6)     [suffix] = noop
(6) eap: Peer sent EAP Response (code 2) ID 208 length 6
(6) eap: Continuing tunnel setup
(6)     [eap] = ok
(6)   } # authorize = ok
(6) Found Auth-Type = eap
(6) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(6)   authenticate {
(6) eap: Expiring EAP session with state 0x21f0830524209a49
(6) eap: Finished EAP session with state 0x21f0830524209a49
(6) eap: Previous EAP request found for state 0x21f0830524209a49, released from the list
(6) eap: Peer sent packet with method EAP PEAP (25)
(6) eap: Calling submodule eap_peap to process data
(6) eap_peap: (TLS) Peer ACKed our handshake fragment.  handshake is finished
(6) eap_peap: Session established.  Decoding tunneled attributes
(6) eap_peap: PEAP state TUNNEL ESTABLISHED
(6) eap: Sending EAP Request (code 1) ID 209 length 40
(6) eap: EAP session adding &reply:State = 0x21f0830527219a49
(6)     [eap] = handled
(6)   } # authenticate = handled
(6) Using Post-Auth-Type Challenge
(6) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(6)   Challenge { ... } # empty sub-section is ignored
(6) session-state: Saving cached attributes
(6)   Framed-MTU = 994
(6)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(6)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(6)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(6)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(6)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(6)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(6)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(6)   TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(6)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(6)   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(6)   TLS-Session-Version = "TLS 1.2"
(6) Sent Access-Challenge Id 6 from 127.0.0.1:1812 to 127.0.0.1:57623 length 98
(6)   EAP-Message = 0x01d100281900170303001decb865dbaf8394d4cf24da3fef8377c5de476214f8cba2dfe3970c1cf8
(6)   Message-Authenticator = 0x00000000000000000000000000000000
(6)   State = 0x21f0830527219a49de3ebc9495c5e1c8
(6) Finished request
Waking up in 4.9 seconds.
(7) Received Access-Request Id 7 from 127.0.0.1:57623 to 127.0.0.1:1812 length 285
(7)   User-Name = "anonymous"
(7)   NAS-IP-Address = 127.0.0.1
(7)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(7)   NAS-Port-Type = Wireless-802.11
(7)   Service-Type = Framed-User
(7)   NAS-Port = 1
(7)   Calling-Station-Id = "DC-A6-32-DF-E1-5C"
(7)   Connect-Info = "CONNECT 54Mbps 802.11g"
(7)   Acct-Session-Id = "4B9D3B107DCB1E89"
(7)   Acct-Multi-Session-Id = "239CBA72C55E9E89"
(7)   WLAN-Pairwise-Cipher = 1027076
(7)   WLAN-Group-Cipher = 1027076
(7)   WLAN-AKM-Suite = 1027073
(7)   WLAN-Group-Mgmt-Cipher = 1027078
(7)   Framed-MTU = 1400
(7)   EAP-Message = 0x02d1003319001703030028d4c1c20d88694cce1643a9c4a8586ac26d07784e2502d53ecbbd1203866ad32da35c4a5a7286f2f3
(7)   State = 0x21f0830527219a49de3ebc9495c5e1c8
(7)   Message-Authenticator = 0x2b30cacd3dc0a02afaa1a97ccfb7caf5
(7) Restoring &session-state
(7)   &session-state:Framed-MTU = 994
(7)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(7)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(7)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(7)   &session-state:TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(7)   &session-state:TLS-Session-Version = "TLS 1.2"
(7) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(7)   authorize {
(7)     policy filter_username {
(7)       if (&User-Name) {
(7)       if (&User-Name)  -> TRUE
(7)       if (&User-Name)  {
(7)         if (&User-Name =~ / /) {
(7)         if (&User-Name =~ / /)  -> FALSE
(7)         if (&User-Name =~ /@[^@]*@/ ) {
(7)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(7)         if (&User-Name =~ /\.\./ ) {
(7)         if (&User-Name =~ /\.\./ )  -> FALSE
(7)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(7)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(7)         if (&User-Name =~ /\.$/)  {
(7)         if (&User-Name =~ /\.$/)   -> FALSE
(7)         if (&User-Name =~ /@\./)  {
(7)         if (&User-Name =~ /@\./)   -> FALSE
(7)       } # if (&User-Name)  = notfound
(7)     } # policy filter_username = notfound
(7)     [preprocess] = ok
(7)     [chap] = noop
(7)     [mschap] = noop
(7)     [digest] = noop
(7) suffix: Checking for suffix after "@"
(7) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(7) suffix: No such realm "NULL"
(7)     [suffix] = noop
(7) eap: Peer sent EAP Response (code 2) ID 209 length 51
(7) eap: Continuing tunnel setup
(7)     [eap] = ok
(7)   } # authorize = ok
(7) Found Auth-Type = eap
(7) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(7)   authenticate {
(7) eap: Expiring EAP session with state 0x21f0830527219a49
(7) eap: Finished EAP session with state 0x21f0830527219a49
(7) eap: Previous EAP request found for state 0x21f0830527219a49, released from the list
(7) eap: Peer sent packet with method EAP PEAP (25)
(7) eap: Calling submodule eap_peap to process data
(7) eap_peap: (TLS) EAP Done initial handshake
(7) eap_peap: Session established.  Decoding tunneled attributes
(7) eap_peap: PEAP state WAITING FOR INNER IDENTITY
(7) eap_peap: Identity - bob@example.org
(7) eap_peap: Got inner identity 'bob@example.org'
(7) eap_peap: Setting default EAP type for tunneled EAP session
(7) eap_peap: Got tunneled request
(7) eap_peap:   EAP-Message = 0x02d1001401626f62406578616d706c652e6f7267
(7) eap_peap: Setting User-Name to bob@example.org
(7) eap_peap: Sending tunneled request to inner-tunnel
(7) eap_peap:   EAP-Message = 0x02d1001401626f62406578616d706c652e6f7267
(7) eap_peap:   FreeRADIUS-Proxied-To = 127.0.0.1
(7) eap_peap:   User-Name = "bob@example.org"
(7) Virtual server inner-tunnel received request
(7)   EAP-Message = 0x02d1001401626f62406578616d706c652e6f7267
(7)   FreeRADIUS-Proxied-To = 127.0.0.1
(7)   User-Name = "bob@example.org"
(7) server inner-tunnel {
(7)   # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/inner-tunnel
(7)     authorize {
(7)       policy filter_username {
(7)         if (&User-Name) {
(7)         if (&User-Name)  -> TRUE
(7)         if (&User-Name)  {
(7)           if (&User-Name =~ / /) {
(7)           if (&User-Name =~ / /)  -> FALSE
(7)           if (&User-Name =~ /@[^@]*@/ ) {
(7)           if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(7)           if (&User-Name =~ /\.\./ ) {
(7)           if (&User-Name =~ /\.\./ )  -> FALSE
(7)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(7)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(7)           if (&User-Name =~ /\.$/)  {
(7)           if (&User-Name =~ /\.$/)   -> FALSE
(7)           if (&User-Name =~ /@\./)  {
(7)           if (&User-Name =~ /@\./)   -> FALSE
(7)         } # if (&User-Name)  = notfound
(7)       } # policy filter_username = notfound
(7)       [chap] = noop
(7)       [mschap] = noop
(7) suffix: Checking for suffix after "@"
(7) suffix: Looking up realm "example.org" for User-Name = "bob@example.org"
(7) suffix: No such realm "example.org"
(7)       [suffix] = noop
(7)       update control {
(7)         &Proxy-To-Realm := LOCAL
(7)       } # update control = noop
(7) eap: Peer sent EAP Response (code 2) ID 209 length 20
(7) eap: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
(7)       [eap] = ok
(7)     } # authorize = ok
(7)   Found Auth-Type = eap
(7)   # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/inner-tunnel
(7)     authenticate {
(7) eap: Peer sent packet with method EAP Identity (1)
(7) eap: Calling submodule eap_mschapv2 to process data
(7) eap_mschapv2: Issuing Challenge
(7) eap: Sending EAP Request (code 1) ID 210 length 43
(7) eap: EAP session adding &reply:State = 0x64cb288d641932ee
(7)       [eap] = handled
(7)     } # authenticate = handled
(7) } # server inner-tunnel
(7) Virtual server sending reply
(7)   EAP-Message = 0x01d2002b1a01d20026107be3e20fb856f1f4259b1de1226567e2667265657261646975732d332e302e3236
(7)   Message-Authenticator = 0x00000000000000000000000000000000
(7)   State = 0x64cb288d641932eeac5ea3733ee4658e
(7) eap_peap: Got tunneled reply code 11
(7) eap_peap:   EAP-Message = 0x01d2002b1a01d20026107be3e20fb856f1f4259b1de1226567e2667265657261646975732d332e302e3236
(7) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(7) eap_peap:   State = 0x64cb288d641932eeac5ea3733ee4658e
(7) eap_peap: Got tunneled reply RADIUS code 11
(7) eap_peap:   EAP-Message = 0x01d2002b1a01d20026107be3e20fb856f1f4259b1de1226567e2667265657261646975732d332e302e3236
(7) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(7) eap_peap:   State = 0x64cb288d641932eeac5ea3733ee4658e
(7) eap_peap: Got tunneled Access-Challenge
(7) eap: Sending EAP Request (code 1) ID 210 length 74
(7) eap: EAP session adding &reply:State = 0x21f0830526229a49
(7)     [eap] = handled
(7)   } # authenticate = handled
(7) Using Post-Auth-Type Challenge
(7) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(7)   Challenge { ... } # empty sub-section is ignored
(7) session-state: Saving cached attributes
(7)   Framed-MTU = 994
(7)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(7)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(7)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(7)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(7)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(7)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(7)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(7)   TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(7)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(7)   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(7)   TLS-Session-Version = "TLS 1.2"
(7) Sent Access-Challenge Id 7 from 127.0.0.1:1812 to 127.0.0.1:57623 length 132
(7)   EAP-Message = 0x01d2004a1900170303003fecb865dbaf8394d538b3f85214d67086b36937599340dcdd23d205642b2da674d82b43475c35ffa737e448bb9974c1bf147e328cedf8129ad3795b6e4cebeb
(7)   Message-Authenticator = 0x00000000000000000000000000000000
(7)   State = 0x21f0830526229a49de3ebc9495c5e1c8
(7) Finished request
Waking up in 4.9 seconds.
(8) Received Access-Request Id 8 from 127.0.0.1:57623 to 127.0.0.1:1812 length 339
(8)   User-Name = "anonymous"
(8)   NAS-IP-Address = 127.0.0.1
(8)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(8)   NAS-Port-Type = Wireless-802.11
(8)   Service-Type = Framed-User
(8)   NAS-Port = 1
(8)   Calling-Station-Id = "DC-A6-32-DF-E1-5C"
(8)   Connect-Info = "CONNECT 54Mbps 802.11g"
(8)   Acct-Session-Id = "4B9D3B107DCB1E89"
(8)   Acct-Multi-Session-Id = "239CBA72C55E9E89"
(8)   WLAN-Pairwise-Cipher = 1027076
(8)   WLAN-Group-Cipher = 1027076
(8)   WLAN-AKM-Suite = 1027073
(8)   WLAN-Group-Mgmt-Cipher = 1027078
(8)   Framed-MTU = 1400
(8)   EAP-Message = 0x02d200691900170303005ed4c1c20d88694ccf14cf1921b1f307b44044e0327256abf6eafd0ae79f1dacb2b3e3c0641a5d907514fb144bbc1df3190d3b6b49f6cbad83fe52c3b8874c09f15693c8d4d8e38455bc4c78dddf21cc5c73f4e7070aed1497d501a59615c1
(8)   State = 0x21f0830526229a49de3ebc9495c5e1c8
(8)   Message-Authenticator = 0xbae071278ada5764017a678509c7c33d
(8) Restoring &session-state
(8)   &session-state:Framed-MTU = 994
(8)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(8)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(8)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(8)   &session-state:TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(8)   &session-state:TLS-Session-Version = "TLS 1.2"
(8) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(8)   authorize {
(8)     policy filter_username {
(8)       if (&User-Name) {
(8)       if (&User-Name)  -> TRUE
(8)       if (&User-Name)  {
(8)         if (&User-Name =~ / /) {
(8)         if (&User-Name =~ / /)  -> FALSE
(8)         if (&User-Name =~ /@[^@]*@/ ) {
(8)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(8)         if (&User-Name =~ /\.\./ ) {
(8)         if (&User-Name =~ /\.\./ )  -> FALSE
(8)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(8)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(8)         if (&User-Name =~ /\.$/)  {
(8)         if (&User-Name =~ /\.$/)   -> FALSE
(8)         if (&User-Name =~ /@\./)  {
(8)         if (&User-Name =~ /@\./)   -> FALSE
(8)       } # if (&User-Name)  = notfound
(8)     } # policy filter_username = notfound
(8)     [preprocess] = ok
(8)     [chap] = noop
(8)     [mschap] = noop
(8)     [digest] = noop
(8) suffix: Checking for suffix after "@"
(8) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(8) suffix: No such realm "NULL"
(8)     [suffix] = noop
(8) eap: Peer sent EAP Response (code 2) ID 210 length 105
(8) eap: Continuing tunnel setup
(8)     [eap] = ok
(8)   } # authorize = ok
(8) Found Auth-Type = eap
(8) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(8)   authenticate {
(8) eap: Expiring EAP session with state 0x64cb288d641932ee
(8) eap: Finished EAP session with state 0x21f0830526229a49
(8) eap: Previous EAP request found for state 0x21f0830526229a49, released from the list
(8) eap: Peer sent packet with method EAP PEAP (25)
(8) eap: Calling submodule eap_peap to process data
(8) eap_peap: (TLS) EAP Done initial handshake
(8) eap_peap: Session established.  Decoding tunneled attributes
(8) eap_peap: PEAP state phase2
(8) eap_peap: EAP method MSCHAPv2 (26)
(8) eap_peap: Got tunneled request
(8) eap_peap:   EAP-Message = 0x02d2004a1a02d20045311e7eb666899551cc832bc04b87e640ca00000000000000001e17f4357dc9cfc582dc1e7a008b01c7e5cdd413a9ea11c100626f62406578616d706c652e6f7267
(8) eap_peap: Setting User-Name to bob@example.org
(8) eap_peap: Sending tunneled request to inner-tunnel
(8) eap_peap:   EAP-Message = 0x02d2004a1a02d20045311e7eb666899551cc832bc04b87e640ca00000000000000001e17f4357dc9cfc582dc1e7a008b01c7e5cdd413a9ea11c100626f62406578616d706c652e6f7267
(8) eap_peap:   FreeRADIUS-Proxied-To = 127.0.0.1
(8) eap_peap:   User-Name = "bob@example.org"
(8) eap_peap:   State = 0x64cb288d641932eeac5ea3733ee4658e
(8) Virtual server inner-tunnel received request
(8)   EAP-Message = 0x02d2004a1a02d20045311e7eb666899551cc832bc04b87e640ca00000000000000001e17f4357dc9cfc582dc1e7a008b01c7e5cdd413a9ea11c100626f62406578616d706c652e6f7267
(8)   FreeRADIUS-Proxied-To = 127.0.0.1
(8)   User-Name = "bob@example.org"
(8)   State = 0x64cb288d641932eeac5ea3733ee4658e
(8) server inner-tunnel {
(8)   session-state: No cached attributes
(8)   # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/inner-tunnel
(8)     authorize {
(8)       policy filter_username {
(8)         if (&User-Name) {
(8)         if (&User-Name)  -> TRUE
(8)         if (&User-Name)  {
(8)           if (&User-Name =~ / /) {
(8)           if (&User-Name =~ / /)  -> FALSE
(8)           if (&User-Name =~ /@[^@]*@/ ) {
(8)           if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(8)           if (&User-Name =~ /\.\./ ) {
(8)           if (&User-Name =~ /\.\./ )  -> FALSE
(8)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(8)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(8)           if (&User-Name =~ /\.$/)  {
(8)           if (&User-Name =~ /\.$/)   -> FALSE
(8)           if (&User-Name =~ /@\./)  {
(8)           if (&User-Name =~ /@\./)   -> FALSE
(8)         } # if (&User-Name)  = notfound
(8)       } # policy filter_username = notfound
(8)       [chap] = noop
(8)       [mschap] = noop
(8) suffix: Checking for suffix after "@"
(8) suffix: Looking up realm "example.org" for User-Name = "bob@example.org"
(8) suffix: No such realm "example.org"
(8)       [suffix] = noop
(8)       update control {
(8)         &Proxy-To-Realm := LOCAL
(8)       } # update control = noop
(8) eap: Peer sent EAP Response (code 2) ID 210 length 74
(8) eap: No EAP Start, assuming it's an on-going EAP conversation
(8)       [eap] = updated
(8) files: users: Matched entry bob@example.org at line 1
(8) files: EXPAND Hello, %{User-Name}
(8) files:    --> Hello, bob@example.org
(8)       [files] = ok
(8)       [expiration] = noop
(8)       [logintime] = noop
(8) pap: WARNING: Auth-Type already set.  Not setting to PAP
(8)       [pap] = noop
(8)     } # authorize = updated
(8)   Found Auth-Type = eap
(8)   # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/inner-tunnel
(8)     authenticate {
(8) eap: Expiring EAP session with state 0x64cb288d641932ee
(8) eap: Finished EAP session with state 0x64cb288d641932ee
(8) eap: Previous EAP request found for state 0x64cb288d641932ee, released from the list
(8) eap: Peer sent packet with method EAP MSCHAPv2 (26)
(8) eap: Calling submodule eap_mschapv2 to process data
(8) eap_mschapv2: # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/inner-tunnel
(8) eap_mschapv2:   authenticate {
(8) mschap: Found Cleartext-Password, hashing to create NT-Password
(8) mschap: Creating challenge hash with username: bob@example.org
(8) mschap: Client is using MS-CHAPv2
(8) mschap: Adding MS-CHAPv2 MPPE keys
(8) eap_mschapv2:     [mschap] = ok
(8) eap_mschapv2:   } # authenticate = ok
(8) eap_mschapv2: MSCHAP Success
(8) eap: Sending EAP Request (code 1) ID 211 length 51
(8) eap: EAP session adding &reply:State = 0x64cb288d651832ee
(8)       [eap] = handled
(8)     } # authenticate = handled
(8) } # server inner-tunnel
(8) Virtual server sending reply
(8)   Reply-Message = "Hello, bob@example.org"
(8)   EAP-Message = 0x01d300331a03d2002e533d44314138443334413639303032373230354331314244453646423733353035434343314232303344
(8)   Message-Authenticator = 0x00000000000000000000000000000000
(8)   State = 0x64cb288d651832eeac5ea3733ee4658e
(8) eap_peap: Got tunneled reply code 11
(8) eap_peap:   Reply-Message = "Hello, bob@example.org"
(8) eap_peap:   EAP-Message = 0x01d300331a03d2002e533d44314138443334413639303032373230354331314244453646423733353035434343314232303344
(8) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(8) eap_peap:   State = 0x64cb288d651832eeac5ea3733ee4658e
(8) eap_peap: Got tunneled reply RADIUS code 11
(8) eap_peap:   Reply-Message = "Hello, bob@example.org"
(8) eap_peap:   EAP-Message = 0x01d300331a03d2002e533d44314138443334413639303032373230354331314244453646423733353035434343314232303344
(8) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(8) eap_peap:   State = 0x64cb288d651832eeac5ea3733ee4658e
(8) eap_peap: Got tunneled Access-Challenge
(8) eap: Sending EAP Request (code 1) ID 211 length 82
(8) eap: EAP session adding &reply:State = 0x21f0830529239a49
(8)     [eap] = handled
(8)   } # authenticate = handled
(8) Using Post-Auth-Type Challenge
(8) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(8)   Challenge { ... } # empty sub-section is ignored
(8) session-state: Saving cached attributes
(8)   Framed-MTU = 994
(8)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(8)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(8)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(8)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(8)   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(8)   TLS-Session-Version = "TLS 1.2"
(8) Sent Access-Challenge Id 8 from 127.0.0.1:1812 to 127.0.0.1:57623 length 140
(8)   EAP-Message = 0x01d3005219001703030047ecb865dbaf8394d60a4495b549d5b5edda6a56b3f25377ee909c792f03480cbf3979269b45e80dd777bdeb824cae6c02f62900da28d15f63d1e620512ac77609159f81a4f8075f
(8)   Message-Authenticator = 0x00000000000000000000000000000000
(8)   State = 0x21f0830529239a49de3ebc9495c5e1c8
(8) Finished request
Waking up in 4.9 seconds.
(9) Received Access-Request Id 9 from 127.0.0.1:57623 to 127.0.0.1:1812 length 271
(9)   User-Name = "anonymous"
(9)   NAS-IP-Address = 127.0.0.1
(9)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(9)   NAS-Port-Type = Wireless-802.11
(9)   Service-Type = Framed-User
(9)   NAS-Port = 1
(9)   Calling-Station-Id = "DC-A6-32-DF-E1-5C"
(9)   Connect-Info = "CONNECT 54Mbps 802.11g"
(9)   Acct-Session-Id = "4B9D3B107DCB1E89"
(9)   Acct-Multi-Session-Id = "239CBA72C55E9E89"
(9)   WLAN-Pairwise-Cipher = 1027076
(9)   WLAN-Group-Cipher = 1027076
(9)   WLAN-AKM-Suite = 1027073
(9)   WLAN-Group-Mgmt-Cipher = 1027078
(9)   Framed-MTU = 1400
(9)   EAP-Message = 0x02d300251900170303001ad4c1c20d88694cd08afd5dc5f437edbec609b59b694ea4b57f86
(9)   State = 0x21f0830529239a49de3ebc9495c5e1c8
(9)   Message-Authenticator = 0x323608a77d6148422fba28e327cce6ef
(9) Restoring &session-state
(9)   &session-state:Framed-MTU = 994
(9)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(9)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(9)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(9)   &session-state:TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(9)   &session-state:TLS-Session-Version = "TLS 1.2"
(9) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(9)   authorize {
(9)     policy filter_username {
(9)       if (&User-Name) {
(9)       if (&User-Name)  -> TRUE
(9)       if (&User-Name)  {
(9)         if (&User-Name =~ / /) {
(9)         if (&User-Name =~ / /)  -> FALSE
(9)         if (&User-Name =~ /@[^@]*@/ ) {
(9)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(9)         if (&User-Name =~ /\.\./ ) {
(9)         if (&User-Name =~ /\.\./ )  -> FALSE
(9)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(9)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(9)         if (&User-Name =~ /\.$/)  {
(9)         if (&User-Name =~ /\.$/)   -> FALSE
(9)         if (&User-Name =~ /@\./)  {
(9)         if (&User-Name =~ /@\./)   -> FALSE
(9)       } # if (&User-Name)  = notfound
(9)     } # policy filter_username = notfound
(9)     [preprocess] = ok
(9)     [chap] = noop
(9)     [mschap] = noop
(9)     [digest] = noop
(9) suffix: Checking for suffix after "@"
(9) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(9) suffix: No such realm "NULL"
(9)     [suffix] = noop
(9) eap: Peer sent EAP Response (code 2) ID 211 length 37
(9) eap: Continuing tunnel setup
(9)     [eap] = ok
(9)   } # authorize = ok
(9) Found Auth-Type = eap
(9) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(9)   authenticate {
(9) eap: Expiring EAP session with state 0x64cb288d651832ee
(9) eap: Finished EAP session with state 0x21f0830529239a49
(9) eap: Previous EAP request found for state 0x21f0830529239a49, released from the list
(9) eap: Peer sent packet with method EAP PEAP (25)
(9) eap: Calling submodule eap_peap to process data
(9) eap_peap: (TLS) EAP Done initial handshake
(9) eap_peap: Session established.  Decoding tunneled attributes
(9) eap_peap: PEAP state phase2
(9) eap_peap: EAP method MSCHAPv2 (26)
(9) eap_peap: Got tunneled request
(9) eap_peap:   EAP-Message = 0x02d300061a03
(9) eap_peap: Setting User-Name to bob@example.org
(9) eap_peap: Sending tunneled request to inner-tunnel
(9) eap_peap:   EAP-Message = 0x02d300061a03
(9) eap_peap:   FreeRADIUS-Proxied-To = 127.0.0.1
(9) eap_peap:   User-Name = "bob@example.org"
(9) eap_peap:   State = 0x64cb288d651832eeac5ea3733ee4658e
(9) Virtual server inner-tunnel received request
(9)   EAP-Message = 0x02d300061a03
(9)   FreeRADIUS-Proxied-To = 127.0.0.1
(9)   User-Name = "bob@example.org"
(9)   State = 0x64cb288d651832eeac5ea3733ee4658e
(9) server inner-tunnel {
(9)   session-state: No cached attributes
(9)   # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/inner-tunnel
(9)     authorize {
(9)       policy filter_username {
(9)         if (&User-Name) {
(9)         if (&User-Name)  -> TRUE
(9)         if (&User-Name)  {
(9)           if (&User-Name =~ / /) {
(9)           if (&User-Name =~ / /)  -> FALSE
(9)           if (&User-Name =~ /@[^@]*@/ ) {
(9)           if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(9)           if (&User-Name =~ /\.\./ ) {
(9)           if (&User-Name =~ /\.\./ )  -> FALSE
(9)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(9)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(9)           if (&User-Name =~ /\.$/)  {
(9)           if (&User-Name =~ /\.$/)   -> FALSE
(9)           if (&User-Name =~ /@\./)  {
(9)           if (&User-Name =~ /@\./)   -> FALSE
(9)         } # if (&User-Name)  = notfound
(9)       } # policy filter_username = notfound
(9)       [chap] = noop
(9)       [mschap] = noop
(9) suffix: Checking for suffix after "@"
(9) suffix: Looking up realm "example.org" for User-Name = "bob@example.org"
(9) suffix: No such realm "example.org"
(9)       [suffix] = noop
(9)       update control {
(9)         &Proxy-To-Realm := LOCAL
(9)       } # update control = noop
(9) eap: Peer sent EAP Response (code 2) ID 211 length 6
(9) eap: No EAP Start, assuming it's an on-going EAP conversation
(9)       [eap] = updated
(9) files: users: Matched entry bob@example.org at line 1
(9) files: EXPAND Hello, %{User-Name}
(9) files:    --> Hello, bob@example.org
(9)       [files] = ok
(9)       [expiration] = noop
(9)       [logintime] = noop
(9) pap: WARNING: Auth-Type already set.  Not setting to PAP
(9)       [pap] = noop
(9)     } # authorize = updated
(9)   Found Auth-Type = eap
(9)   # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/inner-tunnel
(9)     authenticate {
(9) eap: Expiring EAP session with state 0x64cb288d651832ee
(9) eap: Finished EAP session with state 0x64cb288d651832ee
(9) eap: Previous EAP request found for state 0x64cb288d651832ee, released from the list
(9) eap: Peer sent packet with method EAP MSCHAPv2 (26)
(9) eap: Calling submodule eap_mschapv2 to process data
(9) eap: Sending EAP Success (code 3) ID 211 length 4
(9) eap: Freeing handler
(9)       [eap] = ok
(9)     } # authenticate = ok
(9)   # Executing section post-auth from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/inner-tunnel
(9)     post-auth {
(9)       if (0) {
(9)       if (0)  -> FALSE
(9)     } # post-auth = noop
(9) } # server inner-tunnel
(9) Virtual server sending reply
(9)   Reply-Message = "Hello, bob@example.org"
(9)   MS-MPPE-Encryption-Policy = Encryption-Allowed
(9)   MS-MPPE-Encryption-Types = RC4-40or128-bit-Allowed
(9)   MS-MPPE-Send-Key = 0x42481491e2ee3abbace2925957cd868f
(9)   MS-MPPE-Recv-Key = 0xdb65c61579519a18697ff567aa63a66c
(9)   EAP-Message = 0x03d30004
(9)   Message-Authenticator = 0x00000000000000000000000000000000
(9)   User-Name = "bob@example.org"
(9) eap_peap: Got tunneled reply code 2
(9) eap_peap:   Reply-Message = "Hello, bob@example.org"
(9) eap_peap:   MS-MPPE-Encryption-Policy = Encryption-Allowed
(9) eap_peap:   MS-MPPE-Encryption-Types = RC4-40or128-bit-Allowed
(9) eap_peap:   MS-MPPE-Send-Key = 0x42481491e2ee3abbace2925957cd868f
(9) eap_peap:   MS-MPPE-Recv-Key = 0xdb65c61579519a18697ff567aa63a66c
(9) eap_peap:   EAP-Message = 0x03d30004
(9) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(9) eap_peap:   User-Name = "bob@example.org"
(9) eap_peap: Got tunneled reply RADIUS code 2
(9) eap_peap:   Reply-Message = "Hello, bob@example.org"
(9) eap_peap:   MS-MPPE-Encryption-Policy = Encryption-Allowed
(9) eap_peap:   MS-MPPE-Encryption-Types = RC4-40or128-bit-Allowed
(9) eap_peap:   MS-MPPE-Send-Key = 0x42481491e2ee3abbace2925957cd868f
(9) eap_peap:   MS-MPPE-Recv-Key = 0xdb65c61579519a18697ff567aa63a66c
(9) eap_peap:   EAP-Message = 0x03d30004
(9) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(9) eap_peap:   User-Name = "bob@example.org"
(9) eap_peap: Tunneled authentication was successful
(9) eap_peap: SUCCESS
(9) eap: Sending EAP Request (code 1) ID 212 length 46
(9) eap: EAP session adding &reply:State = 0x21f0830528249a49
(9)     [eap] = handled
(9)   } # authenticate = handled
(9) Using Post-Auth-Type Challenge
(9) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(9)   Challenge { ... } # empty sub-section is ignored
(9) session-state: Saving cached attributes
(9)   Framed-MTU = 994
(9)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(9)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(9)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(9)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(9)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(9)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(9)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(9)   TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(9)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(9)   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(9)   TLS-Session-Version = "TLS 1.2"
(9) Sent Access-Challenge Id 9 from 127.0.0.1:1812 to 127.0.0.1:57623 length 104
(9)   EAP-Message = 0x01d4002e19001703030023ecb865dbaf8394d746772a3578eb6a258307ed9686926e44241d188630c118e85fcbec
(9)   Message-Authenticator = 0x00000000000000000000000000000000
(9)   State = 0x21f0830528249a49de3ebc9495c5e1c8
(9) Finished request
Waking up in 4.9 seconds.
(10) Received Access-Request Id 10 from 127.0.0.1:57623 to 127.0.0.1:1812 length 280
(10)   User-Name = "anonymous"
(10)   NAS-IP-Address = 127.0.0.1
(10)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(10)   NAS-Port-Type = Wireless-802.11
(10)   Service-Type = Framed-User
(10)   NAS-Port = 1
(10)   Calling-Station-Id = "DC-A6-32-DF-E1-5C"
(10)   Connect-Info = "CONNECT 54Mbps 802.11g"
(10)   Acct-Session-Id = "4B9D3B107DCB1E89"
(10)   Acct-Multi-Session-Id = "239CBA72C55E9E89"
(10)   WLAN-Pairwise-Cipher = 1027076
(10)   WLAN-Group-Cipher = 1027076
(10)   WLAN-AKM-Suite = 1027073
(10)   WLAN-Group-Mgmt-Cipher = 1027078
(10)   Framed-MTU = 1400
(10)   EAP-Message = 0x02d4002e19001703030023d4c1c20d88694cd1f789b47d68848ba68446c0c23034da5755074f8c141052c8b164b2
(10)   State = 0x21f0830528249a49de3ebc9495c5e1c8
(10)   Message-Authenticator = 0x538f3ffbb4800a4130983c6040872aff
(10) Restoring &session-state
(10)   &session-state:Framed-MTU = 994
(10)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(10)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(10)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(10)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(10)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(10)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(10)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(10)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(10)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(10)   &session-state:TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(10)   &session-state:TLS-Session-Version = "TLS 1.2"
(10) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(10)   authorize {
(10)     policy filter_username {
(10)       if (&User-Name) {
(10)       if (&User-Name)  -> TRUE
(10)       if (&User-Name)  {
(10)         if (&User-Name =~ / /) {
(10)         if (&User-Name =~ / /)  -> FALSE
(10)         if (&User-Name =~ /@[^@]*@/ ) {
(10)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(10)         if (&User-Name =~ /\.\./ ) {
(10)         if (&User-Name =~ /\.\./ )  -> FALSE
(10)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(10)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(10)         if (&User-Name =~ /\.$/)  {
(10)         if (&User-Name =~ /\.$/)   -> FALSE
(10)         if (&User-Name =~ /@\./)  {
(10)         if (&User-Name =~ /@\./)   -> FALSE
(10)       } # if (&User-Name)  = notfound
(10)     } # policy filter_username = notfound
(10)     [preprocess] = ok
(10)     [chap] = noop
(10)     [mschap] = noop
(10)     [digest] = noop
(10) suffix: Checking for suffix after "@"
(10) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(10) suffix: No such realm "NULL"
(10)     [suffix] = noop
(10) eap: Peer sent EAP Response (code 2) ID 212 length 46
(10) eap: Continuing tunnel setup
(10)     [eap] = ok
(10)   } # authorize = ok
(10) Found Auth-Type = eap
(10) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(10)   authenticate {
(10) eap: Expiring EAP session with state 0x21f0830528249a49
(10) eap: Finished EAP session with state 0x21f0830528249a49
(10) eap: Previous EAP request found for state 0x21f0830528249a49, released from the list
(10) eap: Peer sent packet with method EAP PEAP (25)
(10) eap: Calling submodule eap_peap to process data
(10) eap_peap: (TLS) EAP Done initial handshake
(10) eap_peap: Session established.  Decoding tunneled attributes
(10) eap_peap: PEAP state send tlv success
(10) eap_peap: Received EAP-TLV response
(10) eap_peap: Success
(10) eap: Sending EAP Success (code 3) ID 212 length 4
(10) eap: Freeing handler
(10)     [eap] = ok
(10)   } # authenticate = ok
(10) # Executing section post-auth from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(10)   post-auth {
(10)     if (session-state:User-Name && reply:User-Name && request:User-Name && (reply:User-Name == request:User-Name)) {
(10)     if (session-state:User-Name && reply:User-Name && request:User-Name && (reply:User-Name == request:User-Name))  -> FALSE
(10)     update {
(10)       &reply::Framed-MTU += &session-state:Framed-MTU[*] -> 994
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) recv TLS 1.3 Handshake, ClientHello'
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, ServerHello'
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, Certificate'
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, ServerKeyExchange'
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, ServerHelloDone'
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) recv TLS 1.2 Handshake, ClientKeyExchange'
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) recv TLS 1.2 Handshake, Finished'
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 ChangeCipherSpec'
(10)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, Finished'
(10)       &reply::TLS-Session-Cipher-Suite += &session-state:TLS-Session-Cipher-Suite[*] -> 'ECDHE-RSA-AES256-GCM-SHA384'
(10)       &reply::TLS-Session-Version += &session-state:TLS-Session-Version[*] -> 'TLS 1.2'
(10)     } # update = noop
(10)     [exec] = noop
(10)     policy remove_reply_message_if_eap {
(10)       if (&reply:EAP-Message && &reply:Reply-Message) {
(10)       if (&reply:EAP-Message && &reply:Reply-Message)  -> FALSE
(10)       else {
(10)         [noop] = noop
(10)       } # else = noop
(10)     } # policy remove_reply_message_if_eap = noop
(10)     if (EAP-Key-Name && &reply:EAP-Session-Id) {
(10)     if (EAP-Key-Name && &reply:EAP-Session-Id)  -> FALSE
(10)   } # post-auth = noop
(10) Sent Access-Accept Id 10 from 127.0.0.1:1812 to 127.0.0.1:57623 length 177
(10)   MS-MPPE-Recv-Key = 0x61be7a5983960f9c6683c5d9ac70055207a51ffbb8f5970563ff8c1991d79653
(10)   MS-MPPE-Send-Key = 0x2e871212550e14500921990088659a52e6d2e710cf58babcfefeac22637583f6
(10)   EAP-Message = 0x03d40004
(10)   Message-Authenticator = 0x00000000000000000000000000000000
(10)   User-Name = "anonymous"
(10)   Framed-MTU += 994
(10) Finished request
Waking up in 4.9 seconds.
(0) Cleaning up request packet ID 0 with timestamp +0 due to cleanup_delay was reached
(1) Cleaning up request packet ID 1 with timestamp +0 due to cleanup_delay was reached
(2) Cleaning up request packet ID 2 with timestamp +0 due to cleanup_delay was reached
(3) Cleaning up request packet ID 3 with timestamp +0 due to cleanup_delay was reached
(4) Cleaning up request packet ID 4 with timestamp +0 due to cleanup_delay was reached
(5) Cleaning up request packet ID 5 with timestamp +0 due to cleanup_delay was reached
(6) Cleaning up request packet ID 6 with timestamp +0 due to cleanup_delay was reached
(7) Cleaning up request packet ID 7 with timestamp +0 due to cleanup_delay was reached
(8) Cleaning up request packet ID 8 with timestamp +1 due to cleanup_delay was reached
(9) Cleaning up request packet ID 9 with timestamp +1 due to cleanup_delay was reached
(10) Cleaning up request packet ID 10 with timestamp +1 due to cleanup_delay was reached
Ready to process requests
(11) Received Access-Request Id 11 from 127.0.0.1:57623 to 127.0.0.1:1812 length 230
(11)   User-Name = "anonymous"
(11)   NAS-IP-Address = 127.0.0.1
(11)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(11)   NAS-Port-Type = Wireless-802.11
(11)   Service-Type = Framed-User
(11)   NAS-Port = 1
(11)   Calling-Station-Id = "DC-A6-32-DF-E1-5C"
(11)   Connect-Info = "CONNECT 54Mbps 802.11g"
(11)   Acct-Session-Id = "746D471FF70CA038"
(11)   Acct-Multi-Session-Id = "5DD264ACEE95EDC8"
(11)   WLAN-Pairwise-Cipher = 1027076
(11)   WLAN-Group-Cipher = 1027076
(11)   WLAN-AKM-Suite = 1027073
(11)   WLAN-Group-Mgmt-Cipher = 1027078
(11)   Framed-MTU = 1400
(11)   EAP-Message = 0x0289000e01616e6f6e796d6f7573
(11)   Message-Authenticator = 0x1150c17cd15c61da77506a81efae060c
(11) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(11)   authorize {
(11)     policy filter_username {
(11)       if (&User-Name) {
(11)       if (&User-Name)  -> TRUE
(11)       if (&User-Name)  {
(11)         if (&User-Name =~ / /) {
(11)         if (&User-Name =~ / /)  -> FALSE
(11)         if (&User-Name =~ /@[^@]*@/ ) {
(11)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(11)         if (&User-Name =~ /\.\./ ) {
(11)         if (&User-Name =~ /\.\./ )  -> FALSE
(11)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(11)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(11)         if (&User-Name =~ /\.$/)  {
(11)         if (&User-Name =~ /\.$/)   -> FALSE
(11)         if (&User-Name =~ /@\./)  {
(11)         if (&User-Name =~ /@\./)   -> FALSE
(11)       } # if (&User-Name)  = notfound
(11)     } # policy filter_username = notfound
(11)     [preprocess] = ok
(11)     [chap] = noop
(11)     [mschap] = noop
(11)     [digest] = noop
(11) suffix: Checking for suffix after "@"
(11) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(11) suffix: No such realm "NULL"
(11)     [suffix] = noop
(11) eap: Peer sent EAP Response (code 2) ID 137 length 14
(11) eap: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
(11)     [eap] = ok
(11)   } # authorize = ok
(11) Found Auth-Type = eap
(11) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(11)   authenticate {
(11) eap: Peer sent packet with method EAP Identity (1)
(11) eap: Calling submodule eap_md5 to process data
(11) eap_md5: Issuing MD5 Challenge
(11) eap: Sending EAP Request (code 1) ID 138 length 22
(11) eap: EAP session adding &reply:State = 0xb53eebdcb5b4efc6
(11)     [eap] = handled
(11)   } # authenticate = handled
(11) Using Post-Auth-Type Challenge
(11) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(11)   Challenge { ... } # empty sub-section is ignored
(11) Sent Access-Challenge Id 11 from 127.0.0.1:1812 to 127.0.0.1:57623 length 80
(11)   EAP-Message = 0x018a00160410ecd2caefcbaa3df108e9ee75692b065d
(11)   Message-Authenticator = 0x00000000000000000000000000000000
(11)   State = 0xb53eebdcb5b4efc6b8da839cfd98a9b8
(11) Finished request
Waking up in 4.9 seconds.
(12) Received Access-Request Id 12 from 127.0.0.1:57623 to 127.0.0.1:1812 length 240
(12)   User-Name = "anonymous"
(12)   NAS-IP-Address = 127.0.0.1
(12)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(12)   NAS-Port-Type = Wireless-802.11
(12)   Service-Type = Framed-User
(12)   NAS-Port = 1
(12)   Calling-Station-Id = "DC-A6-32-DF-E1-5C"
(12)   Connect-Info = "CONNECT 54Mbps 802.11g"
(12)   Acct-Session-Id = "746D471FF70CA038"
(12)   Acct-Multi-Session-Id = "5DD264ACEE95EDC8"
(12)   WLAN-Pairwise-Cipher = 1027076
(12)   WLAN-Group-Cipher = 1027076
(12)   WLAN-AKM-Suite = 1027073
(12)   WLAN-Group-Mgmt-Cipher = 1027078
(12)   Framed-MTU = 1400
(12)   EAP-Message = 0x028a00060319
(12)   State = 0xb53eebdcb5b4efc6b8da839cfd98a9b8
(12)   Message-Authenticator = 0x129521f54c1ac752d213b09858bb0e2a
(12) session-state: No cached attributes
(12) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(12)   authorize {
(12)     policy filter_username {
(12)       if (&User-Name) {
(12)       if (&User-Name)  -> TRUE
(12)       if (&User-Name)  {
(12)         if (&User-Name =~ / /) {
(12)         if (&User-Name =~ / /)  -> FALSE
(12)         if (&User-Name =~ /@[^@]*@/ ) {
(12)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(12)         if (&User-Name =~ /\.\./ ) {
(12)         if (&User-Name =~ /\.\./ )  -> FALSE
(12)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(12)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(12)         if (&User-Name =~ /\.$/)  {
(12)         if (&User-Name =~ /\.$/)   -> FALSE
(12)         if (&User-Name =~ /@\./)  {
(12)         if (&User-Name =~ /@\./)   -> FALSE
(12)       } # if (&User-Name)  = notfound
(12)     } # policy filter_username = notfound
(12)     [preprocess] = ok
(12)     [chap] = noop
(12)     [mschap] = noop
(12)     [digest] = noop
(12) suffix: Checking for suffix after "@"
(12) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(12) suffix: No such realm "NULL"
(12)     [suffix] = noop
(12) eap: Peer sent EAP Response (code 2) ID 138 length 6
(12) eap: No EAP Start, assuming it's an on-going EAP conversation
(12)     [eap] = updated
(12)     [files] = noop
(12)     [expiration] = noop
(12)     [logintime] = noop
Not doing PAP as Auth-Type is already set.
(12)     [pap] = noop
(12)   } # authorize = updated
(12) Found Auth-Type = eap
(12) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(12)   authenticate {
(12) eap: Expiring EAP session with state 0xb53eebdcb5b4efc6
(12) eap: Finished EAP session with state 0xb53eebdcb5b4efc6
(12) eap: Previous EAP request found for state 0xb53eebdcb5b4efc6, released from the list
(12) eap: Peer sent packet with method EAP NAK (3)
(12) eap: Found mutually acceptable type PEAP (25)
(12) eap: Calling submodule eap_peap to process data
(12) eap_peap: (TLS) Initiating new session
(12) eap: Sending EAP Request (code 1) ID 139 length 6
(12) eap: EAP session adding &reply:State = 0xb53eebdcb4b5f2c6
(12)     [eap] = handled
(12)   } # authenticate = handled
(12) Using Post-Auth-Type Challenge
(12) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(12)   Challenge { ... } # empty sub-section is ignored
(12) session-state: Saving cached attributes
(12)   Framed-MTU = 994
(12) Sent Access-Challenge Id 12 from 127.0.0.1:1812 to 127.0.0.1:57623 length 64
(12)   EAP-Message = 0x018b00061920
(12)   Message-Authenticator = 0x00000000000000000000000000000000
(12)   State = 0xb53eebdcb4b5f2c6b8da839cfd98a9b8
(12) Finished request
Waking up in 4.9 seconds.
(13) Received Access-Request Id 13 from 127.0.0.1:57623 to 127.0.0.1:1812 length 428
(13)   User-Name = "anonymous"
(13)   NAS-IP-Address = 127.0.0.1
(13)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(13)   NAS-Port-Type = Wireless-802.11
(13)   Service-Type = Framed-User
(13)   NAS-Port = 1
(13)   Calling-Station-Id = "DC-A6-32-DF-E1-5C"
(13)   Connect-Info = "CONNECT 54Mbps 802.11g"
(13)   Acct-Session-Id = "746D471FF70CA038"
(13)   Acct-Multi-Session-Id = "5DD264ACEE95EDC8"
(13)   WLAN-Pairwise-Cipher = 1027076
(13)   WLAN-Group-Cipher = 1027076
(13)   WLAN-AKM-Suite = 1027073
(13)   WLAN-Group-Mgmt-Cipher = 1027078
(13)   Framed-MTU = 1400
(13)   EAP-Message = 0x028b00c21980000000b816030100b3010000af0303fd713f36db9617b02ec597ee4945ba93df64ca5a692b43a57f1a3582566a8cbd000038c02cc030009fcca9cca8ccaac02bc02f009ec024c028006bc023c0270067c00ac0140039c009c0130033009d009c003d003c0035002f00ff0100004e000b000403000102000a000c000a001d0017001e001900180016000000170000000d002a0028040305030603080708080809080a080b080408050806040105010601030303010302040205020602
(13)   State = 0xb53eebdcb4b5f2c6b8da839cfd98a9b8
(13)   Message-Authenticator = 0x7257bae8e2e2af9b51c8f5dfa71785b9
(13) Restoring &session-state
(13)   &session-state:Framed-MTU = 994
(13) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(13)   authorize {
(13)     policy filter_username {
(13)       if (&User-Name) {
(13)       if (&User-Name)  -> TRUE
(13)       if (&User-Name)  {
(13)         if (&User-Name =~ / /) {
(13)         if (&User-Name =~ / /)  -> FALSE
(13)         if (&User-Name =~ /@[^@]*@/ ) {
(13)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(13)         if (&User-Name =~ /\.\./ ) {
(13)         if (&User-Name =~ /\.\./ )  -> FALSE
(13)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(13)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(13)         if (&User-Name =~ /\.$/)  {
(13)         if (&User-Name =~ /\.$/)   -> FALSE
(13)         if (&User-Name =~ /@\./)  {
(13)         if (&User-Name =~ /@\./)   -> FALSE
(13)       } # if (&User-Name)  = notfound
(13)     } # policy filter_username = notfound
(13)     [preprocess] = ok
(13)     [chap] = noop
(13)     [mschap] = noop
(13)     [digest] = noop
(13) suffix: Checking for suffix after "@"
(13) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(13) suffix: No such realm "NULL"
(13)     [suffix] = noop
(13) eap: Peer sent EAP Response (code 2) ID 139 length 194
(13) eap: Continuing tunnel setup
(13)     [eap] = ok
(13)   } # authorize = ok
(13) Found Auth-Type = eap
(13) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(13)   authenticate {
(13) eap: Expiring EAP session with state 0xb53eebdcb4b5f2c6
(13) eap: Finished EAP session with state 0xb53eebdcb4b5f2c6
(13) eap: Previous EAP request found for state 0xb53eebdcb4b5f2c6, released from the list
(13) eap: Peer sent packet with method EAP PEAP (25)
(13) eap: Calling submodule eap_peap to process data
(13) eap_peap: (TLS) EAP Peer says that the final record size will be 184 bytes
(13) eap_peap: (TLS) EAP Got all data (184 bytes)
(13) eap_peap: (TLS) Handshake state - before SSL initialization
(13) eap_peap: (TLS) Handshake state - Server before SSL initialization
(13) eap_peap: (TLS) Handshake state - Server before SSL initialization
(13) eap_peap: (TLS) recv TLS 1.3 Handshake, ClientHello
(13) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read client hello
(13) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHello
(13) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server hello
(13) eap_peap: (TLS) send TLS 1.2 Handshake, Certificate
(13) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write certificate
(13) eap_peap: (TLS) send TLS 1.2 Handshake, ServerKeyExchange
(13) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write key exchange
(13) eap_peap: (TLS) send TLS 1.2 Handshake, ServerHelloDone
(13) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server done
(13) eap_peap: (TLS) Server : Need to read more data: SSLv3/TLS write server done
(13) eap_peap: (TLS) In Handshake Phase
(13) eap: Sending EAP Request (code 1) ID 140 length 1004
(13) eap: EAP session adding &reply:State = 0xb53eebdcb7b2f2c6
(13)     [eap] = handled
(13)   } # authenticate = handled
(13) Using Post-Auth-Type Challenge
(13) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(13)   Challenge { ... } # empty sub-section is ignored
(13) session-state: Saving cached attributes
(13)   Framed-MTU = 994
(13)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(13)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(13)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(13)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(13)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(13) Sent Access-Challenge Id 13 from 127.0.0.1:1812 to 127.0.0.1:57623 length 1068
(13)   EAP-Message = 0x018c03ec19c000000aac160303003d020000390303f7f773800c1139c93b2c4acebdc70c17b263d64897815350f76b0811a219cc5d00c030000011ff01000100000b00040300010200170000160303092b0b0009270009240004203082041c30820304a003020102020101300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232333136353534385a170d3234303232313136353534385a307c310b3009060355040613024652310f300d06035504080c0652616469757331153013060355040a0c0c4578616d706c6520496e632e3123302106035504030c1a4578616d70
(13)   Message-Authenticator = 0x00000000000000000000000000000000
(13)   State = 0xb53eebdcb7b2f2c6b8da839cfd98a9b8
(13) Finished request
Waking up in 4.9 seconds.
(14) Received Access-Request Id 14 from 127.0.0.1:57623 to 127.0.0.1:1812 length 240
(14)   User-Name = "anonymous"
(14)   NAS-IP-Address = 127.0.0.1
(14)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(14)   NAS-Port-Type = Wireless-802.11
(14)   Service-Type = Framed-User
(14)   NAS-Port = 1
(14)   Calling-Station-Id = "DC-A6-32-DF-E1-5C"
(14)   Connect-Info = "CONNECT 54Mbps 802.11g"
(14)   Acct-Session-Id = "746D471FF70CA038"
(14)   Acct-Multi-Session-Id = "5DD264ACEE95EDC8"
(14)   WLAN-Pairwise-Cipher = 1027076
(14)   WLAN-Group-Cipher = 1027076
(14)   WLAN-AKM-Suite = 1027073
(14)   WLAN-Group-Mgmt-Cipher = 1027078
(14)   Framed-MTU = 1400
(14)   EAP-Message = 0x028c00061900
(14)   State = 0xb53eebdcb7b2f2c6b8da839cfd98a9b8
(14)   Message-Authenticator = 0xc39cf30e1d993044055f63c552d9df03
(14) Restoring &session-state
(14)   &session-state:Framed-MTU = 994
(14)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(14)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(14)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(14)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(14)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(14) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(14)   authorize {
(14)     policy filter_username {
(14)       if (&User-Name) {
(14)       if (&User-Name)  -> TRUE
(14)       if (&User-Name)  {
(14)         if (&User-Name =~ / /) {
(14)         if (&User-Name =~ / /)  -> FALSE
(14)         if (&User-Name =~ /@[^@]*@/ ) {
(14)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(14)         if (&User-Name =~ /\.\./ ) {
(14)         if (&User-Name =~ /\.\./ )  -> FALSE
(14)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(14)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(14)         if (&User-Name =~ /\.$/)  {
(14)         if (&User-Name =~ /\.$/)   -> FALSE
(14)         if (&User-Name =~ /@\./)  {
(14)         if (&User-Name =~ /@\./)   -> FALSE
(14)       } # if (&User-Name)  = notfound
(14)     } # policy filter_username = notfound
(14)     [preprocess] = ok
(14)     [chap] = noop
(14)     [mschap] = noop
(14)     [digest] = noop
(14) suffix: Checking for suffix after "@"
(14) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(14) suffix: No such realm "NULL"
(14)     [suffix] = noop
(14) eap: Peer sent EAP Response (code 2) ID 140 length 6
(14) eap: Continuing tunnel setup
(14)     [eap] = ok
(14)   } # authorize = ok
(14) Found Auth-Type = eap
(14) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(14)   authenticate {
(14) eap: Expiring EAP session with state 0xb53eebdcb7b2f2c6
(14) eap: Finished EAP session with state 0xb53eebdcb7b2f2c6
(14) eap: Previous EAP request found for state 0xb53eebdcb7b2f2c6, released from the list
(14) eap: Peer sent packet with method EAP PEAP (25)
(14) eap: Calling submodule eap_peap to process data
(14) eap_peap: (TLS) Peer ACKed our handshake fragment
(14) eap: Sending EAP Request (code 1) ID 141 length 1000
(14) eap: EAP session adding &reply:State = 0xb53eebdcb6b3f2c6
(14)     [eap] = handled
(14)   } # authenticate = handled
(14) Using Post-Auth-Type Challenge
(14) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(14)   Challenge { ... } # empty sub-section is ignored
(14) session-state: Saving cached attributes
(14)   Framed-MTU = 994
(14)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(14)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(14)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(14)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(14)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(14) Sent Access-Challenge Id 14 from 127.0.0.1:1812 to 127.0.0.1:57623 length 1064
(14)   EAP-Message = 0x018d03e81940fdc5d236f5cebe7b526d662e8d0c3336e0804a8a795a821a8dfea62d43c63bbb694adeed590362a65c8a265eae3cd71b430a3dfe2edfa887fa5816577ab1223ae511b3f2e37cd250f622f068aaca3941e0a54a8ef6e236114871333ac2763798f73181d75c408eaad48291d2bac09400dc45fc153b29d61a00896c9415f6f4ce2bd8d4a98c105a4c480e11cb8b51900004fe308204fa308203e2a00302010202146f0684a6149c1b984ef557a40f4730895d7e5f43300d06092a864886f70d01010b0500308193310b3009060355040613024652310f300d06035504080c065261646975733112301006035504070c09536f6d65776865726531153013060355040a0c0c4578616d706c6520496e632e3120301e06092a864886f70d010901161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f72697479301e170d3233313232333136353534335a170d32343032
(14)   Message-Authenticator = 0x00000000000000000000000000000000
(14)   State = 0xb53eebdcb6b3f2c6b8da839cfd98a9b8
(14) Finished request
Waking up in 4.9 seconds.
(15) Received Access-Request Id 15 from 127.0.0.1:57623 to 127.0.0.1:1812 length 240
(15)   User-Name = "anonymous"
(15)   NAS-IP-Address = 127.0.0.1
(15)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(15)   NAS-Port-Type = Wireless-802.11
(15)   Service-Type = Framed-User
(15)   NAS-Port = 1
(15)   Calling-Station-Id = "DC-A6-32-DF-E1-5C"
(15)   Connect-Info = "CONNECT 54Mbps 802.11g"
(15)   Acct-Session-Id = "746D471FF70CA038"
(15)   Acct-Multi-Session-Id = "5DD264ACEE95EDC8"
(15)   WLAN-Pairwise-Cipher = 1027076
(15)   WLAN-Group-Cipher = 1027076
(15)   WLAN-AKM-Suite = 1027073
(15)   WLAN-Group-Mgmt-Cipher = 1027078
(15)   Framed-MTU = 1400
(15)   EAP-Message = 0x028d00061900
(15)   State = 0xb53eebdcb6b3f2c6b8da839cfd98a9b8
(15)   Message-Authenticator = 0xbb03ba1ebd6d2e67e3fa4b62529a597f
(15) Restoring &session-state
(15)   &session-state:Framed-MTU = 994
(15)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(15)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(15)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(15)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(15)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(15) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(15)   authorize {
(15)     policy filter_username {
(15)       if (&User-Name) {
(15)       if (&User-Name)  -> TRUE
(15)       if (&User-Name)  {
(15)         if (&User-Name =~ / /) {
(15)         if (&User-Name =~ / /)  -> FALSE
(15)         if (&User-Name =~ /@[^@]*@/ ) {
(15)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(15)         if (&User-Name =~ /\.\./ ) {
(15)         if (&User-Name =~ /\.\./ )  -> FALSE
(15)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(15)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(15)         if (&User-Name =~ /\.$/)  {
(15)         if (&User-Name =~ /\.$/)   -> FALSE
(15)         if (&User-Name =~ /@\./)  {
(15)         if (&User-Name =~ /@\./)   -> FALSE
(15)       } # if (&User-Name)  = notfound
(15)     } # policy filter_username = notfound
(15)     [preprocess] = ok
(15)     [chap] = noop
(15)     [mschap] = noop
(15)     [digest] = noop
(15) suffix: Checking for suffix after "@"
(15) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(15) suffix: No such realm "NULL"
(15)     [suffix] = noop
(15) eap: Peer sent EAP Response (code 2) ID 141 length 6
(15) eap: Continuing tunnel setup
(15)     [eap] = ok
(15)   } # authorize = ok
(15) Found Auth-Type = eap
(15) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(15)   authenticate {
(15) eap: Expiring EAP session with state 0xb53eebdcb6b3f2c6
(15) eap: Finished EAP session with state 0xb53eebdcb6b3f2c6
(15) eap: Previous EAP request found for state 0xb53eebdcb6b3f2c6, released from the list
(15) eap: Peer sent packet with method EAP PEAP (25)
(15) eap: Calling submodule eap_peap to process data
(15) eap_peap: (TLS) Peer ACKed our handshake fragment
(15) eap: Sending EAP Request (code 1) ID 142 length 750
(15) eap: EAP session adding &reply:State = 0xb53eebdcb1b0f2c6
(15)     [eap] = handled
(15)   } # authenticate = handled
(15) Using Post-Auth-Type Challenge
(15) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(15)   Challenge { ... } # empty sub-section is ignored
(15) session-state: Saving cached attributes
(15)   Framed-MTU = 994
(15)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(15)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(15)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(15)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(15)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(15) Sent Access-Challenge Id 15 from 127.0.0.1:1812 to 127.0.0.1:57623 length 812
(15)   EAP-Message = 0x018e02ee1900161161646d696e406578616d706c652e6f72673126302406035504030c1d4578616d706c6520436572746966696361746520417574686f7269747982146f0684a6149c1b984ef557a40f4730895d7e5f43300f0603551d130101ff040530030101ff30360603551d1f042f302d302ba029a0278625687474703a2f2f7777772e6578616d706c652e6f72672f6578616d706c655f63612e63726c300d06092a864886f70d01010b050003820101003807f802d6e3f777023cafffba3d532320e791bc2fe8808de95c0d3d0f48f999b3dfd75562a21e51aedb44e704f7da35cef48a70b02f189ef938473e56c47ab3879b49f65281e70ea094586954f0645469ae97a3e857379bf32e358d7d67eb5b8b0dd94b85192ed1ed655bc4dfc605d1b7d4e9ae2c577651a694122ea52dfab128d837b6eeeaeee6c41b3a58dea83f99fe284c685ea730ea0cc3343f958674ec886221c3d0ba7ac099236e6ba1f80655e446919b8c239057a73f8e752810006c6e8b8b
(15)   Message-Authenticator = 0x00000000000000000000000000000000
(15)   State = 0xb53eebdcb1b0f2c6b8da839cfd98a9b8
(15) Finished request
Waking up in 4.9 seconds.
(16) Received Access-Request Id 16 from 127.0.0.1:57623 to 127.0.0.1:1812 length 337
(16)   User-Name = "anonymous"
(16)   NAS-IP-Address = 127.0.0.1
(16)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(16)   NAS-Port-Type = Wireless-802.11
(16)   Service-Type = Framed-User
(16)   NAS-Port = 1
(16)   Calling-Station-Id = "DC-A6-32-DF-E1-5C"
(16)   Connect-Info = "CONNECT 54Mbps 802.11g"
(16)   Acct-Session-Id = "746D471FF70CA038"
(16)   Acct-Multi-Session-Id = "5DD264ACEE95EDC8"
(16)   WLAN-Pairwise-Cipher = 1027076
(16)   WLAN-Group-Cipher = 1027076
(16)   WLAN-AKM-Suite = 1027073
(16)   WLAN-Group-Mgmt-Cipher = 1027078
(16)   Framed-MTU = 1400
(16)   EAP-Message = 0x028e006719800000005d16030300251000002120ee283b8ea7bd143153f7412f1bfda9664d09336faf6c89f21f23a33595473a1b14030300010116030300281f38d200dd6082c045015a72cf741319e157d06b0667144180d9dc7159661465b5cad33e94554b27
(16)   State = 0xb53eebdcb1b0f2c6b8da839cfd98a9b8
(16)   Message-Authenticator = 0x7c2a30702069ee0bc416dab2c6a15417
(16) Restoring &session-state
(16)   &session-state:Framed-MTU = 994
(16)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(16)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(16)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(16)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(16)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(16) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(16)   authorize {
(16)     policy filter_username {
(16)       if (&User-Name) {
(16)       if (&User-Name)  -> TRUE
(16)       if (&User-Name)  {
(16)         if (&User-Name =~ / /) {
(16)         if (&User-Name =~ / /)  -> FALSE
(16)         if (&User-Name =~ /@[^@]*@/ ) {
(16)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(16)         if (&User-Name =~ /\.\./ ) {
(16)         if (&User-Name =~ /\.\./ )  -> FALSE
(16)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(16)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(16)         if (&User-Name =~ /\.$/)  {
(16)         if (&User-Name =~ /\.$/)   -> FALSE
(16)         if (&User-Name =~ /@\./)  {
(16)         if (&User-Name =~ /@\./)   -> FALSE
(16)       } # if (&User-Name)  = notfound
(16)     } # policy filter_username = notfound
(16)     [preprocess] = ok
(16)     [chap] = noop
(16)     [mschap] = noop
(16)     [digest] = noop
(16) suffix: Checking for suffix after "@"
(16) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(16) suffix: No such realm "NULL"
(16)     [suffix] = noop
(16) eap: Peer sent EAP Response (code 2) ID 142 length 103
(16) eap: Continuing tunnel setup
(16)     [eap] = ok
(16)   } # authorize = ok
(16) Found Auth-Type = eap
(16) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(16)   authenticate {
(16) eap: Expiring EAP session with state 0xb53eebdcb1b0f2c6
(16) eap: Finished EAP session with state 0xb53eebdcb1b0f2c6
(16) eap: Previous EAP request found for state 0xb53eebdcb1b0f2c6, released from the list
(16) eap: Peer sent packet with method EAP PEAP (25)
(16) eap: Calling submodule eap_peap to process data
(16) eap_peap: (TLS) EAP Peer says that the final record size will be 93 bytes
(16) eap_peap: (TLS) EAP Got all data (93 bytes)
(16) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server done
(16) eap_peap: (TLS) recv TLS 1.2 Handshake, ClientKeyExchange
(16) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read client key exchange
(16) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read change cipher spec
(16) eap_peap: (TLS) recv TLS 1.2 Handshake, Finished
(16) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read finished
(16) eap_peap: (TLS) send TLS 1.2 ChangeCipherSpec
(16) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write change cipher spec
(16) eap_peap: (TLS) send TLS 1.2 Handshake, Finished
(16) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write finished
(16) eap_peap: (TLS) Handshake state - SSL negotiation finished successfully
(16) eap_peap: (TLS) Connection Established
(16) eap_peap:   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(16) eap_peap:   TLS-Session-Version = "TLS 1.2"
(16) eap: Sending EAP Request (code 1) ID 143 length 57
(16) eap: EAP session adding &reply:State = 0xb53eebdcb0b1f2c6
(16)     [eap] = handled
(16)   } # authenticate = handled
(16) Using Post-Auth-Type Challenge
(16) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(16)   Challenge { ... } # empty sub-section is ignored
(16) session-state: Saving cached attributes
(16)   Framed-MTU = 994
(16)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(16)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(16)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(16)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(16)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(16)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(16)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(16)   TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(16)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(16)   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(16)   TLS-Session-Version = "TLS 1.2"
(16) Sent Access-Challenge Id 16 from 127.0.0.1:1812 to 127.0.0.1:57623 length 115
(16)   EAP-Message = 0x018f003919001403030001011603030028fec0f42ed52f9371c2cd3f33703813ecf56d4cffac77019b3eb5a451f4879916644d5caca8af7b21
(16)   Message-Authenticator = 0x00000000000000000000000000000000
(16)   State = 0xb53eebdcb0b1f2c6b8da839cfd98a9b8
(16) Finished request
Waking up in 4.9 seconds.
(17) Received Access-Request Id 17 from 127.0.0.1:57623 to 127.0.0.1:1812 length 240
(17)   User-Name = "anonymous"
(17)   NAS-IP-Address = 127.0.0.1
(17)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(17)   NAS-Port-Type = Wireless-802.11
(17)   Service-Type = Framed-User
(17)   NAS-Port = 1
(17)   Calling-Station-Id = "DC-A6-32-DF-E1-5C"
(17)   Connect-Info = "CONNECT 54Mbps 802.11g"
(17)   Acct-Session-Id = "746D471FF70CA038"
(17)   Acct-Multi-Session-Id = "5DD264ACEE95EDC8"
(17)   WLAN-Pairwise-Cipher = 1027076
(17)   WLAN-Group-Cipher = 1027076
(17)   WLAN-AKM-Suite = 1027073
(17)   WLAN-Group-Mgmt-Cipher = 1027078
(17)   Framed-MTU = 1400
(17)   EAP-Message = 0x028f00061900
(17)   State = 0xb53eebdcb0b1f2c6b8da839cfd98a9b8
(17)   Message-Authenticator = 0xcc00ad713eedbda7ed7b70b4d45fcece
(17) Restoring &session-state
(17)   &session-state:Framed-MTU = 994
(17)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(17)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(17)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(17)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(17)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(17)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(17)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(17)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(17)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(17)   &session-state:TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(17)   &session-state:TLS-Session-Version = "TLS 1.2"
(17) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(17)   authorize {
(17)     policy filter_username {
(17)       if (&User-Name) {
(17)       if (&User-Name)  -> TRUE
(17)       if (&User-Name)  {
(17)         if (&User-Name =~ / /) {
(17)         if (&User-Name =~ / /)  -> FALSE
(17)         if (&User-Name =~ /@[^@]*@/ ) {
(17)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(17)         if (&User-Name =~ /\.\./ ) {
(17)         if (&User-Name =~ /\.\./ )  -> FALSE
(17)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(17)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(17)         if (&User-Name =~ /\.$/)  {
(17)         if (&User-Name =~ /\.$/)   -> FALSE
(17)         if (&User-Name =~ /@\./)  {
(17)         if (&User-Name =~ /@\./)   -> FALSE
(17)       } # if (&User-Name)  = notfound
(17)     } # policy filter_username = notfound
(17)     [preprocess] = ok
(17)     [chap] = noop
(17)     [mschap] = noop
(17)     [digest] = noop
(17) suffix: Checking for suffix after "@"
(17) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(17) suffix: No such realm "NULL"
(17)     [suffix] = noop
(17) eap: Peer sent EAP Response (code 2) ID 143 length 6
(17) eap: Continuing tunnel setup
(17)     [eap] = ok
(17)   } # authorize = ok
(17) Found Auth-Type = eap
(17) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(17)   authenticate {
(17) eap: Expiring EAP session with state 0xb53eebdcb0b1f2c6
(17) eap: Finished EAP session with state 0xb53eebdcb0b1f2c6
(17) eap: Previous EAP request found for state 0xb53eebdcb0b1f2c6, released from the list
(17) eap: Peer sent packet with method EAP PEAP (25)
(17) eap: Calling submodule eap_peap to process data
(17) eap_peap: (TLS) Peer ACKed our handshake fragment.  handshake is finished
(17) eap_peap: Session established.  Decoding tunneled attributes
(17) eap_peap: PEAP state TUNNEL ESTABLISHED
(17) eap: Sending EAP Request (code 1) ID 144 length 40
(17) eap: EAP session adding &reply:State = 0xb53eebdcb3aef2c6
(17)     [eap] = handled
(17)   } # authenticate = handled
(17) Using Post-Auth-Type Challenge
(17) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(17)   Challenge { ... } # empty sub-section is ignored
(17) session-state: Saving cached attributes
(17)   Framed-MTU = 994
(17)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(17)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(17)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(17)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(17)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(17)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(17)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(17)   TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(17)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(17)   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(17)   TLS-Session-Version = "TLS 1.2"
(17) Sent Access-Challenge Id 17 from 127.0.0.1:1812 to 127.0.0.1:57623 length 98
(17)   EAP-Message = 0x019000281900170303001dfec0f42ed52f9372f0e0eae960e6b0994400a7df74410ccf96f2d623d4
(17)   Message-Authenticator = 0x00000000000000000000000000000000
(17)   State = 0xb53eebdcb3aef2c6b8da839cfd98a9b8
(17) Finished request
Waking up in 4.9 seconds.
(18) Received Access-Request Id 18 from 127.0.0.1:57623 to 127.0.0.1:1812 length 285
(18)   User-Name = "anonymous"
(18)   NAS-IP-Address = 127.0.0.1
(18)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(18)   NAS-Port-Type = Wireless-802.11
(18)   Service-Type = Framed-User
(18)   NAS-Port = 1
(18)   Calling-Station-Id = "DC-A6-32-DF-E1-5C"
(18)   Connect-Info = "CONNECT 54Mbps 802.11g"
(18)   Acct-Session-Id = "746D471FF70CA038"
(18)   Acct-Multi-Session-Id = "5DD264ACEE95EDC8"
(18)   WLAN-Pairwise-Cipher = 1027076
(18)   WLAN-Group-Cipher = 1027076
(18)   WLAN-AKM-Suite = 1027073
(18)   WLAN-Group-Mgmt-Cipher = 1027078
(18)   Framed-MTU = 1400
(18)   EAP-Message = 0x02900033190017030300281f38d200dd6082c179985fb1e8edf43517afadde85753ed7ace824b541da7a6ad6f3231b22aae7b6
(18)   State = 0xb53eebdcb3aef2c6b8da839cfd98a9b8
(18)   Message-Authenticator = 0xf26caeed4f363c3f2aff76d747c0b86d
(18) Restoring &session-state
(18)   &session-state:Framed-MTU = 994
(18)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(18)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(18)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(18)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(18)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(18)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(18)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(18)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(18)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(18)   &session-state:TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(18)   &session-state:TLS-Session-Version = "TLS 1.2"
(18) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(18)   authorize {
(18)     policy filter_username {
(18)       if (&User-Name) {
(18)       if (&User-Name)  -> TRUE
(18)       if (&User-Name)  {
(18)         if (&User-Name =~ / /) {
(18)         if (&User-Name =~ / /)  -> FALSE
(18)         if (&User-Name =~ /@[^@]*@/ ) {
(18)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(18)         if (&User-Name =~ /\.\./ ) {
(18)         if (&User-Name =~ /\.\./ )  -> FALSE
(18)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(18)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(18)         if (&User-Name =~ /\.$/)  {
(18)         if (&User-Name =~ /\.$/)   -> FALSE
(18)         if (&User-Name =~ /@\./)  {
(18)         if (&User-Name =~ /@\./)   -> FALSE
(18)       } # if (&User-Name)  = notfound
(18)     } # policy filter_username = notfound
(18)     [preprocess] = ok
(18)     [chap] = noop
(18)     [mschap] = noop
(18)     [digest] = noop
(18) suffix: Checking for suffix after "@"
(18) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(18) suffix: No such realm "NULL"
(18)     [suffix] = noop
(18) eap: Peer sent EAP Response (code 2) ID 144 length 51
(18) eap: Continuing tunnel setup
(18)     [eap] = ok
(18)   } # authorize = ok
(18) Found Auth-Type = eap
(18) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(18)   authenticate {
(18) eap: Expiring EAP session with state 0xb53eebdcb3aef2c6
(18) eap: Finished EAP session with state 0xb53eebdcb3aef2c6
(18) eap: Previous EAP request found for state 0xb53eebdcb3aef2c6, released from the list
(18) eap: Peer sent packet with method EAP PEAP (25)
(18) eap: Calling submodule eap_peap to process data
(18) eap_peap: (TLS) EAP Done initial handshake
(18) eap_peap: Session established.  Decoding tunneled attributes
(18) eap_peap: PEAP state WAITING FOR INNER IDENTITY
(18) eap_peap: Identity - bob@example.org
(18) eap_peap: Got inner identity 'bob@example.org'
(18) eap_peap: Setting default EAP type for tunneled EAP session
(18) eap_peap: Got tunneled request
(18) eap_peap:   EAP-Message = 0x0290001401626f62406578616d706c652e6f7267
(18) eap_peap: Setting User-Name to bob@example.org
(18) eap_peap: Sending tunneled request to inner-tunnel
(18) eap_peap:   EAP-Message = 0x0290001401626f62406578616d706c652e6f7267
(18) eap_peap:   FreeRADIUS-Proxied-To = 127.0.0.1
(18) eap_peap:   User-Name = "bob@example.org"
(18) Virtual server inner-tunnel received request
(18)   EAP-Message = 0x0290001401626f62406578616d706c652e6f7267
(18)   FreeRADIUS-Proxied-To = 127.0.0.1
(18)   User-Name = "bob@example.org"
(18) server inner-tunnel {
(18)   # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/inner-tunnel
(18)     authorize {
(18)       policy filter_username {
(18)         if (&User-Name) {
(18)         if (&User-Name)  -> TRUE
(18)         if (&User-Name)  {
(18)           if (&User-Name =~ / /) {
(18)           if (&User-Name =~ / /)  -> FALSE
(18)           if (&User-Name =~ /@[^@]*@/ ) {
(18)           if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(18)           if (&User-Name =~ /\.\./ ) {
(18)           if (&User-Name =~ /\.\./ )  -> FALSE
(18)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(18)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(18)           if (&User-Name =~ /\.$/)  {
(18)           if (&User-Name =~ /\.$/)   -> FALSE
(18)           if (&User-Name =~ /@\./)  {
(18)           if (&User-Name =~ /@\./)   -> FALSE
(18)         } # if (&User-Name)  = notfound
(18)       } # policy filter_username = notfound
(18)       [chap] = noop
(18)       [mschap] = noop
(18) suffix: Checking for suffix after "@"
(18) suffix: Looking up realm "example.org" for User-Name = "bob@example.org"
(18) suffix: No such realm "example.org"
(18)       [suffix] = noop
(18)       update control {
(18)         &Proxy-To-Realm := LOCAL
(18)       } # update control = noop
(18) eap: Peer sent EAP Response (code 2) ID 144 length 20
(18) eap: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
(18)       [eap] = ok
(18)     } # authorize = ok
(18)   Found Auth-Type = eap
(18)   # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/inner-tunnel
(18)     authenticate {
(18) eap: Peer sent packet with method EAP Identity (1)
(18) eap: Calling submodule eap_mschapv2 to process data
(18) eap_mschapv2: Issuing Challenge
(18) eap: Sending EAP Request (code 1) ID 145 length 43
(18) eap: EAP session adding &reply:State = 0xa1bc637aa12d799a
(18)       [eap] = handled
(18)     } # authenticate = handled
(18) } # server inner-tunnel
(18) Virtual server sending reply
(18)   EAP-Message = 0x0191002b1a019100261043d74a33e0759e7f066327696f869b1c667265657261646975732d332e302e3236
(18)   Message-Authenticator = 0x00000000000000000000000000000000
(18)   State = 0xa1bc637aa12d799a8e02c6f675337982
(18) eap_peap: Got tunneled reply code 11
(18) eap_peap:   EAP-Message = 0x0191002b1a019100261043d74a33e0759e7f066327696f869b1c667265657261646975732d332e302e3236
(18) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(18) eap_peap:   State = 0xa1bc637aa12d799a8e02c6f675337982
(18) eap_peap: Got tunneled reply RADIUS code 11
(18) eap_peap:   EAP-Message = 0x0191002b1a019100261043d74a33e0759e7f066327696f869b1c667265657261646975732d332e302e3236
(18) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(18) eap_peap:   State = 0xa1bc637aa12d799a8e02c6f675337982
(18) eap_peap: Got tunneled Access-Challenge
(18) eap: Sending EAP Request (code 1) ID 145 length 74
(18) eap: EAP session adding &reply:State = 0xb53eebdcb2aff2c6
(18)     [eap] = handled
(18)   } # authenticate = handled
(18) Using Post-Auth-Type Challenge
(18) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(18)   Challenge { ... } # empty sub-section is ignored
(18) session-state: Saving cached attributes
(18)   Framed-MTU = 994
(18)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(18)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(18)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(18)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(18)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(18)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(18)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(18)   TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(18)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(18)   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(18)   TLS-Session-Version = "TLS 1.2"
(18) Sent Access-Challenge Id 18 from 127.0.0.1:1812 to 127.0.0.1:57623 length 132
(18)   EAP-Message = 0x0191004a1900170303003ffec0f42ed52f9373b093bc4fef7980038fa2d8ce176ed640fafd849d334dd0b7f084a50247fd9192c9ec6af568169724e71277dcb0e5b3f1ac6a8a03f61b36
(18)   Message-Authenticator = 0x00000000000000000000000000000000
(18)   State = 0xb53eebdcb2aff2c6b8da839cfd98a9b8
(18) Finished request
Waking up in 4.9 seconds.
(19) Received Access-Request Id 19 from 127.0.0.1:57623 to 127.0.0.1:1812 length 339
(19)   User-Name = "anonymous"
(19)   NAS-IP-Address = 127.0.0.1
(19)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(19)   NAS-Port-Type = Wireless-802.11
(19)   Service-Type = Framed-User
(19)   NAS-Port = 1
(19)   Calling-Station-Id = "DC-A6-32-DF-E1-5C"
(19)   Connect-Info = "CONNECT 54Mbps 802.11g"
(19)   Acct-Session-Id = "746D471FF70CA038"
(19)   Acct-Multi-Session-Id = "5DD264ACEE95EDC8"
(19)   WLAN-Pairwise-Cipher = 1027076
(19)   WLAN-Group-Cipher = 1027076
(19)   WLAN-AKM-Suite = 1027073
(19)   WLAN-Group-Mgmt-Cipher = 1027078
(19)   Framed-MTU = 1400
(19)   EAP-Message = 0x029100691900170303005e1f38d200dd6082c2bbce3786a3de338a459607caaa0b1489136252baff5f916ef7389bbfab338dbc551862c5540e1abc8f7b3e8a368f4ce2df484b93d9af0c0d79d6e9a791162ddbff75335d22007fc101b90c8b81ceddd049304622e822
(19)   State = 0xb53eebdcb2aff2c6b8da839cfd98a9b8
(19)   Message-Authenticator = 0xb9221e2f22aa79bfe1b956023e60c9bb
(19) Restoring &session-state
(19)   &session-state:Framed-MTU = 994
(19)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(19)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(19)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(19)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(19)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(19)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(19)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(19)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(19)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(19)   &session-state:TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(19)   &session-state:TLS-Session-Version = "TLS 1.2"
(19) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(19)   authorize {
(19)     policy filter_username {
(19)       if (&User-Name) {
(19)       if (&User-Name)  -> TRUE
(19)       if (&User-Name)  {
(19)         if (&User-Name =~ / /) {
(19)         if (&User-Name =~ / /)  -> FALSE
(19)         if (&User-Name =~ /@[^@]*@/ ) {
(19)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(19)         if (&User-Name =~ /\.\./ ) {
(19)         if (&User-Name =~ /\.\./ )  -> FALSE
(19)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(19)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(19)         if (&User-Name =~ /\.$/)  {
(19)         if (&User-Name =~ /\.$/)   -> FALSE
(19)         if (&User-Name =~ /@\./)  {
(19)         if (&User-Name =~ /@\./)   -> FALSE
(19)       } # if (&User-Name)  = notfound
(19)     } # policy filter_username = notfound
(19)     [preprocess] = ok
(19)     [chap] = noop
(19)     [mschap] = noop
(19)     [digest] = noop
(19) suffix: Checking for suffix after "@"
(19) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(19) suffix: No such realm "NULL"
(19)     [suffix] = noop
(19) eap: Peer sent EAP Response (code 2) ID 145 length 105
(19) eap: Continuing tunnel setup
(19)     [eap] = ok
(19)   } # authorize = ok
(19) Found Auth-Type = eap
(19) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(19)   authenticate {
(19) eap: Expiring EAP session with state 0xa1bc637aa12d799a
(19) eap: Finished EAP session with state 0xb53eebdcb2aff2c6
(19) eap: Previous EAP request found for state 0xb53eebdcb2aff2c6, released from the list
(19) eap: Peer sent packet with method EAP PEAP (25)
(19) eap: Calling submodule eap_peap to process data
(19) eap_peap: (TLS) EAP Done initial handshake
(19) eap_peap: Session established.  Decoding tunneled attributes
(19) eap_peap: PEAP state phase2
(19) eap_peap: EAP method MSCHAPv2 (26)
(19) eap_peap: Got tunneled request
(19) eap_peap:   EAP-Message = 0x0291004a1a0291004531206a95edbc97a206b1bfe7a8534c0bee00000000000000003d1353a7398d2ae2bdbcfb3edb20e495b795ebe421c8408600626f62406578616d706c652e6f7267
(19) eap_peap: Setting User-Name to bob@example.org
(19) eap_peap: Sending tunneled request to inner-tunnel
(19) eap_peap:   EAP-Message = 0x0291004a1a0291004531206a95edbc97a206b1bfe7a8534c0bee00000000000000003d1353a7398d2ae2bdbcfb3edb20e495b795ebe421c8408600626f62406578616d706c652e6f7267
(19) eap_peap:   FreeRADIUS-Proxied-To = 127.0.0.1
(19) eap_peap:   User-Name = "bob@example.org"
(19) eap_peap:   State = 0xa1bc637aa12d799a8e02c6f675337982
(19) Virtual server inner-tunnel received request
(19)   EAP-Message = 0x0291004a1a0291004531206a95edbc97a206b1bfe7a8534c0bee00000000000000003d1353a7398d2ae2bdbcfb3edb20e495b795ebe421c8408600626f62406578616d706c652e6f7267
(19)   FreeRADIUS-Proxied-To = 127.0.0.1
(19)   User-Name = "bob@example.org"
(19)   State = 0xa1bc637aa12d799a8e02c6f675337982
(19) server inner-tunnel {
(19)   session-state: No cached attributes
(19)   # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/inner-tunnel
(19)     authorize {
(19)       policy filter_username {
(19)         if (&User-Name) {
(19)         if (&User-Name)  -> TRUE
(19)         if (&User-Name)  {
(19)           if (&User-Name =~ / /) {
(19)           if (&User-Name =~ / /)  -> FALSE
(19)           if (&User-Name =~ /@[^@]*@/ ) {
(19)           if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(19)           if (&User-Name =~ /\.\./ ) {
(19)           if (&User-Name =~ /\.\./ )  -> FALSE
(19)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(19)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(19)           if (&User-Name =~ /\.$/)  {
(19)           if (&User-Name =~ /\.$/)   -> FALSE
(19)           if (&User-Name =~ /@\./)  {
(19)           if (&User-Name =~ /@\./)   -> FALSE
(19)         } # if (&User-Name)  = notfound
(19)       } # policy filter_username = notfound
(19)       [chap] = noop
(19)       [mschap] = noop
(19) suffix: Checking for suffix after "@"
(19) suffix: Looking up realm "example.org" for User-Name = "bob@example.org"
(19) suffix: No such realm "example.org"
(19)       [suffix] = noop
(19)       update control {
(19)         &Proxy-To-Realm := LOCAL
(19)       } # update control = noop
(19) eap: Peer sent EAP Response (code 2) ID 145 length 74
(19) eap: No EAP Start, assuming it's an on-going EAP conversation
(19)       [eap] = updated
(19) files: users: Matched entry bob@example.org at line 1
(19) files: EXPAND Hello, %{User-Name}
(19) files:    --> Hello, bob@example.org
(19)       [files] = ok
(19)       [expiration] = noop
(19)       [logintime] = noop
(19) pap: WARNING: Auth-Type already set.  Not setting to PAP
(19)       [pap] = noop
(19)     } # authorize = updated
(19)   Found Auth-Type = eap
(19)   # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/inner-tunnel
(19)     authenticate {
(19) eap: Expiring EAP session with state 0xa1bc637aa12d799a
(19) eap: Finished EAP session with state 0xa1bc637aa12d799a
(19) eap: Previous EAP request found for state 0xa1bc637aa12d799a, released from the list
(19) eap: Peer sent packet with method EAP MSCHAPv2 (26)
(19) eap: Calling submodule eap_mschapv2 to process data
(19) eap_mschapv2: # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/inner-tunnel
(19) eap_mschapv2:   authenticate {
(19) mschap: Found Cleartext-Password, hashing to create NT-Password
(19) mschap: Creating challenge hash with username: bob@example.org
(19) mschap: Client is using MS-CHAPv2
(19) mschap: Adding MS-CHAPv2 MPPE keys
(19) eap_mschapv2:     [mschap] = ok
(19) eap_mschapv2:   } # authenticate = ok
(19) eap_mschapv2: MSCHAP Success
(19) eap: Sending EAP Request (code 1) ID 146 length 51
(19) eap: EAP session adding &reply:State = 0xa1bc637aa02e799a
(19)       [eap] = handled
(19)     } # authenticate = handled
(19) } # server inner-tunnel
(19) Virtual server sending reply
(19)   Reply-Message = "Hello, bob@example.org"
(19)   EAP-Message = 0x019200331a0391002e533d30464141303836304343423845393238363634364531373333433237413931454435344239363430
(19)   Message-Authenticator = 0x00000000000000000000000000000000
(19)   State = 0xa1bc637aa02e799a8e02c6f675337982
(19) eap_peap: Got tunneled reply code 11
(19) eap_peap:   Reply-Message = "Hello, bob@example.org"
(19) eap_peap:   EAP-Message = 0x019200331a0391002e533d30464141303836304343423845393238363634364531373333433237413931454435344239363430
(19) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(19) eap_peap:   State = 0xa1bc637aa02e799a8e02c6f675337982
(19) eap_peap: Got tunneled reply RADIUS code 11
(19) eap_peap:   Reply-Message = "Hello, bob@example.org"
(19) eap_peap:   EAP-Message = 0x019200331a0391002e533d30464141303836304343423845393238363634364531373333433237413931454435344239363430
(19) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(19) eap_peap:   State = 0xa1bc637aa02e799a8e02c6f675337982
(19) eap_peap: Got tunneled Access-Challenge
(19) eap: Sending EAP Request (code 1) ID 146 length 82
(19) eap: EAP session adding &reply:State = 0xb53eebdcbdacf2c6
(19)     [eap] = handled
(19)   } # authenticate = handled
(19) Using Post-Auth-Type Challenge
(19) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(19)   Challenge { ... } # empty sub-section is ignored
(19) session-state: Saving cached attributes
(19)   Framed-MTU = 994
(19)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(19)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(19)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(19)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(19)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(19)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(19)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(19)   TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(19)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(19)   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(19)   TLS-Session-Version = "TLS 1.2"
(19) Sent Access-Challenge Id 19 from 127.0.0.1:1812 to 127.0.0.1:57623 length 140
(19)   EAP-Message = 0x0192005219001703030047fec0f42ed52f9374580796ea60b1ab554ae20736d1164a7689e690b219c7838173b5893f9b15fa999b9533db43dfe202ca8317622fe96c30ba9694a89f2505a9ffe259144dc99d
(19)   Message-Authenticator = 0x00000000000000000000000000000000
(19)   State = 0xb53eebdcbdacf2c6b8da839cfd98a9b8
(19) Finished request
Waking up in 4.9 seconds.
(20) Received Access-Request Id 20 from 127.0.0.1:57623 to 127.0.0.1:1812 length 271
(20)   User-Name = "anonymous"
(20)   NAS-IP-Address = 127.0.0.1
(20)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(20)   NAS-Port-Type = Wireless-802.11
(20)   Service-Type = Framed-User
(20)   NAS-Port = 1
(20)   Calling-Station-Id = "DC-A6-32-DF-E1-5C"
(20)   Connect-Info = "CONNECT 54Mbps 802.11g"
(20)   Acct-Session-Id = "746D471FF70CA038"
(20)   Acct-Multi-Session-Id = "5DD264ACEE95EDC8"
(20)   WLAN-Pairwise-Cipher = 1027076
(20)   WLAN-Group-Cipher = 1027076
(20)   WLAN-AKM-Suite = 1027073
(20)   WLAN-Group-Mgmt-Cipher = 1027078
(20)   Framed-MTU = 1400
(20)   EAP-Message = 0x029200251900170303001a1f38d200dd6082c3b9c2ee8c5d85d037fa76f5725ae7af944bcd
(20)   State = 0xb53eebdcbdacf2c6b8da839cfd98a9b8
(20)   Message-Authenticator = 0x74c156c7830d9fe6497d47936d767c04
(20) Restoring &session-state
(20)   &session-state:Framed-MTU = 994
(20)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(20)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(20)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(20)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(20)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(20)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(20)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(20)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(20)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(20)   &session-state:TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(20)   &session-state:TLS-Session-Version = "TLS 1.2"
(20) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(20)   authorize {
(20)     policy filter_username {
(20)       if (&User-Name) {
(20)       if (&User-Name)  -> TRUE
(20)       if (&User-Name)  {
(20)         if (&User-Name =~ / /) {
(20)         if (&User-Name =~ / /)  -> FALSE
(20)         if (&User-Name =~ /@[^@]*@/ ) {
(20)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(20)         if (&User-Name =~ /\.\./ ) {
(20)         if (&User-Name =~ /\.\./ )  -> FALSE
(20)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(20)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(20)         if (&User-Name =~ /\.$/)  {
(20)         if (&User-Name =~ /\.$/)   -> FALSE
(20)         if (&User-Name =~ /@\./)  {
(20)         if (&User-Name =~ /@\./)   -> FALSE
(20)       } # if (&User-Name)  = notfound
(20)     } # policy filter_username = notfound
(20)     [preprocess] = ok
(20)     [chap] = noop
(20)     [mschap] = noop
(20)     [digest] = noop
(20) suffix: Checking for suffix after "@"
(20) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(20) suffix: No such realm "NULL"
(20)     [suffix] = noop
(20) eap: Peer sent EAP Response (code 2) ID 146 length 37
(20) eap: Continuing tunnel setup
(20)     [eap] = ok
(20)   } # authorize = ok
(20) Found Auth-Type = eap
(20) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(20)   authenticate {
(20) eap: Expiring EAP session with state 0xa1bc637aa02e799a
(20) eap: Finished EAP session with state 0xb53eebdcbdacf2c6
(20) eap: Previous EAP request found for state 0xb53eebdcbdacf2c6, released from the list
(20) eap: Peer sent packet with method EAP PEAP (25)
(20) eap: Calling submodule eap_peap to process data
(20) eap_peap: (TLS) EAP Done initial handshake
(20) eap_peap: Session established.  Decoding tunneled attributes
(20) eap_peap: PEAP state phase2
(20) eap_peap: EAP method MSCHAPv2 (26)
(20) eap_peap: Got tunneled request
(20) eap_peap:   EAP-Message = 0x029200061a03
(20) eap_peap: Setting User-Name to bob@example.org
(20) eap_peap: Sending tunneled request to inner-tunnel
(20) eap_peap:   EAP-Message = 0x029200061a03
(20) eap_peap:   FreeRADIUS-Proxied-To = 127.0.0.1
(20) eap_peap:   User-Name = "bob@example.org"
(20) eap_peap:   State = 0xa1bc637aa02e799a8e02c6f675337982
(20) Virtual server inner-tunnel received request
(20)   EAP-Message = 0x029200061a03
(20)   FreeRADIUS-Proxied-To = 127.0.0.1
(20)   User-Name = "bob@example.org"
(20)   State = 0xa1bc637aa02e799a8e02c6f675337982
(20) server inner-tunnel {
(20)   session-state: No cached attributes
(20)   # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/inner-tunnel
(20)     authorize {
(20)       policy filter_username {
(20)         if (&User-Name) {
(20)         if (&User-Name)  -> TRUE
(20)         if (&User-Name)  {
(20)           if (&User-Name =~ / /) {
(20)           if (&User-Name =~ / /)  -> FALSE
(20)           if (&User-Name =~ /@[^@]*@/ ) {
(20)           if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(20)           if (&User-Name =~ /\.\./ ) {
(20)           if (&User-Name =~ /\.\./ )  -> FALSE
(20)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(20)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(20)           if (&User-Name =~ /\.$/)  {
(20)           if (&User-Name =~ /\.$/)   -> FALSE
(20)           if (&User-Name =~ /@\./)  {
(20)           if (&User-Name =~ /@\./)   -> FALSE
(20)         } # if (&User-Name)  = notfound
(20)       } # policy filter_username = notfound
(20)       [chap] = noop
(20)       [mschap] = noop
(20) suffix: Checking for suffix after "@"
(20) suffix: Looking up realm "example.org" for User-Name = "bob@example.org"
(20) suffix: No such realm "example.org"
(20)       [suffix] = noop
(20)       update control {
(20)         &Proxy-To-Realm := LOCAL
(20)       } # update control = noop
(20) eap: Peer sent EAP Response (code 2) ID 146 length 6
(20) eap: No EAP Start, assuming it's an on-going EAP conversation
(20)       [eap] = updated
(20) files: users: Matched entry bob@example.org at line 1
(20) files: EXPAND Hello, %{User-Name}
(20) files:    --> Hello, bob@example.org
(20)       [files] = ok
(20)       [expiration] = noop
(20)       [logintime] = noop
(20) pap: WARNING: Auth-Type already set.  Not setting to PAP
(20)       [pap] = noop
(20)     } # authorize = updated
(20)   Found Auth-Type = eap
(20)   # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/inner-tunnel
(20)     authenticate {
(20) eap: Expiring EAP session with state 0xa1bc637aa02e799a
(20) eap: Finished EAP session with state 0xa1bc637aa02e799a
(20) eap: Previous EAP request found for state 0xa1bc637aa02e799a, released from the list
(20) eap: Peer sent packet with method EAP MSCHAPv2 (26)
(20) eap: Calling submodule eap_mschapv2 to process data
(20) eap: Sending EAP Success (code 3) ID 146 length 4
(20) eap: Freeing handler
(20)       [eap] = ok
(20)     } # authenticate = ok
(20)   # Executing section post-auth from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/inner-tunnel
(20)     post-auth {
(20)       if (0) {
(20)       if (0)  -> FALSE
(20)     } # post-auth = noop
(20) } # server inner-tunnel
(20) Virtual server sending reply
(20)   Reply-Message = "Hello, bob@example.org"
(20)   MS-MPPE-Encryption-Policy = Encryption-Allowed
(20)   MS-MPPE-Encryption-Types = RC4-40or128-bit-Allowed
(20)   MS-MPPE-Send-Key = 0x6c2e5c2ac9848fd6b7b2d1b463e2ba27
(20)   MS-MPPE-Recv-Key = 0x52ce02d51cc31539701898672cb46815
(20)   EAP-Message = 0x03920004
(20)   Message-Authenticator = 0x00000000000000000000000000000000
(20)   User-Name = "bob@example.org"
(20) eap_peap: Got tunneled reply code 2
(20) eap_peap:   Reply-Message = "Hello, bob@example.org"
(20) eap_peap:   MS-MPPE-Encryption-Policy = Encryption-Allowed
(20) eap_peap:   MS-MPPE-Encryption-Types = RC4-40or128-bit-Allowed
(20) eap_peap:   MS-MPPE-Send-Key = 0x6c2e5c2ac9848fd6b7b2d1b463e2ba27
(20) eap_peap:   MS-MPPE-Recv-Key = 0x52ce02d51cc31539701898672cb46815
(20) eap_peap:   EAP-Message = 0x03920004
(20) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(20) eap_peap:   User-Name = "bob@example.org"
(20) eap_peap: Got tunneled reply RADIUS code 2
(20) eap_peap:   Reply-Message = "Hello, bob@example.org"
(20) eap_peap:   MS-MPPE-Encryption-Policy = Encryption-Allowed
(20) eap_peap:   MS-MPPE-Encryption-Types = RC4-40or128-bit-Allowed
(20) eap_peap:   MS-MPPE-Send-Key = 0x6c2e5c2ac9848fd6b7b2d1b463e2ba27
(20) eap_peap:   MS-MPPE-Recv-Key = 0x52ce02d51cc31539701898672cb46815
(20) eap_peap:   EAP-Message = 0x03920004
(20) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(20) eap_peap:   User-Name = "bob@example.org"
(20) eap_peap: Tunneled authentication was successful
(20) eap_peap: SUCCESS
(20) eap: Sending EAP Request (code 1) ID 147 length 46
(20) eap: EAP session adding &reply:State = 0xb53eebdcbcadf2c6
(20)     [eap] = handled
(20)   } # authenticate = handled
(20) Using Post-Auth-Type Challenge
(20) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(20)   Challenge { ... } # empty sub-section is ignored
(20) session-state: Saving cached attributes
(20)   Framed-MTU = 994
(20)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(20)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(20)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(20)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(20)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(20)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(20)   TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(20)   TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(20)   TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(20)   TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(20)   TLS-Session-Version = "TLS 1.2"
(20) Sent Access-Challenge Id 20 from 127.0.0.1:1812 to 127.0.0.1:57623 length 104
(20)   EAP-Message = 0x0193002e19001703030023fec0f42ed52f9375e912dab29b1b057cd7e5dbc4ce7f05483f29d4d104c9ec19deb269
(20)   Message-Authenticator = 0x00000000000000000000000000000000
(20)   State = 0xb53eebdcbcadf2c6b8da839cfd98a9b8
(20) Finished request
Waking up in 4.9 seconds.
(21) Received Access-Request Id 21 from 127.0.0.1:57623 to 127.0.0.1:1812 length 280
(21)   User-Name = "anonymous"
(21)   NAS-IP-Address = 127.0.0.1
(21)   Called-Station-Id = "3C-A0-67-80-99-A3:Hostapd-AP-E"
(21)   NAS-Port-Type = Wireless-802.11
(21)   Service-Type = Framed-User
(21)   NAS-Port = 1
(21)   Calling-Station-Id = "DC-A6-32-DF-E1-5C"
(21)   Connect-Info = "CONNECT 54Mbps 802.11g"
(21)   Acct-Session-Id = "746D471FF70CA038"
(21)   Acct-Multi-Session-Id = "5DD264ACEE95EDC8"
(21)   WLAN-Pairwise-Cipher = 1027076
(21)   WLAN-Group-Cipher = 1027076
(21)   WLAN-AKM-Suite = 1027073
(21)   WLAN-Group-Mgmt-Cipher = 1027078
(21)   Framed-MTU = 1400
(21)   EAP-Message = 0x0293002e190017030300231f38d200dd6082c4a45e9619606a4ae0923a084a38deea7c9fbe058c0d4853dfc4e6dd
(21)   State = 0xb53eebdcbcadf2c6b8da839cfd98a9b8
(21)   Message-Authenticator = 0x2c7faebc9e693ca4453562ce0551c62e
(21) Restoring &session-state
(21)   &session-state:Framed-MTU = 994
(21)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(21)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHello"
(21)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Certificate"
(21)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerKeyExchange"
(21)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, ServerHelloDone"
(21)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, ClientKeyExchange"
(21)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.2 Handshake, Finished"
(21)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 ChangeCipherSpec"
(21)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.2 Handshake, Finished"
(21)   &session-state:TLS-Session-Cipher-Suite = "ECDHE-RSA-AES256-GCM-SHA384"
(21)   &session-state:TLS-Session-Version = "TLS 1.2"
(21) # Executing section authorize from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(21)   authorize {
(21)     policy filter_username {
(21)       if (&User-Name) {
(21)       if (&User-Name)  -> TRUE
(21)       if (&User-Name)  {
(21)         if (&User-Name =~ / /) {
(21)         if (&User-Name =~ / /)  -> FALSE
(21)         if (&User-Name =~ /@[^@]*@/ ) {
(21)         if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(21)         if (&User-Name =~ /\.\./ ) {
(21)         if (&User-Name =~ /\.\./ )  -> FALSE
(21)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(21)         if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(21)         if (&User-Name =~ /\.$/)  {
(21)         if (&User-Name =~ /\.$/)   -> FALSE
(21)         if (&User-Name =~ /@\./)  {
(21)         if (&User-Name =~ /@\./)   -> FALSE
(21)       } # if (&User-Name)  = notfound
(21)     } # policy filter_username = notfound
(21)     [preprocess] = ok
(21)     [chap] = noop
(21)     [mschap] = noop
(21)     [digest] = noop
(21) suffix: Checking for suffix after "@"
(21) suffix: No '@' in User-Name = "anonymous", looking up realm NULL
(21) suffix: No such realm "NULL"
(21)     [suffix] = noop
(21) eap: Peer sent EAP Response (code 2) ID 147 length 46
(21) eap: Continuing tunnel setup
(21)     [eap] = ok
(21)   } # authorize = ok
(21) Found Auth-Type = eap
(21) # Executing group from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(21)   authenticate {
(21) eap: Expiring EAP session with state 0xb53eebdcbcadf2c6
(21) eap: Finished EAP session with state 0xb53eebdcbcadf2c6
(21) eap: Previous EAP request found for state 0xb53eebdcbcadf2c6, released from the list
(21) eap: Peer sent packet with method EAP PEAP (25)
(21) eap: Calling submodule eap_peap to process data
(21) eap_peap: (TLS) EAP Done initial handshake
(21) eap_peap: Session established.  Decoding tunneled attributes
(21) eap_peap: PEAP state send tlv success
(21) eap_peap: Received EAP-TLV response
(21) eap_peap: Success
(21) eap: Sending EAP Success (code 3) ID 147 length 4
(21) eap: Freeing handler
(21)     [eap] = ok
(21)   } # authenticate = ok
(21) # Executing section post-auth from file Freeradius/Conf/E_rogue_wpa3//sites-enabled/default
(21)   post-auth {
(21)     if (session-state:User-Name && reply:User-Name && request:User-Name && (reply:User-Name == request:User-Name)) {
(21)     if (session-state:User-Name && reply:User-Name && request:User-Name && (reply:User-Name == request:User-Name))  -> FALSE
(21)     update {
(21)       &reply::Framed-MTU += &session-state:Framed-MTU[*] -> 994
(21)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) recv TLS 1.3 Handshake, ClientHello'
(21)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, ServerHello'
(21)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, Certificate'
(21)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, ServerKeyExchange'
(21)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, ServerHelloDone'
(21)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) recv TLS 1.2 Handshake, ClientKeyExchange'
(21)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) recv TLS 1.2 Handshake, Finished'
(21)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 ChangeCipherSpec'
(21)       &reply::TLS-Session-Information += &session-state:TLS-Session-Information[*] -> '(TLS) send TLS 1.2 Handshake, Finished'
(21)       &reply::TLS-Session-Cipher-Suite += &session-state:TLS-Session-Cipher-Suite[*] -> 'ECDHE-RSA-AES256-GCM-SHA384'
(21)       &reply::TLS-Session-Version += &session-state:TLS-Session-Version[*] -> 'TLS 1.2'
(21)     } # update = noop
(21)     [exec] = noop
(21)     policy remove_reply_message_if_eap {
(21)       if (&reply:EAP-Message && &reply:Reply-Message) {
(21)       if (&reply:EAP-Message && &reply:Reply-Message)  -> FALSE
(21)       else {
(21)         [noop] = noop
(21)       } # else = noop
(21)     } # policy remove_reply_message_if_eap = noop
(21)     if (EAP-Key-Name && &reply:EAP-Session-Id) {
(21)     if (EAP-Key-Name && &reply:EAP-Session-Id)  -> FALSE
(21)   } # post-auth = noop
(21) Sent Access-Accept Id 21 from 127.0.0.1:1812 to 127.0.0.1:57623 length 177
(21)   MS-MPPE-Recv-Key = 0x0891a02e784aed32495a738060b1f3fab723091003fd25c348919ac551786118
(21)   MS-MPPE-Send-Key = 0xfda6a47a59b149db0f9c8cb59581d9f5e192d3765c3dcf3da25d14af5cecb21d
(21)   EAP-Message = 0x03930004
(21)   Message-Authenticator = 0x00000000000000000000000000000000
(21)   User-Name = "anonymous"
(21)   Framed-MTU += 994
(21) Finished request
Waking up in 4.9 seconds.
(11) Cleaning up request packet ID 11 with timestamp +20 due to cleanup_delay was reached
(12) Cleaning up request packet ID 12 with timestamp +20 due to cleanup_delay was reached
(13) Cleaning up request packet ID 13 with timestamp +20 due to cleanup_delay was reached
(14) Cleaning up request packet ID 14 with timestamp +20 due to cleanup_delay was reached
(15) Cleaning up request packet ID 15 with timestamp +20 due to cleanup_delay was reached
(16) Cleaning up request packet ID 16 with timestamp +20 due to cleanup_delay was reached
(17) Cleaning up request packet ID 17 with timestamp +20 due to cleanup_delay was reached
(18) Cleaning up request packet ID 18 with timestamp +20 due to cleanup_delay was reached
(19) Cleaning up request packet ID 19 with timestamp +20 due to cleanup_delay was reached
(20) Cleaning up request packet ID 20 with timestamp +20 due to cleanup_delay was reached
(21) Cleaning up request packet ID 21 with timestamp +20 due to cleanup_delay was reached
Ready to process requests
Ready to process requests
Signalled to terminate
Exiting normally

[0;36mFreeRADIUS is stopped.[0m


